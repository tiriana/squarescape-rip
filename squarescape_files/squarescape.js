var DUST = {
    debug: true
};

var Stats = function() {
    var l = Date.now(), m = l, g = 0, n = Infinity, o = 0, h = 0, p = Infinity, q = 0, r = 0, s = 0, f = document.createElement("div");
    f.id = "stats";
    f.addEventListener("mousedown", function(b) {
        b.preventDefault();
        t(++s % 2);
    }, !1);
    f.style.cssText = "width:80px;opacity:0.9;cursor:pointer";
    var a = document.createElement("div");
    a.id = "fps";
    a.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#002";
    f.appendChild(a);
    var i = document.createElement("div");
    i.id = "fpsText";
    i.style.cssText = "color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
    i.innerHTML = "FPS";
    a.appendChild(i);
    var c = document.createElement("div");
    c.id = "fpsGraph";
    c.style.cssText = "position:relative;width:74px;height:30px;background-color:#0ff";
    for (a.appendChild(c); 74 > c.children.length; ) {
        var j = document.createElement("span");
        j.style.cssText = "width:1px;height:30px;float:left;background-color:#113";
        c.appendChild(j);
    }
    var d = document.createElement("div");
    d.id = "ms";
    d.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#020;display:none";
    f.appendChild(d);
    var k = document.createElement("div");
    k.id = "msText";
    k.style.cssText = "color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
    k.innerHTML = "MS";
    d.appendChild(k);
    var e = document.createElement("div");
    e.id = "msGraph";
    e.style.cssText = "position:relative;width:74px;height:30px;background-color:#0f0";
    for (d.appendChild(e); 74 > e.children.length; ) j = document.createElement("span"), 
    j.style.cssText = "width:1px;height:30px;float:left;background-color:#131", e.appendChild(j);
    var t = function(b) {
        s = b;
        switch (s) {
          case 0:
            a.style.display = "block";
            d.style.display = "none";
            break;

          case 1:
            a.style.display = "none", d.style.display = "block";
        }
    };
    return {
        REVISION: 11,
        domElement: f,
        setMode: t,
        begin: function() {
            l = Date.now();
        },
        end: function() {
            var b = Date.now();
            g = b - l;
            n = Math.min(n, g);
            o = Math.max(o, g);
            k.textContent = g + " MS (" + n + "-" + o + ")";
            var a = Math.min(30, 30 - 30 * (g / 200));
            e.appendChild(e.firstChild).style.height = a + "px";
            r++;
            b > m + 1e3 && (h = Math.round(1e3 * r / (b - m)), p = Math.min(p, h), q = Math.max(q, h), 
            i.textContent = h + " FPS (" + p + "-" + q + ")", a = Math.min(30, 30 - 30 * (h / 100)), 
            c.appendChild(c.firstChild).style.height = a + "px", m = b, r = 0);
            return b;
        },
        update: function() {
            l = this.end();
        }
    };
};

(function() {
    var root = this;
    var PIXI = PIXI || {};
    PIXI.WEBGL_RENDERER = 0;
    PIXI.CANVAS_RENDERER = 1;
    PIXI.VERSION = "v2.1.0";
    PIXI.blendModes = {
        NORMAL: 0,
        ADD: 1,
        MULTIPLY: 2,
        SCREEN: 3,
        OVERLAY: 4,
        DARKEN: 5,
        LIGHTEN: 6,
        COLOR_DODGE: 7,
        COLOR_BURN: 8,
        HARD_LIGHT: 9,
        SOFT_LIGHT: 10,
        DIFFERENCE: 11,
        EXCLUSION: 12,
        HUE: 13,
        SATURATION: 14,
        COLOR: 15,
        LUMINOSITY: 16
    };
    PIXI.scaleModes = {
        DEFAULT: 0,
        LINEAR: 0,
        NEAREST: 1
    };
    PIXI._UID = 0;
    if (typeof Float32Array != "undefined") {
        PIXI.Float32Array = Float32Array;
        PIXI.Uint16Array = Uint16Array;
    } else {
        PIXI.Float32Array = Array;
        PIXI.Uint16Array = Array;
    }
    PIXI.INTERACTION_FREQUENCY = 30;
    PIXI.AUTO_PREVENT_DEFAULT = true;
    PIXI.PI_2 = Math.PI * 2;
    PIXI.RAD_TO_DEG = 180 / Math.PI;
    PIXI.DEG_TO_RAD = Math.PI / 180;
    PIXI.RETINA_PREFIX = "@2x";
    PIXI.dontSayHello = false;
    PIXI.defaultRenderOptions = {
        view: null,
        transparent: false,
        antialias: false,
        preserveDrawingBuffer: false,
        resolution: 1,
        clearBeforeRender: true,
        autoResize: false
    };
    PIXI.sayHello = function(type) {
        if (PIXI.dontSayHello) return;
        if (navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
            var args = [ "%c %c %c Pixi.js " + PIXI.VERSION + " - " + type + "  %c " + " %c " + " http://www.pixijs.com/  %c %c ♥%c♥%c♥ ", "background: #ff66a5", "background: #ff66a5", "color: #ff66a5; background: #030307;", "background: #ff66a5", "background: #ffc3dc", "background: #ff66a5", "color: #ff2424; background: #fff", "color: #ff2424; background: #fff", "color: #ff2424; background: #fff" ];
            console.log.apply(console, args);
        } else if (window["console"]) {
            console.log("Pixi.js " + PIXI.VERSION + " - http://www.pixijs.com/");
        }
        PIXI.dontSayHello = true;
    };
    PIXI.Point = function(x, y) {
        this.x = x || 0;
        this.y = y || 0;
    };
    PIXI.Point.prototype.clone = function() {
        return new PIXI.Point(this.x, this.y);
    };
    PIXI.Point.prototype.set = function(x, y) {
        this.x = x || 0;
        this.y = y || (y !== 0 ? this.x : 0);
    };
    PIXI.Point.prototype.constructor = PIXI.Point;
    PIXI.Rectangle = function(x, y, width, height) {
        this.x = x || 0;
        this.y = y || 0;
        this.width = width || 0;
        this.height = height || 0;
    };
    PIXI.Rectangle.prototype.clone = function() {
        return new PIXI.Rectangle(this.x, this.y, this.width, this.height);
    };
    PIXI.Rectangle.prototype.contains = function(x, y) {
        if (this.width <= 0 || this.height <= 0) return false;
        var x1 = this.x;
        if (x >= x1 && x <= x1 + this.width) {
            var y1 = this.y;
            if (y >= y1 && y <= y1 + this.height) {
                return true;
            }
        }
        return false;
    };
    PIXI.Rectangle.prototype.constructor = PIXI.Rectangle;
    PIXI.EmptyRectangle = new PIXI.Rectangle(0, 0, 0, 0);
    PIXI.Polygon = function(points) {
        if (!(points instanceof Array)) points = Array.prototype.slice.call(arguments);
        if (points[0] instanceof PIXI.Point) {
            var p = [];
            for (var i = 0, il = points.length; i < il; i++) {
                p.push(points[i].x, points[i].y);
            }
            points = p;
        }
        this.closed = true;
        this.points = points;
    };
    PIXI.Polygon.prototype.clone = function() {
        var points = this.points.slice();
        return new PIXI.Polygon(points);
    };
    PIXI.Polygon.prototype.contains = function(x, y) {
        var inside = false;
        var length = this.points.length / 2;
        for (var i = 0, j = length - 1; i < length; j = i++) {
            var xi = this.points[i * 2], yi = this.points[i * 2 + 1], xj = this.points[j * 2], yj = this.points[j * 2 + 1], intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
            if (intersect) inside = !inside;
        }
        return inside;
    };
    PIXI.Polygon.prototype.constructor = PIXI.Polygon;
    PIXI.Circle = function(x, y, radius) {
        this.x = x || 0;
        this.y = y || 0;
        this.radius = radius || 0;
    };
    PIXI.Circle.prototype.clone = function() {
        return new PIXI.Circle(this.x, this.y, this.radius);
    };
    PIXI.Circle.prototype.contains = function(x, y) {
        if (this.radius <= 0) return false;
        var dx = this.x - x, dy = this.y - y, r2 = this.radius * this.radius;
        dx *= dx;
        dy *= dy;
        return dx + dy <= r2;
    };
    PIXI.Circle.prototype.getBounds = function() {
        return new PIXI.Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);
    };
    PIXI.Circle.prototype.constructor = PIXI.Circle;
    PIXI.Ellipse = function(x, y, width, height) {
        this.x = x || 0;
        this.y = y || 0;
        this.width = width || 0;
        this.height = height || 0;
    };
    PIXI.Ellipse.prototype.clone = function() {
        return new PIXI.Ellipse(this.x, this.y, this.width, this.height);
    };
    PIXI.Ellipse.prototype.contains = function(x, y) {
        if (this.width <= 0 || this.height <= 0) return false;
        var normx = (x - this.x) / this.width, normy = (y - this.y) / this.height;
        normx *= normx;
        normy *= normy;
        return normx + normy <= 1;
    };
    PIXI.Ellipse.prototype.getBounds = function() {
        return new PIXI.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);
    };
    PIXI.Ellipse.prototype.constructor = PIXI.Ellipse;
    PIXI.RoundedRectangle = function(x, y, width, height, radius) {
        this.x = x || 0;
        this.y = y || 0;
        this.width = width || 0;
        this.height = height || 0;
        this.radius = radius || 20;
    };
    PIXI.RoundedRectangle.prototype.clone = function() {
        return new PIXI.RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);
    };
    PIXI.RoundedRectangle.prototype.contains = function(x, y) {
        if (this.width <= 0 || this.height <= 0) return false;
        var x1 = this.x;
        if (x >= x1 && x <= x1 + this.width) {
            var y1 = this.y;
            if (y >= y1 && y <= y1 + this.height) {
                return true;
            }
        }
        return false;
    };
    PIXI.RoundedRectangle.prototype.constructor = PIXI.RoundedRectangle;
    PIXI.Matrix = function() {
        this.a = 1;
        this.b = 0;
        this.c = 0;
        this.d = 1;
        this.tx = 0;
        this.ty = 0;
    };
    PIXI.Matrix.prototype.fromArray = function(array) {
        this.a = array[0];
        this.b = array[1];
        this.c = array[3];
        this.d = array[4];
        this.tx = array[2];
        this.ty = array[5];
    };
    PIXI.Matrix.prototype.toArray = function(transpose) {
        if (!this.array) this.array = new PIXI.Float32Array(9);
        var array = this.array;
        if (transpose) {
            array[0] = this.a;
            array[1] = this.b;
            array[2] = 0;
            array[3] = this.c;
            array[4] = this.d;
            array[5] = 0;
            array[6] = this.tx;
            array[7] = this.ty;
            array[8] = 1;
        } else {
            array[0] = this.a;
            array[1] = this.c;
            array[2] = this.tx;
            array[3] = this.b;
            array[4] = this.d;
            array[5] = this.ty;
            array[6] = 0;
            array[7] = 0;
            array[8] = 1;
        }
        return array;
    };
    PIXI.Matrix.prototype.apply = function(pos, newPos) {
        newPos = newPos || new PIXI.Point();
        newPos.x = this.a * pos.x + this.c * pos.y + this.tx;
        newPos.y = this.b * pos.x + this.d * pos.y + this.ty;
        return newPos;
    };
    PIXI.Matrix.prototype.applyInverse = function(pos, newPos) {
        newPos = newPos || new PIXI.Point();
        var id = 1 / (this.a * this.d + this.c * -this.b);
        newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;
        newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;
        return newPos;
    };
    PIXI.Matrix.prototype.translate = function(x, y) {
        this.tx += x;
        this.ty += y;
        return this;
    };
    PIXI.Matrix.prototype.scale = function(x, y) {
        this.a *= x;
        this.d *= y;
        this.c *= x;
        this.b *= y;
        this.tx *= x;
        this.ty *= y;
        return this;
    };
    PIXI.Matrix.prototype.rotate = function(angle) {
        var cos = Math.cos(angle);
        var sin = Math.sin(angle);
        var a1 = this.a;
        var c1 = this.c;
        var tx1 = this.tx;
        this.a = a1 * cos - this.b * sin;
        this.b = a1 * sin + this.b * cos;
        this.c = c1 * cos - this.d * sin;
        this.d = c1 * sin + this.d * cos;
        this.tx = tx1 * cos - this.ty * sin;
        this.ty = tx1 * sin + this.ty * cos;
        return this;
    };
    PIXI.Matrix.prototype.append = function(matrix) {
        var a1 = this.a;
        var b1 = this.b;
        var c1 = this.c;
        var d1 = this.d;
        this.a = matrix.a * a1 + matrix.b * c1;
        this.b = matrix.a * b1 + matrix.b * d1;
        this.c = matrix.c * a1 + matrix.d * c1;
        this.d = matrix.c * b1 + matrix.d * d1;
        this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;
        this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;
        return this;
    };
    PIXI.Matrix.prototype.identity = function() {
        this.a = 1;
        this.b = 0;
        this.c = 0;
        this.d = 1;
        this.tx = 0;
        this.ty = 0;
        return this;
    };
    PIXI.identityMatrix = new PIXI.Matrix();
    PIXI.DisplayObject = function() {
        this.position = new PIXI.Point();
        this.scale = new PIXI.Point(1, 1);
        this.pivot = new PIXI.Point(0, 0);
        this.rotation = 0;
        this.alpha = 1;
        this.visible = true;
        this.hitArea = null;
        this.buttonMode = false;
        this.renderable = false;
        this.parent = null;
        this.stage = null;
        this.worldAlpha = 1;
        this._interactive = false;
        this.defaultCursor = "pointer";
        this.worldTransform = new PIXI.Matrix();
        this._sr = 0;
        this._cr = 1;
        this.filterArea = null;
        this._bounds = new PIXI.Rectangle(0, 0, 1, 1);
        this._currentBounds = null;
        this._mask = null;
        this._cacheAsBitmap = false;
        this._cacheIsDirty = false;
    };
    PIXI.DisplayObject.prototype.constructor = PIXI.DisplayObject;
    Object.defineProperty(PIXI.DisplayObject.prototype, "interactive", {
        get: function() {
            return this._interactive;
        },
        set: function(value) {
            this._interactive = value;
            if (this.stage) this.stage.dirty = true;
        }
    });
    Object.defineProperty(PIXI.DisplayObject.prototype, "worldVisible", {
        get: function() {
            var item = this;
            do {
                if (!item.visible) return false;
                item = item.parent;
            } while (item);
            return true;
        }
    });
    Object.defineProperty(PIXI.DisplayObject.prototype, "mask", {
        get: function() {
            return this._mask;
        },
        set: function(value) {
            if (this._mask) this._mask.isMask = false;
            this._mask = value;
            if (this._mask) this._mask.isMask = true;
        }
    });
    Object.defineProperty(PIXI.DisplayObject.prototype, "filters", {
        get: function() {
            return this._filters;
        },
        set: function(value) {
            if (value) {
                var passes = [];
                for (var i = 0; i < value.length; i++) {
                    var filterPasses = value[i].passes;
                    for (var j = 0; j < filterPasses.length; j++) {
                        passes.push(filterPasses[j]);
                    }
                }
                this._filterBlock = {
                    target: this,
                    filterPasses: passes
                };
            }
            this._filters = value;
        }
    });
    Object.defineProperty(PIXI.DisplayObject.prototype, "cacheAsBitmap", {
        get: function() {
            return this._cacheAsBitmap;
        },
        set: function(value) {
            if (this._cacheAsBitmap === value) return;
            if (value) {
                this._generateCachedSprite();
            } else {
                this._destroyCachedSprite();
            }
            this._cacheAsBitmap = value;
        }
    });
    PIXI.DisplayObject.prototype.updateTransform = function() {
        var pt = this.parent.worldTransform;
        var wt = this.worldTransform;
        var a, b, c, d, tx, ty;
        if (this.rotation % PIXI.PI_2) {
            if (this.rotation !== this.rotationCache) {
                this.rotationCache = this.rotation;
                this._sr = Math.sin(this.rotation);
                this._cr = Math.cos(this.rotation);
            }
            a = this._cr * this.scale.x;
            b = this._sr * this.scale.x;
            c = -this._sr * this.scale.y;
            d = this._cr * this.scale.y;
            tx = this.position.x;
            ty = this.position.y;
            if (this.pivot.x || this.pivot.y) {
                tx -= this.pivot.x * a + this.pivot.y * c;
                ty -= this.pivot.x * b + this.pivot.y * d;
            }
            wt.a = a * pt.a + b * pt.c;
            wt.b = a * pt.b + b * pt.d;
            wt.c = c * pt.a + d * pt.c;
            wt.d = c * pt.b + d * pt.d;
            wt.tx = tx * pt.a + ty * pt.c + pt.tx;
            wt.ty = tx * pt.b + ty * pt.d + pt.ty;
        } else {
            a = this.scale.x;
            d = this.scale.y;
            tx = this.position.x - this.pivot.x * a;
            ty = this.position.y - this.pivot.y * d;
            wt.a = a * pt.a;
            wt.b = a * pt.b;
            wt.c = d * pt.c;
            wt.d = d * pt.d;
            wt.tx = tx * pt.a + ty * pt.c + pt.tx;
            wt.ty = tx * pt.b + ty * pt.d + pt.ty;
        }
        this.worldAlpha = this.alpha * this.parent.worldAlpha;
    };
    PIXI.DisplayObject.prototype.displayObjectUpdateTransform = PIXI.DisplayObject.prototype.updateTransform;
    PIXI.DisplayObject.prototype.getBounds = function(matrix) {
        matrix = matrix;
        return PIXI.EmptyRectangle;
    };
    PIXI.DisplayObject.prototype.getLocalBounds = function() {
        return this.getBounds(PIXI.identityMatrix);
    };
    PIXI.DisplayObject.prototype.setStageReference = function(stage) {
        this.stage = stage;
        if (this._interactive) this.stage.dirty = true;
    };
    PIXI.DisplayObject.prototype.generateTexture = function(resolution, scaleMode, renderer) {
        var bounds = this.getLocalBounds();
        var renderTexture = new PIXI.RenderTexture(bounds.width | 0, bounds.height | 0, renderer, scaleMode, resolution);
        PIXI.DisplayObject._tempMatrix.tx = -bounds.x;
        PIXI.DisplayObject._tempMatrix.ty = -bounds.y;
        renderTexture.render(this, PIXI.DisplayObject._tempMatrix);
        return renderTexture;
    };
    PIXI.DisplayObject.prototype.updateCache = function() {
        this._generateCachedSprite();
    };
    PIXI.DisplayObject.prototype.toGlobal = function(position) {
        this.updateTransform();
        return this.worldTransform.apply(position);
    };
    PIXI.DisplayObject.prototype.toLocal = function(position, from) {
        if (from) {
            position = from.toGlobal(position);
        }
        this.updateTransform();
        return this.worldTransform.applyInverse(position);
    };
    PIXI.DisplayObject.prototype._renderCachedSprite = function(renderSession) {
        this._cachedSprite.worldAlpha = this.worldAlpha;
        if (renderSession.gl) {
            PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite, renderSession);
        } else {
            PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite, renderSession);
        }
    };
    PIXI.DisplayObject.prototype._generateCachedSprite = function() {
        this._cacheAsBitmap = false;
        var bounds = this.getLocalBounds();
        if (!this._cachedSprite) {
            var renderTexture = new PIXI.RenderTexture(bounds.width | 0, bounds.height | 0);
            this._cachedSprite = new PIXI.Sprite(renderTexture);
            this._cachedSprite.worldTransform = this.worldTransform;
        } else {
            this._cachedSprite.texture.resize(bounds.width | 0, bounds.height | 0);
        }
        var tempFilters = this._filters;
        this._filters = null;
        this._cachedSprite.filters = tempFilters;
        PIXI.DisplayObject._tempMatrix.tx = -bounds.x;
        PIXI.DisplayObject._tempMatrix.ty = -bounds.y;
        this._cachedSprite.texture.render(this, PIXI.DisplayObject._tempMatrix);
        this._cachedSprite.anchor.x = -(bounds.x / bounds.width);
        this._cachedSprite.anchor.y = -(bounds.y / bounds.height);
        this._filters = tempFilters;
        this._cacheAsBitmap = true;
    };
    PIXI.DisplayObject.prototype._destroyCachedSprite = function() {
        if (!this._cachedSprite) return;
        this._cachedSprite.texture.destroy(true);
        this._cachedSprite = null;
    };
    PIXI.DisplayObject.prototype._renderWebGL = function(renderSession) {
        renderSession = renderSession;
    };
    PIXI.DisplayObject.prototype._renderCanvas = function(renderSession) {
        renderSession = renderSession;
    };
    PIXI.DisplayObject._tempMatrix = new PIXI.Matrix();
    Object.defineProperty(PIXI.DisplayObject.prototype, "x", {
        get: function() {
            return this.position.x;
        },
        set: function(value) {
            this.position.x = value;
        }
    });
    Object.defineProperty(PIXI.DisplayObject.prototype, "y", {
        get: function() {
            return this.position.y;
        },
        set: function(value) {
            this.position.y = value;
        }
    });
    PIXI.DisplayObjectContainer = function() {
        PIXI.DisplayObject.call(this);
        this.children = [];
    };
    PIXI.DisplayObjectContainer.prototype = Object.create(PIXI.DisplayObject.prototype);
    PIXI.DisplayObjectContainer.prototype.constructor = PIXI.DisplayObjectContainer;
    Object.defineProperty(PIXI.DisplayObjectContainer.prototype, "width", {
        get: function() {
            return this.scale.x * this.getLocalBounds().width;
        },
        set: function(value) {
            var width = this.getLocalBounds().width;
            if (width !== 0) {
                this.scale.x = value / width;
            } else {
                this.scale.x = 1;
            }
            this._width = value;
        }
    });
    Object.defineProperty(PIXI.DisplayObjectContainer.prototype, "height", {
        get: function() {
            return this.scale.y * this.getLocalBounds().height;
        },
        set: function(value) {
            var height = this.getLocalBounds().height;
            if (height !== 0) {
                this.scale.y = value / height;
            } else {
                this.scale.y = 1;
            }
            this._height = value;
        }
    });
    PIXI.DisplayObjectContainer.prototype.addChild = function(child) {
        return this.addChildAt(child, this.children.length);
    };
    PIXI.DisplayObjectContainer.prototype.addChildAt = function(child, index) {
        if (index >= 0 && index <= this.children.length) {
            if (child.parent) {
                child.parent.removeChild(child);
            }
            child.parent = this;
            this.children.splice(index, 0, child);
            if (this.stage) child.setStageReference(this.stage);
            return child;
        } else {
            throw new Error(child + "addChildAt: The index " + index + " supplied is out of bounds " + this.children.length);
        }
    };
    PIXI.DisplayObjectContainer.prototype.swapChildren = function(child, child2) {
        if (child === child2) {
            return;
        }
        var index1 = this.getChildIndex(child);
        var index2 = this.getChildIndex(child2);
        if (index1 < 0 || index2 < 0) {
            throw new Error("swapChildren: Both the supplied DisplayObjects must be a child of the caller.");
        }
        this.children[index1] = child2;
        this.children[index2] = child;
    };
    PIXI.DisplayObjectContainer.prototype.getChildIndex = function(child) {
        var index = this.children.indexOf(child);
        if (index === -1) {
            throw new Error("The supplied DisplayObject must be a child of the caller");
        }
        return index;
    };
    PIXI.DisplayObjectContainer.prototype.setChildIndex = function(child, index) {
        if (index < 0 || index >= this.children.length) {
            throw new Error("The supplied index is out of bounds");
        }
        var currentIndex = this.getChildIndex(child);
        this.children.splice(currentIndex, 1);
        this.children.splice(index, 0, child);
    };
    PIXI.DisplayObjectContainer.prototype.getChildAt = function(index) {
        if (index < 0 || index >= this.children.length) {
            throw new Error("getChildAt: Supplied index " + index + " does not exist in the child list, or the supplied DisplayObject must be a child of the caller");
        }
        return this.children[index];
    };
    PIXI.DisplayObjectContainer.prototype.removeChild = function(child) {
        var index = this.children.indexOf(child);
        if (index === -1) return;
        return this.removeChildAt(index);
    };
    PIXI.DisplayObjectContainer.prototype.removeChildAt = function(index) {
        var child = this.getChildAt(index);
        if (this.stage) child.removeStageReference();
        child.parent = undefined;
        this.children.splice(index, 1);
        return child;
    };
    PIXI.DisplayObjectContainer.prototype.removeChildren = function(beginIndex, endIndex) {
        var begin = beginIndex || 0;
        var end = typeof endIndex === "number" ? endIndex : this.children.length;
        var range = end - begin;
        if (range > 0 && range <= end) {
            var removed = this.children.splice(begin, range);
            for (var i = 0; i < removed.length; i++) {
                var child = removed[i];
                if (this.stage) child.removeStageReference();
                child.parent = undefined;
            }
            return removed;
        } else if (range === 0 && this.children.length === 0) {
            return [];
        } else {
            throw new Error("removeChildren: Range Error, numeric values are outside the acceptable range");
        }
    };
    PIXI.DisplayObjectContainer.prototype.updateTransform = function() {
        if (!this.visible) return;
        this.displayObjectUpdateTransform();
        if (this._cacheAsBitmap) return;
        for (var i = 0, j = this.children.length; i < j; i++) {
            this.children[i].updateTransform();
        }
    };
    PIXI.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform = PIXI.DisplayObjectContainer.prototype.updateTransform;
    PIXI.DisplayObjectContainer.prototype.getBounds = function() {
        if (this.children.length === 0) return PIXI.EmptyRectangle;
        var minX = Infinity;
        var minY = Infinity;
        var maxX = -Infinity;
        var maxY = -Infinity;
        var childBounds;
        var childMaxX;
        var childMaxY;
        var childVisible = false;
        for (var i = 0, j = this.children.length; i < j; i++) {
            var child = this.children[i];
            if (!child.visible) continue;
            childVisible = true;
            childBounds = this.children[i].getBounds();
            minX = minX < childBounds.x ? minX : childBounds.x;
            minY = minY < childBounds.y ? minY : childBounds.y;
            childMaxX = childBounds.width + childBounds.x;
            childMaxY = childBounds.height + childBounds.y;
            maxX = maxX > childMaxX ? maxX : childMaxX;
            maxY = maxY > childMaxY ? maxY : childMaxY;
        }
        if (!childVisible) return PIXI.EmptyRectangle;
        var bounds = this._bounds;
        bounds.x = minX;
        bounds.y = minY;
        bounds.width = maxX - minX;
        bounds.height = maxY - minY;
        return bounds;
    };
    PIXI.DisplayObjectContainer.prototype.getLocalBounds = function() {
        var matrixCache = this.worldTransform;
        this.worldTransform = PIXI.identityMatrix;
        for (var i = 0, j = this.children.length; i < j; i++) {
            this.children[i].updateTransform();
        }
        var bounds = this.getBounds();
        this.worldTransform = matrixCache;
        return bounds;
    };
    PIXI.DisplayObjectContainer.prototype.setStageReference = function(stage) {
        this.stage = stage;
        if (this._interactive) this.stage.dirty = true;
        for (var i = 0, j = this.children.length; i < j; i++) {
            var child = this.children[i];
            child.setStageReference(stage);
        }
    };
    PIXI.DisplayObjectContainer.prototype.removeStageReference = function() {
        for (var i = 0, j = this.children.length; i < j; i++) {
            var child = this.children[i];
            child.removeStageReference();
        }
        if (this._interactive) this.stage.dirty = true;
        this.stage = null;
    };
    PIXI.DisplayObjectContainer.prototype._renderWebGL = function(renderSession) {
        if (!this.visible || this.alpha <= 0) return;
        if (this._cacheAsBitmap) {
            this._renderCachedSprite(renderSession);
            return;
        }
        var i, j;
        if (this._mask || this._filters) {
            if (this._filters) {
                renderSession.spriteBatch.flush();
                renderSession.filterManager.pushFilter(this._filterBlock);
            }
            if (this._mask) {
                renderSession.spriteBatch.stop();
                renderSession.maskManager.pushMask(this.mask, renderSession);
                renderSession.spriteBatch.start();
            }
            for (i = 0, j = this.children.length; i < j; i++) {
                this.children[i]._renderWebGL(renderSession);
            }
            renderSession.spriteBatch.stop();
            if (this._mask) renderSession.maskManager.popMask(this._mask, renderSession);
            if (this._filters) renderSession.filterManager.popFilter();
            renderSession.spriteBatch.start();
        } else {
            for (i = 0, j = this.children.length; i < j; i++) {
                this.children[i]._renderWebGL(renderSession);
            }
        }
    };
    PIXI.DisplayObjectContainer.prototype._renderCanvas = function(renderSession) {
        if (this.visible === false || this.alpha === 0) return;
        if (this._cacheAsBitmap) {
            this._renderCachedSprite(renderSession);
            return;
        }
        if (this._mask) {
            renderSession.maskManager.pushMask(this._mask, renderSession);
        }
        for (var i = 0, j = this.children.length; i < j; i++) {
            var child = this.children[i];
            child._renderCanvas(renderSession);
        }
        if (this._mask) {
            renderSession.maskManager.popMask(renderSession);
        }
    };
    PIXI.Sprite = function(texture) {
        PIXI.DisplayObjectContainer.call(this);
        this.anchor = new PIXI.Point();
        this.texture = texture;
        this._width = 0;
        this._height = 0;
        this.tint = 16777215;
        this.blendMode = PIXI.blendModes.NORMAL;
        this.shader = null;
        if (texture.baseTexture.hasLoaded) {
            this.onTextureUpdate();
        } else {
            this.texture.on("update", this.onTextureUpdate.bind(this));
        }
        this.renderable = true;
    };
    PIXI.Sprite.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.Sprite.prototype.constructor = PIXI.Sprite;
    Object.defineProperty(PIXI.Sprite.prototype, "width", {
        get: function() {
            return this.scale.x * this.texture.frame.width;
        },
        set: function(value) {
            this.scale.x = value / this.texture.frame.width;
            this._width = value;
        }
    });
    Object.defineProperty(PIXI.Sprite.prototype, "height", {
        get: function() {
            return this.scale.y * this.texture.frame.height;
        },
        set: function(value) {
            this.scale.y = value / this.texture.frame.height;
            this._height = value;
        }
    });
    PIXI.Sprite.prototype.setTexture = function(texture) {
        this.texture = texture;
        this.cachedTint = 16777215;
    };
    PIXI.Sprite.prototype.onTextureUpdate = function() {
        if (this._width) this.scale.x = this._width / this.texture.frame.width;
        if (this._height) this.scale.y = this._height / this.texture.frame.height;
    };
    PIXI.Sprite.prototype.getBounds = function(matrix) {
        var width = this.texture.frame.width;
        var height = this.texture.frame.height;
        var w0 = width * (1 - this.anchor.x);
        var w1 = width * -this.anchor.x;
        var h0 = height * (1 - this.anchor.y);
        var h1 = height * -this.anchor.y;
        var worldTransform = matrix || this.worldTransform;
        var a = worldTransform.a;
        var b = worldTransform.b;
        var c = worldTransform.c;
        var d = worldTransform.d;
        var tx = worldTransform.tx;
        var ty = worldTransform.ty;
        var x1 = a * w1 + c * h1 + tx;
        var y1 = d * h1 + b * w1 + ty;
        var x2 = a * w0 + c * h1 + tx;
        var y2 = d * h1 + b * w0 + ty;
        var x3 = a * w0 + c * h0 + tx;
        var y3 = d * h0 + b * w0 + ty;
        var x4 = a * w1 + c * h0 + tx;
        var y4 = d * h0 + b * w1 + ty;
        var maxX = -Infinity;
        var maxY = -Infinity;
        var minX = Infinity;
        var minY = Infinity;
        minX = x1 < minX ? x1 : minX;
        minX = x2 < minX ? x2 : minX;
        minX = x3 < minX ? x3 : minX;
        minX = x4 < minX ? x4 : minX;
        minY = y1 < minY ? y1 : minY;
        minY = y2 < minY ? y2 : minY;
        minY = y3 < minY ? y3 : minY;
        minY = y4 < minY ? y4 : minY;
        maxX = x1 > maxX ? x1 : maxX;
        maxX = x2 > maxX ? x2 : maxX;
        maxX = x3 > maxX ? x3 : maxX;
        maxX = x4 > maxX ? x4 : maxX;
        maxY = y1 > maxY ? y1 : maxY;
        maxY = y2 > maxY ? y2 : maxY;
        maxY = y3 > maxY ? y3 : maxY;
        maxY = y4 > maxY ? y4 : maxY;
        var bounds = this._bounds;
        bounds.x = minX;
        bounds.width = maxX - minX;
        bounds.y = minY;
        bounds.height = maxY - minY;
        this._currentBounds = bounds;
        return bounds;
    };
    PIXI.Sprite.prototype._renderWebGL = function(renderSession) {
        if (!this.visible || this.alpha <= 0) return;
        var i, j;
        if (this._mask || this._filters) {
            var spriteBatch = renderSession.spriteBatch;
            if (this._filters) {
                spriteBatch.flush();
                renderSession.filterManager.pushFilter(this._filterBlock);
            }
            if (this._mask) {
                spriteBatch.stop();
                renderSession.maskManager.pushMask(this.mask, renderSession);
                spriteBatch.start();
            }
            spriteBatch.render(this);
            for (i = 0, j = this.children.length; i < j; i++) {
                this.children[i]._renderWebGL(renderSession);
            }
            spriteBatch.stop();
            if (this._mask) renderSession.maskManager.popMask(this._mask, renderSession);
            if (this._filters) renderSession.filterManager.popFilter();
            spriteBatch.start();
        } else {
            renderSession.spriteBatch.render(this);
            for (i = 0, j = this.children.length; i < j; i++) {
                this.children[i]._renderWebGL(renderSession);
            }
        }
    };
    PIXI.Sprite.prototype._renderCanvas = function(renderSession) {
        if (this.visible === false || this.alpha === 0 || this.texture.crop.width <= 0 || this.texture.crop.height <= 0) return;
        if (this.blendMode !== renderSession.currentBlendMode) {
            renderSession.currentBlendMode = this.blendMode;
            renderSession.context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];
        }
        if (this._mask) {
            renderSession.maskManager.pushMask(this._mask, renderSession);
        }
        if (this.texture.valid) {
            var resolution = this.texture.baseTexture.resolution / renderSession.resolution;
            renderSession.context.globalAlpha = this.worldAlpha;
            if (renderSession.roundPixels) {
                renderSession.context.setTransform(this.worldTransform.a, this.worldTransform.b, this.worldTransform.c, this.worldTransform.d, this.worldTransform.tx * renderSession.resolution | 0, this.worldTransform.ty * renderSession.resolution | 0);
            } else {
                renderSession.context.setTransform(this.worldTransform.a, this.worldTransform.b, this.worldTransform.c, this.worldTransform.d, this.worldTransform.tx * renderSession.resolution, this.worldTransform.ty * renderSession.resolution);
            }
            if (renderSession.smoothProperty && renderSession.scaleMode !== this.texture.baseTexture.scaleMode) {
                renderSession.scaleMode = this.texture.baseTexture.scaleMode;
                renderSession.context[renderSession.smoothProperty] = renderSession.scaleMode === PIXI.scaleModes.LINEAR;
            }
            var dx = this.texture.trim ? this.texture.trim.x - this.anchor.x * this.texture.trim.width : this.anchor.x * -this.texture.frame.width;
            var dy = this.texture.trim ? this.texture.trim.y - this.anchor.y * this.texture.trim.height : this.anchor.y * -this.texture.frame.height;
            if (this.tint !== 16777215) {
                if (this.cachedTint !== this.tint) {
                    this.cachedTint = this.tint;
                    this.tintedTexture = PIXI.CanvasTinter.getTintedTexture(this, this.tint);
                }
                renderSession.context.drawImage(this.tintedTexture, 0, 0, this.texture.crop.width, this.texture.crop.height, dx / resolution, dy / resolution, this.texture.crop.width / resolution, this.texture.crop.height / resolution);
            } else {
                renderSession.context.drawImage(this.texture.baseTexture.source, this.texture.crop.x, this.texture.crop.y, this.texture.crop.width, this.texture.crop.height, dx / resolution, dy / resolution, this.texture.crop.width / resolution, this.texture.crop.height / resolution);
            }
        }
        for (var i = 0, j = this.children.length; i < j; i++) {
            this.children[i]._renderCanvas(renderSession);
        }
        if (this._mask) {
            renderSession.maskManager.popMask(renderSession);
        }
    };
    PIXI.Sprite.fromFrame = function(frameId) {
        var texture = PIXI.TextureCache[frameId];
        if (!texture) throw new Error('The frameId "' + frameId + '" does not exist in the texture cache' + this);
        return new PIXI.Sprite(texture);
    };
    PIXI.Sprite.fromImage = function(imageId, crossorigin, scaleMode) {
        var texture = PIXI.Texture.fromImage(imageId, crossorigin, scaleMode);
        return new PIXI.Sprite(texture);
    };
    PIXI.SpriteBatch = function(texture) {
        PIXI.DisplayObjectContainer.call(this);
        this.textureThing = texture;
        this.ready = false;
    };
    PIXI.SpriteBatch.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.SpriteBatch.prototype.constructor = PIXI.SpriteBatch;
    PIXI.SpriteBatch.prototype.initWebGL = function(gl) {
        this.fastSpriteBatch = new PIXI.WebGLFastSpriteBatch(gl);
        this.ready = true;
    };
    PIXI.SpriteBatch.prototype.updateTransform = function() {
        PIXI.DisplayObject.prototype.updateTransform.call(this);
    };
    PIXI.SpriteBatch.prototype._renderWebGL = function(renderSession) {
        if (!this.visible || this.alpha <= 0 || !this.children.length) return;
        if (!this.ready) this.initWebGL(renderSession.gl);
        renderSession.spriteBatch.stop();
        renderSession.shaderManager.setShader(renderSession.shaderManager.fastShader);
        this.fastSpriteBatch.begin(this, renderSession);
        this.fastSpriteBatch.render(this);
        renderSession.spriteBatch.start();
    };
    PIXI.SpriteBatch.prototype._renderCanvas = function(renderSession) {
        if (!this.visible || this.alpha <= 0 || !this.children.length) return;
        var context = renderSession.context;
        context.globalAlpha = this.worldAlpha;
        PIXI.DisplayObject.prototype.updateTransform.call(this);
        var transform = this.worldTransform;
        var isRotated = true;
        for (var i = 0; i < this.children.length; i++) {
            var child = this.children[i];
            if (!child.visible) continue;
            var texture = child.texture;
            var frame = texture.frame;
            context.globalAlpha = this.worldAlpha * child.alpha;
            if (child.rotation % (Math.PI * 2) === 0) {
                if (isRotated) {
                    context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);
                    isRotated = false;
                }
                context.drawImage(texture.baseTexture.source, frame.x, frame.y, frame.width, frame.height, child.anchor.x * (-frame.width * child.scale.x) + child.position.x + .5 | 0, child.anchor.y * (-frame.height * child.scale.y) + child.position.y + .5 | 0, frame.width * child.scale.x, frame.height * child.scale.y);
            } else {
                if (!isRotated) isRotated = true;
                PIXI.DisplayObject.prototype.updateTransform.call(child);
                var childTransform = child.worldTransform;
                if (renderSession.roundPixels) {
                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx | 0, childTransform.ty | 0);
                } else {
                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx, childTransform.ty);
                }
                context.drawImage(texture.baseTexture.source, frame.x, frame.y, frame.width, frame.height, child.anchor.x * -frame.width + .5 | 0, child.anchor.y * -frame.height + .5 | 0, frame.width, frame.height);
            }
        }
    };
    PIXI.MovieClip = function(textures) {
        PIXI.Sprite.call(this, textures[0]);
        this.textures = textures;
        this.animationSpeed = 1;
        this.loop = true;
        this.onComplete = null;
        this.currentFrame = 0;
        this.playing = false;
    };
    PIXI.MovieClip.prototype = Object.create(PIXI.Sprite.prototype);
    PIXI.MovieClip.prototype.constructor = PIXI.MovieClip;
    Object.defineProperty(PIXI.MovieClip.prototype, "totalFrames", {
        get: function() {
            return this.textures.length;
        }
    });
    PIXI.MovieClip.prototype.stop = function() {
        this.playing = false;
    };
    PIXI.MovieClip.prototype.play = function() {
        this.playing = true;
    };
    PIXI.MovieClip.prototype.gotoAndStop = function(frameNumber) {
        this.playing = false;
        this.currentFrame = frameNumber;
        var round = this.currentFrame + .5 | 0;
        this.setTexture(this.textures[round % this.textures.length]);
    };
    PIXI.MovieClip.prototype.gotoAndPlay = function(frameNumber) {
        this.currentFrame = frameNumber;
        this.playing = true;
    };
    PIXI.MovieClip.prototype.updateTransform = function() {
        PIXI.Sprite.prototype.updateTransform.call(this);
        if (!this.playing) return;
        this.currentFrame += this.animationSpeed;
        var round = this.currentFrame + .5 | 0;
        this.currentFrame = this.currentFrame % this.textures.length;
        if (this.loop || round < this.textures.length) {
            this.setTexture(this.textures[round % this.textures.length]);
        } else if (round >= this.textures.length) {
            this.gotoAndStop(this.textures.length - 1);
            if (this.onComplete) {
                this.onComplete();
            }
        }
    };
    PIXI.MovieClip.fromFrames = function(frames) {
        var textures = [];
        for (var i = 0; i < frames.length; i++) {
            textures.push(new PIXI.Texture.fromFrame(frames[i]));
        }
        return new PIXI.MovieClip(textures);
    };
    PIXI.MovieClip.fromImages = function(images) {
        var textures = [];
        for (var i = 0; i < images.length; i++) {
            textures.push(new PIXI.Texture.fromImage(images[i]));
        }
        return new PIXI.MovieClip(textures);
    };
    PIXI.FilterBlock = function() {
        this.visible = true;
        this.renderable = true;
    };
    PIXI.FilterBlock.prototype.constructor = PIXI.FilterBlock;
    PIXI.Text = function(text, style) {
        this.canvas = document.createElement("canvas");
        this.context = this.canvas.getContext("2d");
        this.resolution = 1;
        PIXI.Sprite.call(this, PIXI.Texture.fromCanvas(this.canvas));
        this.setText(text);
        this.setStyle(style);
    };
    PIXI.Text.prototype = Object.create(PIXI.Sprite.prototype);
    PIXI.Text.prototype.constructor = PIXI.Text;
    Object.defineProperty(PIXI.Text.prototype, "width", {
        get: function() {
            if (this.dirty) {
                this.updateText();
                this.dirty = false;
            }
            return this.scale.x * this.texture.frame.width;
        },
        set: function(value) {
            this.scale.x = value / this.texture.frame.width;
            this._width = value;
        }
    });
    Object.defineProperty(PIXI.Text.prototype, "height", {
        get: function() {
            if (this.dirty) {
                this.updateText();
                this.dirty = false;
            }
            return this.scale.y * this.texture.frame.height;
        },
        set: function(value) {
            this.scale.y = value / this.texture.frame.height;
            this._height = value;
        }
    });
    PIXI.Text.prototype.setStyle = function(style) {
        style = style || {};
        style.font = style.font || "bold 20pt Arial";
        style.fill = style.fill || "black";
        style.align = style.align || "left";
        style.stroke = style.stroke || "black";
        style.strokeThickness = style.strokeThickness || 0;
        style.wordWrap = style.wordWrap || false;
        style.wordWrapWidth = style.wordWrapWidth || 100;
        style.dropShadow = style.dropShadow || false;
        style.dropShadowAngle = style.dropShadowAngle || Math.PI / 6;
        style.dropShadowDistance = style.dropShadowDistance || 4;
        style.dropShadowColor = style.dropShadowColor || "black";
        this.style = style;
        this.dirty = true;
    };
    PIXI.Text.prototype.setText = function(text) {
        this.text = text.toString() || " ";
        this.dirty = true;
    };
    PIXI.Text.prototype.updateText = function() {
        this.texture.baseTexture.resolution = this.resolution;
        this.context.font = this.style.font;
        var outputText = this.text;
        if (this.style.wordWrap) outputText = this.wordWrap(this.text);
        var lines = outputText.split(/(?:\r\n|\r|\n)/);
        var lineWidths = [];
        var maxLineWidth = 0;
        var fontProperties = this.determineFontProperties(this.style.font);
        for (var i = 0; i < lines.length; i++) {
            var lineWidth = this.context.measureText(lines[i]).width;
            lineWidths[i] = lineWidth;
            maxLineWidth = Math.max(maxLineWidth, lineWidth);
        }
        var width = maxLineWidth + this.style.strokeThickness;
        if (this.style.dropShadow) width += this.style.dropShadowDistance;
        this.canvas.width = (width + this.context.lineWidth) * this.resolution;
        var lineHeight = fontProperties.fontSize + this.style.strokeThickness;
        var height = lineHeight * lines.length;
        if (this.style.dropShadow) height += this.style.dropShadowDistance;
        this.canvas.height = height * this.resolution;
        this.context.scale(this.resolution, this.resolution);
        if (navigator.isCocoonJS) this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
        this.context.font = this.style.font;
        this.context.strokeStyle = this.style.stroke;
        this.context.lineWidth = this.style.strokeThickness;
        this.context.textBaseline = "alphabetic";
        var linePositionX;
        var linePositionY;
        if (this.style.dropShadow) {
            this.context.fillStyle = this.style.dropShadowColor;
            var xShadowOffset = Math.sin(this.style.dropShadowAngle) * this.style.dropShadowDistance;
            var yShadowOffset = Math.cos(this.style.dropShadowAngle) * this.style.dropShadowDistance;
            for (i = 0; i < lines.length; i++) {
                linePositionX = this.style.strokeThickness / 2;
                linePositionY = this.style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;
                if (this.style.align === "right") {
                    linePositionX += maxLineWidth - lineWidths[i];
                } else if (this.style.align === "center") {
                    linePositionX += (maxLineWidth - lineWidths[i]) / 2;
                }
                if (this.style.fill) {
                    this.context.fillText(lines[i], linePositionX + xShadowOffset, linePositionY + yShadowOffset);
                }
            }
        }
        this.context.fillStyle = this.style.fill;
        for (i = 0; i < lines.length; i++) {
            linePositionX = this.style.strokeThickness / 2;
            linePositionY = this.style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;
            if (this.style.align === "right") {
                linePositionX += maxLineWidth - lineWidths[i];
            } else if (this.style.align === "center") {
                linePositionX += (maxLineWidth - lineWidths[i]) / 2;
            }
            if (this.style.stroke && this.style.strokeThickness) {
                this.context.strokeText(lines[i], linePositionX, linePositionY);
            }
            if (this.style.fill) {
                this.context.fillText(lines[i], linePositionX, linePositionY);
            }
        }
        this.updateTexture();
    };
    PIXI.Text.prototype.updateTexture = function() {
        this.texture.baseTexture.width = this.canvas.width;
        this.texture.baseTexture.height = this.canvas.height;
        this.texture.crop.width = this.texture.frame.width = this.canvas.width;
        this.texture.crop.height = this.texture.frame.height = this.canvas.height;
        this._width = this.canvas.width;
        this._height = this.canvas.height;
        this.texture.baseTexture.dirty();
    };
    PIXI.Text.prototype._renderWebGL = function(renderSession) {
        if (this.dirty) {
            this.resolution = renderSession.resolution;
            this.updateText();
            this.dirty = false;
        }
        PIXI.Sprite.prototype._renderWebGL.call(this, renderSession);
    };
    PIXI.Text.prototype._renderCanvas = function(renderSession) {
        if (this.dirty) {
            this.resolution = renderSession.resolution;
            this.updateText();
            this.dirty = false;
        }
        PIXI.Sprite.prototype._renderCanvas.call(this, renderSession);
    };
    PIXI.Text.prototype.determineFontProperties = function(fontStyle) {
        var properties = PIXI.Text.fontPropertiesCache[fontStyle];
        if (!properties) {
            properties = {};
            var canvas = PIXI.Text.fontPropertiesCanvas;
            var context = PIXI.Text.fontPropertiesContext;
            context.font = fontStyle;
            var width = Math.ceil(context.measureText("|Mq").width);
            var baseline = Math.ceil(context.measureText("M").width);
            var height = 2 * baseline;
            baseline = baseline * 1.4 | 0;
            canvas.width = width;
            canvas.height = height;
            context.fillStyle = "#f00";
            context.fillRect(0, 0, width, height);
            context.font = fontStyle;
            context.textBaseline = "alphabetic";
            context.fillStyle = "#000";
            context.fillText("|Mq", 0, baseline);
            var imagedata = context.getImageData(0, 0, width, height).data;
            var pixels = imagedata.length;
            var line = width * 4;
            var i, j;
            var idx = 0;
            var stop = false;
            for (i = 0; i < baseline; i++) {
                for (j = 0; j < line; j += 4) {
                    if (imagedata[idx + j] !== 255) {
                        stop = true;
                        break;
                    }
                }
                if (!stop) {
                    idx += line;
                } else {
                    break;
                }
            }
            properties.ascent = baseline - i;
            idx = pixels - line;
            stop = false;
            for (i = height; i > baseline; i--) {
                for (j = 0; j < line; j += 4) {
                    if (imagedata[idx + j] !== 255) {
                        stop = true;
                        break;
                    }
                }
                if (!stop) {
                    idx -= line;
                } else {
                    break;
                }
            }
            properties.descent = i - baseline;
            properties.fontSize = properties.ascent + properties.descent;
            PIXI.Text.fontPropertiesCache[fontStyle] = properties;
        }
        return properties;
    };
    PIXI.Text.prototype.wordWrap = function(text) {
        var result = "";
        var lines = text.split("\n");
        for (var i = 0; i < lines.length; i++) {
            var spaceLeft = this.style.wordWrapWidth;
            var words = lines[i].split(" ");
            for (var j = 0; j < words.length; j++) {
                var wordWidth = this.context.measureText(words[j]).width;
                var wordWidthWithSpace = wordWidth + this.context.measureText(" ").width;
                if (j === 0 || wordWidthWithSpace > spaceLeft) {
                    if (j > 0) {
                        result += "\n";
                    }
                    result += words[j];
                    spaceLeft = this.style.wordWrapWidth - wordWidth;
                } else {
                    spaceLeft -= wordWidthWithSpace;
                    result += " " + words[j];
                }
            }
            if (i < lines.length - 1) {
                result += "\n";
            }
        }
        return result;
    };
    PIXI.Text.prototype.getBounds = function(matrix) {
        if (this.dirty) {
            this.updateText();
            this.dirty = false;
        }
        return PIXI.Sprite.prototype.getBounds.call(this, matrix);
    };
    PIXI.Text.prototype.destroy = function(destroyBaseTexture) {
        this.context = null;
        this.canvas = null;
        this.texture.destroy(destroyBaseTexture === undefined ? true : destroyBaseTexture);
    };
    PIXI.Text.fontPropertiesCache = {};
    PIXI.Text.fontPropertiesCanvas = document.createElement("canvas");
    PIXI.Text.fontPropertiesContext = PIXI.Text.fontPropertiesCanvas.getContext("2d");
    PIXI.BitmapText = function(text, style) {
        PIXI.DisplayObjectContainer.call(this);
        this.textWidth = 0;
        this.textHeight = 0;
        this._pool = [];
        this.setText(text);
        this.setStyle(style);
        this.updateText();
        this.dirty = false;
    };
    PIXI.BitmapText.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.BitmapText.prototype.constructor = PIXI.BitmapText;
    PIXI.BitmapText.prototype.setText = function(text) {
        this.text = text || " ";
        this.dirty = true;
    };
    PIXI.BitmapText.prototype.setStyle = function(style) {
        style = style || {};
        style.align = style.align || "left";
        this.style = style;
        var font = style.font.split(" ");
        this.fontName = font[font.length - 1];
        this.fontSize = font.length >= 2 ? parseInt(font[font.length - 2], 10) : PIXI.BitmapText.fonts[this.fontName].size;
        this.dirty = true;
        this.tint = style.tint;
    };
    PIXI.BitmapText.prototype.updateText = function() {
        var data = PIXI.BitmapText.fonts[this.fontName];
        var pos = new PIXI.Point();
        var prevCharCode = null;
        var chars = [];
        var maxLineWidth = 0;
        var lineWidths = [];
        var line = 0;
        var scale = this.fontSize / data.size;
        for (var i = 0; i < this.text.length; i++) {
            var charCode = this.text.charCodeAt(i);
            if (/(?:\r\n|\r|\n)/.test(this.text.charAt(i))) {
                lineWidths.push(pos.x);
                maxLineWidth = Math.max(maxLineWidth, pos.x);
                line++;
                pos.x = 0;
                pos.y += data.lineHeight;
                prevCharCode = null;
                continue;
            }
            var charData = data.chars[charCode];
            if (!charData) continue;
            if (prevCharCode && charData.kerning[prevCharCode]) {
                pos.x += charData.kerning[prevCharCode];
            }
            chars.push({
                texture: charData.texture,
                line: line,
                charCode: charCode,
                position: new PIXI.Point(pos.x + charData.xOffset, pos.y + charData.yOffset)
            });
            pos.x += charData.xAdvance;
            prevCharCode = charCode;
        }
        lineWidths.push(pos.x);
        maxLineWidth = Math.max(maxLineWidth, pos.x);
        var lineAlignOffsets = [];
        for (i = 0; i <= line; i++) {
            var alignOffset = 0;
            if (this.style.align === "right") {
                alignOffset = maxLineWidth - lineWidths[i];
            } else if (this.style.align === "center") {
                alignOffset = (maxLineWidth - lineWidths[i]) / 2;
            }
            lineAlignOffsets.push(alignOffset);
        }
        var lenChildren = this.children.length;
        var lenChars = chars.length;
        var tint = this.tint || 16777215;
        for (i = 0; i < lenChars; i++) {
            var c = i < lenChildren ? this.children[i] : this._pool.pop();
            if (c) c.setTexture(chars[i].texture); else c = new PIXI.Sprite(chars[i].texture);
            c.position.x = (chars[i].position.x + lineAlignOffsets[chars[i].line]) * scale;
            c.position.y = chars[i].position.y * scale;
            c.scale.x = c.scale.y = scale;
            c.tint = tint;
            if (!c.parent) this.addChild(c);
        }
        while (this.children.length > lenChars) {
            var child = this.getChildAt(this.children.length - 1);
            this._pool.push(child);
            this.removeChild(child);
        }
        this.textWidth = maxLineWidth * scale;
        this.textHeight = (pos.y + data.lineHeight) * scale;
    };
    PIXI.BitmapText.prototype.updateTransform = function() {
        if (this.dirty) {
            this.updateText();
            this.dirty = false;
        }
        PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);
    };
    PIXI.BitmapText.fonts = {};
    PIXI.InteractionData = function() {
        this.global = new PIXI.Point();
        this.target = null;
        this.originalEvent = null;
    };
    PIXI.InteractionData.prototype.getLocalPosition = function(displayObject, point) {
        var worldTransform = displayObject.worldTransform;
        var global = this.global;
        var a00 = worldTransform.a, a01 = worldTransform.c, a02 = worldTransform.tx, a10 = worldTransform.b, a11 = worldTransform.d, a12 = worldTransform.ty, id = 1 / (a00 * a11 + a01 * -a10);
        point = point || new PIXI.Point();
        point.x = a11 * id * global.x + -a01 * id * global.y + (a12 * a01 - a02 * a11) * id;
        point.y = a00 * id * global.y + -a10 * id * global.x + (-a12 * a00 + a02 * a10) * id;
        return point;
    };
    PIXI.InteractionData.prototype.constructor = PIXI.InteractionData;
    PIXI.InteractionManager = function(stage) {
        this.stage = stage;
        this.mouse = new PIXI.InteractionData();
        this.touches = {};
        this.tempPoint = new PIXI.Point();
        this.mouseoverEnabled = true;
        this.pool = [];
        this.interactiveItems = [];
        this.interactionDOMElement = null;
        this.onMouseMove = this.onMouseMove.bind(this);
        this.onMouseDown = this.onMouseDown.bind(this);
        this.onMouseOut = this.onMouseOut.bind(this);
        this.onMouseUp = this.onMouseUp.bind(this);
        this.onTouchStart = this.onTouchStart.bind(this);
        this.onTouchEnd = this.onTouchEnd.bind(this);
        this.onTouchMove = this.onTouchMove.bind(this);
        this.last = 0;
        this.currentCursorStyle = "inherit";
        this.mouseOut = false;
        this.resolution = 1;
    };
    PIXI.InteractionManager.prototype.constructor = PIXI.InteractionManager;
    PIXI.InteractionManager.prototype.collectInteractiveSprite = function(displayObject, iParent) {
        var children = displayObject.children;
        var length = children.length;
        for (var i = length - 1; i >= 0; i--) {
            var child = children[i];
            if (child._interactive) {
                iParent.interactiveChildren = true;
                this.interactiveItems.push(child);
                if (child.children.length > 0) {
                    this.collectInteractiveSprite(child, child);
                }
            } else {
                child.__iParent = null;
                if (child.children.length > 0) {
                    this.collectInteractiveSprite(child, iParent);
                }
            }
        }
    };
    PIXI.InteractionManager.prototype.setTarget = function(target) {
        this.target = target;
        this.resolution = target.resolution;
        if (this.interactionDOMElement !== null) return;
        this.setTargetDomElement(target.view);
    };
    PIXI.InteractionManager.prototype.setTargetDomElement = function(domElement) {
        this.removeEvents();
        if (window.navigator.msPointerEnabled) {
            domElement.style["-ms-content-zooming"] = "none";
            domElement.style["-ms-touch-action"] = "none";
        }
        this.interactionDOMElement = domElement;
        domElement.addEventListener("mousemove", this.onMouseMove, true);
        domElement.addEventListener("mousedown", this.onMouseDown, true);
        domElement.addEventListener("mouseout", this.onMouseOut, true);
        domElement.addEventListener("touchstart", this.onTouchStart, true);
        domElement.addEventListener("touchend", this.onTouchEnd, true);
        domElement.addEventListener("touchmove", this.onTouchMove, true);
        window.addEventListener("mouseup", this.onMouseUp, true);
    };
    PIXI.InteractionManager.prototype.removeEvents = function() {
        if (!this.interactionDOMElement) return;
        this.interactionDOMElement.style["-ms-content-zooming"] = "";
        this.interactionDOMElement.style["-ms-touch-action"] = "";
        this.interactionDOMElement.removeEventListener("mousemove", this.onMouseMove, true);
        this.interactionDOMElement.removeEventListener("mousedown", this.onMouseDown, true);
        this.interactionDOMElement.removeEventListener("mouseout", this.onMouseOut, true);
        this.interactionDOMElement.removeEventListener("touchstart", this.onTouchStart, true);
        this.interactionDOMElement.removeEventListener("touchend", this.onTouchEnd, true);
        this.interactionDOMElement.removeEventListener("touchmove", this.onTouchMove, true);
        this.interactionDOMElement = null;
        window.removeEventListener("mouseup", this.onMouseUp, true);
    };
    PIXI.InteractionManager.prototype.update = function() {
        if (!this.target) return;
        var now = Date.now();
        var diff = now - this.last;
        diff = diff * PIXI.INTERACTION_FREQUENCY / 1e3;
        if (diff < 1) return;
        this.last = now;
        var i = 0;
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        var length = this.interactiveItems.length;
        var cursor = "inherit";
        var over = false;
        for (i = 0; i < length; i++) {
            var item = this.interactiveItems[i];
            item.__hit = this.hitTest(item, this.mouse);
            this.mouse.target = item;
            if (item.__hit && !over) {
                if (item.buttonMode) cursor = item.defaultCursor;
                if (!item.interactiveChildren) {
                    over = true;
                }
                if (!item.__isOver) {
                    if (item.mouseover) {
                        item.mouseover(this.mouse);
                    }
                    item.__isOver = true;
                }
            } else {
                if (item.__isOver) {
                    if (item.mouseout) {
                        item.mouseout(this.mouse);
                    }
                    item.__isOver = false;
                }
            }
        }
        if (this.currentCursorStyle !== cursor) {
            this.currentCursorStyle = cursor;
            this.interactionDOMElement.style.cursor = cursor;
        }
    };
    PIXI.InteractionManager.prototype.rebuildInteractiveGraph = function() {
        this.dirty = false;
        var len = this.interactiveItems.length;
        for (var i = 0; i < len; i++) {
            this.interactiveItems[i].interactiveChildren = false;
        }
        this.interactiveItems = [];
        if (this.stage.interactive) {
            this.interactiveItems.push(this.stage);
        }
        this.collectInteractiveSprite(this.stage, this.stage);
    };
    PIXI.InteractionManager.prototype.onMouseMove = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        this.mouse.originalEvent = event;
        var rect = this.interactionDOMElement.getBoundingClientRect();
        this.mouse.global.x = (event.clientX - rect.left) * (this.target.width / rect.width) / this.resolution;
        this.mouse.global.y = (event.clientY - rect.top) * (this.target.height / rect.height) / this.resolution;
        var length = this.interactiveItems.length;
        for (var i = 0; i < length; i++) {
            var item = this.interactiveItems[i];
            if (item.mousemove) {
                item.mousemove(this.mouse);
            }
        }
    };
    PIXI.InteractionManager.prototype.onMouseDown = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        this.mouse.originalEvent = event;
        if (PIXI.AUTO_PREVENT_DEFAULT) {
            this.mouse.originalEvent.preventDefault();
        }
        var length = this.interactiveItems.length;
        var e = this.mouse.originalEvent;
        var isRightButton = e.button === 2 || e.which === 3;
        var downFunction = isRightButton ? "rightdown" : "mousedown";
        var clickFunction = isRightButton ? "rightclick" : "click";
        var buttonIsDown = isRightButton ? "__rightIsDown" : "__mouseIsDown";
        var isDown = isRightButton ? "__isRightDown" : "__isDown";
        for (var i = 0; i < length; i++) {
            var item = this.interactiveItems[i];
            if (item[downFunction] || item[clickFunction]) {
                item[buttonIsDown] = true;
                item.__hit = this.hitTest(item, this.mouse);
                if (item.__hit) {
                    if (item[downFunction]) {
                        item[downFunction](this.mouse);
                    }
                    item[isDown] = true;
                    if (!item.interactiveChildren) break;
                }
            }
        }
    };
    PIXI.InteractionManager.prototype.onMouseOut = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        this.mouse.originalEvent = event;
        var length = this.interactiveItems.length;
        this.interactionDOMElement.style.cursor = "inherit";
        for (var i = 0; i < length; i++) {
            var item = this.interactiveItems[i];
            if (item.__isOver) {
                this.mouse.target = item;
                if (item.mouseout) {
                    item.mouseout(this.mouse);
                }
                item.__isOver = false;
            }
        }
        this.mouseOut = true;
        this.mouse.global.x = -1e4;
        this.mouse.global.y = -1e4;
    };
    PIXI.InteractionManager.prototype.onMouseUp = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        this.mouse.originalEvent = event;
        var length = this.interactiveItems.length;
        var up = false;
        var e = this.mouse.originalEvent;
        var isRightButton = e.button === 2 || e.which === 3;
        var upFunction = isRightButton ? "rightup" : "mouseup";
        var clickFunction = isRightButton ? "rightclick" : "click";
        var upOutsideFunction = isRightButton ? "rightupoutside" : "mouseupoutside";
        var isDown = isRightButton ? "__isRightDown" : "__isDown";
        for (var i = 0; i < length; i++) {
            var item = this.interactiveItems[i];
            if (item[clickFunction] || item[upFunction] || item[upOutsideFunction]) {
                item.__hit = this.hitTest(item, this.mouse);
                if (item.__hit && !up) {
                    if (item[upFunction]) {
                        item[upFunction](this.mouse);
                    }
                    if (item[isDown]) {
                        if (item[clickFunction]) {
                            item[clickFunction](this.mouse);
                        }
                    }
                    if (!item.interactiveChildren) {
                        up = true;
                    }
                } else {
                    if (item[isDown]) {
                        if (item[upOutsideFunction]) item[upOutsideFunction](this.mouse);
                    }
                }
                item[isDown] = false;
            }
        }
    };
    PIXI.InteractionManager.prototype.hitTest = function(item, interactionData) {
        var global = interactionData.global;
        if (!item.worldVisible) {
            return false;
        }
        var worldTransform = item.worldTransform, i, a = worldTransform.a, b = worldTransform.b, c = worldTransform.c, tx = worldTransform.tx, d = worldTransform.d, ty = worldTransform.ty, id = 1 / (a * d + c * -b), x = d * id * global.x + -c * id * global.y + (ty * c - tx * d) * id, y = a * id * global.y + -b * id * global.x + (-ty * a + tx * b) * id;
        interactionData.target = item;
        if (item.hitArea && item.hitArea.contains) {
            if (item.hitArea.contains(x, y)) {
                interactionData.target = item;
                return true;
            }
            return false;
        } else if (item instanceof PIXI.Sprite) {
            var width = item.texture.frame.width;
            var height = item.texture.frame.height;
            var x1 = -width * item.anchor.x;
            var y1;
            if (x > x1 && x < x1 + width) {
                y1 = -height * item.anchor.y;
                if (y > y1 && y < y1 + height) {
                    interactionData.target = item;
                    return true;
                }
            }
        } else if (item instanceof PIXI.Graphics) {
            var graphicsData = item.graphicsData;
            for (i = 0; i < graphicsData.length; i++) {
                var data = graphicsData[i];
                if (!data.fill) continue;
                if (data.shape) {
                    if (data.shape.contains(x, y)) {
                        interactionData.target = item;
                        return true;
                    }
                }
            }
        }
        var length = item.children.length;
        for (i = 0; i < length; i++) {
            var tempItem = item.children[i];
            var hit = this.hitTest(tempItem, interactionData);
            if (hit) {
                interactionData.target = item;
                return true;
            }
        }
        return false;
    };
    PIXI.InteractionManager.prototype.onTouchMove = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        var rect = this.interactionDOMElement.getBoundingClientRect();
        var changedTouches = event.changedTouches;
        var touchData;
        var i = 0;
        for (i = 0; i < changedTouches.length; i++) {
            var touchEvent = changedTouches[i];
            touchData = this.touches[touchEvent.identifier];
            touchData.originalEvent = event;
            touchData.global.x = (touchEvent.clientX - rect.left) * (this.target.width / rect.width) / this.resolution;
            touchData.global.y = (touchEvent.clientY - rect.top) * (this.target.height / rect.height) / this.resolution;
            if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height) {
                touchData.global.x = touchEvent.clientX;
                touchData.global.y = touchEvent.clientY;
            }
            for (var j = 0; j < this.interactiveItems.length; j++) {
                var item = this.interactiveItems[j];
                if (item.touchmove && item.__touchData && item.__touchData[touchEvent.identifier]) {
                    item.touchmove(touchData);
                }
            }
        }
    };
    PIXI.InteractionManager.prototype.onTouchStart = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        var rect = this.interactionDOMElement.getBoundingClientRect();
        if (PIXI.AUTO_PREVENT_DEFAULT) {
            event.preventDefault();
        }
        var changedTouches = event.changedTouches;
        for (var i = 0; i < changedTouches.length; i++) {
            var touchEvent = changedTouches[i];
            var touchData = this.pool.pop();
            if (!touchData) {
                touchData = new PIXI.InteractionData();
            }
            touchData.originalEvent = event;
            this.touches[touchEvent.identifier] = touchData;
            touchData.global.x = (touchEvent.clientX - rect.left) * (this.target.width / rect.width) / this.resolution;
            touchData.global.y = (touchEvent.clientY - rect.top) * (this.target.height / rect.height) / this.resolution;
            if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height) {
                touchData.global.x = touchEvent.clientX;
                touchData.global.y = touchEvent.clientY;
            }
            var length = this.interactiveItems.length;
            for (var j = 0; j < length; j++) {
                var item = this.interactiveItems[j];
                if (item.touchstart || item.tap) {
                    item.__hit = this.hitTest(item, touchData);
                    if (item.__hit) {
                        if (item.touchstart) item.touchstart(touchData);
                        item.__isDown = true;
                        item.__touchData = item.__touchData || {};
                        item.__touchData[touchEvent.identifier] = touchData;
                        if (!item.interactiveChildren) break;
                    }
                }
            }
        }
    };
    PIXI.InteractionManager.prototype.onTouchEnd = function(event) {
        if (this.dirty) {
            this.rebuildInteractiveGraph();
        }
        var rect = this.interactionDOMElement.getBoundingClientRect();
        var changedTouches = event.changedTouches;
        for (var i = 0; i < changedTouches.length; i++) {
            var touchEvent = changedTouches[i];
            var touchData = this.touches[touchEvent.identifier];
            var up = false;
            touchData.global.x = (touchEvent.clientX - rect.left) * (this.target.width / rect.width) / this.resolution;
            touchData.global.y = (touchEvent.clientY - rect.top) * (this.target.height / rect.height) / this.resolution;
            if (navigator.isCocoonJS && !rect.left && !rect.top && !event.target.style.width && !event.target.style.height) {
                touchData.global.x = touchEvent.clientX;
                touchData.global.y = touchEvent.clientY;
            }
            var length = this.interactiveItems.length;
            for (var j = 0; j < length; j++) {
                var item = this.interactiveItems[j];
                if (item.__touchData && item.__touchData[touchEvent.identifier]) {
                    item.__hit = this.hitTest(item, item.__touchData[touchEvent.identifier]);
                    touchData.originalEvent = event;
                    if (item.touchend || item.tap) {
                        if (item.__hit && !up) {
                            if (item.touchend) {
                                item.touchend(touchData);
                            }
                            if (item.__isDown && item.tap) {
                                item.tap(touchData);
                            }
                            if (!item.interactiveChildren) {
                                up = true;
                            }
                        } else {
                            if (item.__isDown && item.touchendoutside) {
                                item.touchendoutside(touchData);
                            }
                        }
                        item.__isDown = false;
                    }
                    item.__touchData[touchEvent.identifier] = null;
                }
            }
            this.pool.push(touchData);
            this.touches[touchEvent.identifier] = null;
        }
    };
    PIXI.Stage = function(backgroundColor) {
        PIXI.DisplayObjectContainer.call(this);
        this.worldTransform = new PIXI.Matrix();
        this.interactive = true;
        this.interactionManager = new PIXI.InteractionManager(this);
        this.dirty = true;
        this.stage = this;
        this.stage.hitArea = new PIXI.Rectangle(0, 0, 1e5, 1e5);
        this.setBackgroundColor(backgroundColor);
    };
    PIXI.Stage.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.Stage.prototype.constructor = PIXI.Stage;
    PIXI.Stage.prototype.setInteractionDelegate = function(domElement) {
        this.interactionManager.setTargetDomElement(domElement);
    };
    PIXI.Stage.prototype.updateTransform = function() {
        this.worldAlpha = 1;
        for (var i = 0, j = this.children.length; i < j; i++) {
            this.children[i].updateTransform();
        }
        if (this.dirty) {
            this.dirty = false;
            this.interactionManager.dirty = true;
        }
        if (this.interactive) this.interactionManager.update();
    };
    PIXI.Stage.prototype.setBackgroundColor = function(backgroundColor) {
        this.backgroundColor = backgroundColor || 0;
        this.backgroundColorSplit = PIXI.hex2rgb(this.backgroundColor);
        var hex = this.backgroundColor.toString(16);
        hex = "000000".substr(0, 6 - hex.length) + hex;
        this.backgroundColorString = "#" + hex;
    };
    PIXI.Stage.prototype.getMousePosition = function() {
        return this.interactionManager.mouse.global;
    };
    (function(window) {
        var lastTime = 0;
        var vendors = [ "ms", "moz", "webkit", "o" ];
        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];
            window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"];
        }
        if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = function(callback) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function() {
                    callback(currTime + timeToCall);
                }, timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };
        }
        if (!window.cancelAnimationFrame) {
            window.cancelAnimationFrame = function(id) {
                clearTimeout(id);
            };
        }
        window.requestAnimFrame = window.requestAnimationFrame;
    })(this);
    PIXI.hex2rgb = function(hex) {
        return [ (hex >> 16 & 255) / 255, (hex >> 8 & 255) / 255, (hex & 255) / 255 ];
    };
    PIXI.rgb2hex = function(rgb) {
        return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + rgb[2] * 255;
    };
    if (typeof Function.prototype.bind !== "function") {
        Function.prototype.bind = function() {
            return function(thisArg) {
                var target = this, i = arguments.length - 1, boundArgs = [];
                if (i > 0) {
                    boundArgs.length = i;
                    while (i--) boundArgs[i] = arguments[i + 1];
                }
                if (typeof target !== "function") throw new TypeError();
                function bound() {
                    var i = arguments.length, args = new Array(i);
                    while (i--) args[i] = arguments[i];
                    args = boundArgs.concat(args);
                    return target.apply(this instanceof bound ? this : thisArg, args);
                }
                bound.prototype = function F(proto) {
                    if (proto) F.prototype = proto;
                    if (!(this instanceof F)) return new F();
                }(target.prototype);
                return bound;
            };
        }();
    }
    PIXI.AjaxRequest = function() {
        var activexmodes = [ "Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.3.0", "Microsoft.XMLHTTP" ];
        if (window.ActiveXObject) {
            for (var i = 0; i < activexmodes.length; i++) {
                try {
                    return new window.ActiveXObject(activexmodes[i]);
                } catch (e) {}
            }
        } else if (window.XMLHttpRequest) {
            return new window.XMLHttpRequest();
        } else {
            return false;
        }
    };
    PIXI.canUseNewCanvasBlendModes = function() {
        if (typeof document === "undefined") return false;
        var canvas = document.createElement("canvas");
        canvas.width = 1;
        canvas.height = 1;
        var context = canvas.getContext("2d");
        context.fillStyle = "#000";
        context.fillRect(0, 0, 1, 1);
        context.globalCompositeOperation = "multiply";
        context.fillStyle = "#fff";
        context.fillRect(0, 0, 1, 1);
        return context.getImageData(0, 0, 1, 1).data[0] === 0;
    };
    PIXI.getNextPowerOfTwo = function(number) {
        if (number > 0 && (number & number - 1) === 0) return number; else {
            var result = 1;
            while (result < number) result <<= 1;
            return result;
        }
    };
    PIXI.EventTarget = {
        call: function callCompat(obj) {
            if (obj) {
                obj = obj.prototype || obj;
                PIXI.EventTarget.mixin(obj);
            }
        },
        mixin: function mixin(obj) {
            obj.listeners = function listeners(eventName) {
                this._listeners = this._listeners || {};
                return this._listeners[eventName] ? this._listeners[eventName].slice() : [];
            };
            obj.emit = obj.dispatchEvent = function emit(eventName, data) {
                this._listeners = this._listeners || {};
                if (typeof eventName === "object") {
                    data = eventName;
                    eventName = eventName.type;
                }
                if (!data || data.__isEventObject !== true) {
                    data = new PIXI.Event(this, eventName, data);
                }
                if (this._listeners && this._listeners[eventName]) {
                    var listeners = this._listeners[eventName].slice(0), length = listeners.length, fn = listeners[0], i;
                    for (i = 0; i < length; fn = listeners[++i]) {
                        fn.call(this, data);
                        if (data.stoppedImmediate) {
                            return this;
                        }
                    }
                    if (data.stopped) {
                        return this;
                    }
                }
                if (this.parent && this.parent.emit) {
                    this.parent.emit.call(this.parent, eventName, data);
                }
                return this;
            };
            obj.on = obj.addEventListener = function on(eventName, fn) {
                this._listeners = this._listeners || {};
                (this._listeners[eventName] = this._listeners[eventName] || []).push(fn);
                return this;
            };
            obj.once = function once(eventName, fn) {
                this._listeners = this._listeners || {};
                var self = this;
                function onceHandlerWrapper() {
                    fn.apply(self.off(eventName, onceHandlerWrapper), arguments);
                }
                onceHandlerWrapper._originalHandler = fn;
                return this.on(eventName, onceHandlerWrapper);
            };
            obj.off = obj.removeEventListener = function off(eventName, fn) {
                this._listeners = this._listeners || {};
                if (!this._listeners[eventName]) return this;
                var list = this._listeners[eventName], i = fn ? list.length : 0;
                while (i-- > 0) {
                    if (list[i] === fn || list[i]._originalHandler === fn) {
                        list.splice(i, 1);
                    }
                }
                if (list.length === 0) {
                    delete this._listeners[eventName];
                }
                return this;
            };
            obj.removeAllListeners = function removeAllListeners(eventName) {
                this._listeners = this._listeners || {};
                if (!this._listeners[eventName]) return this;
                delete this._listeners[eventName];
                return this;
            };
        }
    };
    PIXI.Event = function(target, name, data) {
        this.__isEventObject = true;
        this.stopped = false;
        this.stoppedImmediate = false;
        this.target = target;
        this.type = name;
        this.data = data;
        this.content = data;
        this.timeStamp = Date.now();
    };
    PIXI.Event.prototype.stopPropagation = function stopPropagation() {
        this.stopped = true;
    };
    PIXI.Event.prototype.stopImmediatePropagation = function stopImmediatePropagation() {
        this.stoppedImmediate = true;
    };
    PIXI.autoDetectRenderer = function(width, height, options) {
        if (!width) width = 800;
        if (!height) height = 600;
        var webgl = function() {
            try {
                var canvas = document.createElement("canvas");
                return !!window.WebGLRenderingContext && (canvas.getContext("webgl") || canvas.getContext("experimental-webgl"));
            } catch (e) {
                return false;
            }
        }();
        if (webgl) {
            return new PIXI.WebGLRenderer(width, height, options);
        }
        return new PIXI.CanvasRenderer(width, height, options);
    };
    PIXI.autoDetectRecommendedRenderer = function(width, height, options) {
        if (!width) width = 800;
        if (!height) height = 600;
        var webgl = function() {
            try {
                var canvas = document.createElement("canvas");
                return !!window.WebGLRenderingContext && (canvas.getContext("webgl") || canvas.getContext("experimental-webgl"));
            } catch (e) {
                return false;
            }
        }();
        var isAndroid = /Android/i.test(navigator.userAgent);
        if (webgl && !isAndroid) {
            return new PIXI.WebGLRenderer(width, height, options);
        }
        return new PIXI.CanvasRenderer(width, height, options);
    };
    PIXI.PolyK = {};
    PIXI.PolyK.Triangulate = function(p) {
        var sign = true;
        var n = p.length >> 1;
        if (n < 3) return [];
        var tgs = [];
        var avl = [];
        for (var i = 0; i < n; i++) avl.push(i);
        i = 0;
        var al = n;
        while (al > 3) {
            var i0 = avl[(i + 0) % al];
            var i1 = avl[(i + 1) % al];
            var i2 = avl[(i + 2) % al];
            var ax = p[2 * i0], ay = p[2 * i0 + 1];
            var bx = p[2 * i1], by = p[2 * i1 + 1];
            var cx = p[2 * i2], cy = p[2 * i2 + 1];
            var earFound = false;
            if (PIXI.PolyK._convex(ax, ay, bx, by, cx, cy, sign)) {
                earFound = true;
                for (var j = 0; j < al; j++) {
                    var vi = avl[j];
                    if (vi === i0 || vi === i1 || vi === i2) continue;
                    if (PIXI.PolyK._PointInTriangle(p[2 * vi], p[2 * vi + 1], ax, ay, bx, by, cx, cy)) {
                        earFound = false;
                        break;
                    }
                }
            }
            if (earFound) {
                tgs.push(i0, i1, i2);
                avl.splice((i + 1) % al, 1);
                al--;
                i = 0;
            } else if (i++ > 3 * al) {
                if (sign) {
                    tgs = [];
                    avl = [];
                    for (i = 0; i < n; i++) avl.push(i);
                    i = 0;
                    al = n;
                    sign = false;
                } else {
                    return null;
                }
            }
        }
        tgs.push(avl[0], avl[1], avl[2]);
        return tgs;
    };
    PIXI.PolyK._PointInTriangle = function(px, py, ax, ay, bx, by, cx, cy) {
        var v0x = cx - ax;
        var v0y = cy - ay;
        var v1x = bx - ax;
        var v1y = by - ay;
        var v2x = px - ax;
        var v2y = py - ay;
        var dot00 = v0x * v0x + v0y * v0y;
        var dot01 = v0x * v1x + v0y * v1y;
        var dot02 = v0x * v2x + v0y * v2y;
        var dot11 = v1x * v1x + v1y * v1y;
        var dot12 = v1x * v2x + v1y * v2y;
        var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
        var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
        var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
        return u >= 0 && v >= 0 && u + v < 1;
    };
    PIXI.PolyK._convex = function(ax, ay, bx, by, cx, cy, sign) {
        return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0 === sign;
    };
    PIXI.initDefaultShaders = function() {};
    PIXI.CompileVertexShader = function(gl, shaderSrc) {
        return PIXI._CompileShader(gl, shaderSrc, gl.VERTEX_SHADER);
    };
    PIXI.CompileFragmentShader = function(gl, shaderSrc) {
        return PIXI._CompileShader(gl, shaderSrc, gl.FRAGMENT_SHADER);
    };
    PIXI._CompileShader = function(gl, shaderSrc, shaderType) {
        var src = shaderSrc.join("\n");
        var shader = gl.createShader(shaderType);
        gl.shaderSource(shader, src);
        gl.compileShader(shader);
        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
            window.console.log(gl.getShaderInfoLog(shader));
            return null;
        }
        return shader;
    };
    PIXI.compileProgram = function(gl, vertexSrc, fragmentSrc) {
        var fragmentShader = PIXI.CompileFragmentShader(gl, fragmentSrc);
        var vertexShader = PIXI.CompileVertexShader(gl, vertexSrc);
        var shaderProgram = gl.createProgram();
        gl.attachShader(shaderProgram, vertexShader);
        gl.attachShader(shaderProgram, fragmentShader);
        gl.linkProgram(shaderProgram);
        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {
            window.console.log("Could not initialise shaders");
        }
        return shaderProgram;
    };
    PIXI.PixiShader = function(gl) {
        this._UID = PIXI._UID++;
        this.gl = gl;
        this.program = null;
        this.fragmentSrc = [ "precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}" ];
        this.textureCount = 0;
        this.firstRun = true;
        this.dirty = true;
        this.attributes = [];
        this.init();
    };
    PIXI.PixiShader.prototype.constructor = PIXI.PixiShader;
    PIXI.PixiShader.prototype.init = function() {
        var gl = this.gl;
        var program = PIXI.compileProgram(gl, this.vertexSrc || PIXI.PixiShader.defaultVertexSrc, this.fragmentSrc);
        gl.useProgram(program);
        this.uSampler = gl.getUniformLocation(program, "uSampler");
        this.projectionVector = gl.getUniformLocation(program, "projectionVector");
        this.offsetVector = gl.getUniformLocation(program, "offsetVector");
        this.dimensions = gl.getUniformLocation(program, "dimensions");
        this.aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
        this.aTextureCoord = gl.getAttribLocation(program, "aTextureCoord");
        this.colorAttribute = gl.getAttribLocation(program, "aColor");
        if (this.colorAttribute === -1) {
            this.colorAttribute = 2;
        }
        this.attributes = [ this.aVertexPosition, this.aTextureCoord, this.colorAttribute ];
        for (var key in this.uniforms) {
            this.uniforms[key].uniformLocation = gl.getUniformLocation(program, key);
        }
        this.initUniforms();
        this.program = program;
    };
    PIXI.PixiShader.prototype.initUniforms = function() {
        this.textureCount = 1;
        var gl = this.gl;
        var uniform;
        for (var key in this.uniforms) {
            uniform = this.uniforms[key];
            var type = uniform.type;
            if (type === "sampler2D") {
                uniform._init = false;
                if (uniform.value !== null) {
                    this.initSampler2D(uniform);
                }
            } else if (type === "mat2" || type === "mat3" || type === "mat4") {
                uniform.glMatrix = true;
                uniform.glValueLength = 1;
                if (type === "mat2") {
                    uniform.glFunc = gl.uniformMatrix2fv;
                } else if (type === "mat3") {
                    uniform.glFunc = gl.uniformMatrix3fv;
                } else if (type === "mat4") {
                    uniform.glFunc = gl.uniformMatrix4fv;
                }
            } else {
                uniform.glFunc = gl["uniform" + type];
                if (type === "2f" || type === "2i") {
                    uniform.glValueLength = 2;
                } else if (type === "3f" || type === "3i") {
                    uniform.glValueLength = 3;
                } else if (type === "4f" || type === "4i") {
                    uniform.glValueLength = 4;
                } else {
                    uniform.glValueLength = 1;
                }
            }
        }
    };
    PIXI.PixiShader.prototype.initSampler2D = function(uniform) {
        if (!uniform.value || !uniform.value.baseTexture || !uniform.value.baseTexture.hasLoaded) {
            return;
        }
        var gl = this.gl;
        gl.activeTexture(gl["TEXTURE" + this.textureCount]);
        gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id]);
        if (uniform.textureData) {
            var data = uniform.textureData;
            var magFilter = data.magFilter ? data.magFilter : gl.LINEAR;
            var minFilter = data.minFilter ? data.minFilter : gl.LINEAR;
            var wrapS = data.wrapS ? data.wrapS : gl.CLAMP_TO_EDGE;
            var wrapT = data.wrapT ? data.wrapT : gl.CLAMP_TO_EDGE;
            var format = data.luminance ? gl.LUMINANCE : gl.RGBA;
            if (data.repeat) {
                wrapS = gl.REPEAT;
                wrapT = gl.REPEAT;
            }
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, !!data.flipY);
            if (data.width) {
                var width = data.width ? data.width : 512;
                var height = data.height ? data.height : 2;
                var border = data.border ? data.border : 0;
                gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, border, format, gl.UNSIGNED_BYTE, null);
            } else {
                gl.texImage2D(gl.TEXTURE_2D, 0, format, gl.RGBA, gl.UNSIGNED_BYTE, uniform.value.baseTexture.source);
            }
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);
        }
        gl.uniform1i(uniform.uniformLocation, this.textureCount);
        uniform._init = true;
        this.textureCount++;
    };
    PIXI.PixiShader.prototype.syncUniforms = function() {
        this.textureCount = 1;
        var uniform;
        var gl = this.gl;
        for (var key in this.uniforms) {
            uniform = this.uniforms[key];
            if (uniform.glValueLength === 1) {
                if (uniform.glMatrix === true) {
                    uniform.glFunc.call(gl, uniform.uniformLocation, uniform.transpose, uniform.value);
                } else {
                    uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value);
                }
            } else if (uniform.glValueLength === 2) {
                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y);
            } else if (uniform.glValueLength === 3) {
                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z);
            } else if (uniform.glValueLength === 4) {
                uniform.glFunc.call(gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z, uniform.value.w);
            } else if (uniform.type === "sampler2D") {
                if (uniform._init) {
                    gl.activeTexture(gl["TEXTURE" + this.textureCount]);
                    if (uniform.value.baseTexture._dirty[gl.id]) {
                        PIXI.instances[gl.id].updateTexture(uniform.value.baseTexture);
                    } else {
                        gl.bindTexture(gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[gl.id]);
                    }
                    gl.uniform1i(uniform.uniformLocation, this.textureCount);
                    this.textureCount++;
                } else {
                    this.initSampler2D(uniform);
                }
            }
        }
    };
    PIXI.PixiShader.prototype.destroy = function() {
        this.gl.deleteProgram(this.program);
        this.uniforms = null;
        this.gl = null;
        this.attributes = null;
    };
    PIXI.PixiShader.defaultVertexSrc = [ "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "attribute vec4 aColor;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "const vec2 center = vec2(-1.0, 1.0);", "void main(void) {", "   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vec3 color = mod(vec3(aColor.y/65536.0, aColor.y/256.0, aColor.y), 256.0) / 256.0;", "   vColor = vec4(color * aColor.x, aColor.x);", "}" ];
    PIXI.PixiFastShader = function(gl) {
        this._UID = PIXI._UID++;
        this.gl = gl;
        this.program = null;
        this.fragmentSrc = [ "precision lowp float;", "varying vec2 vTextureCoord;", "varying float vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}" ];
        this.vertexSrc = [ "attribute vec2 aVertexPosition;", "attribute vec2 aPositionCoord;", "attribute vec2 aScale;", "attribute float aRotation;", "attribute vec2 aTextureCoord;", "attribute float aColor;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform mat3 uMatrix;", "varying vec2 vTextureCoord;", "varying float vColor;", "const vec2 center = vec2(-1.0, 1.0);", "void main(void) {", "   vec2 v;", "   vec2 sv = aVertexPosition * aScale;", "   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);", "   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);", "   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;", "   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = aColor;", "}" ];
        this.textureCount = 0;
        this.init();
    };
    PIXI.PixiFastShader.prototype.constructor = PIXI.PixiFastShader;
    PIXI.PixiFastShader.prototype.init = function() {
        var gl = this.gl;
        var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);
        gl.useProgram(program);
        this.uSampler = gl.getUniformLocation(program, "uSampler");
        this.projectionVector = gl.getUniformLocation(program, "projectionVector");
        this.offsetVector = gl.getUniformLocation(program, "offsetVector");
        this.dimensions = gl.getUniformLocation(program, "dimensions");
        this.uMatrix = gl.getUniformLocation(program, "uMatrix");
        this.aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
        this.aPositionCoord = gl.getAttribLocation(program, "aPositionCoord");
        this.aScale = gl.getAttribLocation(program, "aScale");
        this.aRotation = gl.getAttribLocation(program, "aRotation");
        this.aTextureCoord = gl.getAttribLocation(program, "aTextureCoord");
        this.colorAttribute = gl.getAttribLocation(program, "aColor");
        if (this.colorAttribute === -1) {
            this.colorAttribute = 2;
        }
        this.attributes = [ this.aVertexPosition, this.aPositionCoord, this.aScale, this.aRotation, this.aTextureCoord, this.colorAttribute ];
        this.program = program;
    };
    PIXI.PixiFastShader.prototype.destroy = function() {
        this.gl.deleteProgram(this.program);
        this.uniforms = null;
        this.gl = null;
        this.attributes = null;
    };
    PIXI.StripShader = function(gl) {
        this._UID = PIXI._UID++;
        this.gl = gl;
        this.program = null;
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "uniform float alpha;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * alpha;", "}" ];
        this.vertexSrc = [ "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "varying vec2 vTextureCoord;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "}" ];
        this.init();
    };
    PIXI.StripShader.prototype.constructor = PIXI.StripShader;
    PIXI.StripShader.prototype.init = function() {
        var gl = this.gl;
        var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);
        gl.useProgram(program);
        this.uSampler = gl.getUniformLocation(program, "uSampler");
        this.projectionVector = gl.getUniformLocation(program, "projectionVector");
        this.offsetVector = gl.getUniformLocation(program, "offsetVector");
        this.colorAttribute = gl.getAttribLocation(program, "aColor");
        this.aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
        this.aTextureCoord = gl.getAttribLocation(program, "aTextureCoord");
        this.attributes = [ this.aVertexPosition, this.aTextureCoord ];
        this.translationMatrix = gl.getUniformLocation(program, "translationMatrix");
        this.alpha = gl.getUniformLocation(program, "alpha");
        this.program = program;
    };
    PIXI.StripShader.prototype.destroy = function() {
        this.gl.deleteProgram(this.program);
        this.uniforms = null;
        this.gl = null;
        this.attribute = null;
    };
    PIXI.PrimitiveShader = function(gl) {
        this._UID = PIXI._UID++;
        this.gl = gl;
        this.program = null;
        this.fragmentSrc = [ "precision mediump float;", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}" ];
        this.vertexSrc = [ "attribute vec2 aVertexPosition;", "attribute vec4 aColor;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform float alpha;", "uniform vec3 tint;", "varying vec4 vColor;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);", "   vColor = aColor * vec4(tint * alpha, alpha);", "}" ];
        this.init();
    };
    PIXI.PrimitiveShader.prototype.constructor = PIXI.PrimitiveShader;
    PIXI.PrimitiveShader.prototype.init = function() {
        var gl = this.gl;
        var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);
        gl.useProgram(program);
        this.projectionVector = gl.getUniformLocation(program, "projectionVector");
        this.offsetVector = gl.getUniformLocation(program, "offsetVector");
        this.tintColor = gl.getUniformLocation(program, "tint");
        this.aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
        this.colorAttribute = gl.getAttribLocation(program, "aColor");
        this.attributes = [ this.aVertexPosition, this.colorAttribute ];
        this.translationMatrix = gl.getUniformLocation(program, "translationMatrix");
        this.alpha = gl.getUniformLocation(program, "alpha");
        this.program = program;
    };
    PIXI.PrimitiveShader.prototype.destroy = function() {
        this.gl.deleteProgram(this.program);
        this.uniforms = null;
        this.gl = null;
        this.attributes = null;
    };
    PIXI.ComplexPrimitiveShader = function(gl) {
        this._UID = PIXI._UID++;
        this.gl = gl;
        this.program = null;
        this.fragmentSrc = [ "precision mediump float;", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}" ];
        this.vertexSrc = [ "attribute vec2 aVertexPosition;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform vec3 tint;", "uniform float alpha;", "uniform vec3 color;", "varying vec4 vColor;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);", "   vColor = vec4(color * alpha * tint, alpha);", "}" ];
        this.init();
    };
    PIXI.ComplexPrimitiveShader.prototype.constructor = PIXI.ComplexPrimitiveShader;
    PIXI.ComplexPrimitiveShader.prototype.init = function() {
        var gl = this.gl;
        var program = PIXI.compileProgram(gl, this.vertexSrc, this.fragmentSrc);
        gl.useProgram(program);
        this.projectionVector = gl.getUniformLocation(program, "projectionVector");
        this.offsetVector = gl.getUniformLocation(program, "offsetVector");
        this.tintColor = gl.getUniformLocation(program, "tint");
        this.color = gl.getUniformLocation(program, "color");
        this.aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
        this.attributes = [ this.aVertexPosition, this.colorAttribute ];
        this.translationMatrix = gl.getUniformLocation(program, "translationMatrix");
        this.alpha = gl.getUniformLocation(program, "alpha");
        this.program = program;
    };
    PIXI.ComplexPrimitiveShader.prototype.destroy = function() {
        this.gl.deleteProgram(this.program);
        this.uniforms = null;
        this.gl = null;
        this.attribute = null;
    };
    PIXI.WebGLGraphics = function() {};
    PIXI.WebGLGraphics.renderGraphics = function(graphics, renderSession) {
        var gl = renderSession.gl;
        var projection = renderSession.projection, offset = renderSession.offset, shader = renderSession.shaderManager.primitiveShader, webGLData;
        if (graphics.dirty) {
            PIXI.WebGLGraphics.updateGraphics(graphics, gl);
        }
        var webGL = graphics._webGL[gl.id];
        for (var i = 0; i < webGL.data.length; i++) {
            if (webGL.data[i].mode === 1) {
                webGLData = webGL.data[i];
                renderSession.stencilManager.pushStencil(graphics, webGLData, renderSession);
                gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (webGLData.indices.length - 4) * 2);
                renderSession.stencilManager.popStencil(graphics, webGLData, renderSession);
            } else {
                webGLData = webGL.data[i];
                renderSession.shaderManager.setShader(shader);
                shader = renderSession.shaderManager.primitiveShader;
                gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));
                gl.uniform2f(shader.projectionVector, projection.x, -projection.y);
                gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);
                gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));
                gl.uniform1f(shader.alpha, graphics.worldAlpha);
                gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);
                gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);
                gl.vertexAttribPointer(shader.colorAttribute, 4, gl.FLOAT, false, 4 * 6, 2 * 4);
                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);
                gl.drawElements(gl.TRIANGLE_STRIP, webGLData.indices.length, gl.UNSIGNED_SHORT, 0);
            }
        }
    };
    PIXI.WebGLGraphics.updateGraphics = function(graphics, gl) {
        var webGL = graphics._webGL[gl.id];
        if (!webGL) webGL = graphics._webGL[gl.id] = {
            lastIndex: 0,
            data: [],
            gl: gl
        };
        graphics.dirty = false;
        var i;
        if (graphics.clearDirty) {
            graphics.clearDirty = false;
            for (i = 0; i < webGL.data.length; i++) {
                var graphicsData = webGL.data[i];
                graphicsData.reset();
                PIXI.WebGLGraphics.graphicsDataPool.push(graphicsData);
            }
            webGL.data = [];
            webGL.lastIndex = 0;
        }
        var webGLData;
        for (i = webGL.lastIndex; i < graphics.graphicsData.length; i++) {
            var data = graphics.graphicsData[i];
            if (data.type === PIXI.Graphics.POLY) {
                data.points = data.shape.points.slice();
                if (data.shape.closed) {
                    if (data.points[0] !== data.points[data.points.length - 2] && data.points[1] !== data.points[data.points.length - 1]) {
                        data.points.push(data.points[0], data.points[1]);
                    }
                }
                if (data.fill) {
                    if (data.points.length >= 6) {
                        if (data.points.length < 6 * 2) {
                            webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);
                            var canDrawUsingSimple = PIXI.WebGLGraphics.buildPoly(data, webGLData);
                            if (!canDrawUsingSimple) {
                                webGLData = PIXI.WebGLGraphics.switchMode(webGL, 1);
                                PIXI.WebGLGraphics.buildComplexPoly(data, webGLData);
                            }
                        } else {
                            webGLData = PIXI.WebGLGraphics.switchMode(webGL, 1);
                            PIXI.WebGLGraphics.buildComplexPoly(data, webGLData);
                        }
                    }
                }
                if (data.lineWidth > 0) {
                    webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);
                    PIXI.WebGLGraphics.buildLine(data, webGLData);
                }
            } else {
                webGLData = PIXI.WebGLGraphics.switchMode(webGL, 0);
                if (data.type === PIXI.Graphics.RECT) {
                    PIXI.WebGLGraphics.buildRectangle(data, webGLData);
                } else if (data.type === PIXI.Graphics.CIRC || data.type === PIXI.Graphics.ELIP) {
                    PIXI.WebGLGraphics.buildCircle(data, webGLData);
                } else if (data.type === PIXI.Graphics.RREC) {
                    PIXI.WebGLGraphics.buildRoundedRectangle(data, webGLData);
                }
            }
            webGL.lastIndex++;
        }
        for (i = 0; i < webGL.data.length; i++) {
            webGLData = webGL.data[i];
            if (webGLData.dirty) webGLData.upload();
        }
    };
    PIXI.WebGLGraphics.switchMode = function(webGL, type) {
        var webGLData;
        if (!webGL.data.length) {
            webGLData = PIXI.WebGLGraphics.graphicsDataPool.pop() || new PIXI.WebGLGraphicsData(webGL.gl);
            webGLData.mode = type;
            webGL.data.push(webGLData);
        } else {
            webGLData = webGL.data[webGL.data.length - 1];
            if (webGLData.mode !== type || type === 1) {
                webGLData = PIXI.WebGLGraphics.graphicsDataPool.pop() || new PIXI.WebGLGraphicsData(webGL.gl);
                webGLData.mode = type;
                webGL.data.push(webGLData);
            }
        }
        webGLData.dirty = true;
        return webGLData;
    };
    PIXI.WebGLGraphics.buildRectangle = function(graphicsData, webGLData) {
        var rectData = graphicsData.shape;
        var x = rectData.x;
        var y = rectData.y;
        var width = rectData.width;
        var height = rectData.height;
        if (graphicsData.fill) {
            var color = PIXI.hex2rgb(graphicsData.fillColor);
            var alpha = graphicsData.fillAlpha;
            var r = color[0] * alpha;
            var g = color[1] * alpha;
            var b = color[2] * alpha;
            var verts = webGLData.points;
            var indices = webGLData.indices;
            var vertPos = verts.length / 6;
            verts.push(x, y);
            verts.push(r, g, b, alpha);
            verts.push(x + width, y);
            verts.push(r, g, b, alpha);
            verts.push(x, y + height);
            verts.push(r, g, b, alpha);
            verts.push(x + width, y + height);
            verts.push(r, g, b, alpha);
            indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);
        }
        if (graphicsData.lineWidth) {
            var tempPoints = graphicsData.points;
            graphicsData.points = [ x, y, x + width, y, x + width, y + height, x, y + height, x, y ];
            PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);
            graphicsData.points = tempPoints;
        }
    };
    PIXI.WebGLGraphics.buildRoundedRectangle = function(graphicsData, webGLData) {
        var rrectData = graphicsData.shape;
        var x = rrectData.x;
        var y = rrectData.y;
        var width = rrectData.width;
        var height = rrectData.height;
        var radius = rrectData.radius;
        var recPoints = [];
        recPoints.push(x, y + radius);
        recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height));
        recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius));
        recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y));
        recPoints = recPoints.concat(PIXI.WebGLGraphics.quadraticBezierCurve(x + radius, y, x, y, x, y + radius));
        if (graphicsData.fill) {
            var color = PIXI.hex2rgb(graphicsData.fillColor);
            var alpha = graphicsData.fillAlpha;
            var r = color[0] * alpha;
            var g = color[1] * alpha;
            var b = color[2] * alpha;
            var verts = webGLData.points;
            var indices = webGLData.indices;
            var vecPos = verts.length / 6;
            var triangles = PIXI.PolyK.Triangulate(recPoints);
            var i = 0;
            for (i = 0; i < triangles.length; i += 3) {
                indices.push(triangles[i] + vecPos);
                indices.push(triangles[i] + vecPos);
                indices.push(triangles[i + 1] + vecPos);
                indices.push(triangles[i + 2] + vecPos);
                indices.push(triangles[i + 2] + vecPos);
            }
            for (i = 0; i < recPoints.length; i++) {
                verts.push(recPoints[i], recPoints[++i], r, g, b, alpha);
            }
        }
        if (graphicsData.lineWidth) {
            var tempPoints = graphicsData.points;
            graphicsData.points = recPoints;
            PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);
            graphicsData.points = tempPoints;
        }
    };
    PIXI.WebGLGraphics.quadraticBezierCurve = function(fromX, fromY, cpX, cpY, toX, toY) {
        var xa, ya, xb, yb, x, y, n = 20, points = [];
        function getPt(n1, n2, perc) {
            var diff = n2 - n1;
            return n1 + diff * perc;
        }
        var j = 0;
        for (var i = 0; i <= n; i++) {
            j = i / n;
            xa = getPt(fromX, cpX, j);
            ya = getPt(fromY, cpY, j);
            xb = getPt(cpX, toX, j);
            yb = getPt(cpY, toY, j);
            x = getPt(xa, xb, j);
            y = getPt(ya, yb, j);
            points.push(x, y);
        }
        return points;
    };
    PIXI.WebGLGraphics.buildCircle = function(graphicsData, webGLData) {
        var circleData = graphicsData.shape;
        var x = circleData.x;
        var y = circleData.y;
        var width;
        var height;
        if (graphicsData.type === PIXI.Graphics.CIRC) {
            width = circleData.radius;
            height = circleData.radius;
        } else {
            width = circleData.width;
            height = circleData.height;
        }
        var totalSegs = 40;
        var seg = Math.PI * 2 / totalSegs;
        var i = 0;
        if (graphicsData.fill) {
            var color = PIXI.hex2rgb(graphicsData.fillColor);
            var alpha = graphicsData.fillAlpha;
            var r = color[0] * alpha;
            var g = color[1] * alpha;
            var b = color[2] * alpha;
            var verts = webGLData.points;
            var indices = webGLData.indices;
            var vecPos = verts.length / 6;
            indices.push(vecPos);
            for (i = 0; i < totalSegs + 1; i++) {
                verts.push(x, y, r, g, b, alpha);
                verts.push(x + Math.sin(seg * i) * width, y + Math.cos(seg * i) * height, r, g, b, alpha);
                indices.push(vecPos++, vecPos++);
            }
            indices.push(vecPos - 1);
        }
        if (graphicsData.lineWidth) {
            var tempPoints = graphicsData.points;
            graphicsData.points = [];
            for (i = 0; i < totalSegs + 1; i++) {
                graphicsData.points.push(x + Math.sin(seg * i) * width, y + Math.cos(seg * i) * height);
            }
            PIXI.WebGLGraphics.buildLine(graphicsData, webGLData);
            graphicsData.points = tempPoints;
        }
    };
    PIXI.WebGLGraphics.buildLine = function(graphicsData, webGLData) {
        var i = 0;
        var points = graphicsData.points;
        if (points.length === 0) return;
        if (graphicsData.lineWidth % 2) {
            for (i = 0; i < points.length; i++) {
                points[i] += .5;
            }
        }
        var firstPoint = new PIXI.Point(points[0], points[1]);
        var lastPoint = new PIXI.Point(points[points.length - 2], points[points.length - 1]);
        if (firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y) {
            points = points.slice();
            points.pop();
            points.pop();
            lastPoint = new PIXI.Point(points[points.length - 2], points[points.length - 1]);
            var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * .5;
            var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * .5;
            points.unshift(midPointX, midPointY);
            points.push(midPointX, midPointY);
        }
        var verts = webGLData.points;
        var indices = webGLData.indices;
        var length = points.length / 2;
        var indexCount = points.length;
        var indexStart = verts.length / 6;
        var width = graphicsData.lineWidth / 2;
        var color = PIXI.hex2rgb(graphicsData.lineColor);
        var alpha = graphicsData.lineAlpha;
        var r = color[0] * alpha;
        var g = color[1] * alpha;
        var b = color[2] * alpha;
        var px, py, p1x, p1y, p2x, p2y, p3x, p3y;
        var perpx, perpy, perp2x, perp2y, perp3x, perp3y;
        var a1, b1, c1, a2, b2, c2;
        var denom, pdist, dist;
        p1x = points[0];
        p1y = points[1];
        p2x = points[2];
        p2y = points[3];
        perpx = -(p1y - p2y);
        perpy = p1x - p2x;
        dist = Math.sqrt(perpx * perpx + perpy * perpy);
        perpx /= dist;
        perpy /= dist;
        perpx *= width;
        perpy *= width;
        verts.push(p1x - perpx, p1y - perpy, r, g, b, alpha);
        verts.push(p1x + perpx, p1y + perpy, r, g, b, alpha);
        for (i = 1; i < length - 1; i++) {
            p1x = points[(i - 1) * 2];
            p1y = points[(i - 1) * 2 + 1];
            p2x = points[i * 2];
            p2y = points[i * 2 + 1];
            p3x = points[(i + 1) * 2];
            p3y = points[(i + 1) * 2 + 1];
            perpx = -(p1y - p2y);
            perpy = p1x - p2x;
            dist = Math.sqrt(perpx * perpx + perpy * perpy);
            perpx /= dist;
            perpy /= dist;
            perpx *= width;
            perpy *= width;
            perp2x = -(p2y - p3y);
            perp2y = p2x - p3x;
            dist = Math.sqrt(perp2x * perp2x + perp2y * perp2y);
            perp2x /= dist;
            perp2y /= dist;
            perp2x *= width;
            perp2y *= width;
            a1 = -perpy + p1y - (-perpy + p2y);
            b1 = -perpx + p2x - (-perpx + p1x);
            c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);
            a2 = -perp2y + p3y - (-perp2y + p2y);
            b2 = -perp2x + p2x - (-perp2x + p3x);
            c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);
            denom = a1 * b2 - a2 * b1;
            if (Math.abs(denom) < .1) {
                denom += 10.1;
                verts.push(p2x - perpx, p2y - perpy, r, g, b, alpha);
                verts.push(p2x + perpx, p2y + perpy, r, g, b, alpha);
                continue;
            }
            px = (b1 * c2 - b2 * c1) / denom;
            py = (a2 * c1 - a1 * c2) / denom;
            pdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);
            if (pdist > 140 * 140) {
                perp3x = perpx - perp2x;
                perp3y = perpy - perp2y;
                dist = Math.sqrt(perp3x * perp3x + perp3y * perp3y);
                perp3x /= dist;
                perp3y /= dist;
                perp3x *= width;
                perp3y *= width;
                verts.push(p2x - perp3x, p2y - perp3y);
                verts.push(r, g, b, alpha);
                verts.push(p2x + perp3x, p2y + perp3y);
                verts.push(r, g, b, alpha);
                verts.push(p2x - perp3x, p2y - perp3y);
                verts.push(r, g, b, alpha);
                indexCount++;
            } else {
                verts.push(px, py);
                verts.push(r, g, b, alpha);
                verts.push(p2x - (px - p2x), p2y - (py - p2y));
                verts.push(r, g, b, alpha);
            }
        }
        p1x = points[(length - 2) * 2];
        p1y = points[(length - 2) * 2 + 1];
        p2x = points[(length - 1) * 2];
        p2y = points[(length - 1) * 2 + 1];
        perpx = -(p1y - p2y);
        perpy = p1x - p2x;
        dist = Math.sqrt(perpx * perpx + perpy * perpy);
        perpx /= dist;
        perpy /= dist;
        perpx *= width;
        perpy *= width;
        verts.push(p2x - perpx, p2y - perpy);
        verts.push(r, g, b, alpha);
        verts.push(p2x + perpx, p2y + perpy);
        verts.push(r, g, b, alpha);
        indices.push(indexStart);
        for (i = 0; i < indexCount; i++) {
            indices.push(indexStart++);
        }
        indices.push(indexStart - 1);
    };
    PIXI.WebGLGraphics.buildComplexPoly = function(graphicsData, webGLData) {
        var points = graphicsData.points.slice();
        if (points.length < 6) return;
        var indices = webGLData.indices;
        webGLData.points = points;
        webGLData.alpha = graphicsData.fillAlpha;
        webGLData.color = PIXI.hex2rgb(graphicsData.fillColor);
        var minX = Infinity;
        var maxX = -Infinity;
        var minY = Infinity;
        var maxY = -Infinity;
        var x, y;
        for (var i = 0; i < points.length; i += 2) {
            x = points[i];
            y = points[i + 1];
            minX = x < minX ? x : minX;
            maxX = x > maxX ? x : maxX;
            minY = y < minY ? y : minY;
            maxY = y > maxY ? y : maxY;
        }
        points.push(minX, minY, maxX, minY, maxX, maxY, minX, maxY);
        var length = points.length / 2;
        for (i = 0; i < length; i++) {
            indices.push(i);
        }
    };
    PIXI.WebGLGraphics.buildPoly = function(graphicsData, webGLData) {
        var points = graphicsData.points;
        if (points.length < 6) return;
        var verts = webGLData.points;
        var indices = webGLData.indices;
        var length = points.length / 2;
        var color = PIXI.hex2rgb(graphicsData.fillColor);
        var alpha = graphicsData.fillAlpha;
        var r = color[0] * alpha;
        var g = color[1] * alpha;
        var b = color[2] * alpha;
        var triangles = PIXI.PolyK.Triangulate(points);
        if (!triangles) return false;
        var vertPos = verts.length / 6;
        var i = 0;
        for (i = 0; i < triangles.length; i += 3) {
            indices.push(triangles[i] + vertPos);
            indices.push(triangles[i] + vertPos);
            indices.push(triangles[i + 1] + vertPos);
            indices.push(triangles[i + 2] + vertPos);
            indices.push(triangles[i + 2] + vertPos);
        }
        for (i = 0; i < length; i++) {
            verts.push(points[i * 2], points[i * 2 + 1], r, g, b, alpha);
        }
        return true;
    };
    PIXI.WebGLGraphics.graphicsDataPool = [];
    PIXI.WebGLGraphicsData = function(gl) {
        this.gl = gl;
        this.color = [ 0, 0, 0 ];
        this.points = [];
        this.indices = [];
        this.lastIndex = 0;
        this.buffer = gl.createBuffer();
        this.indexBuffer = gl.createBuffer();
        this.mode = 1;
        this.alpha = 1;
        this.dirty = true;
    };
    PIXI.WebGLGraphicsData.prototype.reset = function() {
        this.points = [];
        this.indices = [];
        this.lastIndex = 0;
    };
    PIXI.WebGLGraphicsData.prototype.upload = function() {
        var gl = this.gl;
        this.glPoints = new PIXI.Float32Array(this.points);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.glPoints, gl.STATIC_DRAW);
        this.glIndicies = new PIXI.Uint16Array(this.indices);
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.glIndicies, gl.STATIC_DRAW);
        this.dirty = false;
    };
    PIXI.glContexts = [];
    PIXI.instances = [];
    PIXI.WebGLRenderer = function(width, height, options) {
        if (options) {
            for (var i in PIXI.defaultRenderOptions) {
                if (typeof options[i] === "undefined") options[i] = PIXI.defaultRenderOptions[i];
            }
        } else {
            options = PIXI.defaultRenderOptions;
        }
        if (!PIXI.defaultRenderer) {
            PIXI.sayHello("webGL");
            PIXI.defaultRenderer = this;
        }
        this.type = PIXI.WEBGL_RENDERER;
        this.resolution = options.resolution;
        this.transparent = options.transparent;
        this.autoResize = options.autoResize || false;
        this.preserveDrawingBuffer = options.preserveDrawingBuffer;
        this.clearBeforeRender = options.clearBeforeRender;
        this.width = width || 800;
        this.height = height || 600;
        this.view = options.view || document.createElement("canvas");
        this.contextLostBound = this.handleContextLost.bind(this);
        this.contextRestoredBound = this.handleContextRestored.bind(this);
        this.view.addEventListener("webglcontextlost", this.contextLostBound, false);
        this.view.addEventListener("webglcontextrestored", this.contextRestoredBound, false);
        this._contextOptions = {
            alpha: this.transparent,
            antialias: options.antialias,
            premultipliedAlpha: this.transparent && this.transparent !== "notMultiplied",
            stencil: true,
            preserveDrawingBuffer: options.preserveDrawingBuffer
        };
        this.projection = new PIXI.Point();
        this.offset = new PIXI.Point(0, 0);
        this.shaderManager = new PIXI.WebGLShaderManager();
        this.spriteBatch = new PIXI.WebGLSpriteBatch();
        this.maskManager = new PIXI.WebGLMaskManager();
        this.filterManager = new PIXI.WebGLFilterManager();
        this.stencilManager = new PIXI.WebGLStencilManager();
        this.blendModeManager = new PIXI.WebGLBlendModeManager();
        this.renderSession = {};
        this.renderSession.gl = this.gl;
        this.renderSession.drawCount = 0;
        this.renderSession.shaderManager = this.shaderManager;
        this.renderSession.maskManager = this.maskManager;
        this.renderSession.filterManager = this.filterManager;
        this.renderSession.blendModeManager = this.blendModeManager;
        this.renderSession.spriteBatch = this.spriteBatch;
        this.renderSession.stencilManager = this.stencilManager;
        this.renderSession.renderer = this;
        this.renderSession.resolution = this.resolution;
        this.initContext();
        this.mapBlendModes();
    };
    PIXI.WebGLRenderer.prototype.constructor = PIXI.WebGLRenderer;
    PIXI.WebGLRenderer.prototype.initContext = function() {
        var gl = this.view.getContext("webgl", this._contextOptions) || this.view.getContext("experimental-webgl", this._contextOptions);
        this.gl = gl;
        if (!gl) {
            throw new Error("This browser does not support webGL. Try using the canvas renderer");
        }
        this.glContextId = gl.id = PIXI.WebGLRenderer.glContextId++;
        PIXI.glContexts[this.glContextId] = gl;
        PIXI.instances[this.glContextId] = this;
        gl.disable(gl.DEPTH_TEST);
        gl.disable(gl.CULL_FACE);
        gl.enable(gl.BLEND);
        this.shaderManager.setContext(gl);
        this.spriteBatch.setContext(gl);
        this.maskManager.setContext(gl);
        this.filterManager.setContext(gl);
        this.blendModeManager.setContext(gl);
        this.stencilManager.setContext(gl);
        this.renderSession.gl = this.gl;
        this.resize(this.width, this.height);
    };
    PIXI.WebGLRenderer.prototype.render = function(stage) {
        if (this.contextLost) return;
        if (this.__stage !== stage) {
            if (stage.interactive) stage.interactionManager.removeEvents();
            this.__stage = stage;
        }
        stage.updateTransform();
        var gl = this.gl;
        if (stage._interactive) {
            if (!stage._interactiveEventsAdded) {
                stage._interactiveEventsAdded = true;
                stage.interactionManager.setTarget(this);
            }
        } else {
            if (stage._interactiveEventsAdded) {
                stage._interactiveEventsAdded = false;
                stage.interactionManager.setTarget(this);
            }
        }
        gl.viewport(0, 0, this.width, this.height);
        gl.bindFramebuffer(gl.FRAMEBUFFER, null);
        if (this.clearBeforeRender) {
            if (this.transparent) {
                gl.clearColor(0, 0, 0, 0);
            } else {
                gl.clearColor(stage.backgroundColorSplit[0], stage.backgroundColorSplit[1], stage.backgroundColorSplit[2], 1);
            }
            gl.clear(gl.COLOR_BUFFER_BIT);
        }
        this.renderDisplayObject(stage, this.projection);
    };
    PIXI.WebGLRenderer.prototype.renderDisplayObject = function(displayObject, projection, buffer) {
        this.renderSession.blendModeManager.setBlendMode(PIXI.blendModes.NORMAL);
        this.renderSession.drawCount = 0;
        this.renderSession.projection = projection;
        this.renderSession.offset = this.offset;
        this.spriteBatch.begin(this.renderSession);
        this.filterManager.begin(this.renderSession, buffer);
        displayObject._renderWebGL(this.renderSession);
        this.spriteBatch.end();
    };
    PIXI.WebGLRenderer.prototype.resize = function(width, height) {
        this.width = width * this.resolution;
        this.height = height * this.resolution;
        this.view.width = this.width;
        this.view.height = this.height;
        if (this.autoResize) {
            this.view.style.width = this.width / this.resolution + "px";
            this.view.style.height = this.height / this.resolution + "px";
        }
        this.gl.viewport(0, 0, this.width, this.height);
        this.projection.x = this.width / 2 / this.resolution;
        this.projection.y = -this.height / 2 / this.resolution;
    };
    PIXI.WebGLRenderer.prototype.updateTexture = function(texture) {
        if (!texture.hasLoaded) return;
        var gl = this.gl;
        if (!texture._glTextures[gl.id]) texture._glTextures[gl.id] = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_2D, texture._glTextures[gl.id]);
        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultipliedAlpha);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texture.scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);
        if (!texture._powerOf2) {
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
        } else {
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
        }
        texture._dirty[gl.id] = false;
        return texture._glTextures[gl.id];
    };
    PIXI.WebGLRenderer.prototype.handleContextLost = function(event) {
        event.preventDefault();
        this.contextLost = true;
    };
    PIXI.WebGLRenderer.prototype.handleContextRestored = function() {
        this.initContext();
        for (var key in PIXI.TextureCache) {
            var texture = PIXI.TextureCache[key].baseTexture;
            texture._glTextures = [];
        }
        this.contextLost = false;
    };
    PIXI.WebGLRenderer.prototype.destroy = function() {
        this.view.removeEventListener("webglcontextlost", this.contextLostBound);
        this.view.removeEventListener("webglcontextrestored", this.contextRestoredBound);
        PIXI.glContexts[this.glContextId] = null;
        this.projection = null;
        this.offset = null;
        this.shaderManager.destroy();
        this.spriteBatch.destroy();
        this.maskManager.destroy();
        this.filterManager.destroy();
        this.shaderManager = null;
        this.spriteBatch = null;
        this.maskManager = null;
        this.filterManager = null;
        this.gl = null;
        this.renderSession = null;
    };
    PIXI.WebGLRenderer.prototype.mapBlendModes = function() {
        var gl = this.gl;
        if (!PIXI.blendModesWebGL) {
            PIXI.blendModesWebGL = [];
            PIXI.blendModesWebGL[PIXI.blendModes.NORMAL] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.ADD] = [ gl.SRC_ALPHA, gl.DST_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.MULTIPLY] = [ gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.SCREEN] = [ gl.SRC_ALPHA, gl.ONE ];
            PIXI.blendModesWebGL[PIXI.blendModes.OVERLAY] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.DARKEN] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.LIGHTEN] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.COLOR_DODGE] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.COLOR_BURN] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.HARD_LIGHT] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.SOFT_LIGHT] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.DIFFERENCE] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.EXCLUSION] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.HUE] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.SATURATION] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.COLOR] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
            PIXI.blendModesWebGL[PIXI.blendModes.LUMINOSITY] = [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ];
        }
    };
    PIXI.WebGLRenderer.glContextId = 0;
    PIXI.WebGLBlendModeManager = function() {
        this.currentBlendMode = 99999;
    };
    PIXI.WebGLBlendModeManager.prototype.constructor = PIXI.WebGLBlendModeManager;
    PIXI.WebGLBlendModeManager.prototype.setContext = function(gl) {
        this.gl = gl;
    };
    PIXI.WebGLBlendModeManager.prototype.setBlendMode = function(blendMode) {
        if (this.currentBlendMode === blendMode) return false;
        this.currentBlendMode = blendMode;
        var blendModeWebGL = PIXI.blendModesWebGL[this.currentBlendMode];
        this.gl.blendFunc(blendModeWebGL[0], blendModeWebGL[1]);
        return true;
    };
    PIXI.WebGLBlendModeManager.prototype.destroy = function() {
        this.gl = null;
    };
    PIXI.WebGLMaskManager = function() {};
    PIXI.WebGLMaskManager.prototype.constructor = PIXI.WebGLMaskManager;
    PIXI.WebGLMaskManager.prototype.setContext = function(gl) {
        this.gl = gl;
    };
    PIXI.WebGLMaskManager.prototype.pushMask = function(maskData, renderSession) {
        var gl = renderSession.gl;
        if (maskData.dirty) {
            PIXI.WebGLGraphics.updateGraphics(maskData, gl);
        }
        if (!maskData._webGL[gl.id].data.length) return;
        renderSession.stencilManager.pushStencil(maskData, maskData._webGL[gl.id].data[0], renderSession);
    };
    PIXI.WebGLMaskManager.prototype.popMask = function(maskData, renderSession) {
        var gl = this.gl;
        renderSession.stencilManager.popStencil(maskData, maskData._webGL[gl.id].data[0], renderSession);
    };
    PIXI.WebGLMaskManager.prototype.destroy = function() {
        this.gl = null;
    };
    PIXI.WebGLStencilManager = function() {
        this.stencilStack = [];
        this.reverse = true;
        this.count = 0;
    };
    PIXI.WebGLStencilManager.prototype.setContext = function(gl) {
        this.gl = gl;
    };
    PIXI.WebGLStencilManager.prototype.pushStencil = function(graphics, webGLData, renderSession) {
        var gl = this.gl;
        this.bindGraphics(graphics, webGLData, renderSession);
        if (this.stencilStack.length === 0) {
            gl.enable(gl.STENCIL_TEST);
            gl.clear(gl.STENCIL_BUFFER_BIT);
            this.reverse = true;
            this.count = 0;
        }
        this.stencilStack.push(webGLData);
        var level = this.count;
        gl.colorMask(false, false, false, false);
        gl.stencilFunc(gl.ALWAYS, 0, 255);
        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INVERT);
        if (webGLData.mode === 1) {
            gl.drawElements(gl.TRIANGLE_FAN, webGLData.indices.length - 4, gl.UNSIGNED_SHORT, 0);
            if (this.reverse) {
                gl.stencilFunc(gl.EQUAL, 255 - level, 255);
                gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);
            } else {
                gl.stencilFunc(gl.EQUAL, level, 255);
                gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);
            }
            gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (webGLData.indices.length - 4) * 2);
            if (this.reverse) {
                gl.stencilFunc(gl.EQUAL, 255 - (level + 1), 255);
            } else {
                gl.stencilFunc(gl.EQUAL, level + 1, 255);
            }
            this.reverse = !this.reverse;
        } else {
            if (!this.reverse) {
                gl.stencilFunc(gl.EQUAL, 255 - level, 255);
                gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);
            } else {
                gl.stencilFunc(gl.EQUAL, level, 255);
                gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);
            }
            gl.drawElements(gl.TRIANGLE_STRIP, webGLData.indices.length, gl.UNSIGNED_SHORT, 0);
            if (!this.reverse) {
                gl.stencilFunc(gl.EQUAL, 255 - (level + 1), 255);
            } else {
                gl.stencilFunc(gl.EQUAL, level + 1, 255);
            }
        }
        gl.colorMask(true, true, true, true);
        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);
        this.count++;
    };
    PIXI.WebGLStencilManager.prototype.bindGraphics = function(graphics, webGLData, renderSession) {
        this._currentGraphics = graphics;
        var gl = this.gl;
        var projection = renderSession.projection, offset = renderSession.offset, shader;
        if (webGLData.mode === 1) {
            shader = renderSession.shaderManager.complexPrimitiveShader;
            renderSession.shaderManager.setShader(shader);
            gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));
            gl.uniform2f(shader.projectionVector, projection.x, -projection.y);
            gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);
            gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));
            gl.uniform3fv(shader.color, webGLData.color);
            gl.uniform1f(shader.alpha, graphics.worldAlpha * webGLData.alpha);
            gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);
            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 2, 0);
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);
        } else {
            shader = renderSession.shaderManager.primitiveShader;
            renderSession.shaderManager.setShader(shader);
            gl.uniformMatrix3fv(shader.translationMatrix, false, graphics.worldTransform.toArray(true));
            gl.uniform2f(shader.projectionVector, projection.x, -projection.y);
            gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);
            gl.uniform3fv(shader.tintColor, PIXI.hex2rgb(graphics.tint));
            gl.uniform1f(shader.alpha, graphics.worldAlpha);
            gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);
            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);
            gl.vertexAttribPointer(shader.colorAttribute, 4, gl.FLOAT, false, 4 * 6, 2 * 4);
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, webGLData.indexBuffer);
        }
    };
    PIXI.WebGLStencilManager.prototype.popStencil = function(graphics, webGLData, renderSession) {
        var gl = this.gl;
        this.stencilStack.pop();
        this.count--;
        if (this.stencilStack.length === 0) {
            gl.disable(gl.STENCIL_TEST);
        } else {
            var level = this.count;
            this.bindGraphics(graphics, webGLData, renderSession);
            gl.colorMask(false, false, false, false);
            if (webGLData.mode === 1) {
                this.reverse = !this.reverse;
                if (this.reverse) {
                    gl.stencilFunc(gl.EQUAL, 255 - (level + 1), 255);
                    gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);
                } else {
                    gl.stencilFunc(gl.EQUAL, level + 1, 255);
                    gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);
                }
                gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (webGLData.indices.length - 4) * 2);
                gl.stencilFunc(gl.ALWAYS, 0, 255);
                gl.stencilOp(gl.KEEP, gl.KEEP, gl.INVERT);
                gl.drawElements(gl.TRIANGLE_FAN, webGLData.indices.length - 4, gl.UNSIGNED_SHORT, 0);
                if (!this.reverse) {
                    gl.stencilFunc(gl.EQUAL, 255 - level, 255);
                } else {
                    gl.stencilFunc(gl.EQUAL, level, 255);
                }
            } else {
                if (!this.reverse) {
                    gl.stencilFunc(gl.EQUAL, 255 - (level + 1), 255);
                    gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);
                } else {
                    gl.stencilFunc(gl.EQUAL, level + 1, 255);
                    gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);
                }
                gl.drawElements(gl.TRIANGLE_STRIP, webGLData.indices.length, gl.UNSIGNED_SHORT, 0);
                if (!this.reverse) {
                    gl.stencilFunc(gl.EQUAL, 255 - level, 255);
                } else {
                    gl.stencilFunc(gl.EQUAL, level, 255);
                }
            }
            gl.colorMask(true, true, true, true);
            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);
        }
    };
    PIXI.WebGLStencilManager.prototype.destroy = function() {
        this.stencilStack = null;
        this.gl = null;
    };
    PIXI.WebGLShaderManager = function() {
        this.maxAttibs = 10;
        this.attribState = [];
        this.tempAttribState = [];
        for (var i = 0; i < this.maxAttibs; i++) {
            this.attribState[i] = false;
        }
        this.stack = [];
    };
    PIXI.WebGLShaderManager.prototype.constructor = PIXI.WebGLShaderManager;
    PIXI.WebGLShaderManager.prototype.setContext = function(gl) {
        this.gl = gl;
        this.primitiveShader = new PIXI.PrimitiveShader(gl);
        this.complexPrimitiveShader = new PIXI.ComplexPrimitiveShader(gl);
        this.defaultShader = new PIXI.PixiShader(gl);
        this.fastShader = new PIXI.PixiFastShader(gl);
        this.stripShader = new PIXI.StripShader(gl);
        this.setShader(this.defaultShader);
    };
    PIXI.WebGLShaderManager.prototype.setAttribs = function(attribs) {
        var i;
        for (i = 0; i < this.tempAttribState.length; i++) {
            this.tempAttribState[i] = false;
        }
        for (i = 0; i < attribs.length; i++) {
            var attribId = attribs[i];
            this.tempAttribState[attribId] = true;
        }
        var gl = this.gl;
        for (i = 0; i < this.attribState.length; i++) {
            if (this.attribState[i] !== this.tempAttribState[i]) {
                this.attribState[i] = this.tempAttribState[i];
                if (this.tempAttribState[i]) {
                    gl.enableVertexAttribArray(i);
                } else {
                    gl.disableVertexAttribArray(i);
                }
            }
        }
    };
    PIXI.WebGLShaderManager.prototype.setShader = function(shader) {
        if (this._currentId === shader._UID) return false;
        this._currentId = shader._UID;
        this.currentShader = shader;
        this.gl.useProgram(shader.program);
        this.setAttribs(shader.attributes);
        return true;
    };
    PIXI.WebGLShaderManager.prototype.destroy = function() {
        this.attribState = null;
        this.tempAttribState = null;
        this.primitiveShader.destroy();
        this.complexPrimitiveShader.destroy();
        this.defaultShader.destroy();
        this.fastShader.destroy();
        this.stripShader.destroy();
        this.gl = null;
    };
    PIXI.WebGLSpriteBatch = function() {
        this.vertSize = 6;
        this.size = 2e3;
        var numVerts = this.size * 4 * this.vertSize;
        var numIndices = this.size * 6;
        this.vertices = new PIXI.Float32Array(numVerts);
        this.indices = new PIXI.Uint16Array(numIndices);
        this.lastIndexCount = 0;
        for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {
            this.indices[i + 0] = j + 0;
            this.indices[i + 1] = j + 1;
            this.indices[i + 2] = j + 2;
            this.indices[i + 3] = j + 0;
            this.indices[i + 4] = j + 2;
            this.indices[i + 5] = j + 3;
        }
        this.drawing = false;
        this.currentBatchSize = 0;
        this.currentBaseTexture = null;
        this.dirty = true;
        this.textures = [];
        this.blendModes = [];
        this.shaders = [];
        this.sprites = [];
        this.defaultShader = new PIXI.AbstractFilter([ "precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}" ]);
    };
    PIXI.WebGLSpriteBatch.prototype.setContext = function(gl) {
        this.gl = gl;
        this.vertexBuffer = gl.createBuffer();
        this.indexBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);
        this.currentBlendMode = 99999;
        var shader = new PIXI.PixiShader(gl);
        shader.fragmentSrc = this.defaultShader.fragmentSrc;
        shader.uniforms = {};
        shader.init();
        this.defaultShader.shaders[gl.id] = shader;
    };
    PIXI.WebGLSpriteBatch.prototype.begin = function(renderSession) {
        this.renderSession = renderSession;
        this.shader = this.renderSession.shaderManager.defaultShader;
        this.start();
    };
    PIXI.WebGLSpriteBatch.prototype.end = function() {
        this.flush();
    };
    PIXI.WebGLSpriteBatch.prototype.render = function(sprite) {
        var texture = sprite.texture;
        if (this.currentBatchSize >= this.size) {
            this.flush();
            this.currentBaseTexture = texture.baseTexture;
        }
        var uvs = texture._uvs;
        if (!uvs) return;
        var alpha = sprite.worldAlpha;
        var tint = sprite.tint;
        var verticies = this.vertices;
        var aX = sprite.anchor.x;
        var aY = sprite.anchor.y;
        var w0, w1, h0, h1;
        if (texture.trim) {
            var trim = texture.trim;
            w1 = trim.x - aX * trim.width;
            w0 = w1 + texture.crop.width;
            h1 = trim.y - aY * trim.height;
            h0 = h1 + texture.crop.height;
        } else {
            w0 = texture.frame.width * (1 - aX);
            w1 = texture.frame.width * -aX;
            h0 = texture.frame.height * (1 - aY);
            h1 = texture.frame.height * -aY;
        }
        var index = this.currentBatchSize * 4 * this.vertSize;
        var resolution = texture.baseTexture.resolution;
        var worldTransform = sprite.worldTransform;
        var a = worldTransform.a / resolution;
        var b = worldTransform.b / resolution;
        var c = worldTransform.c / resolution;
        var d = worldTransform.d / resolution;
        var tx = worldTransform.tx;
        var ty = worldTransform.ty;
        verticies[index++] = a * w1 + c * h1 + tx;
        verticies[index++] = d * h1 + b * w1 + ty;
        verticies[index++] = uvs.x0;
        verticies[index++] = uvs.y0;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        verticies[index++] = a * w0 + c * h1 + tx;
        verticies[index++] = d * h1 + b * w0 + ty;
        verticies[index++] = uvs.x1;
        verticies[index++] = uvs.y1;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        verticies[index++] = a * w0 + c * h0 + tx;
        verticies[index++] = d * h0 + b * w0 + ty;
        verticies[index++] = uvs.x2;
        verticies[index++] = uvs.y2;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        verticies[index++] = a * w1 + c * h0 + tx;
        verticies[index++] = d * h0 + b * w1 + ty;
        verticies[index++] = uvs.x3;
        verticies[index++] = uvs.y3;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        this.sprites[this.currentBatchSize++] = sprite;
    };
    PIXI.WebGLSpriteBatch.prototype.renderTilingSprite = function(tilingSprite) {
        var texture = tilingSprite.tilingTexture;
        if (this.currentBatchSize >= this.size) {
            this.flush();
            this.currentBaseTexture = texture.baseTexture;
        }
        if (!tilingSprite._uvs) tilingSprite._uvs = new PIXI.TextureUvs();
        var uvs = tilingSprite._uvs;
        tilingSprite.tilePosition.x %= texture.baseTexture.width * tilingSprite.tileScaleOffset.x;
        tilingSprite.tilePosition.y %= texture.baseTexture.height * tilingSprite.tileScaleOffset.y;
        var offsetX = tilingSprite.tilePosition.x / (texture.baseTexture.width * tilingSprite.tileScaleOffset.x);
        var offsetY = tilingSprite.tilePosition.y / (texture.baseTexture.height * tilingSprite.tileScaleOffset.y);
        var scaleX = tilingSprite.width / texture.baseTexture.width / (tilingSprite.tileScale.x * tilingSprite.tileScaleOffset.x);
        var scaleY = tilingSprite.height / texture.baseTexture.height / (tilingSprite.tileScale.y * tilingSprite.tileScaleOffset.y);
        uvs.x0 = 0 - offsetX;
        uvs.y0 = 0 - offsetY;
        uvs.x1 = 1 * scaleX - offsetX;
        uvs.y1 = 0 - offsetY;
        uvs.x2 = 1 * scaleX - offsetX;
        uvs.y2 = 1 * scaleY - offsetY;
        uvs.x3 = 0 - offsetX;
        uvs.y3 = 1 * scaleY - offsetY;
        var alpha = tilingSprite.worldAlpha;
        var tint = tilingSprite.tint;
        var verticies = this.vertices;
        var width = tilingSprite.width;
        var height = tilingSprite.height;
        var aX = tilingSprite.anchor.x;
        var aY = tilingSprite.anchor.y;
        var w0 = width * (1 - aX);
        var w1 = width * -aX;
        var h0 = height * (1 - aY);
        var h1 = height * -aY;
        var index = this.currentBatchSize * 4 * this.vertSize;
        var resolution = texture.baseTexture.resolution;
        var worldTransform = tilingSprite.worldTransform;
        var a = worldTransform.a / resolution;
        var b = worldTransform.b / resolution;
        var c = worldTransform.c / resolution;
        var d = worldTransform.d / resolution;
        var tx = worldTransform.tx;
        var ty = worldTransform.ty;
        verticies[index++] = a * w1 + c * h1 + tx;
        verticies[index++] = d * h1 + b * w1 + ty;
        verticies[index++] = uvs.x0;
        verticies[index++] = uvs.y0;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        verticies[index++] = a * w0 + c * h1 + tx;
        verticies[index++] = d * h1 + b * w0 + ty;
        verticies[index++] = uvs.x1;
        verticies[index++] = uvs.y1;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        verticies[index++] = a * w0 + c * h0 + tx;
        verticies[index++] = d * h0 + b * w0 + ty;
        verticies[index++] = uvs.x2;
        verticies[index++] = uvs.y2;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        verticies[index++] = a * w1 + c * h0 + tx;
        verticies[index++] = d * h0 + b * w1 + ty;
        verticies[index++] = uvs.x3;
        verticies[index++] = uvs.y3;
        verticies[index++] = alpha;
        verticies[index++] = tint;
        this.sprites[this.currentBatchSize++] = tilingSprite;
    };
    PIXI.WebGLSpriteBatch.prototype.flush = function() {
        if (this.currentBatchSize === 0) return;
        var gl = this.gl;
        var shader;
        if (this.dirty) {
            this.dirty = false;
            gl.activeTexture(gl.TEXTURE0);
            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
            shader = this.defaultShader.shaders[gl.id];
            var stride = this.vertSize * 4;
            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);
            gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, stride, 2 * 4);
            gl.vertexAttribPointer(shader.colorAttribute, 2, gl.FLOAT, false, stride, 4 * 4);
        }
        if (this.currentBatchSize > this.size * .5) {
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);
        } else {
            var view = this.vertices.subarray(0, this.currentBatchSize * 4 * this.vertSize);
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);
        }
        var nextTexture, nextBlendMode, nextShader;
        var batchSize = 0;
        var start = 0;
        var currentBaseTexture = null;
        var currentBlendMode = this.renderSession.blendModeManager.currentBlendMode;
        var currentShader = null;
        var blendSwap = false;
        var shaderSwap = false;
        var sprite;
        for (var i = 0, j = this.currentBatchSize; i < j; i++) {
            sprite = this.sprites[i];
            nextTexture = sprite.texture.baseTexture;
            nextBlendMode = sprite.blendMode;
            nextShader = sprite.shader || this.defaultShader;
            blendSwap = currentBlendMode !== nextBlendMode;
            shaderSwap = currentShader !== nextShader;
            if (currentBaseTexture !== nextTexture || blendSwap || shaderSwap) {
                this.renderBatch(currentBaseTexture, batchSize, start);
                start = i;
                batchSize = 0;
                currentBaseTexture = nextTexture;
                if (blendSwap) {
                    currentBlendMode = nextBlendMode;
                    this.renderSession.blendModeManager.setBlendMode(currentBlendMode);
                }
                if (shaderSwap) {
                    currentShader = nextShader;
                    shader = currentShader.shaders[gl.id];
                    if (!shader) {
                        shader = new PIXI.PixiShader(gl);
                        shader.fragmentSrc = currentShader.fragmentSrc;
                        shader.uniforms = currentShader.uniforms;
                        shader.init();
                        currentShader.shaders[gl.id] = shader;
                    }
                    this.renderSession.shaderManager.setShader(shader);
                    if (shader.dirty) shader.syncUniforms();
                    var projection = this.renderSession.projection;
                    gl.uniform2f(shader.projectionVector, projection.x, projection.y);
                    var offsetVector = this.renderSession.offset;
                    gl.uniform2f(shader.offsetVector, offsetVector.x, offsetVector.y);
                }
            }
            batchSize++;
        }
        this.renderBatch(currentBaseTexture, batchSize, start);
        this.currentBatchSize = 0;
    };
    PIXI.WebGLSpriteBatch.prototype.renderBatch = function(texture, size, startIndex) {
        if (size === 0) return;
        var gl = this.gl;
        if (texture._dirty[gl.id]) {
            this.renderSession.renderer.updateTexture(texture);
        } else {
            gl.bindTexture(gl.TEXTURE_2D, texture._glTextures[gl.id]);
        }
        gl.drawElements(gl.TRIANGLES, size * 6, gl.UNSIGNED_SHORT, startIndex * 6 * 2);
        this.renderSession.drawCount++;
    };
    PIXI.WebGLSpriteBatch.prototype.stop = function() {
        this.flush();
        this.dirty = true;
    };
    PIXI.WebGLSpriteBatch.prototype.start = function() {
        this.dirty = true;
    };
    PIXI.WebGLSpriteBatch.prototype.destroy = function() {
        this.vertices = null;
        this.indices = null;
        this.gl.deleteBuffer(this.vertexBuffer);
        this.gl.deleteBuffer(this.indexBuffer);
        this.currentBaseTexture = null;
        this.gl = null;
    };
    PIXI.WebGLFastSpriteBatch = function(gl) {
        this.vertSize = 10;
        this.maxSize = 6e3;
        this.size = this.maxSize;
        var numVerts = this.size * 4 * this.vertSize;
        var numIndices = this.maxSize * 6;
        this.vertices = new PIXI.Float32Array(numVerts);
        this.indices = new PIXI.Uint16Array(numIndices);
        this.vertexBuffer = null;
        this.indexBuffer = null;
        this.lastIndexCount = 0;
        for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {
            this.indices[i + 0] = j + 0;
            this.indices[i + 1] = j + 1;
            this.indices[i + 2] = j + 2;
            this.indices[i + 3] = j + 0;
            this.indices[i + 4] = j + 2;
            this.indices[i + 5] = j + 3;
        }
        this.drawing = false;
        this.currentBatchSize = 0;
        this.currentBaseTexture = null;
        this.currentBlendMode = 0;
        this.renderSession = null;
        this.shader = null;
        this.matrix = null;
        this.setContext(gl);
    };
    PIXI.WebGLFastSpriteBatch.prototype.constructor = PIXI.WebGLFastSpriteBatch;
    PIXI.WebGLFastSpriteBatch.prototype.setContext = function(gl) {
        this.gl = gl;
        this.vertexBuffer = gl.createBuffer();
        this.indexBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);
    };
    PIXI.WebGLFastSpriteBatch.prototype.begin = function(spriteBatch, renderSession) {
        this.renderSession = renderSession;
        this.shader = this.renderSession.shaderManager.fastShader;
        this.matrix = spriteBatch.worldTransform.toArray(true);
        this.start();
    };
    PIXI.WebGLFastSpriteBatch.prototype.end = function() {
        this.flush();
    };
    PIXI.WebGLFastSpriteBatch.prototype.render = function(spriteBatch) {
        var children = spriteBatch.children;
        var sprite = children[0];
        if (!sprite.texture._uvs) return;
        this.currentBaseTexture = sprite.texture.baseTexture;
        if (sprite.blendMode !== this.renderSession.blendModeManager.currentBlendMode) {
            this.flush();
            this.renderSession.blendModeManager.setBlendMode(sprite.blendMode);
        }
        for (var i = 0, j = children.length; i < j; i++) {
            this.renderSprite(children[i]);
        }
        this.flush();
    };
    PIXI.WebGLFastSpriteBatch.prototype.renderSprite = function(sprite) {
        if (!sprite.visible) return;
        if (sprite.texture.baseTexture !== this.currentBaseTexture) {
            this.flush();
            this.currentBaseTexture = sprite.texture.baseTexture;
            if (!sprite.texture._uvs) return;
        }
        var uvs, verticies = this.vertices, width, height, w0, w1, h0, h1, index;
        uvs = sprite.texture._uvs;
        width = sprite.texture.frame.width;
        height = sprite.texture.frame.height;
        if (sprite.texture.trim) {
            var trim = sprite.texture.trim;
            w1 = trim.x - sprite.anchor.x * trim.width;
            w0 = w1 + sprite.texture.crop.width;
            h1 = trim.y - sprite.anchor.y * trim.height;
            h0 = h1 + sprite.texture.crop.height;
        } else {
            w0 = sprite.texture.frame.width * (1 - sprite.anchor.x);
            w1 = sprite.texture.frame.width * -sprite.anchor.x;
            h0 = sprite.texture.frame.height * (1 - sprite.anchor.y);
            h1 = sprite.texture.frame.height * -sprite.anchor.y;
        }
        index = this.currentBatchSize * 4 * this.vertSize;
        verticies[index++] = w1;
        verticies[index++] = h1;
        verticies[index++] = sprite.position.x;
        verticies[index++] = sprite.position.y;
        verticies[index++] = sprite.scale.x;
        verticies[index++] = sprite.scale.y;
        verticies[index++] = sprite.rotation;
        verticies[index++] = uvs.x0;
        verticies[index++] = uvs.y1;
        verticies[index++] = sprite.alpha;
        verticies[index++] = w0;
        verticies[index++] = h1;
        verticies[index++] = sprite.position.x;
        verticies[index++] = sprite.position.y;
        verticies[index++] = sprite.scale.x;
        verticies[index++] = sprite.scale.y;
        verticies[index++] = sprite.rotation;
        verticies[index++] = uvs.x1;
        verticies[index++] = uvs.y1;
        verticies[index++] = sprite.alpha;
        verticies[index++] = w0;
        verticies[index++] = h0;
        verticies[index++] = sprite.position.x;
        verticies[index++] = sprite.position.y;
        verticies[index++] = sprite.scale.x;
        verticies[index++] = sprite.scale.y;
        verticies[index++] = sprite.rotation;
        verticies[index++] = uvs.x2;
        verticies[index++] = uvs.y2;
        verticies[index++] = sprite.alpha;
        verticies[index++] = w1;
        verticies[index++] = h0;
        verticies[index++] = sprite.position.x;
        verticies[index++] = sprite.position.y;
        verticies[index++] = sprite.scale.x;
        verticies[index++] = sprite.scale.y;
        verticies[index++] = sprite.rotation;
        verticies[index++] = uvs.x3;
        verticies[index++] = uvs.y3;
        verticies[index++] = sprite.alpha;
        this.currentBatchSize++;
        if (this.currentBatchSize >= this.size) {
            this.flush();
        }
    };
    PIXI.WebGLFastSpriteBatch.prototype.flush = function() {
        if (this.currentBatchSize === 0) return;
        var gl = this.gl;
        if (!this.currentBaseTexture._glTextures[gl.id]) this.renderSession.renderer.updateTexture(this.currentBaseTexture, gl);
        gl.bindTexture(gl.TEXTURE_2D, this.currentBaseTexture._glTextures[gl.id]);
        if (this.currentBatchSize > this.size * .5) {
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertices);
        } else {
            var view = this.vertices.subarray(0, this.currentBatchSize * 4 * this.vertSize);
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);
        }
        gl.drawElements(gl.TRIANGLES, this.currentBatchSize * 6, gl.UNSIGNED_SHORT, 0);
        this.currentBatchSize = 0;
        this.renderSession.drawCount++;
    };
    PIXI.WebGLFastSpriteBatch.prototype.stop = function() {
        this.flush();
    };
    PIXI.WebGLFastSpriteBatch.prototype.start = function() {
        var gl = this.gl;
        gl.activeTexture(gl.TEXTURE0);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
        var projection = this.renderSession.projection;
        gl.uniform2f(this.shader.projectionVector, projection.x, projection.y);
        gl.uniformMatrix3fv(this.shader.uMatrix, false, this.matrix);
        var stride = this.vertSize * 4;
        gl.vertexAttribPointer(this.shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);
        gl.vertexAttribPointer(this.shader.aPositionCoord, 2, gl.FLOAT, false, stride, 2 * 4);
        gl.vertexAttribPointer(this.shader.aScale, 2, gl.FLOAT, false, stride, 4 * 4);
        gl.vertexAttribPointer(this.shader.aRotation, 1, gl.FLOAT, false, stride, 6 * 4);
        gl.vertexAttribPointer(this.shader.aTextureCoord, 2, gl.FLOAT, false, stride, 7 * 4);
        gl.vertexAttribPointer(this.shader.colorAttribute, 1, gl.FLOAT, false, stride, 9 * 4);
    };
    PIXI.WebGLFilterManager = function() {
        this.filterStack = [];
        this.offsetX = 0;
        this.offsetY = 0;
    };
    PIXI.WebGLFilterManager.prototype.constructor = PIXI.WebGLFilterManager;
    PIXI.WebGLFilterManager.prototype.setContext = function(gl) {
        this.gl = gl;
        this.texturePool = [];
        this.initShaderBuffers();
    };
    PIXI.WebGLFilterManager.prototype.begin = function(renderSession, buffer) {
        this.renderSession = renderSession;
        this.defaultShader = renderSession.shaderManager.defaultShader;
        var projection = this.renderSession.projection;
        this.width = projection.x * 2;
        this.height = -projection.y * 2;
        this.buffer = buffer;
    };
    PIXI.WebGLFilterManager.prototype.pushFilter = function(filterBlock) {
        var gl = this.gl;
        var projection = this.renderSession.projection;
        var offset = this.renderSession.offset;
        filterBlock._filterArea = filterBlock.target.filterArea || filterBlock.target.getBounds();
        this.filterStack.push(filterBlock);
        var filter = filterBlock.filterPasses[0];
        this.offsetX += filterBlock._filterArea.x;
        this.offsetY += filterBlock._filterArea.y;
        var texture = this.texturePool.pop();
        if (!texture) {
            texture = new PIXI.FilterTexture(this.gl, this.width, this.height);
        } else {
            texture.resize(this.width, this.height);
        }
        gl.bindTexture(gl.TEXTURE_2D, texture.texture);
        var filterArea = filterBlock._filterArea;
        var padding = filter.padding;
        filterArea.x -= padding;
        filterArea.y -= padding;
        filterArea.width += padding * 2;
        filterArea.height += padding * 2;
        if (filterArea.x < 0) filterArea.x = 0;
        if (filterArea.width > this.width) filterArea.width = this.width;
        if (filterArea.y < 0) filterArea.y = 0;
        if (filterArea.height > this.height) filterArea.height = this.height;
        gl.bindFramebuffer(gl.FRAMEBUFFER, texture.frameBuffer);
        gl.viewport(0, 0, filterArea.width, filterArea.height);
        projection.x = filterArea.width / 2;
        projection.y = -filterArea.height / 2;
        offset.x = -filterArea.x;
        offset.y = -filterArea.y;
        gl.colorMask(true, true, true, true);
        gl.clearColor(0, 0, 0, 0);
        gl.clear(gl.COLOR_BUFFER_BIT);
        filterBlock._glFilterTexture = texture;
    };
    PIXI.WebGLFilterManager.prototype.popFilter = function() {
        var gl = this.gl;
        var filterBlock = this.filterStack.pop();
        var filterArea = filterBlock._filterArea;
        var texture = filterBlock._glFilterTexture;
        var projection = this.renderSession.projection;
        var offset = this.renderSession.offset;
        if (filterBlock.filterPasses.length > 1) {
            gl.viewport(0, 0, filterArea.width, filterArea.height);
            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
            this.vertexArray[0] = 0;
            this.vertexArray[1] = filterArea.height;
            this.vertexArray[2] = filterArea.width;
            this.vertexArray[3] = filterArea.height;
            this.vertexArray[4] = 0;
            this.vertexArray[5] = 0;
            this.vertexArray[6] = filterArea.width;
            this.vertexArray[7] = 0;
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexArray);
            gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);
            this.uvArray[2] = filterArea.width / this.width;
            this.uvArray[5] = filterArea.height / this.height;
            this.uvArray[6] = filterArea.width / this.width;
            this.uvArray[7] = filterArea.height / this.height;
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.uvArray);
            var inputTexture = texture;
            var outputTexture = this.texturePool.pop();
            if (!outputTexture) outputTexture = new PIXI.FilterTexture(this.gl, this.width, this.height);
            outputTexture.resize(this.width, this.height);
            gl.bindFramebuffer(gl.FRAMEBUFFER, outputTexture.frameBuffer);
            gl.clear(gl.COLOR_BUFFER_BIT);
            gl.disable(gl.BLEND);
            for (var i = 0; i < filterBlock.filterPasses.length - 1; i++) {
                var filterPass = filterBlock.filterPasses[i];
                gl.bindFramebuffer(gl.FRAMEBUFFER, outputTexture.frameBuffer);
                gl.activeTexture(gl.TEXTURE0);
                gl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);
                this.applyFilterPass(filterPass, filterArea, filterArea.width, filterArea.height);
                var temp = inputTexture;
                inputTexture = outputTexture;
                outputTexture = temp;
            }
            gl.enable(gl.BLEND);
            texture = inputTexture;
            this.texturePool.push(outputTexture);
        }
        var filter = filterBlock.filterPasses[filterBlock.filterPasses.length - 1];
        this.offsetX -= filterArea.x;
        this.offsetY -= filterArea.y;
        var sizeX = this.width;
        var sizeY = this.height;
        var offsetX = 0;
        var offsetY = 0;
        var buffer = this.buffer;
        if (this.filterStack.length === 0) {
            gl.colorMask(true, true, true, true);
        } else {
            var currentFilter = this.filterStack[this.filterStack.length - 1];
            filterArea = currentFilter._filterArea;
            sizeX = filterArea.width;
            sizeY = filterArea.height;
            offsetX = filterArea.x;
            offsetY = filterArea.y;
            buffer = currentFilter._glFilterTexture.frameBuffer;
        }
        projection.x = sizeX / 2;
        projection.y = -sizeY / 2;
        offset.x = offsetX;
        offset.y = offsetY;
        filterArea = filterBlock._filterArea;
        var x = filterArea.x - offsetX;
        var y = filterArea.y - offsetY;
        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
        this.vertexArray[0] = x;
        this.vertexArray[1] = y + filterArea.height;
        this.vertexArray[2] = x + filterArea.width;
        this.vertexArray[3] = y + filterArea.height;
        this.vertexArray[4] = x;
        this.vertexArray[5] = y;
        this.vertexArray[6] = x + filterArea.width;
        this.vertexArray[7] = y;
        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexArray);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);
        this.uvArray[2] = filterArea.width / this.width;
        this.uvArray[5] = filterArea.height / this.height;
        this.uvArray[6] = filterArea.width / this.width;
        this.uvArray[7] = filterArea.height / this.height;
        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.uvArray);
        gl.viewport(0, 0, sizeX, sizeY);
        gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);
        gl.activeTexture(gl.TEXTURE0);
        gl.bindTexture(gl.TEXTURE_2D, texture.texture);
        this.applyFilterPass(filter, filterArea, sizeX, sizeY);
        this.texturePool.push(texture);
        filterBlock._glFilterTexture = null;
    };
    PIXI.WebGLFilterManager.prototype.applyFilterPass = function(filter, filterArea, width, height) {
        var gl = this.gl;
        var shader = filter.shaders[gl.id];
        if (!shader) {
            shader = new PIXI.PixiShader(gl);
            shader.fragmentSrc = filter.fragmentSrc;
            shader.uniforms = filter.uniforms;
            shader.init();
            filter.shaders[gl.id] = shader;
        }
        this.renderSession.shaderManager.setShader(shader);
        gl.uniform2f(shader.projectionVector, width / 2, -height / 2);
        gl.uniform2f(shader.offsetVector, 0, 0);
        if (filter.uniforms.dimensions) {
            filter.uniforms.dimensions.value[0] = this.width;
            filter.uniforms.dimensions.value[1] = this.height;
            filter.uniforms.dimensions.value[2] = this.vertexArray[0];
            filter.uniforms.dimensions.value[3] = this.vertexArray[5];
        }
        shader.syncUniforms();
        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
        gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);
        gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);
        gl.vertexAttribPointer(shader.colorAttribute, 2, gl.FLOAT, false, 0, 0);
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);
        this.renderSession.drawCount++;
    };
    PIXI.WebGLFilterManager.prototype.initShaderBuffers = function() {
        var gl = this.gl;
        this.vertexBuffer = gl.createBuffer();
        this.uvBuffer = gl.createBuffer();
        this.colorBuffer = gl.createBuffer();
        this.indexBuffer = gl.createBuffer();
        this.vertexArray = new PIXI.Float32Array([ 0, 0, 1, 0, 0, 1, 1, 1 ]);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.vertexArray, gl.STATIC_DRAW);
        this.uvArray = new PIXI.Float32Array([ 0, 0, 1, 0, 0, 1, 1, 1 ]);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.uvArray, gl.STATIC_DRAW);
        this.colorArray = new PIXI.Float32Array([ 1, 16777215, 1, 16777215, 1, 16777215, 1, 16777215 ]);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.colorArray, gl.STATIC_DRAW);
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([ 0, 1, 2, 1, 3, 2 ]), gl.STATIC_DRAW);
    };
    PIXI.WebGLFilterManager.prototype.destroy = function() {
        var gl = this.gl;
        this.filterStack = null;
        this.offsetX = 0;
        this.offsetY = 0;
        for (var i = 0; i < this.texturePool.length; i++) {
            this.texturePool[i].destroy();
        }
        this.texturePool = null;
        gl.deleteBuffer(this.vertexBuffer);
        gl.deleteBuffer(this.uvBuffer);
        gl.deleteBuffer(this.colorBuffer);
        gl.deleteBuffer(this.indexBuffer);
    };
    PIXI.FilterTexture = function(gl, width, height, scaleMode) {
        this.gl = gl;
        this.frameBuffer = gl.createFramebuffer();
        this.texture = gl.createTexture();
        scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;
        gl.bindTexture(gl.TEXTURE_2D, this.texture);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, scaleMode === PIXI.scaleModes.LINEAR ? gl.LINEAR : gl.NEAREST);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);
        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);
        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);
        this.renderBuffer = gl.createRenderbuffer();
        gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBuffer);
        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.renderBuffer);
        this.resize(width, height);
    };
    PIXI.FilterTexture.prototype.constructor = PIXI.FilterTexture;
    PIXI.FilterTexture.prototype.clear = function() {
        var gl = this.gl;
        gl.clearColor(0, 0, 0, 0);
        gl.clear(gl.COLOR_BUFFER_BIT);
    };
    PIXI.FilterTexture.prototype.resize = function(width, height) {
        if (this.width === width && this.height === height) return;
        this.width = width;
        this.height = height;
        var gl = this.gl;
        gl.bindTexture(gl.TEXTURE_2D, this.texture);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
        gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBuffer);
        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);
    };
    PIXI.FilterTexture.prototype.destroy = function() {
        var gl = this.gl;
        gl.deleteFramebuffer(this.frameBuffer);
        gl.deleteTexture(this.texture);
        this.frameBuffer = null;
        this.texture = null;
    };
    PIXI.CanvasBuffer = function(width, height) {
        this.width = width;
        this.height = height;
        this.canvas = document.createElement("canvas");
        this.context = this.canvas.getContext("2d");
        this.canvas.width = width;
        this.canvas.height = height;
    };
    PIXI.CanvasBuffer.prototype.constructor = PIXI.CanvasBuffer;
    PIXI.CanvasBuffer.prototype.clear = function() {
        this.context.setTransform(1, 0, 0, 1, 0, 0);
        this.context.clearRect(0, 0, this.width, this.height);
    };
    PIXI.CanvasBuffer.prototype.resize = function(width, height) {
        this.width = this.canvas.width = width;
        this.height = this.canvas.height = height;
    };
    PIXI.CanvasMaskManager = function() {};
    PIXI.CanvasMaskManager.prototype.constructor = PIXI.CanvasMaskManager;
    PIXI.CanvasMaskManager.prototype.pushMask = function(maskData, renderSession) {
        var context = renderSession.context;
        context.save();
        var cacheAlpha = maskData.alpha;
        var transform = maskData.worldTransform;
        var resolution = renderSession.resolution;
        context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);
        PIXI.CanvasGraphics.renderGraphicsMask(maskData, context);
        context.clip();
        maskData.worldAlpha = cacheAlpha;
    };
    PIXI.CanvasMaskManager.prototype.popMask = function(renderSession) {
        renderSession.context.restore();
    };
    PIXI.CanvasTinter = function() {};
    PIXI.CanvasTinter.getTintedTexture = function(sprite, color) {
        var texture = sprite.texture;
        color = PIXI.CanvasTinter.roundColor(color);
        var stringColor = "#" + ("00000" + (color | 0).toString(16)).substr(-6);
        texture.tintCache = texture.tintCache || {};
        if (texture.tintCache[stringColor]) return texture.tintCache[stringColor];
        var canvas = PIXI.CanvasTinter.canvas || document.createElement("canvas");
        PIXI.CanvasTinter.tintMethod(texture, color, canvas);
        if (PIXI.CanvasTinter.convertTintToImage) {
            var tintImage = new Image();
            tintImage.src = canvas.toDataURL();
            texture.tintCache[stringColor] = tintImage;
        } else {
            texture.tintCache[stringColor] = canvas;
            PIXI.CanvasTinter.canvas = null;
        }
        return canvas;
    };
    PIXI.CanvasTinter.tintWithMultiply = function(texture, color, canvas) {
        var context = canvas.getContext("2d");
        var crop = texture.crop;
        canvas.width = crop.width;
        canvas.height = crop.height;
        context.fillStyle = "#" + ("00000" + (color | 0).toString(16)).substr(-6);
        context.fillRect(0, 0, crop.width, crop.height);
        context.globalCompositeOperation = "multiply";
        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);
        context.globalCompositeOperation = "destination-atop";
        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);
    };
    PIXI.CanvasTinter.tintWithOverlay = function(texture, color, canvas) {
        var context = canvas.getContext("2d");
        var crop = texture.crop;
        canvas.width = crop.width;
        canvas.height = crop.height;
        context.globalCompositeOperation = "copy";
        context.fillStyle = "#" + ("00000" + (color | 0).toString(16)).substr(-6);
        context.fillRect(0, 0, crop.width, crop.height);
        context.globalCompositeOperation = "destination-atop";
        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);
    };
    PIXI.CanvasTinter.tintWithPerPixel = function(texture, color, canvas) {
        var context = canvas.getContext("2d");
        var crop = texture.crop;
        canvas.width = crop.width;
        canvas.height = crop.height;
        context.globalCompositeOperation = "copy";
        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);
        var rgbValues = PIXI.hex2rgb(color);
        var r = rgbValues[0], g = rgbValues[1], b = rgbValues[2];
        var pixelData = context.getImageData(0, 0, crop.width, crop.height);
        var pixels = pixelData.data;
        for (var i = 0; i < pixels.length; i += 4) {
            pixels[i + 0] *= r;
            pixels[i + 1] *= g;
            pixels[i + 2] *= b;
        }
        context.putImageData(pixelData, 0, 0);
    };
    PIXI.CanvasTinter.roundColor = function(color) {
        var step = PIXI.CanvasTinter.cacheStepsPerColorChannel;
        var rgbValues = PIXI.hex2rgb(color);
        rgbValues[0] = Math.min(255, rgbValues[0] / step * step);
        rgbValues[1] = Math.min(255, rgbValues[1] / step * step);
        rgbValues[2] = Math.min(255, rgbValues[2] / step * step);
        return PIXI.rgb2hex(rgbValues);
    };
    PIXI.CanvasTinter.cacheStepsPerColorChannel = 8;
    PIXI.CanvasTinter.convertTintToImage = false;
    PIXI.CanvasTinter.canUseMultiply = PIXI.canUseNewCanvasBlendModes();
    PIXI.CanvasTinter.tintMethod = PIXI.CanvasTinter.canUseMultiply ? PIXI.CanvasTinter.tintWithMultiply : PIXI.CanvasTinter.tintWithPerPixel;
    PIXI.CanvasRenderer = function(width, height, options) {
        if (options) {
            for (var i in PIXI.defaultRenderOptions) {
                if (typeof options[i] === "undefined") options[i] = PIXI.defaultRenderOptions[i];
            }
        } else {
            options = PIXI.defaultRenderOptions;
        }
        if (!PIXI.defaultRenderer) {
            PIXI.sayHello("Canvas");
            PIXI.defaultRenderer = this;
        }
        this.type = PIXI.CANVAS_RENDERER;
        this.resolution = options.resolution;
        this.clearBeforeRender = options.clearBeforeRender;
        this.transparent = options.transparent;
        this.autoResize = options.autoResize || false;
        this.width = width || 800;
        this.height = height || 600;
        this.width *= this.resolution;
        this.height *= this.resolution;
        this.view = options.view || document.createElement("canvas");
        this.context = this.view.getContext("2d", {
            alpha: this.transparent
        });
        this.refresh = true;
        this.view.width = this.width * this.resolution;
        this.view.height = this.height * this.resolution;
        this.count = 0;
        this.maskManager = new PIXI.CanvasMaskManager();
        this.renderSession = {
            context: this.context,
            maskManager: this.maskManager,
            scaleMode: null,
            smoothProperty: null,
            roundPixels: false
        };
        this.mapBlendModes();
        this.resize(width, height);
        if ("imageSmoothingEnabled" in this.context) this.renderSession.smoothProperty = "imageSmoothingEnabled"; else if ("webkitImageSmoothingEnabled" in this.context) this.renderSession.smoothProperty = "webkitImageSmoothingEnabled"; else if ("mozImageSmoothingEnabled" in this.context) this.renderSession.smoothProperty = "mozImageSmoothingEnabled"; else if ("oImageSmoothingEnabled" in this.context) this.renderSession.smoothProperty = "oImageSmoothingEnabled"; else if ("msImageSmoothingEnabled" in this.context) this.renderSession.smoothProperty = "msImageSmoothingEnabled";
    };
    PIXI.CanvasRenderer.prototype.constructor = PIXI.CanvasRenderer;
    PIXI.CanvasRenderer.prototype.render = function(stage) {
        stage.updateTransform();
        this.context.setTransform(1, 0, 0, 1, 0, 0);
        this.context.globalAlpha = 1;
        this.renderSession.currentBlendMode = PIXI.blendModes.NORMAL;
        this.context.globalCompositeOperation = PIXI.blendModesCanvas[PIXI.blendModes.NORMAL];
        if (navigator.isCocoonJS && this.view.screencanvas) {
            this.context.fillStyle = "black";
            this.context.clear();
        }
        if (this.clearBeforeRender) {
            if (this.transparent) {
                this.context.clearRect(0, 0, this.width, this.height);
            } else {
                this.context.fillStyle = stage.backgroundColorString;
                this.context.fillRect(0, 0, this.width, this.height);
            }
        }
        this.renderDisplayObject(stage);
        if (stage.interactive) {
            if (!stage._interactiveEventsAdded) {
                stage._interactiveEventsAdded = true;
                stage.interactionManager.setTarget(this);
            }
        }
    };
    PIXI.CanvasRenderer.prototype.destroy = function(removeView) {
        if (typeof removeView === "undefined") {
            removeView = true;
        }
        if (removeView && this.view.parent) {
            this.view.parent.removeChild(this.view);
        }
        this.view = null;
        this.context = null;
        this.maskManager = null;
        this.renderSession = null;
    };
    PIXI.CanvasRenderer.prototype.resize = function(width, height) {
        this.width = width * this.resolution;
        this.height = height * this.resolution;
        this.view.width = this.width;
        this.view.height = this.height;
        if (this.autoResize) {
            this.view.style.width = this.width / this.resolution + "px";
            this.view.style.height = this.height / this.resolution + "px";
        }
    };
    PIXI.CanvasRenderer.prototype.renderDisplayObject = function(displayObject, context) {
        this.renderSession.context = context || this.context;
        this.renderSession.resolution = this.resolution;
        displayObject._renderCanvas(this.renderSession);
    };
    PIXI.CanvasRenderer.prototype.mapBlendModes = function() {
        if (!PIXI.blendModesCanvas) {
            PIXI.blendModesCanvas = [];
            if (PIXI.canUseNewCanvasBlendModes()) {
                PIXI.blendModesCanvas[PIXI.blendModes.NORMAL] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.ADD] = "lighter";
                PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY] = "multiply";
                PIXI.blendModesCanvas[PIXI.blendModes.SCREEN] = "screen";
                PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY] = "overlay";
                PIXI.blendModesCanvas[PIXI.blendModes.DARKEN] = "darken";
                PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN] = "lighten";
                PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE] = "color-dodge";
                PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN] = "color-burn";
                PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT] = "hard-light";
                PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT] = "soft-light";
                PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE] = "difference";
                PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION] = "exclusion";
                PIXI.blendModesCanvas[PIXI.blendModes.HUE] = "hue";
                PIXI.blendModesCanvas[PIXI.blendModes.SATURATION] = "saturation";
                PIXI.blendModesCanvas[PIXI.blendModes.COLOR] = "color";
                PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY] = "luminosity";
            } else {
                PIXI.blendModesCanvas[PIXI.blendModes.NORMAL] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.ADD] = "lighter";
                PIXI.blendModesCanvas[PIXI.blendModes.MULTIPLY] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.SCREEN] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.OVERLAY] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.DARKEN] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.LIGHTEN] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.COLOR_DODGE] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.COLOR_BURN] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.HARD_LIGHT] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.SOFT_LIGHT] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.DIFFERENCE] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.EXCLUSION] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.HUE] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.SATURATION] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.COLOR] = "source-over";
                PIXI.blendModesCanvas[PIXI.blendModes.LUMINOSITY] = "source-over";
            }
        }
    };
    PIXI.CanvasGraphics = function() {};
    PIXI.CanvasGraphics.renderGraphics = function(graphics, context) {
        var worldAlpha = graphics.worldAlpha;
        var color = "";
        for (var i = 0; i < graphics.graphicsData.length; i++) {
            var data = graphics.graphicsData[i];
            var shape = data.shape;
            context.strokeStyle = color = "#" + ("00000" + (data.lineColor | 0).toString(16)).substr(-6);
            context.lineWidth = data.lineWidth;
            if (data.type === PIXI.Graphics.POLY) {
                context.beginPath();
                var points = shape.points;
                context.moveTo(points[0], points[1]);
                for (var j = 1; j < points.length / 2; j++) {
                    context.lineTo(points[j * 2], points[j * 2 + 1]);
                }
                if (shape.closed) {
                    context.lineTo(points[0], points[1]);
                }
                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {
                    context.closePath();
                }
                if (data.fill) {
                    context.globalAlpha = data.fillAlpha * worldAlpha;
                    context.fillStyle = color = "#" + ("00000" + (data.fillColor | 0).toString(16)).substr(-6);
                    context.fill();
                }
                if (data.lineWidth) {
                    context.globalAlpha = data.lineAlpha * worldAlpha;
                    context.stroke();
                }
            } else if (data.type === PIXI.Graphics.RECT) {
                if (data.fillColor || data.fillColor === 0) {
                    context.globalAlpha = data.fillAlpha * worldAlpha;
                    context.fillStyle = color = "#" + ("00000" + (data.fillColor | 0).toString(16)).substr(-6);
                    context.fillRect(shape.x, shape.y, shape.width, shape.height);
                }
                if (data.lineWidth) {
                    context.globalAlpha = data.lineAlpha * worldAlpha;
                    context.strokeRect(shape.x, shape.y, shape.width, shape.height);
                }
            } else if (data.type === PIXI.Graphics.CIRC) {
                context.beginPath();
                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);
                context.closePath();
                if (data.fill) {
                    context.globalAlpha = data.fillAlpha * worldAlpha;
                    context.fillStyle = color = "#" + ("00000" + (data.fillColor | 0).toString(16)).substr(-6);
                    context.fill();
                }
                if (data.lineWidth) {
                    context.globalAlpha = data.lineAlpha * worldAlpha;
                    context.stroke();
                }
            } else if (data.type === PIXI.Graphics.ELIP) {
                var w = shape.width * 2;
                var h = shape.height * 2;
                var x = shape.x - w / 2;
                var y = shape.y - h / 2;
                context.beginPath();
                var kappa = .5522848, ox = w / 2 * kappa, oy = h / 2 * kappa, xe = x + w, ye = y + h, xm = x + w / 2, ym = y + h / 2;
                context.moveTo(x, ym);
                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
                context.closePath();
                if (data.fill) {
                    context.globalAlpha = data.fillAlpha * worldAlpha;
                    context.fillStyle = color = "#" + ("00000" + (data.fillColor | 0).toString(16)).substr(-6);
                    context.fill();
                }
                if (data.lineWidth) {
                    context.globalAlpha = data.lineAlpha * worldAlpha;
                    context.stroke();
                }
            } else if (data.type === PIXI.Graphics.RREC) {
                var rx = shape.x;
                var ry = shape.y;
                var width = shape.width;
                var height = shape.height;
                var radius = shape.radius;
                var maxRadius = Math.min(width, height) / 2 | 0;
                radius = radius > maxRadius ? maxRadius : radius;
                context.beginPath();
                context.moveTo(rx, ry + radius);
                context.lineTo(rx, ry + height - radius);
                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);
                context.lineTo(rx + width - radius, ry + height);
                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);
                context.lineTo(rx + width, ry + radius);
                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);
                context.lineTo(rx + radius, ry);
                context.quadraticCurveTo(rx, ry, rx, ry + radius);
                context.closePath();
                if (data.fillColor || data.fillColor === 0) {
                    context.globalAlpha = data.fillAlpha * worldAlpha;
                    context.fillStyle = color = "#" + ("00000" + (data.fillColor | 0).toString(16)).substr(-6);
                    context.fill();
                }
                if (data.lineWidth) {
                    context.globalAlpha = data.lineAlpha * worldAlpha;
                    context.stroke();
                }
            }
        }
    };
    PIXI.CanvasGraphics.renderGraphicsMask = function(graphics, context) {
        var len = graphics.graphicsData.length;
        if (len === 0) return;
        if (len > 1) {
            len = 1;
            window.console.log("Pixi.js warning: masks in canvas can only mask using the first path in the graphics object");
        }
        for (var i = 0; i < 1; i++) {
            var data = graphics.graphicsData[i];
            var shape = data.shape;
            if (data.type === PIXI.Graphics.POLY) {
                context.beginPath();
                var points = shape.points;
                context.moveTo(points[0], points[1]);
                for (var j = 1; j < points.length / 2; j++) {
                    context.lineTo(points[j * 2], points[j * 2 + 1]);
                }
                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {
                    context.closePath();
                }
            } else if (data.type === PIXI.Graphics.RECT) {
                context.beginPath();
                context.rect(shape.x, shape.y, shape.width, shape.height);
                context.closePath();
            } else if (data.type === PIXI.Graphics.CIRC) {
                context.beginPath();
                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);
                context.closePath();
            } else if (data.type === PIXI.Graphics.ELIP) {
                var w = shape.width * 2;
                var h = shape.height * 2;
                var x = shape.x - w / 2;
                var y = shape.y - h / 2;
                context.beginPath();
                var kappa = .5522848, ox = w / 2 * kappa, oy = h / 2 * kappa, xe = x + w, ye = y + h, xm = x + w / 2, ym = y + h / 2;
                context.moveTo(x, ym);
                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
                context.closePath();
            } else if (data.type === PIXI.Graphics.RREC) {
                var pts = shape.points;
                var rx = pts[0];
                var ry = pts[1];
                var width = pts[2];
                var height = pts[3];
                var radius = pts[4];
                var maxRadius = Math.min(width, height) / 2 | 0;
                radius = radius > maxRadius ? maxRadius : radius;
                context.beginPath();
                context.moveTo(rx, ry + radius);
                context.lineTo(rx, ry + height - radius);
                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);
                context.lineTo(rx + width - radius, ry + height);
                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);
                context.lineTo(rx + width, ry + radius);
                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);
                context.lineTo(rx + radius, ry);
                context.quadraticCurveTo(rx, ry, rx, ry + radius);
                context.closePath();
            }
        }
    };
    PIXI.Graphics = function() {
        PIXI.DisplayObjectContainer.call(this);
        this.renderable = true;
        this.fillAlpha = 1;
        this.lineWidth = 0;
        this.lineColor = 0;
        this.graphicsData = [];
        this.tint = 16777215;
        this.blendMode = PIXI.blendModes.NORMAL;
        this.currentPath = null;
        this._webGL = [];
        this.isMask = false;
        this.boundsPadding = 0;
        this._localBounds = new PIXI.Rectangle(0, 0, 1, 1);
        this.dirty = true;
        this.webGLDirty = false;
        this.cachedSpriteDirty = false;
    };
    PIXI.Graphics.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.Graphics.prototype.constructor = PIXI.Graphics;
    Object.defineProperty(PIXI.Graphics.prototype, "cacheAsBitmap", {
        get: function() {
            return this._cacheAsBitmap;
        },
        set: function(value) {
            this._cacheAsBitmap = value;
            if (this._cacheAsBitmap) {
                this._generateCachedSprite();
            } else {
                this.destroyCachedSprite();
                this.dirty = true;
            }
        }
    });
    PIXI.Graphics.prototype.lineStyle = function(lineWidth, color, alpha) {
        this.lineWidth = lineWidth || 0;
        this.lineColor = color || 0;
        this.lineAlpha = arguments.length < 3 ? 1 : alpha;
        if (this.currentPath) {
            if (this.currentPath.shape.points.length) {
                this.drawShape(new PIXI.Polygon(this.currentPath.shape.points.slice(-2)));
                return this;
            }
            this.currentPath.lineWidth = this.lineWidth;
            this.currentPath.lineColor = this.lineColor;
            this.currentPath.lineAlpha = this.lineAlpha;
        }
        return this;
    };
    PIXI.Graphics.prototype.moveTo = function(x, y) {
        this.drawShape(new PIXI.Polygon([ x, y ]));
        return this;
    };
    PIXI.Graphics.prototype.lineTo = function(x, y) {
        this.currentPath.shape.points.push(x, y);
        this.dirty = true;
        return this;
    };
    PIXI.Graphics.prototype.quadraticCurveTo = function(cpX, cpY, toX, toY) {
        if (this.currentPath) {
            if (this.currentPath.shape.points.length === 0) this.currentPath.shape.points = [ 0, 0 ];
        } else {
            this.moveTo(0, 0);
        }
        var xa, ya, n = 20, points = this.currentPath.shape.points;
        if (points.length === 0) this.moveTo(0, 0);
        var fromX = points[points.length - 2];
        var fromY = points[points.length - 1];
        var j = 0;
        for (var i = 1; i <= n; i++) {
            j = i / n;
            xa = fromX + (cpX - fromX) * j;
            ya = fromY + (cpY - fromY) * j;
            points.push(xa + (cpX + (toX - cpX) * j - xa) * j, ya + (cpY + (toY - cpY) * j - ya) * j);
        }
        this.dirty = true;
        return this;
    };
    PIXI.Graphics.prototype.bezierCurveTo = function(cpX, cpY, cpX2, cpY2, toX, toY) {
        if (this.currentPath) {
            if (this.currentPath.shape.points.length === 0) this.currentPath.shape.points = [ 0, 0 ];
        } else {
            this.moveTo(0, 0);
        }
        var n = 20, dt, dt2, dt3, t2, t3, points = this.currentPath.shape.points;
        var fromX = points[points.length - 2];
        var fromY = points[points.length - 1];
        var j = 0;
        for (var i = 1; i <= n; i++) {
            j = i / n;
            dt = 1 - j;
            dt2 = dt * dt;
            dt3 = dt2 * dt;
            t2 = j * j;
            t3 = t2 * j;
            points.push(dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX, dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY);
        }
        this.dirty = true;
        return this;
    };
    PIXI.Graphics.prototype.arcTo = function(x1, y1, x2, y2, radius) {
        if (this.currentPath) {
            if (this.currentPath.shape.points.length === 0) {
                this.currentPath.shape.points.push(x1, y1);
            }
        } else {
            this.moveTo(x1, y1);
        }
        var points = this.currentPath.shape.points;
        var fromX = points[points.length - 2];
        var fromY = points[points.length - 1];
        var a1 = fromY - y1;
        var b1 = fromX - x1;
        var a2 = y2 - y1;
        var b2 = x2 - x1;
        var mm = Math.abs(a1 * b2 - b1 * a2);
        if (mm < 1e-8 || radius === 0) {
            if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {
                points.push(x1, y1);
            }
        } else {
            var dd = a1 * a1 + b1 * b1;
            var cc = a2 * a2 + b2 * b2;
            var tt = a1 * a2 + b1 * b2;
            var k1 = radius * Math.sqrt(dd) / mm;
            var k2 = radius * Math.sqrt(cc) / mm;
            var j1 = k1 * tt / dd;
            var j2 = k2 * tt / cc;
            var cx = k1 * b2 + k2 * b1;
            var cy = k1 * a2 + k2 * a1;
            var px = b1 * (k2 + j1);
            var py = a1 * (k2 + j1);
            var qx = b2 * (k1 + j2);
            var qy = a2 * (k1 + j2);
            var startAngle = Math.atan2(py - cy, px - cx);
            var endAngle = Math.atan2(qy - cy, qx - cx);
            this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);
        }
        this.dirty = true;
        return this;
    };
    PIXI.Graphics.prototype.arc = function(cx, cy, radius, startAngle, endAngle, anticlockwise) {
        var startX = cx + Math.cos(startAngle) * radius;
        var startY = cy + Math.sin(startAngle) * radius;
        var points = this.currentPath.shape.points;
        if (points.length === 0) {
            this.moveTo(startX, startY);
            points = this.currentPath.shape.points;
        } else if (points[points.length - 2] !== startX || points[points.length - 1] !== startY) {
            points.push(startX, startY);
        }
        if (startAngle === endAngle) return this;
        if (!anticlockwise && endAngle <= startAngle) {
            endAngle += Math.PI * 2;
        } else if (anticlockwise && startAngle <= endAngle) {
            startAngle += Math.PI * 2;
        }
        var sweep = anticlockwise ? (startAngle - endAngle) * -1 : endAngle - startAngle;
        var segs = Math.abs(sweep) / (Math.PI * 2) * 40;
        if (sweep === 0) return this;
        var theta = sweep / (segs * 2);
        var theta2 = theta * 2;
        var cTheta = Math.cos(theta);
        var sTheta = Math.sin(theta);
        var segMinus = segs - 1;
        var remainder = segMinus % 1 / segMinus;
        for (var i = 0; i <= segMinus; i++) {
            var real = i + remainder * i;
            var angle = theta + startAngle + theta2 * real;
            var c = Math.cos(angle);
            var s = -Math.sin(angle);
            points.push((cTheta * c + sTheta * s) * radius + cx, (cTheta * -s + sTheta * c) * radius + cy);
        }
        this.dirty = true;
        return this;
    };
    PIXI.Graphics.prototype.beginFill = function(color, alpha) {
        this.filling = true;
        this.fillColor = color || 0;
        this.fillAlpha = alpha === undefined ? 1 : alpha;
        if (this.currentPath) {
            if (this.currentPath.shape.points.length <= 2) {
                this.currentPath.fill = this.filling;
                this.currentPath.fillColor = this.fillColor;
                this.currentPath.fillAlpha = this.fillAlpha;
            }
        }
        return this;
    };
    PIXI.Graphics.prototype.endFill = function() {
        this.filling = false;
        this.fillColor = null;
        this.fillAlpha = 1;
        return this;
    };
    PIXI.Graphics.prototype.drawRect = function(x, y, width, height) {
        this.drawShape(new PIXI.Rectangle(x, y, width, height));
        return this;
    };
    PIXI.Graphics.prototype.drawRoundedRect = function(x, y, width, height, radius) {
        this.drawShape(new PIXI.RoundedRectangle(x, y, width, height, radius));
        return this;
    };
    PIXI.Graphics.prototype.drawCircle = function(x, y, radius) {
        this.drawShape(new PIXI.Circle(x, y, radius));
        return this;
    };
    PIXI.Graphics.prototype.drawEllipse = function(x, y, width, height) {
        this.drawShape(new PIXI.Ellipse(x, y, width, height));
        return this;
    };
    PIXI.Graphics.prototype.drawPolygon = function(path) {
        if (!(path instanceof Array)) path = Array.prototype.slice.call(arguments);
        this.drawShape(new PIXI.Polygon(path));
        return this;
    };
    PIXI.Graphics.prototype.clear = function() {
        this.lineWidth = 0;
        this.filling = false;
        this.dirty = true;
        this.clearDirty = true;
        this.graphicsData = [];
        return this;
    };
    PIXI.Graphics.prototype.generateTexture = function(resolution, scaleMode) {
        resolution = resolution || 1;
        var bounds = this.getBounds();
        var canvasBuffer = new PIXI.CanvasBuffer(bounds.width * resolution, bounds.height * resolution);
        var texture = PIXI.Texture.fromCanvas(canvasBuffer.canvas, scaleMode);
        texture.baseTexture.resolution = resolution;
        canvasBuffer.context.scale(resolution, resolution);
        canvasBuffer.context.translate(-bounds.x, -bounds.y);
        PIXI.CanvasGraphics.renderGraphics(this, canvasBuffer.context);
        return texture;
    };
    PIXI.Graphics.prototype._renderWebGL = function(renderSession) {
        if (this.visible === false || this.alpha === 0 || this.isMask === true) return;
        if (this._cacheAsBitmap) {
            if (this.dirty || this.cachedSpriteDirty) {
                this._generateCachedSprite();
                this.updateCachedSpriteTexture();
                this.cachedSpriteDirty = false;
                this.dirty = false;
            }
            this._cachedSprite.worldAlpha = this.worldAlpha;
            PIXI.Sprite.prototype._renderWebGL.call(this._cachedSprite, renderSession);
            return;
        } else {
            renderSession.spriteBatch.stop();
            renderSession.blendModeManager.setBlendMode(this.blendMode);
            if (this._mask) renderSession.maskManager.pushMask(this._mask, renderSession);
            if (this._filters) renderSession.filterManager.pushFilter(this._filterBlock);
            if (this.blendMode !== renderSession.spriteBatch.currentBlendMode) {
                renderSession.spriteBatch.currentBlendMode = this.blendMode;
                var blendModeWebGL = PIXI.blendModesWebGL[renderSession.spriteBatch.currentBlendMode];
                renderSession.spriteBatch.gl.blendFunc(blendModeWebGL[0], blendModeWebGL[1]);
            }
            if (this.webGLDirty) {
                this.dirty = true;
                this.webGLDirty = false;
            }
            PIXI.WebGLGraphics.renderGraphics(this, renderSession);
            if (this.children.length) {
                renderSession.spriteBatch.start();
                for (var i = 0, j = this.children.length; i < j; i++) {
                    this.children[i]._renderWebGL(renderSession);
                }
                renderSession.spriteBatch.stop();
            }
            if (this._filters) renderSession.filterManager.popFilter();
            if (this._mask) renderSession.maskManager.popMask(this.mask, renderSession);
            renderSession.drawCount++;
            renderSession.spriteBatch.start();
        }
    };
    PIXI.Graphics.prototype._renderCanvas = function(renderSession) {
        if (this.visible === false || this.alpha === 0 || this.isMask === true) return;
        if (this._cacheAsBitmap) {
            if (this.dirty || this.cachedSpriteDirty) {
                this._generateCachedSprite();
                this.updateCachedSpriteTexture();
                this.cachedSpriteDirty = false;
                this.dirty = false;
            }
            this._cachedSprite.alpha = this.alpha;
            PIXI.Sprite.prototype._renderCanvas.call(this._cachedSprite, renderSession);
            return;
        } else {
            var context = renderSession.context;
            var transform = this.worldTransform;
            if (this.blendMode !== renderSession.currentBlendMode) {
                renderSession.currentBlendMode = this.blendMode;
                context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];
            }
            if (this._mask) {
                renderSession.maskManager.pushMask(this._mask, renderSession);
            }
            var resolution = renderSession.resolution;
            context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);
            PIXI.CanvasGraphics.renderGraphics(this, context);
            for (var i = 0, j = this.children.length; i < j; i++) {
                this.children[i]._renderCanvas(renderSession);
            }
            if (this._mask) {
                renderSession.maskManager.popMask(renderSession);
            }
        }
    };
    PIXI.Graphics.prototype.getBounds = function(matrix) {
        if (this.isMask) return PIXI.EmptyRectangle;
        if (this.dirty) {
            this.updateLocalBounds();
            this.webGLDirty = true;
            this.cachedSpriteDirty = true;
            this.dirty = false;
        }
        var bounds = this._localBounds;
        var w0 = bounds.x;
        var w1 = bounds.width + bounds.x;
        var h0 = bounds.y;
        var h1 = bounds.height + bounds.y;
        var worldTransform = matrix || this.worldTransform;
        var a = worldTransform.a;
        var b = worldTransform.b;
        var c = worldTransform.c;
        var d = worldTransform.d;
        var tx = worldTransform.tx;
        var ty = worldTransform.ty;
        var x1 = a * w1 + c * h1 + tx;
        var y1 = d * h1 + b * w1 + ty;
        var x2 = a * w0 + c * h1 + tx;
        var y2 = d * h1 + b * w0 + ty;
        var x3 = a * w0 + c * h0 + tx;
        var y3 = d * h0 + b * w0 + ty;
        var x4 = a * w1 + c * h0 + tx;
        var y4 = d * h0 + b * w1 + ty;
        var maxX = x1;
        var maxY = y1;
        var minX = x1;
        var minY = y1;
        minX = x2 < minX ? x2 : minX;
        minX = x3 < minX ? x3 : minX;
        minX = x4 < minX ? x4 : minX;
        minY = y2 < minY ? y2 : minY;
        minY = y3 < minY ? y3 : minY;
        minY = y4 < minY ? y4 : minY;
        maxX = x2 > maxX ? x2 : maxX;
        maxX = x3 > maxX ? x3 : maxX;
        maxX = x4 > maxX ? x4 : maxX;
        maxY = y2 > maxY ? y2 : maxY;
        maxY = y3 > maxY ? y3 : maxY;
        maxY = y4 > maxY ? y4 : maxY;
        this._bounds.x = minX;
        this._bounds.width = maxX - minX;
        this._bounds.y = minY;
        this._bounds.height = maxY - minY;
        return this._bounds;
    };
    PIXI.Graphics.prototype.updateLocalBounds = function() {
        var minX = Infinity;
        var maxX = -Infinity;
        var minY = Infinity;
        var maxY = -Infinity;
        if (this.graphicsData.length) {
            var shape, points, x, y, w, h;
            for (var i = 0; i < this.graphicsData.length; i++) {
                var data = this.graphicsData[i];
                var type = data.type;
                var lineWidth = data.lineWidth;
                shape = data.shape;
                if (type === PIXI.Graphics.RECT || type === PIXI.Graphics.RREC) {
                    x = shape.x - lineWidth / 2;
                    y = shape.y - lineWidth / 2;
                    w = shape.width + lineWidth;
                    h = shape.height + lineWidth;
                    minX = x < minX ? x : minX;
                    maxX = x + w > maxX ? x + w : maxX;
                    minY = y < minY ? y : minY;
                    maxY = y + h > maxY ? y + h : maxY;
                } else if (type === PIXI.Graphics.CIRC) {
                    x = shape.x;
                    y = shape.y;
                    w = shape.radius + lineWidth / 2;
                    h = shape.radius + lineWidth / 2;
                    minX = x - w < minX ? x - w : minX;
                    maxX = x + w > maxX ? x + w : maxX;
                    minY = y - h < minY ? y - h : minY;
                    maxY = y + h > maxY ? y + h : maxY;
                } else if (type === PIXI.Graphics.ELIP) {
                    x = shape.x;
                    y = shape.y;
                    w = shape.width + lineWidth / 2;
                    h = shape.height + lineWidth / 2;
                    minX = x - w < minX ? x - w : minX;
                    maxX = x + w > maxX ? x + w : maxX;
                    minY = y - h < minY ? y - h : minY;
                    maxY = y + h > maxY ? y + h : maxY;
                } else {
                    points = shape.points;
                    for (var j = 0; j < points.length; j += 2) {
                        x = points[j];
                        y = points[j + 1];
                        minX = x - lineWidth < minX ? x - lineWidth : minX;
                        maxX = x + lineWidth > maxX ? x + lineWidth : maxX;
                        minY = y - lineWidth < minY ? y - lineWidth : minY;
                        maxY = y + lineWidth > maxY ? y + lineWidth : maxY;
                    }
                }
            }
        } else {
            minX = 0;
            maxX = 0;
            minY = 0;
            maxY = 0;
        }
        var padding = this.boundsPadding;
        this._localBounds.x = minX - padding;
        this._localBounds.width = maxX - minX + padding * 2;
        this._localBounds.y = minY - padding;
        this._localBounds.height = maxY - minY + padding * 2;
    };
    PIXI.Graphics.prototype._generateCachedSprite = function() {
        var bounds = this.getLocalBounds();
        if (!this._cachedSprite) {
            var canvasBuffer = new PIXI.CanvasBuffer(bounds.width, bounds.height);
            var texture = PIXI.Texture.fromCanvas(canvasBuffer.canvas);
            this._cachedSprite = new PIXI.Sprite(texture);
            this._cachedSprite.buffer = canvasBuffer;
            this._cachedSprite.worldTransform = this.worldTransform;
        } else {
            this._cachedSprite.buffer.resize(bounds.width, bounds.height);
        }
        this._cachedSprite.anchor.x = -(bounds.x / bounds.width);
        this._cachedSprite.anchor.y = -(bounds.y / bounds.height);
        this._cachedSprite.buffer.context.translate(-bounds.x, -bounds.y);
        this.worldAlpha = 1;
        PIXI.CanvasGraphics.renderGraphics(this, this._cachedSprite.buffer.context);
        this._cachedSprite.alpha = this.alpha;
    };
    PIXI.Graphics.prototype.updateCachedSpriteTexture = function() {
        var cachedSprite = this._cachedSprite;
        var texture = cachedSprite.texture;
        var canvas = cachedSprite.buffer.canvas;
        texture.baseTexture.width = canvas.width;
        texture.baseTexture.height = canvas.height;
        texture.crop.width = texture.frame.width = canvas.width;
        texture.crop.height = texture.frame.height = canvas.height;
        cachedSprite._width = canvas.width;
        cachedSprite._height = canvas.height;
        texture.baseTexture.dirty();
    };
    PIXI.Graphics.prototype.destroyCachedSprite = function() {
        this._cachedSprite.texture.destroy(true);
        this._cachedSprite = null;
    };
    PIXI.Graphics.prototype.drawShape = function(shape) {
        if (this.currentPath) {
            if (this.currentPath.shape.points.length <= 2) this.graphicsData.pop();
        }
        this.currentPath = null;
        var data = new PIXI.GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, shape);
        this.graphicsData.push(data);
        if (data.type === PIXI.Graphics.POLY) {
            data.shape.closed = this.filling;
            this.currentPath = data;
        }
        this.dirty = true;
        return data;
    };
    PIXI.GraphicsData = function(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, shape) {
        this.lineWidth = lineWidth;
        this.lineColor = lineColor;
        this.lineAlpha = lineAlpha;
        this.fillColor = fillColor;
        this.fillAlpha = fillAlpha;
        this.fill = fill;
        this.shape = shape;
        this.type = shape.type;
    };
    PIXI.Graphics.POLY = 0;
    PIXI.Graphics.RECT = 1;
    PIXI.Graphics.CIRC = 2;
    PIXI.Graphics.ELIP = 3;
    PIXI.Graphics.RREC = 4;
    PIXI.Polygon.prototype.type = PIXI.Graphics.POLY;
    PIXI.Rectangle.prototype.type = PIXI.Graphics.RECT;
    PIXI.Circle.prototype.type = PIXI.Graphics.CIRC;
    PIXI.Ellipse.prototype.type = PIXI.Graphics.ELIP;
    PIXI.RoundedRectangle.prototype.type = PIXI.Graphics.RREC;
    PIXI.Strip = function(texture) {
        PIXI.DisplayObjectContainer.call(this);
        this.texture = texture;
        this.uvs = new PIXI.Float32Array([ 0, 1, 1, 1, 1, 0, 0, 1 ]);
        this.verticies = new PIXI.Float32Array([ 0, 0, 100, 0, 100, 100, 0, 100 ]);
        this.colors = new PIXI.Float32Array([ 1, 1, 1, 1 ]);
        this.indices = new PIXI.Uint16Array([ 0, 1, 2, 3 ]);
        this.dirty = true;
        this.blendMode = PIXI.blendModes.NORMAL;
        this.padding = 0;
    };
    PIXI.Strip.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.Strip.prototype.constructor = PIXI.Strip;
    PIXI.Strip.prototype._renderWebGL = function(renderSession) {
        if (!this.visible || this.alpha <= 0) return;
        renderSession.spriteBatch.stop();
        if (!this._vertexBuffer) this._initWebGL(renderSession);
        renderSession.shaderManager.setShader(renderSession.shaderManager.stripShader);
        this._renderStrip(renderSession);
        renderSession.spriteBatch.start();
    };
    PIXI.Strip.prototype._initWebGL = function(renderSession) {
        var gl = renderSession.gl;
        this._vertexBuffer = gl.createBuffer();
        this._indexBuffer = gl.createBuffer();
        this._uvBuffer = gl.createBuffer();
        this._colorBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.verticies, gl.DYNAMIC_DRAW);
        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.uvs, gl.STATIC_DRAW);
        gl.bindBuffer(gl.ARRAY_BUFFER, this._colorBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, this.colors, gl.STATIC_DRAW);
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);
    };
    PIXI.Strip.prototype._renderStrip = function(renderSession) {
        var gl = renderSession.gl;
        var projection = renderSession.projection, offset = renderSession.offset, shader = renderSession.shaderManager.stripShader;
        renderSession.blendModeManager.setBlendMode(this.blendMode);
        gl.uniformMatrix3fv(shader.translationMatrix, false, this.worldTransform.toArray(true));
        gl.uniform2f(shader.projectionVector, projection.x, -projection.y);
        gl.uniform2f(shader.offsetVector, -offset.x, -offset.y);
        gl.uniform1f(shader.alpha, this.worldAlpha);
        if (!this.dirty) {
            gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.verticies);
            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);
            gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);
            gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);
            gl.activeTexture(gl.TEXTURE0);
            if (this.texture.baseTexture._dirty[gl.id]) {
                renderSession.renderer.updateTexture(this.texture.baseTexture);
            } else {
                gl.bindTexture(gl.TEXTURE_2D, this.texture.baseTexture._glTextures[gl.id]);
            }
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
        } else {
            this.dirty = false;
            gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
            gl.bufferData(gl.ARRAY_BUFFER, this.verticies, gl.STATIC_DRAW);
            gl.vertexAttribPointer(shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);
            gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);
            gl.bufferData(gl.ARRAY_BUFFER, this.uvs, gl.STATIC_DRAW);
            gl.vertexAttribPointer(shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);
            gl.activeTexture(gl.TEXTURE0);
            if (this.texture.baseTexture._dirty[gl.id]) {
                renderSession.renderer.updateTexture(this.texture.baseTexture);
            } else {
                gl.bindTexture(gl.TEXTURE_2D, this.texture.baseTexture._glTextures[gl.id]);
            }
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);
        }
        gl.drawElements(gl.TRIANGLE_STRIP, this.indices.length, gl.UNSIGNED_SHORT, 0);
    };
    PIXI.Strip.prototype._renderCanvas = function(renderSession) {
        var context = renderSession.context;
        var transform = this.worldTransform;
        if (renderSession.roundPixels) {
            context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx | 0, transform.ty | 0);
        } else {
            context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);
        }
        var strip = this;
        var verticies = strip.verticies;
        var uvs = strip.uvs;
        var length = verticies.length / 2;
        this.count++;
        for (var i = 0; i < length - 2; i++) {
            var index = i * 2;
            var x0 = verticies[index], x1 = verticies[index + 2], x2 = verticies[index + 4];
            var y0 = verticies[index + 1], y1 = verticies[index + 3], y2 = verticies[index + 5];
            if (this.padding > 0) {
                var centerX = (x0 + x1 + x2) / 3;
                var centerY = (y0 + y1 + y2) / 3;
                var normX = x0 - centerX;
                var normY = y0 - centerY;
                var dist = Math.sqrt(normX * normX + normY * normY);
                x0 = centerX + normX / dist * (dist + 3);
                y0 = centerY + normY / dist * (dist + 3);
                normX = x1 - centerX;
                normY = y1 - centerY;
                dist = Math.sqrt(normX * normX + normY * normY);
                x1 = centerX + normX / dist * (dist + 3);
                y1 = centerY + normY / dist * (dist + 3);
                normX = x2 - centerX;
                normY = y2 - centerY;
                dist = Math.sqrt(normX * normX + normY * normY);
                x2 = centerX + normX / dist * (dist + 3);
                y2 = centerY + normY / dist * (dist + 3);
            }
            var u0 = uvs[index] * strip.texture.width, u1 = uvs[index + 2] * strip.texture.width, u2 = uvs[index + 4] * strip.texture.width;
            var v0 = uvs[index + 1] * strip.texture.height, v1 = uvs[index + 3] * strip.texture.height, v2 = uvs[index + 5] * strip.texture.height;
            context.save();
            context.beginPath();
            context.moveTo(x0, y0);
            context.lineTo(x1, y1);
            context.lineTo(x2, y2);
            context.closePath();
            context.clip();
            var delta = u0 * v1 + v0 * u2 + u1 * v2 - v1 * u2 - v0 * u1 - u0 * v2;
            var deltaA = x0 * v1 + v0 * x2 + x1 * v2 - v1 * x2 - v0 * x1 - x0 * v2;
            var deltaB = u0 * x1 + x0 * u2 + u1 * x2 - x1 * u2 - x0 * u1 - u0 * x2;
            var deltaC = u0 * v1 * x2 + v0 * x1 * u2 + x0 * u1 * v2 - x0 * v1 * u2 - v0 * u1 * x2 - u0 * x1 * v2;
            var deltaD = y0 * v1 + v0 * y2 + y1 * v2 - v1 * y2 - v0 * y1 - y0 * v2;
            var deltaE = u0 * y1 + y0 * u2 + u1 * y2 - y1 * u2 - y0 * u1 - u0 * y2;
            var deltaF = u0 * v1 * y2 + v0 * y1 * u2 + y0 * u1 * v2 - y0 * v1 * u2 - v0 * u1 * y2 - u0 * y1 * v2;
            context.transform(deltaA / delta, deltaD / delta, deltaB / delta, deltaE / delta, deltaC / delta, deltaF / delta);
            context.drawImage(strip.texture.baseTexture.source, 0, 0);
            context.restore();
        }
    };
    PIXI.Strip.prototype.renderStripFlat = function(strip) {
        var context = this.context;
        var verticies = strip.verticies;
        var length = verticies.length / 2;
        this.count++;
        context.beginPath();
        for (var i = 1; i < length - 2; i++) {
            var index = i * 2;
            var x0 = verticies[index], x1 = verticies[index + 2], x2 = verticies[index + 4];
            var y0 = verticies[index + 1], y1 = verticies[index + 3], y2 = verticies[index + 5];
            context.moveTo(x0, y0);
            context.lineTo(x1, y1);
            context.lineTo(x2, y2);
        }
        context.fillStyle = "#FF0000";
        context.fill();
        context.closePath();
    };
    PIXI.Strip.prototype.onTextureUpdate = function() {
        this.updateFrame = true;
    };
    PIXI.Rope = function(texture, points) {
        PIXI.Strip.call(this, texture);
        this.points = points;
        this.verticies = new PIXI.Float32Array(points.length * 4);
        this.uvs = new PIXI.Float32Array(points.length * 4);
        this.colors = new PIXI.Float32Array(points.length * 2);
        this.indices = new PIXI.Uint16Array(points.length * 2);
        this.refresh();
    };
    PIXI.Rope.prototype = Object.create(PIXI.Strip.prototype);
    PIXI.Rope.prototype.constructor = PIXI.Rope;
    PIXI.Rope.prototype.refresh = function() {
        var points = this.points;
        if (points.length < 1) return;
        var uvs = this.uvs;
        var lastPoint = points[0];
        var indices = this.indices;
        var colors = this.colors;
        this.count -= .2;
        uvs[0] = 0;
        uvs[1] = 0;
        uvs[2] = 0;
        uvs[3] = 1;
        colors[0] = 1;
        colors[1] = 1;
        indices[0] = 0;
        indices[1] = 1;
        var total = points.length, point, index, amount;
        for (var i = 1; i < total; i++) {
            point = points[i];
            index = i * 4;
            amount = i / (total - 1);
            if (i % 2) {
                uvs[index] = amount;
                uvs[index + 1] = 0;
                uvs[index + 2] = amount;
                uvs[index + 3] = 1;
            } else {
                uvs[index] = amount;
                uvs[index + 1] = 0;
                uvs[index + 2] = amount;
                uvs[index + 3] = 1;
            }
            index = i * 2;
            colors[index] = 1;
            colors[index + 1] = 1;
            index = i * 2;
            indices[index] = index;
            indices[index + 1] = index + 1;
            lastPoint = point;
        }
    };
    PIXI.Rope.prototype.updateTransform = function() {
        var points = this.points;
        if (points.length < 1) return;
        var lastPoint = points[0];
        var nextPoint;
        var perp = {
            x: 0,
            y: 0
        };
        this.count -= .2;
        var verticies = this.verticies;
        var total = points.length, point, index, ratio, perpLength, num;
        for (var i = 0; i < total; i++) {
            point = points[i];
            index = i * 4;
            if (i < points.length - 1) {
                nextPoint = points[i + 1];
            } else {
                nextPoint = point;
            }
            perp.y = -(nextPoint.x - lastPoint.x);
            perp.x = nextPoint.y - lastPoint.y;
            ratio = (1 - i / (total - 1)) * 10;
            if (ratio > 1) ratio = 1;
            perpLength = Math.sqrt(perp.x * perp.x + perp.y * perp.y);
            num = this.texture.height / 2;
            perp.x /= perpLength;
            perp.y /= perpLength;
            perp.x *= num;
            perp.y *= num;
            verticies[index] = point.x + perp.x;
            verticies[index + 1] = point.y + perp.y;
            verticies[index + 2] = point.x - perp.x;
            verticies[index + 3] = point.y - perp.y;
            lastPoint = point;
        }
        PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);
    };
    PIXI.Rope.prototype.setTexture = function(texture) {
        this.texture = texture;
    };
    PIXI.TilingSprite = function(texture, width, height) {
        PIXI.Sprite.call(this, texture);
        this._width = width || 100;
        this._height = height || 100;
        this.tileScale = new PIXI.Point(1, 1);
        this.tileScaleOffset = new PIXI.Point(1, 1);
        this.tilePosition = new PIXI.Point(0, 0);
        this.renderable = true;
        this.tint = 16777215;
        this.blendMode = PIXI.blendModes.NORMAL;
    };
    PIXI.TilingSprite.prototype = Object.create(PIXI.Sprite.prototype);
    PIXI.TilingSprite.prototype.constructor = PIXI.TilingSprite;
    Object.defineProperty(PIXI.TilingSprite.prototype, "width", {
        get: function() {
            return this._width;
        },
        set: function(value) {
            this._width = value;
        }
    });
    Object.defineProperty(PIXI.TilingSprite.prototype, "height", {
        get: function() {
            return this._height;
        },
        set: function(value) {
            this._height = value;
        }
    });
    PIXI.TilingSprite.prototype.setTexture = function(texture) {
        if (this.texture === texture) return;
        this.texture = texture;
        this.refreshTexture = true;
        this.cachedTint = 16777215;
    };
    PIXI.TilingSprite.prototype._renderWebGL = function(renderSession) {
        if (this.visible === false || this.alpha === 0) return;
        var i, j;
        if (this._mask) {
            renderSession.spriteBatch.stop();
            renderSession.maskManager.pushMask(this.mask, renderSession);
            renderSession.spriteBatch.start();
        }
        if (this._filters) {
            renderSession.spriteBatch.flush();
            renderSession.filterManager.pushFilter(this._filterBlock);
        }
        if (!this.tilingTexture || this.refreshTexture) {
            this.generateTilingTexture(true);
            if (this.tilingTexture && this.tilingTexture.needsUpdate) {
                PIXI.updateWebGLTexture(this.tilingTexture.baseTexture, renderSession.gl);
                this.tilingTexture.needsUpdate = false;
            }
        } else {
            renderSession.spriteBatch.renderTilingSprite(this);
        }
        for (i = 0, j = this.children.length; i < j; i++) {
            this.children[i]._renderWebGL(renderSession);
        }
        renderSession.spriteBatch.stop();
        if (this._filters) renderSession.filterManager.popFilter();
        if (this._mask) renderSession.maskManager.popMask(this._mask, renderSession);
        renderSession.spriteBatch.start();
    };
    PIXI.TilingSprite.prototype._renderCanvas = function(renderSession) {
        if (this.visible === false || this.alpha === 0) return;
        var context = renderSession.context;
        if (this._mask) {
            renderSession.maskManager.pushMask(this._mask, context);
        }
        context.globalAlpha = this.worldAlpha;
        var transform = this.worldTransform;
        var i, j;
        var resolution = renderSession.resolution;
        context.setTransform(transform.a * resolution, transform.c * resolution, transform.b * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);
        if (!this.__tilePattern || this.refreshTexture) {
            this.generateTilingTexture(false);
            if (this.tilingTexture) {
                this.__tilePattern = context.createPattern(this.tilingTexture.baseTexture.source, "repeat");
            } else {
                return;
            }
        }
        if (this.blendMode !== renderSession.currentBlendMode) {
            renderSession.currentBlendMode = this.blendMode;
            context.globalCompositeOperation = PIXI.blendModesCanvas[renderSession.currentBlendMode];
        }
        var tilePosition = this.tilePosition;
        var tileScale = this.tileScale;
        tilePosition.x %= this.tilingTexture.baseTexture.width;
        tilePosition.y %= this.tilingTexture.baseTexture.height;
        context.scale(tileScale.x, tileScale.y);
        context.translate(tilePosition.x + this.anchor.x * -this._width, tilePosition.y + this.anchor.y * -this._height);
        context.fillStyle = this.__tilePattern;
        context.fillRect(-tilePosition.x, -tilePosition.y, this._width / tileScale.x, this._height / tileScale.y);
        context.scale(1 / tileScale.x, 1 / tileScale.y);
        context.translate(-tilePosition.x + this.anchor.x * this._width, -tilePosition.y + this.anchor.y * this._height);
        if (this._mask) {
            renderSession.maskManager.popMask(renderSession.context);
        }
        for (i = 0, j = this.children.length; i < j; i++) {
            this.children[i]._renderCanvas(renderSession);
        }
    };
    PIXI.TilingSprite.prototype.getBounds = function() {
        var width = this._width;
        var height = this._height;
        var w0 = width * (1 - this.anchor.x);
        var w1 = width * -this.anchor.x;
        var h0 = height * (1 - this.anchor.y);
        var h1 = height * -this.anchor.y;
        var worldTransform = this.worldTransform;
        var a = worldTransform.a;
        var b = worldTransform.b;
        var c = worldTransform.c;
        var d = worldTransform.d;
        var tx = worldTransform.tx;
        var ty = worldTransform.ty;
        var x1 = a * w1 + c * h1 + tx;
        var y1 = d * h1 + b * w1 + ty;
        var x2 = a * w0 + c * h1 + tx;
        var y2 = d * h1 + b * w0 + ty;
        var x3 = a * w0 + c * h0 + tx;
        var y3 = d * h0 + b * w0 + ty;
        var x4 = a * w1 + c * h0 + tx;
        var y4 = d * h0 + b * w1 + ty;
        var maxX = -Infinity;
        var maxY = -Infinity;
        var minX = Infinity;
        var minY = Infinity;
        minX = x1 < minX ? x1 : minX;
        minX = x2 < minX ? x2 : minX;
        minX = x3 < minX ? x3 : minX;
        minX = x4 < minX ? x4 : minX;
        minY = y1 < minY ? y1 : minY;
        minY = y2 < minY ? y2 : minY;
        minY = y3 < minY ? y3 : minY;
        minY = y4 < minY ? y4 : minY;
        maxX = x1 > maxX ? x1 : maxX;
        maxX = x2 > maxX ? x2 : maxX;
        maxX = x3 > maxX ? x3 : maxX;
        maxX = x4 > maxX ? x4 : maxX;
        maxY = y1 > maxY ? y1 : maxY;
        maxY = y2 > maxY ? y2 : maxY;
        maxY = y3 > maxY ? y3 : maxY;
        maxY = y4 > maxY ? y4 : maxY;
        var bounds = this._bounds;
        bounds.x = minX;
        bounds.width = maxX - minX;
        bounds.y = minY;
        bounds.height = maxY - minY;
        this._currentBounds = bounds;
        return bounds;
    };
    PIXI.TilingSprite.prototype.onTextureUpdate = function() {};
    PIXI.TilingSprite.prototype.generateTilingTexture = function(forcePowerOfTwo) {
        if (!this.texture.baseTexture.hasLoaded) return;
        var texture = this.originalTexture || this.texture;
        var frame = texture.frame;
        var targetWidth, targetHeight;
        var isFrame = frame.width !== texture.baseTexture.width || frame.height !== texture.baseTexture.height;
        var newTextureRequired = false;
        if (!forcePowerOfTwo) {
            if (isFrame) {
                targetWidth = frame.width;
                targetHeight = frame.height;
                newTextureRequired = true;
            }
        } else {
            targetWidth = PIXI.getNextPowerOfTwo(frame.width);
            targetHeight = PIXI.getNextPowerOfTwo(frame.height);
            if (frame.width !== targetWidth || frame.height !== targetHeight) newTextureRequired = true;
        }
        if (newTextureRequired) {
            var canvasBuffer;
            if (this.tilingTexture && this.tilingTexture.isTiling) {
                canvasBuffer = this.tilingTexture.canvasBuffer;
                canvasBuffer.resize(targetWidth, targetHeight);
                this.tilingTexture.baseTexture.width = targetWidth;
                this.tilingTexture.baseTexture.height = targetHeight;
                this.tilingTexture.needsUpdate = true;
            } else {
                canvasBuffer = new PIXI.CanvasBuffer(targetWidth, targetHeight);
                this.tilingTexture = PIXI.Texture.fromCanvas(canvasBuffer.canvas);
                this.tilingTexture.canvasBuffer = canvasBuffer;
                this.tilingTexture.isTiling = true;
            }
            canvasBuffer.context.drawImage(texture.baseTexture.source, texture.crop.x, texture.crop.y, texture.crop.width, texture.crop.height, 0, 0, targetWidth, targetHeight);
            this.tileScaleOffset.x = frame.width / targetWidth;
            this.tileScaleOffset.y = frame.height / targetHeight;
        } else {
            if (this.tilingTexture && this.tilingTexture.isTiling) {
                this.tilingTexture.destroy(true);
            }
            this.tileScaleOffset.x = 1;
            this.tileScaleOffset.y = 1;
            this.tilingTexture = texture;
        }
        this.refreshTexture = false;
        this.originalTexture = this.texture;
        this.texture = this.tilingTexture;
        this.tilingTexture.baseTexture._powerOf2 = true;
    };
    var spine = {};
    spine.BoneData = function(name, parent) {
        this.name = name;
        this.parent = parent;
    };
    spine.BoneData.prototype = {
        length: 0,
        x: 0,
        y: 0,
        rotation: 0,
        scaleX: 1,
        scaleY: 1
    };
    spine.SlotData = function(name, boneData) {
        this.name = name;
        this.boneData = boneData;
    };
    spine.SlotData.prototype = {
        r: 1,
        g: 1,
        b: 1,
        a: 1,
        attachmentName: null
    };
    spine.Bone = function(boneData, parent) {
        this.data = boneData;
        this.parent = parent;
        this.setToSetupPose();
    };
    spine.Bone.yDown = false;
    spine.Bone.prototype = {
        x: 0,
        y: 0,
        rotation: 0,
        scaleX: 1,
        scaleY: 1,
        m00: 0,
        m01: 0,
        worldX: 0,
        m10: 0,
        m11: 0,
        worldY: 0,
        worldRotation: 0,
        worldScaleX: 1,
        worldScaleY: 1,
        updateWorldTransform: function(flipX, flipY) {
            var parent = this.parent;
            if (parent != null) {
                this.worldX = this.x * parent.m00 + this.y * parent.m01 + parent.worldX;
                this.worldY = this.x * parent.m10 + this.y * parent.m11 + parent.worldY;
                this.worldScaleX = parent.worldScaleX * this.scaleX;
                this.worldScaleY = parent.worldScaleY * this.scaleY;
                this.worldRotation = parent.worldRotation + this.rotation;
            } else {
                this.worldX = this.x;
                this.worldY = this.y;
                this.worldScaleX = this.scaleX;
                this.worldScaleY = this.scaleY;
                this.worldRotation = this.rotation;
            }
            var radians = this.worldRotation * Math.PI / 180;
            var cos = Math.cos(radians);
            var sin = Math.sin(radians);
            this.m00 = cos * this.worldScaleX;
            this.m10 = sin * this.worldScaleX;
            this.m01 = -sin * this.worldScaleY;
            this.m11 = cos * this.worldScaleY;
            if (flipX) {
                this.m00 = -this.m00;
                this.m01 = -this.m01;
            }
            if (flipY) {
                this.m10 = -this.m10;
                this.m11 = -this.m11;
            }
            if (spine.Bone.yDown) {
                this.m10 = -this.m10;
                this.m11 = -this.m11;
            }
        },
        setToSetupPose: function() {
            var data = this.data;
            this.x = data.x;
            this.y = data.y;
            this.rotation = data.rotation;
            this.scaleX = data.scaleX;
            this.scaleY = data.scaleY;
        }
    };
    spine.Slot = function(slotData, skeleton, bone) {
        this.data = slotData;
        this.skeleton = skeleton;
        this.bone = bone;
        this.setToSetupPose();
    };
    spine.Slot.prototype = {
        r: 1,
        g: 1,
        b: 1,
        a: 1,
        _attachmentTime: 0,
        attachment: null,
        setAttachment: function(attachment) {
            this.attachment = attachment;
            this._attachmentTime = this.skeleton.time;
        },
        setAttachmentTime: function(time) {
            this._attachmentTime = this.skeleton.time - time;
        },
        getAttachmentTime: function() {
            return this.skeleton.time - this._attachmentTime;
        },
        setToSetupPose: function() {
            var data = this.data;
            this.r = data.r;
            this.g = data.g;
            this.b = data.b;
            this.a = data.a;
            var slotDatas = this.skeleton.data.slots;
            for (var i = 0, n = slotDatas.length; i < n; i++) {
                if (slotDatas[i] == data) {
                    this.setAttachment(!data.attachmentName ? null : this.skeleton.getAttachmentBySlotIndex(i, data.attachmentName));
                    break;
                }
            }
        }
    };
    spine.Skin = function(name) {
        this.name = name;
        this.attachments = {};
    };
    spine.Skin.prototype = {
        addAttachment: function(slotIndex, name, attachment) {
            this.attachments[slotIndex + ":" + name] = attachment;
        },
        getAttachment: function(slotIndex, name) {
            return this.attachments[slotIndex + ":" + name];
        },
        _attachAll: function(skeleton, oldSkin) {
            for (var key in oldSkin.attachments) {
                var colon = key.indexOf(":");
                var slotIndex = parseInt(key.substring(0, colon), 10);
                var name = key.substring(colon + 1);
                var slot = skeleton.slots[slotIndex];
                if (slot.attachment && slot.attachment.name == name) {
                    var attachment = this.getAttachment(slotIndex, name);
                    if (attachment) slot.setAttachment(attachment);
                }
            }
        }
    };
    spine.Animation = function(name, timelines, duration) {
        this.name = name;
        this.timelines = timelines;
        this.duration = duration;
    };
    spine.Animation.prototype = {
        apply: function(skeleton, time, loop) {
            if (loop && this.duration) time %= this.duration;
            var timelines = this.timelines;
            for (var i = 0, n = timelines.length; i < n; i++) timelines[i].apply(skeleton, time, 1);
        },
        mix: function(skeleton, time, loop, alpha) {
            if (loop && this.duration) time %= this.duration;
            var timelines = this.timelines;
            for (var i = 0, n = timelines.length; i < n; i++) timelines[i].apply(skeleton, time, alpha);
        }
    };
    spine.binarySearch = function(values, target, step) {
        var low = 0;
        var high = Math.floor(values.length / step) - 2;
        if (!high) return step;
        var current = high >>> 1;
        while (true) {
            if (values[(current + 1) * step] <= target) low = current + 1; else high = current;
            if (low == high) return (low + 1) * step;
            current = low + high >>> 1;
        }
    };
    spine.linearSearch = function(values, target, step) {
        for (var i = 0, last = values.length - step; i <= last; i += step) if (values[i] > target) return i;
        return -1;
    };
    spine.Curves = function(frameCount) {
        this.curves = [];
        this.curves.length = (frameCount - 1) * 6;
    };
    spine.Curves.prototype = {
        setLinear: function(frameIndex) {
            this.curves[frameIndex * 6] = 0;
        },
        setStepped: function(frameIndex) {
            this.curves[frameIndex * 6] = -1;
        },
        setCurve: function(frameIndex, cx1, cy1, cx2, cy2) {
            var subdiv_step = 1 / 10;
            var subdiv_step2 = subdiv_step * subdiv_step;
            var subdiv_step3 = subdiv_step2 * subdiv_step;
            var pre1 = 3 * subdiv_step;
            var pre2 = 3 * subdiv_step2;
            var pre4 = 6 * subdiv_step2;
            var pre5 = 6 * subdiv_step3;
            var tmp1x = -cx1 * 2 + cx2;
            var tmp1y = -cy1 * 2 + cy2;
            var tmp2x = (cx1 - cx2) * 3 + 1;
            var tmp2y = (cy1 - cy2) * 3 + 1;
            var i = frameIndex * 6;
            var curves = this.curves;
            curves[i] = cx1 * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;
            curves[i + 1] = cy1 * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;
            curves[i + 2] = tmp1x * pre4 + tmp2x * pre5;
            curves[i + 3] = tmp1y * pre4 + tmp2y * pre5;
            curves[i + 4] = tmp2x * pre5;
            curves[i + 5] = tmp2y * pre5;
        },
        getCurvePercent: function(frameIndex, percent) {
            percent = percent < 0 ? 0 : percent > 1 ? 1 : percent;
            var curveIndex = frameIndex * 6;
            var curves = this.curves;
            var dfx = curves[curveIndex];
            if (!dfx) return percent;
            if (dfx == -1) return 0;
            var dfy = curves[curveIndex + 1];
            var ddfx = curves[curveIndex + 2];
            var ddfy = curves[curveIndex + 3];
            var dddfx = curves[curveIndex + 4];
            var dddfy = curves[curveIndex + 5];
            var x = dfx, y = dfy;
            var i = 10 - 2;
            while (true) {
                if (x >= percent) {
                    var lastX = x - dfx;
                    var lastY = y - dfy;
                    return lastY + (y - lastY) * (percent - lastX) / (x - lastX);
                }
                if (!i) break;
                i--;
                dfx += ddfx;
                dfy += ddfy;
                ddfx += dddfx;
                ddfy += dddfy;
                x += dfx;
                y += dfy;
            }
            return y + (1 - y) * (percent - x) / (1 - x);
        }
    };
    spine.RotateTimeline = function(frameCount) {
        this.curves = new spine.Curves(frameCount);
        this.frames = [];
        this.frames.length = frameCount * 2;
    };
    spine.RotateTimeline.prototype = {
        boneIndex: 0,
        getFrameCount: function() {
            return this.frames.length / 2;
        },
        setFrame: function(frameIndex, time, angle) {
            frameIndex *= 2;
            this.frames[frameIndex] = time;
            this.frames[frameIndex + 1] = angle;
        },
        apply: function(skeleton, time, alpha) {
            var frames = this.frames, amount;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this.boneIndex];
            if (time >= frames[frames.length - 2]) {
                amount = bone.data.rotation + frames[frames.length - 1] - bone.rotation;
                while (amount > 180) amount -= 360;
                while (amount < -180) amount += 360;
                bone.rotation += amount * alpha;
                return;
            }
            var frameIndex = spine.binarySearch(frames, time, 2);
            var lastFrameValue = frames[frameIndex - 1];
            var frameTime = frames[frameIndex];
            var percent = 1 - (time - frameTime) / (frames[frameIndex - 2] - frameTime);
            percent = this.curves.getCurvePercent(frameIndex / 2 - 1, percent);
            amount = frames[frameIndex + 1] - lastFrameValue;
            while (amount > 180) amount -= 360;
            while (amount < -180) amount += 360;
            amount = bone.data.rotation + (lastFrameValue + amount * percent) - bone.rotation;
            while (amount > 180) amount -= 360;
            while (amount < -180) amount += 360;
            bone.rotation += amount * alpha;
        }
    };
    spine.TranslateTimeline = function(frameCount) {
        this.curves = new spine.Curves(frameCount);
        this.frames = [];
        this.frames.length = frameCount * 3;
    };
    spine.TranslateTimeline.prototype = {
        boneIndex: 0,
        getFrameCount: function() {
            return this.frames.length / 3;
        },
        setFrame: function(frameIndex, time, x, y) {
            frameIndex *= 3;
            this.frames[frameIndex] = time;
            this.frames[frameIndex + 1] = x;
            this.frames[frameIndex + 2] = y;
        },
        apply: function(skeleton, time, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this.boneIndex];
            if (time >= frames[frames.length - 3]) {
                bone.x += (bone.data.x + frames[frames.length - 2] - bone.x) * alpha;
                bone.y += (bone.data.y + frames[frames.length - 1] - bone.y) * alpha;
                return;
            }
            var frameIndex = spine.binarySearch(frames, time, 3);
            var lastFrameX = frames[frameIndex - 2];
            var lastFrameY = frames[frameIndex - 1];
            var frameTime = frames[frameIndex];
            var percent = 1 - (time - frameTime) / (frames[frameIndex + -3] - frameTime);
            percent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);
            bone.x += (bone.data.x + lastFrameX + (frames[frameIndex + 1] - lastFrameX) * percent - bone.x) * alpha;
            bone.y += (bone.data.y + lastFrameY + (frames[frameIndex + 2] - lastFrameY) * percent - bone.y) * alpha;
        }
    };
    spine.ScaleTimeline = function(frameCount) {
        this.curves = new spine.Curves(frameCount);
        this.frames = [];
        this.frames.length = frameCount * 3;
    };
    spine.ScaleTimeline.prototype = {
        boneIndex: 0,
        getFrameCount: function() {
            return this.frames.length / 3;
        },
        setFrame: function(frameIndex, time, x, y) {
            frameIndex *= 3;
            this.frames[frameIndex] = time;
            this.frames[frameIndex + 1] = x;
            this.frames[frameIndex + 2] = y;
        },
        apply: function(skeleton, time, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this.boneIndex];
            if (time >= frames[frames.length - 3]) {
                bone.scaleX += (bone.data.scaleX - 1 + frames[frames.length - 2] - bone.scaleX) * alpha;
                bone.scaleY += (bone.data.scaleY - 1 + frames[frames.length - 1] - bone.scaleY) * alpha;
                return;
            }
            var frameIndex = spine.binarySearch(frames, time, 3);
            var lastFrameX = frames[frameIndex - 2];
            var lastFrameY = frames[frameIndex - 1];
            var frameTime = frames[frameIndex];
            var percent = 1 - (time - frameTime) / (frames[frameIndex + -3] - frameTime);
            percent = this.curves.getCurvePercent(frameIndex / 3 - 1, percent);
            bone.scaleX += (bone.data.scaleX - 1 + lastFrameX + (frames[frameIndex + 1] - lastFrameX) * percent - bone.scaleX) * alpha;
            bone.scaleY += (bone.data.scaleY - 1 + lastFrameY + (frames[frameIndex + 2] - lastFrameY) * percent - bone.scaleY) * alpha;
        }
    };
    spine.ColorTimeline = function(frameCount) {
        this.curves = new spine.Curves(frameCount);
        this.frames = [];
        this.frames.length = frameCount * 5;
    };
    spine.ColorTimeline.prototype = {
        slotIndex: 0,
        getFrameCount: function() {
            return this.frames.length / 5;
        },
        setFrame: function(frameIndex, time, r, g, b, a) {
            frameIndex *= 5;
            this.frames[frameIndex] = time;
            this.frames[frameIndex + 1] = r;
            this.frames[frameIndex + 2] = g;
            this.frames[frameIndex + 3] = b;
            this.frames[frameIndex + 4] = a;
        },
        apply: function(skeleton, time, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var slot = skeleton.slots[this.slotIndex];
            if (time >= frames[frames.length - 5]) {
                var i = frames.length - 1;
                slot.r = frames[i - 3];
                slot.g = frames[i - 2];
                slot.b = frames[i - 1];
                slot.a = frames[i];
                return;
            }
            var frameIndex = spine.binarySearch(frames, time, 5);
            var lastFrameR = frames[frameIndex - 4];
            var lastFrameG = frames[frameIndex - 3];
            var lastFrameB = frames[frameIndex - 2];
            var lastFrameA = frames[frameIndex - 1];
            var frameTime = frames[frameIndex];
            var percent = 1 - (time - frameTime) / (frames[frameIndex - 5] - frameTime);
            percent = this.curves.getCurvePercent(frameIndex / 5 - 1, percent);
            var r = lastFrameR + (frames[frameIndex + 1] - lastFrameR) * percent;
            var g = lastFrameG + (frames[frameIndex + 2] - lastFrameG) * percent;
            var b = lastFrameB + (frames[frameIndex + 3] - lastFrameB) * percent;
            var a = lastFrameA + (frames[frameIndex + 4] - lastFrameA) * percent;
            if (alpha < 1) {
                slot.r += (r - slot.r) * alpha;
                slot.g += (g - slot.g) * alpha;
                slot.b += (b - slot.b) * alpha;
                slot.a += (a - slot.a) * alpha;
            } else {
                slot.r = r;
                slot.g = g;
                slot.b = b;
                slot.a = a;
            }
        }
    };
    spine.AttachmentTimeline = function(frameCount) {
        this.curves = new spine.Curves(frameCount);
        this.frames = [];
        this.frames.length = frameCount;
        this.attachmentNames = [];
        this.attachmentNames.length = frameCount;
    };
    spine.AttachmentTimeline.prototype = {
        slotIndex: 0,
        getFrameCount: function() {
            return this.frames.length;
        },
        setFrame: function(frameIndex, time, attachmentName) {
            this.frames[frameIndex] = time;
            this.attachmentNames[frameIndex] = attachmentName;
        },
        apply: function(skeleton, time, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var frameIndex;
            if (time >= frames[frames.length - 1]) frameIndex = frames.length - 1; else frameIndex = spine.binarySearch(frames, time, 1) - 1;
            var attachmentName = this.attachmentNames[frameIndex];
            skeleton.slots[this.slotIndex].setAttachment(!attachmentName ? null : skeleton.getAttachmentBySlotIndex(this.slotIndex, attachmentName));
        }
    };
    spine.SkeletonData = function() {
        this.bones = [];
        this.slots = [];
        this.skins = [];
        this.animations = [];
    };
    spine.SkeletonData.prototype = {
        defaultSkin: null,
        findBone: function(boneName) {
            var bones = this.bones;
            for (var i = 0, n = bones.length; i < n; i++) if (bones[i].name == boneName) return bones[i];
            return null;
        },
        findBoneIndex: function(boneName) {
            var bones = this.bones;
            for (var i = 0, n = bones.length; i < n; i++) if (bones[i].name == boneName) return i;
            return -1;
        },
        findSlot: function(slotName) {
            var slots = this.slots;
            for (var i = 0, n = slots.length; i < n; i++) {
                if (slots[i].name == slotName) return slot[i];
            }
            return null;
        },
        findSlotIndex: function(slotName) {
            var slots = this.slots;
            for (var i = 0, n = slots.length; i < n; i++) if (slots[i].name == slotName) return i;
            return -1;
        },
        findSkin: function(skinName) {
            var skins = this.skins;
            for (var i = 0, n = skins.length; i < n; i++) if (skins[i].name == skinName) return skins[i];
            return null;
        },
        findAnimation: function(animationName) {
            var animations = this.animations;
            for (var i = 0, n = animations.length; i < n; i++) if (animations[i].name == animationName) return animations[i];
            return null;
        }
    };
    spine.Skeleton = function(skeletonData) {
        this.data = skeletonData;
        this.bones = [];
        for (var i = 0, n = skeletonData.bones.length; i < n; i++) {
            var boneData = skeletonData.bones[i];
            var parent = !boneData.parent ? null : this.bones[skeletonData.bones.indexOf(boneData.parent)];
            this.bones.push(new spine.Bone(boneData, parent));
        }
        this.slots = [];
        this.drawOrder = [];
        for (i = 0, n = skeletonData.slots.length; i < n; i++) {
            var slotData = skeletonData.slots[i];
            var bone = this.bones[skeletonData.bones.indexOf(slotData.boneData)];
            var slot = new spine.Slot(slotData, this, bone);
            this.slots.push(slot);
            this.drawOrder.push(slot);
        }
    };
    spine.Skeleton.prototype = {
        x: 0,
        y: 0,
        skin: null,
        r: 1,
        g: 1,
        b: 1,
        a: 1,
        time: 0,
        flipX: false,
        flipY: false,
        updateWorldTransform: function() {
            var flipX = this.flipX;
            var flipY = this.flipY;
            var bones = this.bones;
            for (var i = 0, n = bones.length; i < n; i++) bones[i].updateWorldTransform(flipX, flipY);
        },
        setToSetupPose: function() {
            this.setBonesToSetupPose();
            this.setSlotsToSetupPose();
        },
        setBonesToSetupPose: function() {
            var bones = this.bones;
            for (var i = 0, n = bones.length; i < n; i++) bones[i].setToSetupPose();
        },
        setSlotsToSetupPose: function() {
            var slots = this.slots;
            for (var i = 0, n = slots.length; i < n; i++) slots[i].setToSetupPose(i);
        },
        getRootBone: function() {
            return this.bones.length ? this.bones[0] : null;
        },
        findBone: function(boneName) {
            var bones = this.bones;
            for (var i = 0, n = bones.length; i < n; i++) if (bones[i].data.name == boneName) return bones[i];
            return null;
        },
        findBoneIndex: function(boneName) {
            var bones = this.bones;
            for (var i = 0, n = bones.length; i < n; i++) if (bones[i].data.name == boneName) return i;
            return -1;
        },
        findSlot: function(slotName) {
            var slots = this.slots;
            for (var i = 0, n = slots.length; i < n; i++) if (slots[i].data.name == slotName) return slots[i];
            return null;
        },
        findSlotIndex: function(slotName) {
            var slots = this.slots;
            for (var i = 0, n = slots.length; i < n; i++) if (slots[i].data.name == slotName) return i;
            return -1;
        },
        setSkinByName: function(skinName) {
            var skin = this.data.findSkin(skinName);
            if (!skin) throw "Skin not found: " + skinName;
            this.setSkin(skin);
        },
        setSkin: function(newSkin) {
            if (this.skin && newSkin) newSkin._attachAll(this, this.skin);
            this.skin = newSkin;
        },
        getAttachmentBySlotName: function(slotName, attachmentName) {
            return this.getAttachmentBySlotIndex(this.data.findSlotIndex(slotName), attachmentName);
        },
        getAttachmentBySlotIndex: function(slotIndex, attachmentName) {
            if (this.skin) {
                var attachment = this.skin.getAttachment(slotIndex, attachmentName);
                if (attachment) return attachment;
            }
            if (this.data.defaultSkin) return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);
            return null;
        },
        setAttachment: function(slotName, attachmentName) {
            var slots = this.slots;
            for (var i = 0, n = slots.size; i < n; i++) {
                var slot = slots[i];
                if (slot.data.name == slotName) {
                    var attachment = null;
                    if (attachmentName) {
                        attachment = this.getAttachment(i, attachmentName);
                        if (attachment == null) throw "Attachment not found: " + attachmentName + ", for slot: " + slotName;
                    }
                    slot.setAttachment(attachment);
                    return;
                }
            }
            throw "Slot not found: " + slotName;
        },
        update: function(delta) {
            time += delta;
        }
    };
    spine.AttachmentType = {
        region: 0
    };
    spine.RegionAttachment = function() {
        this.offset = [];
        this.offset.length = 8;
        this.uvs = [];
        this.uvs.length = 8;
    };
    spine.RegionAttachment.prototype = {
        x: 0,
        y: 0,
        rotation: 0,
        scaleX: 1,
        scaleY: 1,
        width: 0,
        height: 0,
        rendererObject: null,
        regionOffsetX: 0,
        regionOffsetY: 0,
        regionWidth: 0,
        regionHeight: 0,
        regionOriginalWidth: 0,
        regionOriginalHeight: 0,
        setUVs: function(u, v, u2, v2, rotate) {
            var uvs = this.uvs;
            if (rotate) {
                uvs[2] = u;
                uvs[3] = v2;
                uvs[4] = u;
                uvs[5] = v;
                uvs[6] = u2;
                uvs[7] = v;
                uvs[0] = u2;
                uvs[1] = v2;
            } else {
                uvs[0] = u;
                uvs[1] = v2;
                uvs[2] = u;
                uvs[3] = v;
                uvs[4] = u2;
                uvs[5] = v;
                uvs[6] = u2;
                uvs[7] = v2;
            }
        },
        updateOffset: function() {
            var regionScaleX = this.width / this.regionOriginalWidth * this.scaleX;
            var regionScaleY = this.height / this.regionOriginalHeight * this.scaleY;
            var localX = -this.width / 2 * this.scaleX + this.regionOffsetX * regionScaleX;
            var localY = -this.height / 2 * this.scaleY + this.regionOffsetY * regionScaleY;
            var localX2 = localX + this.regionWidth * regionScaleX;
            var localY2 = localY + this.regionHeight * regionScaleY;
            var radians = this.rotation * Math.PI / 180;
            var cos = Math.cos(radians);
            var sin = Math.sin(radians);
            var localXCos = localX * cos + this.x;
            var localXSin = localX * sin;
            var localYCos = localY * cos + this.y;
            var localYSin = localY * sin;
            var localX2Cos = localX2 * cos + this.x;
            var localX2Sin = localX2 * sin;
            var localY2Cos = localY2 * cos + this.y;
            var localY2Sin = localY2 * sin;
            var offset = this.offset;
            offset[0] = localXCos - localYSin;
            offset[1] = localYCos + localXSin;
            offset[2] = localXCos - localY2Sin;
            offset[3] = localY2Cos + localXSin;
            offset[4] = localX2Cos - localY2Sin;
            offset[5] = localY2Cos + localX2Sin;
            offset[6] = localX2Cos - localYSin;
            offset[7] = localYCos + localX2Sin;
        },
        computeVertices: function(x, y, bone, vertices) {
            x += bone.worldX;
            y += bone.worldY;
            var m00 = bone.m00;
            var m01 = bone.m01;
            var m10 = bone.m10;
            var m11 = bone.m11;
            var offset = this.offset;
            vertices[0] = offset[0] * m00 + offset[1] * m01 + x;
            vertices[1] = offset[0] * m10 + offset[1] * m11 + y;
            vertices[2] = offset[2] * m00 + offset[3] * m01 + x;
            vertices[3] = offset[2] * m10 + offset[3] * m11 + y;
            vertices[4] = offset[4] * m00 + offset[5] * m01 + x;
            vertices[5] = offset[4] * m10 + offset[5] * m11 + y;
            vertices[6] = offset[6] * m00 + offset[7] * m01 + x;
            vertices[7] = offset[6] * m10 + offset[7] * m11 + y;
        }
    };
    spine.AnimationStateData = function(skeletonData) {
        this.skeletonData = skeletonData;
        this.animationToMixTime = {};
    };
    spine.AnimationStateData.prototype = {
        defaultMix: 0,
        setMixByName: function(fromName, toName, duration) {
            var from = this.skeletonData.findAnimation(fromName);
            if (!from) throw "Animation not found: " + fromName;
            var to = this.skeletonData.findAnimation(toName);
            if (!to) throw "Animation not found: " + toName;
            this.setMix(from, to, duration);
        },
        setMix: function(from, to, duration) {
            this.animationToMixTime[from.name + ":" + to.name] = duration;
        },
        getMix: function(from, to) {
            var time = this.animationToMixTime[from.name + ":" + to.name];
            return time ? time : this.defaultMix;
        }
    };
    spine.AnimationState = function(stateData) {
        this.data = stateData;
        this.queue = [];
    };
    spine.AnimationState.prototype = {
        animationSpeed: 1,
        current: null,
        previous: null,
        currentTime: 0,
        previousTime: 0,
        currentLoop: false,
        previousLoop: false,
        mixTime: 0,
        mixDuration: 0,
        update: function(delta) {
            this.currentTime += delta * this.animationSpeed;
            this.previousTime += delta;
            this.mixTime += delta;
            if (this.queue.length > 0) {
                var entry = this.queue[0];
                if (this.currentTime >= entry.delay) {
                    this._setAnimation(entry.animation, entry.loop);
                    this.queue.shift();
                }
            }
        },
        apply: function(skeleton) {
            if (!this.current) return;
            if (this.previous) {
                this.previous.apply(skeleton, this.previousTime, this.previousLoop);
                var alpha = this.mixTime / this.mixDuration;
                if (alpha >= 1) {
                    alpha = 1;
                    this.previous = null;
                }
                this.current.mix(skeleton, this.currentTime, this.currentLoop, alpha);
            } else this.current.apply(skeleton, this.currentTime, this.currentLoop);
        },
        clearAnimation: function() {
            this.previous = null;
            this.current = null;
            this.queue.length = 0;
        },
        _setAnimation: function(animation, loop) {
            this.previous = null;
            if (animation && this.current) {
                this.mixDuration = this.data.getMix(this.current, animation);
                if (this.mixDuration > 0) {
                    this.mixTime = 0;
                    this.previous = this.current;
                    this.previousTime = this.currentTime;
                    this.previousLoop = this.currentLoop;
                }
            }
            this.current = animation;
            this.currentLoop = loop;
            this.currentTime = 0;
        },
        setAnimationByName: function(animationName, loop) {
            var animation = this.data.skeletonData.findAnimation(animationName);
            if (!animation) throw "Animation not found: " + animationName;
            this.setAnimation(animation, loop);
        },
        setAnimation: function(animation, loop) {
            this.queue.length = 0;
            this._setAnimation(animation, loop);
        },
        addAnimationByName: function(animationName, loop, delay) {
            var animation = this.data.skeletonData.findAnimation(animationName);
            if (!animation) throw "Animation not found: " + animationName;
            this.addAnimation(animation, loop, delay);
        },
        addAnimation: function(animation, loop, delay) {
            var entry = {};
            entry.animation = animation;
            entry.loop = loop;
            if (!delay || delay <= 0) {
                var previousAnimation = this.queue.length ? this.queue[this.queue.length - 1].animation : this.current;
                if (previousAnimation != null) delay = previousAnimation.duration - this.data.getMix(previousAnimation, animation) + (delay || 0); else delay = 0;
            }
            entry.delay = delay;
            this.queue.push(entry);
        },
        isComplete: function() {
            return !this.current || this.currentTime >= this.current.duration;
        }
    };
    spine.SkeletonJson = function(attachmentLoader) {
        this.attachmentLoader = attachmentLoader;
    };
    spine.SkeletonJson.prototype = {
        scale: 1,
        readSkeletonData: function(root) {
            var skeletonData = new spine.SkeletonData(), boneData;
            var bones = root["bones"];
            for (var i = 0, n = bones.length; i < n; i++) {
                var boneMap = bones[i];
                var parent = null;
                if (boneMap["parent"]) {
                    parent = skeletonData.findBone(boneMap["parent"]);
                    if (!parent) throw "Parent bone not found: " + boneMap["parent"];
                }
                boneData = new spine.BoneData(boneMap["name"], parent);
                boneData.length = (boneMap["length"] || 0) * this.scale;
                boneData.x = (boneMap["x"] || 0) * this.scale;
                boneData.y = (boneMap["y"] || 0) * this.scale;
                boneData.rotation = boneMap["rotation"] || 0;
                boneData.scaleX = boneMap["scaleX"] || 1;
                boneData.scaleY = boneMap["scaleY"] || 1;
                skeletonData.bones.push(boneData);
            }
            var slots = root["slots"];
            for (i = 0, n = slots.length; i < n; i++) {
                var slotMap = slots[i];
                boneData = skeletonData.findBone(slotMap["bone"]);
                if (!boneData) throw "Slot bone not found: " + slotMap["bone"];
                var slotData = new spine.SlotData(slotMap["name"], boneData);
                var color = slotMap["color"];
                if (color) {
                    slotData.r = spine.SkeletonJson.toColor(color, 0);
                    slotData.g = spine.SkeletonJson.toColor(color, 1);
                    slotData.b = spine.SkeletonJson.toColor(color, 2);
                    slotData.a = spine.SkeletonJson.toColor(color, 3);
                }
                slotData.attachmentName = slotMap["attachment"];
                skeletonData.slots.push(slotData);
            }
            var skins = root["skins"];
            for (var skinName in skins) {
                if (!skins.hasOwnProperty(skinName)) continue;
                var skinMap = skins[skinName];
                var skin = new spine.Skin(skinName);
                for (var slotName in skinMap) {
                    if (!skinMap.hasOwnProperty(slotName)) continue;
                    var slotIndex = skeletonData.findSlotIndex(slotName);
                    var slotEntry = skinMap[slotName];
                    for (var attachmentName in slotEntry) {
                        if (!slotEntry.hasOwnProperty(attachmentName)) continue;
                        var attachment = this.readAttachment(skin, attachmentName, slotEntry[attachmentName]);
                        if (attachment != null) skin.addAttachment(slotIndex, attachmentName, attachment);
                    }
                }
                skeletonData.skins.push(skin);
                if (skin.name == "default") skeletonData.defaultSkin = skin;
            }
            var animations = root["animations"];
            for (var animationName in animations) {
                if (!animations.hasOwnProperty(animationName)) continue;
                this.readAnimation(animationName, animations[animationName], skeletonData);
            }
            return skeletonData;
        },
        readAttachment: function(skin, name, map) {
            name = map["name"] || name;
            var type = spine.AttachmentType[map["type"] || "region"];
            if (type == spine.AttachmentType.region) {
                var attachment = new spine.RegionAttachment();
                attachment.x = (map["x"] || 0) * this.scale;
                attachment.y = (map["y"] || 0) * this.scale;
                attachment.scaleX = map["scaleX"] || 1;
                attachment.scaleY = map["scaleY"] || 1;
                attachment.rotation = map["rotation"] || 0;
                attachment.width = (map["width"] || 32) * this.scale;
                attachment.height = (map["height"] || 32) * this.scale;
                attachment.updateOffset();
                attachment.rendererObject = {};
                attachment.rendererObject.name = name;
                attachment.rendererObject.scale = {};
                attachment.rendererObject.scale.x = attachment.scaleX;
                attachment.rendererObject.scale.y = attachment.scaleY;
                attachment.rendererObject.rotation = -attachment.rotation * Math.PI / 180;
                return attachment;
            }
            throw "Unknown attachment type: " + type;
        },
        readAnimation: function(name, map, skeletonData) {
            var timelines = [];
            var duration = 0;
            var frameIndex, timeline, timelineName, valueMap, values, i, n;
            var bones = map["bones"];
            for (var boneName in bones) {
                if (!bones.hasOwnProperty(boneName)) continue;
                var boneIndex = skeletonData.findBoneIndex(boneName);
                if (boneIndex == -1) throw "Bone not found: " + boneName;
                var boneMap = bones[boneName];
                for (timelineName in boneMap) {
                    if (!boneMap.hasOwnProperty(timelineName)) continue;
                    values = boneMap[timelineName];
                    if (timelineName == "rotate") {
                        timeline = new spine.RotateTimeline(values.length);
                        timeline.boneIndex = boneIndex;
                        frameIndex = 0;
                        for (i = 0, n = values.length; i < n; i++) {
                            valueMap = values[i];
                            timeline.setFrame(frameIndex, valueMap["time"], valueMap["angle"]);
                            spine.SkeletonJson.readCurve(timeline, frameIndex, valueMap);
                            frameIndex++;
                        }
                        timelines.push(timeline);
                        duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 2 - 2]);
                    } else if (timelineName == "translate" || timelineName == "scale") {
                        var timelineScale = 1;
                        if (timelineName == "scale") timeline = new spine.ScaleTimeline(values.length); else {
                            timeline = new spine.TranslateTimeline(values.length);
                            timelineScale = this.scale;
                        }
                        timeline.boneIndex = boneIndex;
                        frameIndex = 0;
                        for (i = 0, n = values.length; i < n; i++) {
                            valueMap = values[i];
                            var x = (valueMap["x"] || 0) * timelineScale;
                            var y = (valueMap["y"] || 0) * timelineScale;
                            timeline.setFrame(frameIndex, valueMap["time"], x, y);
                            spine.SkeletonJson.readCurve(timeline, frameIndex, valueMap);
                            frameIndex++;
                        }
                        timelines.push(timeline);
                        duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 3 - 3]);
                    } else throw "Invalid timeline type for a bone: " + timelineName + " (" + boneName + ")";
                }
            }
            var slots = map["slots"];
            for (var slotName in slots) {
                if (!slots.hasOwnProperty(slotName)) continue;
                var slotMap = slots[slotName];
                var slotIndex = skeletonData.findSlotIndex(slotName);
                for (timelineName in slotMap) {
                    if (!slotMap.hasOwnProperty(timelineName)) continue;
                    values = slotMap[timelineName];
                    if (timelineName == "color") {
                        timeline = new spine.ColorTimeline(values.length);
                        timeline.slotIndex = slotIndex;
                        frameIndex = 0;
                        for (i = 0, n = values.length; i < n; i++) {
                            valueMap = values[i];
                            var color = valueMap["color"];
                            var r = spine.SkeletonJson.toColor(color, 0);
                            var g = spine.SkeletonJson.toColor(color, 1);
                            var b = spine.SkeletonJson.toColor(color, 2);
                            var a = spine.SkeletonJson.toColor(color, 3);
                            timeline.setFrame(frameIndex, valueMap["time"], r, g, b, a);
                            spine.SkeletonJson.readCurve(timeline, frameIndex, valueMap);
                            frameIndex++;
                        }
                        timelines.push(timeline);
                        duration = Math.max(duration, timeline.frames[timeline.getFrameCount() * 5 - 5]);
                    } else if (timelineName == "attachment") {
                        timeline = new spine.AttachmentTimeline(values.length);
                        timeline.slotIndex = slotIndex;
                        frameIndex = 0;
                        for (i = 0, n = values.length; i < n; i++) {
                            valueMap = values[i];
                            timeline.setFrame(frameIndex++, valueMap["time"], valueMap["name"]);
                        }
                        timelines.push(timeline);
                        duration = Math.max(duration, timeline.frames[timeline.getFrameCount() - 1]);
                    } else throw "Invalid timeline type for a slot: " + timelineName + " (" + slotName + ")";
                }
            }
            skeletonData.animations.push(new spine.Animation(name, timelines, duration));
        }
    };
    spine.SkeletonJson.readCurve = function(timeline, frameIndex, valueMap) {
        var curve = valueMap["curve"];
        if (!curve) return;
        if (curve == "stepped") timeline.curves.setStepped(frameIndex); else if (curve instanceof Array) timeline.curves.setCurve(frameIndex, curve[0], curve[1], curve[2], curve[3]);
    };
    spine.SkeletonJson.toColor = function(hexString, colorIndex) {
        if (hexString.length != 8) throw "Color hexidecimal length must be 8, recieved: " + hexString;
        return parseInt(hexString.substr(colorIndex * 2, 2), 16) / 255;
    };
    spine.Atlas = function(atlasText, textureLoader) {
        this.textureLoader = textureLoader;
        this.pages = [];
        this.regions = [];
        var reader = new spine.AtlasReader(atlasText);
        var tuple = [];
        tuple.length = 4;
        var page = null;
        while (true) {
            var line = reader.readLine();
            if (line == null) break;
            line = reader.trim(line);
            if (!line.length) page = null; else if (!page) {
                page = new spine.AtlasPage();
                page.name = line;
                page.format = spine.Atlas.Format[reader.readValue()];
                reader.readTuple(tuple);
                page.minFilter = spine.Atlas.TextureFilter[tuple[0]];
                page.magFilter = spine.Atlas.TextureFilter[tuple[1]];
                var direction = reader.readValue();
                page.uWrap = spine.Atlas.TextureWrap.clampToEdge;
                page.vWrap = spine.Atlas.TextureWrap.clampToEdge;
                if (direction == "x") page.uWrap = spine.Atlas.TextureWrap.repeat; else if (direction == "y") page.vWrap = spine.Atlas.TextureWrap.repeat; else if (direction == "xy") page.uWrap = page.vWrap = spine.Atlas.TextureWrap.repeat;
                textureLoader.load(page, line);
                this.pages.push(page);
            } else {
                var region = new spine.AtlasRegion();
                region.name = line;
                region.page = page;
                region.rotate = reader.readValue() == "true";
                reader.readTuple(tuple);
                var x = parseInt(tuple[0], 10);
                var y = parseInt(tuple[1], 10);
                reader.readTuple(tuple);
                var width = parseInt(tuple[0], 10);
                var height = parseInt(tuple[1], 10);
                region.u = x / page.width;
                region.v = y / page.height;
                if (region.rotate) {
                    region.u2 = (x + height) / page.width;
                    region.v2 = (y + width) / page.height;
                } else {
                    region.u2 = (x + width) / page.width;
                    region.v2 = (y + height) / page.height;
                }
                region.x = x;
                region.y = y;
                region.width = Math.abs(width);
                region.height = Math.abs(height);
                if (reader.readTuple(tuple) == 4) {
                    region.splits = [ parseInt(tuple[0], 10), parseInt(tuple[1], 10), parseInt(tuple[2], 10), parseInt(tuple[3], 10) ];
                    if (reader.readTuple(tuple) == 4) {
                        region.pads = [ parseInt(tuple[0], 10), parseInt(tuple[1], 10), parseInt(tuple[2], 10), parseInt(tuple[3], 10) ];
                        reader.readTuple(tuple);
                    }
                }
                region.originalWidth = parseInt(tuple[0], 10);
                region.originalHeight = parseInt(tuple[1], 10);
                reader.readTuple(tuple);
                region.offsetX = parseInt(tuple[0], 10);
                region.offsetY = parseInt(tuple[1], 10);
                region.index = parseInt(reader.readValue(), 10);
                this.regions.push(region);
            }
        }
    };
    spine.Atlas.prototype = {
        findRegion: function(name) {
            var regions = this.regions;
            for (var i = 0, n = regions.length; i < n; i++) if (regions[i].name == name) return regions[i];
            return null;
        },
        dispose: function() {
            var pages = this.pages;
            for (var i = 0, n = pages.length; i < n; i++) this.textureLoader.unload(pages[i].rendererObject);
        },
        updateUVs: function(page) {
            var regions = this.regions;
            for (var i = 0, n = regions.length; i < n; i++) {
                var region = regions[i];
                if (region.page != page) continue;
                region.u = region.x / page.width;
                region.v = region.y / page.height;
                if (region.rotate) {
                    region.u2 = (region.x + region.height) / page.width;
                    region.v2 = (region.y + region.width) / page.height;
                } else {
                    region.u2 = (region.x + region.width) / page.width;
                    region.v2 = (region.y + region.height) / page.height;
                }
            }
        }
    };
    spine.Atlas.Format = {
        alpha: 0,
        intensity: 1,
        luminanceAlpha: 2,
        rgb565: 3,
        rgba4444: 4,
        rgb888: 5,
        rgba8888: 6
    };
    spine.Atlas.TextureFilter = {
        nearest: 0,
        linear: 1,
        mipMap: 2,
        mipMapNearestNearest: 3,
        mipMapLinearNearest: 4,
        mipMapNearestLinear: 5,
        mipMapLinearLinear: 6
    };
    spine.Atlas.TextureWrap = {
        mirroredRepeat: 0,
        clampToEdge: 1,
        repeat: 2
    };
    spine.AtlasPage = function() {};
    spine.AtlasPage.prototype = {
        name: null,
        format: null,
        minFilter: null,
        magFilter: null,
        uWrap: null,
        vWrap: null,
        rendererObject: null,
        width: 0,
        height: 0
    };
    spine.AtlasRegion = function() {};
    spine.AtlasRegion.prototype = {
        page: null,
        name: null,
        x: 0,
        y: 0,
        width: 0,
        height: 0,
        u: 0,
        v: 0,
        u2: 0,
        v2: 0,
        offsetX: 0,
        offsetY: 0,
        originalWidth: 0,
        originalHeight: 0,
        index: 0,
        rotate: false,
        splits: null,
        pads: null
    };
    spine.AtlasReader = function(text) {
        this.lines = text.split(/\r\n|\r|\n/);
    };
    spine.AtlasReader.prototype = {
        index: 0,
        trim: function(value) {
            return value.replace(/^\s+|\s+$/g, "");
        },
        readLine: function() {
            if (this.index >= this.lines.length) return null;
            return this.lines[this.index++];
        },
        readValue: function() {
            var line = this.readLine();
            var colon = line.indexOf(":");
            if (colon == -1) throw "Invalid line: " + line;
            return this.trim(line.substring(colon + 1));
        },
        readTuple: function(tuple) {
            var line = this.readLine();
            var colon = line.indexOf(":");
            if (colon == -1) throw "Invalid line: " + line;
            var i = 0, lastMatch = colon + 1;
            for (;i < 3; i++) {
                var comma = line.indexOf(",", lastMatch);
                if (comma == -1) {
                    if (!i) throw "Invalid line: " + line;
                    break;
                }
                tuple[i] = this.trim(line.substr(lastMatch, comma - lastMatch));
                lastMatch = comma + 1;
            }
            tuple[i] = this.trim(line.substring(lastMatch));
            return i + 1;
        }
    };
    spine.AtlasAttachmentLoader = function(atlas) {
        this.atlas = atlas;
    };
    spine.AtlasAttachmentLoader.prototype = {
        newAttachment: function(skin, type, name) {
            switch (type) {
              case spine.AttachmentType.region:
                var region = this.atlas.findRegion(name);
                if (!region) throw "Region not found in atlas: " + name + " (" + type + ")";
                var attachment = new spine.RegionAttachment(name);
                attachment.rendererObject = region;
                attachment.setUVs(region.u, region.v, region.u2, region.v2, region.rotate);
                attachment.regionOffsetX = region.offsetX;
                attachment.regionOffsetY = region.offsetY;
                attachment.regionWidth = region.width;
                attachment.regionHeight = region.height;
                attachment.regionOriginalWidth = region.originalWidth;
                attachment.regionOriginalHeight = region.originalHeight;
                return attachment;
            }
            throw "Unknown attachment type: " + type;
        }
    };
    spine.Bone.yDown = true;
    PIXI.AnimCache = {};
    PIXI.Spine = function(url) {
        PIXI.DisplayObjectContainer.call(this);
        this.spineData = PIXI.AnimCache[url];
        if (!this.spineData) {
            throw new Error("Spine data must be preloaded using PIXI.SpineLoader or PIXI.AssetLoader: " + url);
        }
        this.skeleton = new spine.Skeleton(this.spineData);
        this.skeleton.updateWorldTransform();
        this.stateData = new spine.AnimationStateData(this.spineData);
        this.state = new spine.AnimationState(this.stateData);
        this.slotContainers = [];
        for (var i = 0, n = this.skeleton.drawOrder.length; i < n; i++) {
            var slot = this.skeleton.drawOrder[i];
            var attachment = slot.attachment;
            var slotContainer = new PIXI.DisplayObjectContainer();
            this.slotContainers.push(slotContainer);
            this.addChild(slotContainer);
            if (!(attachment instanceof spine.RegionAttachment)) {
                continue;
            }
            var spriteName = attachment.rendererObject.name;
            var sprite = this.createSprite(slot, attachment.rendererObject);
            slot.currentSprite = sprite;
            slot.currentSpriteName = spriteName;
            slotContainer.addChild(sprite);
        }
    };
    PIXI.Spine.prototype = Object.create(PIXI.DisplayObjectContainer.prototype);
    PIXI.Spine.prototype.constructor = PIXI.Spine;
    PIXI.Spine.prototype.updateTransform = function() {
        this.lastTime = this.lastTime || Date.now();
        var timeDelta = (Date.now() - this.lastTime) * .001;
        this.lastTime = Date.now();
        this.state.update(timeDelta);
        this.state.apply(this.skeleton);
        this.skeleton.updateWorldTransform();
        var drawOrder = this.skeleton.drawOrder;
        for (var i = 0, n = drawOrder.length; i < n; i++) {
            var slot = drawOrder[i];
            var attachment = slot.attachment;
            var slotContainer = this.slotContainers[i];
            if (!(attachment instanceof spine.RegionAttachment)) {
                slotContainer.visible = false;
                continue;
            }
            if (attachment.rendererObject) {
                if (!slot.currentSpriteName || slot.currentSpriteName != attachment.name) {
                    var spriteName = attachment.rendererObject.name;
                    if (slot.currentSprite !== undefined) {
                        slot.currentSprite.visible = false;
                    }
                    slot.sprites = slot.sprites || {};
                    if (slot.sprites[spriteName] !== undefined) {
                        slot.sprites[spriteName].visible = true;
                    } else {
                        var sprite = this.createSprite(slot, attachment.rendererObject);
                        slotContainer.addChild(sprite);
                    }
                    slot.currentSprite = slot.sprites[spriteName];
                    slot.currentSpriteName = spriteName;
                }
            }
            slotContainer.visible = true;
            var bone = slot.bone;
            slotContainer.position.x = bone.worldX + attachment.x * bone.m00 + attachment.y * bone.m01;
            slotContainer.position.y = bone.worldY + attachment.x * bone.m10 + attachment.y * bone.m11;
            slotContainer.scale.x = bone.worldScaleX;
            slotContainer.scale.y = bone.worldScaleY;
            slotContainer.rotation = -(slot.bone.worldRotation * Math.PI / 180);
            slotContainer.alpha = slot.a;
            slot.currentSprite.tint = PIXI.rgb2hex([ slot.r, slot.g, slot.b ]);
        }
        PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);
    };
    PIXI.Spine.prototype.createSprite = function(slot, descriptor) {
        var name = PIXI.TextureCache[descriptor.name] ? descriptor.name : descriptor.name + ".png";
        var sprite = new PIXI.Sprite(PIXI.Texture.fromFrame(name));
        sprite.scale = descriptor.scale;
        sprite.rotation = descriptor.rotation;
        sprite.anchor.x = sprite.anchor.y = .5;
        slot.sprites = slot.sprites || {};
        slot.sprites[descriptor.name] = sprite;
        return sprite;
    };
    PIXI.BaseTextureCache = {};
    PIXI.BaseTextureCacheIdGenerator = 0;
    PIXI.BaseTexture = function(source, scaleMode) {
        this.resolution = 1;
        this.width = 100;
        this.height = 100;
        this.scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;
        this.hasLoaded = false;
        this.source = source;
        this._UID = PIXI._UID++;
        this.premultipliedAlpha = true;
        this._glTextures = [];
        this._dirty = [ true, true, true, true ];
        if (!source) return;
        if ((this.source.complete || this.source.getContext) && this.source.width && this.source.height) {
            this.hasLoaded = true;
            this.width = this.source.naturalWidth || this.source.width;
            this.height = this.source.naturalHeight || this.source.height;
            this.dirty();
        } else {
            var scope = this;
            this.source.onload = function() {
                scope.hasLoaded = true;
                scope.width = scope.source.naturalWidth || scope.source.width;
                scope.height = scope.source.naturalHeight || scope.source.height;
                scope.dirty();
                scope.dispatchEvent({
                    type: "loaded",
                    content: scope
                });
            };
            this.source.onerror = function() {
                scope.dispatchEvent({
                    type: "error",
                    content: scope
                });
            };
        }
        this.imageUrl = null;
        this._powerOf2 = false;
    };
    PIXI.BaseTexture.prototype.constructor = PIXI.BaseTexture;
    PIXI.EventTarget.mixin(PIXI.BaseTexture.prototype);
    PIXI.BaseTexture.prototype.destroy = function() {
        if (this.imageUrl) {
            delete PIXI.BaseTextureCache[this.imageUrl];
            delete PIXI.TextureCache[this.imageUrl];
            this.imageUrl = null;
            if (!navigator.isCocoonJS) this.source.src = "";
        } else if (this.source && this.source._pixiId) {
            delete PIXI.BaseTextureCache[this.source._pixiId];
        }
        this.source = null;
        this.unloadFromGPU();
    };
    PIXI.BaseTexture.prototype.updateSourceImage = function(newSrc) {
        this.hasLoaded = false;
        this.source.src = null;
        this.source.src = newSrc;
    };
    PIXI.BaseTexture.prototype.dirty = function() {
        for (var i = 0; i < this._glTextures.length; i++) {
            this._dirty[i] = true;
        }
    };
    PIXI.BaseTexture.prototype.unloadFromGPU = function() {
        this.dirty();
        for (var i = this._glTextures.length - 1; i >= 0; i--) {
            var glTexture = this._glTextures[i];
            var gl = PIXI.glContexts[i];
            if (gl && glTexture) {
                gl.deleteTexture(glTexture);
            }
        }
        this._glTextures.length = 0;
        this.dirty();
    };
    PIXI.BaseTexture.fromImage = function(imageUrl, crossorigin, scaleMode) {
        var baseTexture = PIXI.BaseTextureCache[imageUrl];
        if (crossorigin === undefined && imageUrl.indexOf("data:") === -1) crossorigin = true;
        if (!baseTexture) {
            var image = new Image();
            if (crossorigin) {
                image.crossOrigin = "";
            }
            image.src = imageUrl;
            baseTexture = new PIXI.BaseTexture(image, scaleMode);
            baseTexture.imageUrl = imageUrl;
            PIXI.BaseTextureCache[imageUrl] = baseTexture;
            if (imageUrl.indexOf(PIXI.RETINA_PREFIX + ".") !== -1) {
                baseTexture.resolution = 2;
            }
        }
        return baseTexture;
    };
    PIXI.BaseTexture.fromCanvas = function(canvas, scaleMode) {
        if (!canvas._pixiId) {
            canvas._pixiId = "canvas_" + PIXI.TextureCacheIdGenerator++;
        }
        var baseTexture = PIXI.BaseTextureCache[canvas._pixiId];
        if (!baseTexture) {
            baseTexture = new PIXI.BaseTexture(canvas, scaleMode);
            PIXI.BaseTextureCache[canvas._pixiId] = baseTexture;
        }
        return baseTexture;
    };
    PIXI.TextureCache = {};
    PIXI.FrameCache = {};
    PIXI.TextureCacheIdGenerator = 0;
    PIXI.Texture = function(baseTexture, frame, crop, trim) {
        this.noFrame = false;
        if (!frame) {
            this.noFrame = true;
            frame = new PIXI.Rectangle(0, 0, 1, 1);
        }
        if (baseTexture instanceof PIXI.Texture) {
            baseTexture = baseTexture.baseTexture;
        }
        this.baseTexture = baseTexture;
        this.frame = frame;
        this.trim = trim;
        this.valid = false;
        this.requiresUpdate = false;
        this._uvs = null;
        this.width = 0;
        this.height = 0;
        this.crop = crop || new PIXI.Rectangle(0, 0, 1, 1);
        if (baseTexture.hasLoaded) {
            if (this.noFrame) frame = new PIXI.Rectangle(0, 0, baseTexture.width, baseTexture.height);
            this.setFrame(frame);
        } else {
            baseTexture.addEventListener("loaded", this.onBaseTextureLoaded.bind(this));
        }
    };
    PIXI.Texture.prototype.constructor = PIXI.Texture;
    PIXI.EventTarget.mixin(PIXI.Texture.prototype);
    PIXI.Texture.prototype.onBaseTextureLoaded = function() {
        var baseTexture = this.baseTexture;
        baseTexture.removeEventListener("loaded", this.onLoaded);
        if (this.noFrame) this.frame = new PIXI.Rectangle(0, 0, baseTexture.width, baseTexture.height);
        this.setFrame(this.frame);
        this.dispatchEvent({
            type: "update",
            content: this
        });
    };
    PIXI.Texture.prototype.destroy = function(destroyBase) {
        if (destroyBase) this.baseTexture.destroy();
        this.valid = false;
    };
    PIXI.Texture.prototype.setFrame = function(frame) {
        this.noFrame = false;
        this.frame = frame;
        this.width = frame.width;
        this.height = frame.height;
        this.crop.x = frame.x;
        this.crop.y = frame.y;
        this.crop.width = frame.width;
        this.crop.height = frame.height;
        if (!this.trim && (frame.x + frame.width > this.baseTexture.width || frame.y + frame.height > this.baseTexture.height)) {
            throw new Error("Texture Error: frame does not fit inside the base Texture dimensions " + this);
        }
        this.valid = frame && frame.width && frame.height && this.baseTexture.source && this.baseTexture.hasLoaded;
        if (this.trim) {
            this.width = this.trim.width;
            this.height = this.trim.height;
            this.frame.width = this.trim.width;
            this.frame.height = this.trim.height;
        }
        if (this.valid) this._updateUvs();
    };
    PIXI.Texture.prototype._updateUvs = function() {
        if (!this._uvs) this._uvs = new PIXI.TextureUvs();
        var frame = this.crop;
        var tw = this.baseTexture.width;
        var th = this.baseTexture.height;
        this._uvs.x0 = frame.x / tw;
        this._uvs.y0 = frame.y / th;
        this._uvs.x1 = (frame.x + frame.width) / tw;
        this._uvs.y1 = frame.y / th;
        this._uvs.x2 = (frame.x + frame.width) / tw;
        this._uvs.y2 = (frame.y + frame.height) / th;
        this._uvs.x3 = frame.x / tw;
        this._uvs.y3 = (frame.y + frame.height) / th;
    };
    PIXI.Texture.fromImage = function(imageUrl, crossorigin, scaleMode) {
        var texture = PIXI.TextureCache[imageUrl];
        if (!texture) {
            texture = new PIXI.Texture(PIXI.BaseTexture.fromImage(imageUrl, crossorigin, scaleMode));
            PIXI.TextureCache[imageUrl] = texture;
        }
        return texture;
    };
    PIXI.Texture.fromFrame = function(frameId) {
        var texture = PIXI.TextureCache[frameId];
        if (!texture) throw new Error('The frameId "' + frameId + '" does not exist in the texture cache ');
        return texture;
    };
    PIXI.Texture.fromCanvas = function(canvas, scaleMode) {
        var baseTexture = PIXI.BaseTexture.fromCanvas(canvas, scaleMode);
        return new PIXI.Texture(baseTexture);
    };
    PIXI.Texture.addTextureToCache = function(texture, id) {
        PIXI.TextureCache[id] = texture;
    };
    PIXI.Texture.removeTextureFromCache = function(id) {
        var texture = PIXI.TextureCache[id];
        delete PIXI.TextureCache[id];
        delete PIXI.BaseTextureCache[id];
        return texture;
    };
    PIXI.TextureUvs = function() {
        this.x0 = 0;
        this.y0 = 0;
        this.x1 = 0;
        this.y1 = 0;
        this.x2 = 0;
        this.y2 = 0;
        this.x3 = 0;
        this.y3 = 0;
    };
    PIXI.Texture.emptyTexture = new PIXI.Texture(new PIXI.BaseTexture());
    PIXI.RenderTexture = function(width, height, renderer, scaleMode, resolution) {
        this.width = width || 100;
        this.height = height || 100;
        this.resolution = resolution || 1;
        this.frame = new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution);
        this.crop = new PIXI.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution);
        this.baseTexture = new PIXI.BaseTexture();
        this.baseTexture.width = this.width * this.resolution;
        this.baseTexture.height = this.height * this.resolution;
        this.baseTexture._glTextures = [];
        this.baseTexture.resolution = this.resolution;
        this.baseTexture.scaleMode = scaleMode || PIXI.scaleModes.DEFAULT;
        this.baseTexture.hasLoaded = true;
        PIXI.Texture.call(this, this.baseTexture, new PIXI.Rectangle(0, 0, this.width, this.height));
        this.renderer = renderer || PIXI.defaultRenderer;
        if (this.renderer.type === PIXI.WEBGL_RENDERER) {
            var gl = this.renderer.gl;
            this.baseTexture._dirty[gl.id] = false;
            this.textureBuffer = new PIXI.FilterTexture(gl, this.width * this.resolution, this.height * this.resolution, this.baseTexture.scaleMode);
            this.baseTexture._glTextures[gl.id] = this.textureBuffer.texture;
            this.render = this.renderWebGL;
            this.projection = new PIXI.Point(this.width * .5, -this.height * .5);
        } else {
            this.render = this.renderCanvas;
            this.textureBuffer = new PIXI.CanvasBuffer(this.width * this.resolution, this.height * this.resolution);
            this.baseTexture.source = this.textureBuffer.canvas;
        }
        this.valid = true;
        this._updateUvs();
    };
    PIXI.RenderTexture.prototype = Object.create(PIXI.Texture.prototype);
    PIXI.RenderTexture.prototype.constructor = PIXI.RenderTexture;
    PIXI.RenderTexture.prototype.resize = function(width, height, updateBase) {
        if (width === this.width && height === this.height) return;
        this.valid = width > 0 && height > 0;
        this.width = this.frame.width = this.crop.width = width;
        this.height = this.frame.height = this.crop.height = height;
        if (updateBase) {
            this.baseTexture.width = this.width;
            this.baseTexture.height = this.height;
        }
        if (this.renderer.type === PIXI.WEBGL_RENDERER) {
            this.projection.x = this.width / 2;
            this.projection.y = -this.height / 2;
        }
        if (!this.valid) return;
        this.textureBuffer.resize(this.width * this.resolution, this.height * this.resolution);
    };
    PIXI.RenderTexture.prototype.clear = function() {
        if (!this.valid) return;
        if (this.renderer.type === PIXI.WEBGL_RENDERER) {
            this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);
        }
        this.textureBuffer.clear();
    };
    PIXI.RenderTexture.prototype.renderWebGL = function(displayObject, matrix, clear) {
        if (!this.valid) return;
        var wt = displayObject.worldTransform;
        wt.identity();
        wt.translate(0, this.projection.y * 2);
        if (matrix) wt.append(matrix);
        wt.scale(1, -1);
        displayObject.worldAlpha = 1;
        var children = displayObject.children;
        for (var i = 0, j = children.length; i < j; i++) {
            children[i].updateTransform();
        }
        var gl = this.renderer.gl;
        gl.viewport(0, 0, this.width * this.resolution, this.height * this.resolution);
        gl.bindFramebuffer(gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);
        if (clear) this.textureBuffer.clear();
        this.renderer.spriteBatch.dirty = true;
        this.renderer.renderDisplayObject(displayObject, this.projection, this.textureBuffer.frameBuffer);
        this.renderer.spriteBatch.dirty = true;
    };
    PIXI.RenderTexture.prototype.renderCanvas = function(displayObject, matrix, clear) {
        if (!this.valid) return;
        var wt = displayObject.worldTransform;
        wt.identity();
        if (matrix) wt.append(matrix);
        displayObject.worldAlpha = 1;
        var children = displayObject.children;
        for (var i = 0, j = children.length; i < j; i++) {
            children[i].updateTransform();
        }
        if (clear) this.textureBuffer.clear();
        var context = this.textureBuffer.context;
        var realResolution = this.renderer.resolution;
        this.renderer.resolution = this.resolution;
        this.renderer.renderDisplayObject(displayObject, context);
        this.renderer.resolution = realResolution;
    };
    PIXI.RenderTexture.prototype.getImage = function() {
        var image = new Image();
        image.src = this.getBase64();
        return image;
    };
    PIXI.RenderTexture.prototype.getBase64 = function() {
        return this.getCanvas().toDataURL();
    };
    PIXI.RenderTexture.prototype.getCanvas = function() {
        if (this.renderer.type === PIXI.WEBGL_RENDERER) {
            var gl = this.renderer.gl;
            var width = this.textureBuffer.width;
            var height = this.textureBuffer.height;
            var webGLPixels = new Uint8Array(4 * width * height);
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.textureBuffer.frameBuffer);
            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webGLPixels);
            gl.bindFramebuffer(gl.FRAMEBUFFER, null);
            var tempCanvas = new PIXI.CanvasBuffer(width, height);
            var canvasData = tempCanvas.context.getImageData(0, 0, width, height);
            canvasData.data.set(webGLPixels);
            tempCanvas.context.putImageData(canvasData, 0, 0);
            return tempCanvas.canvas;
        } else {
            return this.textureBuffer.canvas;
        }
    };
    PIXI.RenderTexture.tempMatrix = new PIXI.Matrix();
    PIXI.VideoTexture = function(source, scaleMode) {
        if (!source) {
            throw new Error("No video source element specified.");
        }
        if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA) && source.width && source.height) {
            source.complete = true;
        }
        PIXI.BaseTexture.call(this, source, scaleMode);
        this.autoUpdate = false;
        this.updateBound = this._onUpdate.bind(this);
        if (!source.complete) {
            this._onCanPlay = this.onCanPlay.bind(this);
            source.addEventListener("canplay", this._onCanPlay);
            source.addEventListener("canplaythrough", this._onCanPlay);
            source.addEventListener("play", this.onPlayStart.bind(this));
            source.addEventListener("pause", this.onPlayStop.bind(this));
        }
    };
    PIXI.VideoTexture.prototype = Object.create(PIXI.BaseTexture.prototype);
    PIXI.VideoTexture.constructor = PIXI.VideoTexture;
    PIXI.VideoTexture.prototype._onUpdate = function() {
        if (this.autoUpdate) {
            window.requestAnimationFrame(this.updateBound);
            this.dirty();
        }
    };
    PIXI.VideoTexture.prototype.onPlayStart = function() {
        if (!this.autoUpdate) {
            window.requestAnimationFrame(this.updateBound);
            this.autoUpdate = true;
        }
    };
    PIXI.VideoTexture.prototype.onPlayStop = function() {
        this.autoUpdate = false;
    };
    PIXI.VideoTexture.prototype.onCanPlay = function() {
        if (event.type === "canplaythrough") {
            this.hasLoaded = true;
            if (this.source) {
                this.source.removeEventListener("canplay", this._onCanPlay);
                this.source.removeEventListener("canplaythrough", this._onCanPlay);
                this.width = this.source.videoWidth;
                this.height = this.source.videoHeight;
                if (!this.__loaded) {
                    this.__loaded = true;
                    this.dispatchEvent({
                        type: "loaded",
                        content: this
                    });
                }
            }
        }
    };
    PIXI.VideoTexture.baseTextureFromVideo = function(video, scaleMode) {
        if (!video._pixiId) {
            video._pixiId = "video_" + PIXI.TextureCacheIdGenerator++;
        }
        var baseTexture = PIXI.BaseTextureCache[video._pixiId];
        if (!baseTexture) {
            baseTexture = new PIXI.VideoTexture(video, scaleMode);
            PIXI.BaseTextureCache[video._pixiId] = baseTexture;
        }
        return baseTexture;
    };
    PIXI.VideoTexture.prototype.destroy = function() {
        if (this.source && this.source._pixiId) {
            PIXI.BaseTextureCache[this.source._pixiId] = null;
            delete PIXI.BaseTextureCache[this.source._pixiId];
            this.source._pixiId = null;
            delete this.source._pixiId;
        }
        PIXI.BaseTexture.prototype.destroy.call(this);
    };
    PIXI.VideoTexture.textureFromVideo = function(video, scaleMode) {
        var baseTexture = PIXI.VideoTexture.baseTextureFromVideo(video, scaleMode);
        return new PIXI.Texture(baseTexture);
    };
    PIXI.VideoTexture.fromUrl = function(videoSrc, scaleMode) {
        var video = document.createElement("video");
        video.src = videoSrc;
        video.autoPlay = true;
        video.play();
        return PIXI.VideoTexture.textureFromVideo(video, scaleMode);
    };
    PIXI.AssetLoader = function(assetURLs, crossorigin) {
        this.assetURLs = assetURLs;
        this.crossorigin = crossorigin;
        this.loadersByType = {
            jpg: PIXI.ImageLoader,
            jpeg: PIXI.ImageLoader,
            png: PIXI.ImageLoader,
            gif: PIXI.ImageLoader,
            webp: PIXI.ImageLoader,
            json: PIXI.JsonLoader,
            atlas: PIXI.AtlasLoader,
            anim: PIXI.SpineLoader,
            xml: PIXI.BitmapFontLoader,
            fnt: PIXI.BitmapFontLoader
        };
    };
    PIXI.EventTarget.mixin(PIXI.AssetLoader.prototype);
    PIXI.AssetLoader.prototype.constructor = PIXI.AssetLoader;
    PIXI.AssetLoader.prototype._getDataType = function(str) {
        var test = "data:";
        var start = str.slice(0, test.length).toLowerCase();
        if (start === test) {
            var data = str.slice(test.length);
            var sepIdx = data.indexOf(",");
            if (sepIdx === -1) return null;
            var info = data.slice(0, sepIdx).split(";")[0];
            if (!info || info.toLowerCase() === "text/plain") return "txt";
            return info.split("/").pop().toLowerCase();
        }
        return null;
    };
    PIXI.AssetLoader.prototype.load = function() {
        var scope = this;
        function onLoad(evt) {
            scope.onAssetLoaded(evt.data.content);
        }
        this.loadCount = this.assetURLs.length;
        for (var i = 0; i < this.assetURLs.length; i++) {
            var fileName = this.assetURLs[i];
            var fileType = this._getDataType(fileName);
            if (!fileType) fileType = fileName.split("?").shift().split(".").pop().toLowerCase();
            var Constructor = this.loadersByType[fileType];
            if (!Constructor) throw new Error(fileType + " is an unsupported file type");
            var loader = new Constructor(fileName, this.crossorigin);
            loader.on("loaded", onLoad);
            loader.load();
        }
    };
    PIXI.AssetLoader.prototype.onAssetLoaded = function(loader) {
        this.loadCount--;
        this.emit("onProgress", {
            content: this,
            loader: loader
        });
        if (this.onProgress) this.onProgress(loader);
        if (!this.loadCount) {
            this.emit("onComplete", {
                content: this
            });
            if (this.onComplete) this.onComplete();
        }
    };
    PIXI.JsonLoader = function(url, crossorigin) {
        this.url = url;
        this.crossorigin = crossorigin;
        this.baseUrl = url.replace(/[^\/]*$/, "");
        this.loaded = false;
    };
    PIXI.JsonLoader.prototype.constructor = PIXI.JsonLoader;
    PIXI.EventTarget.mixin(PIXI.JsonLoader.prototype);
    PIXI.JsonLoader.prototype.load = function() {
        if (window.XDomainRequest && this.crossorigin) {
            this.ajaxRequest = new window.XDomainRequest();
            this.ajaxRequest.timeout = 3e3;
            this.ajaxRequest.onerror = this.onError.bind(this);
            this.ajaxRequest.ontimeout = this.onError.bind(this);
            this.ajaxRequest.onprogress = function() {};
        } else if (window.XMLHttpRequest) {
            this.ajaxRequest = new window.XMLHttpRequest();
        } else {
            this.ajaxRequest = new window.ActiveXObject("Microsoft.XMLHTTP");
        }
        this.ajaxRequest.onload = this.onJSONLoaded.bind(this);
        this.ajaxRequest.open("GET", this.url, true);
        this.ajaxRequest.send();
    };
    PIXI.JsonLoader.prototype.onJSONLoaded = function() {
        if (!this.ajaxRequest.responseText) {
            this.onError();
            return;
        }
        this.json = JSON.parse(this.ajaxRequest.responseText);
        if (this.json.frames) {
            var textureUrl = this.baseUrl + this.json.meta.image;
            var image = new PIXI.ImageLoader(textureUrl, this.crossorigin);
            var frameData = this.json.frames;
            this.texture = image.texture.baseTexture;
            image.addEventListener("loaded", this.onLoaded.bind(this));
            for (var i in frameData) {
                var rect = frameData[i].frame;
                if (rect) {
                    var textureSize = new PIXI.Rectangle(rect.x, rect.y, rect.w, rect.h);
                    var crop = textureSize.clone();
                    var trim = null;
                    if (frameData[i].trimmed) {
                        var actualSize = frameData[i].sourceSize;
                        var realSize = frameData[i].spriteSourceSize;
                        trim = new PIXI.Rectangle(realSize.x, realSize.y, actualSize.w, actualSize.h);
                    }
                    PIXI.TextureCache[i] = new PIXI.Texture(this.texture, textureSize, crop, trim);
                }
            }
            image.load();
        } else if (this.json.bones) {
            var spineJsonParser = new spine.SkeletonJson();
            var skeletonData = spineJsonParser.readSkeletonData(this.json);
            PIXI.AnimCache[this.url] = skeletonData;
            this.onLoaded();
        } else {
            this.onLoaded();
        }
    };
    PIXI.JsonLoader.prototype.onLoaded = function() {
        this.loaded = true;
        this.dispatchEvent({
            type: "loaded",
            content: this
        });
    };
    PIXI.JsonLoader.prototype.onError = function() {
        this.dispatchEvent({
            type: "error",
            content: this
        });
    };
    PIXI.AtlasLoader = function(url, crossorigin) {
        this.url = url;
        this.baseUrl = url.replace(/[^\/]*$/, "");
        this.crossorigin = crossorigin;
        this.loaded = false;
    };
    PIXI.AtlasLoader.constructor = PIXI.AtlasLoader;
    PIXI.EventTarget.mixin(PIXI.AtlasLoader.prototype);
    PIXI.AtlasLoader.prototype.load = function() {
        this.ajaxRequest = new PIXI.AjaxRequest();
        this.ajaxRequest.onreadystatechange = this.onAtlasLoaded.bind(this);
        this.ajaxRequest.open("GET", this.url, true);
        if (this.ajaxRequest.overrideMimeType) this.ajaxRequest.overrideMimeType("application/json");
        this.ajaxRequest.send(null);
    };
    PIXI.AtlasLoader.prototype.onAtlasLoaded = function() {
        if (this.ajaxRequest.readyState === 4) {
            if (this.ajaxRequest.status === 200 || window.location.href.indexOf("http") === -1) {
                this.atlas = {
                    meta: {
                        image: []
                    },
                    frames: []
                };
                var result = this.ajaxRequest.responseText.split(/\r?\n/);
                var lineCount = -3;
                var currentImageId = 0;
                var currentFrame = null;
                var nameInNextLine = false;
                var i = 0, j = 0, selfOnLoaded = this.onLoaded.bind(this);
                for (i = 0; i < result.length; i++) {
                    result[i] = result[i].replace(/^\s+|\s+$/g, "");
                    if (result[i] === "") {
                        nameInNextLine = i + 1;
                    }
                    if (result[i].length > 0) {
                        if (nameInNextLine === i) {
                            this.atlas.meta.image.push(result[i]);
                            currentImageId = this.atlas.meta.image.length - 1;
                            this.atlas.frames.push({});
                            lineCount = -3;
                        } else if (lineCount > 0) {
                            if (lineCount % 7 === 1) {
                                if (currentFrame != null) {
                                    this.atlas.frames[currentImageId][currentFrame.name] = currentFrame;
                                }
                                currentFrame = {
                                    name: result[i],
                                    frame: {}
                                };
                            } else {
                                var text = result[i].split(" ");
                                if (lineCount % 7 === 3) {
                                    currentFrame.frame.x = Number(text[1].replace(",", ""));
                                    currentFrame.frame.y = Number(text[2]);
                                } else if (lineCount % 7 === 4) {
                                    currentFrame.frame.w = Number(text[1].replace(",", ""));
                                    currentFrame.frame.h = Number(text[2]);
                                } else if (lineCount % 7 === 5) {
                                    var realSize = {
                                        x: 0,
                                        y: 0,
                                        w: Number(text[1].replace(",", "")),
                                        h: Number(text[2])
                                    };
                                    if (realSize.w > currentFrame.frame.w || realSize.h > currentFrame.frame.h) {
                                        currentFrame.trimmed = true;
                                        currentFrame.realSize = realSize;
                                    } else {
                                        currentFrame.trimmed = false;
                                    }
                                }
                            }
                        }
                        lineCount++;
                    }
                }
                if (currentFrame != null) {
                    this.atlas.frames[currentImageId][currentFrame.name] = currentFrame;
                }
                if (this.atlas.meta.image.length > 0) {
                    this.images = [];
                    for (j = 0; j < this.atlas.meta.image.length; j++) {
                        var textureUrl = this.baseUrl + this.atlas.meta.image[j];
                        var frameData = this.atlas.frames[j];
                        this.images.push(new PIXI.ImageLoader(textureUrl, this.crossorigin));
                        for (i in frameData) {
                            var rect = frameData[i].frame;
                            if (rect) {
                                PIXI.TextureCache[i] = new PIXI.Texture(this.images[j].texture.baseTexture, {
                                    x: rect.x,
                                    y: rect.y,
                                    width: rect.w,
                                    height: rect.h
                                });
                                if (frameData[i].trimmed) {
                                    PIXI.TextureCache[i].realSize = frameData[i].realSize;
                                    PIXI.TextureCache[i].trim.x = 0;
                                    PIXI.TextureCache[i].trim.y = 0;
                                }
                            }
                        }
                    }
                    this.currentImageId = 0;
                    for (j = 0; j < this.images.length; j++) {
                        this.images[j].on("loaded", selfOnLoaded);
                    }
                    this.images[this.currentImageId].load();
                } else {
                    this.onLoaded();
                }
            } else {
                this.onError();
            }
        }
    };
    PIXI.AtlasLoader.prototype.onLoaded = function() {
        if (this.images.length - 1 > this.currentImageId) {
            this.currentImageId++;
            this.images[this.currentImageId].load();
        } else {
            this.loaded = true;
            this.emit("loaded", {
                content: this
            });
        }
    };
    PIXI.AtlasLoader.prototype.onError = function() {
        this.emit("error", {
            content: this
        });
    };
    PIXI.SpriteSheetLoader = function(url, crossorigin) {
        this.url = url;
        this.crossorigin = crossorigin;
        this.baseUrl = url.replace(/[^\/]*$/, "");
        this.texture = null;
        this.frames = {};
    };
    PIXI.SpriteSheetLoader.prototype.constructor = PIXI.SpriteSheetLoader;
    PIXI.EventTarget.mixin(PIXI.SpriteSheetLoader.prototype);
    PIXI.SpriteSheetLoader.prototype.load = function() {
        var scope = this;
        var jsonLoader = new PIXI.JsonLoader(this.url, this.crossorigin);
        jsonLoader.on("loaded", function(event) {
            scope.json = event.data.content.json;
            scope.onLoaded();
        });
        jsonLoader.load();
    };
    PIXI.SpriteSheetLoader.prototype.onLoaded = function() {
        this.emit("loaded", {
            content: this
        });
    };
    PIXI.ImageLoader = function(url, crossorigin) {
        this.texture = PIXI.Texture.fromImage(url, crossorigin);
        this.frames = [];
    };
    PIXI.ImageLoader.prototype.constructor = PIXI.ImageLoader;
    PIXI.EventTarget.mixin(PIXI.ImageLoader.prototype);
    PIXI.ImageLoader.prototype.load = function() {
        if (!this.texture.baseTexture.hasLoaded) {
            this.texture.baseTexture.on("loaded", this.onLoaded.bind(this));
        } else {
            this.onLoaded();
        }
    };
    PIXI.ImageLoader.prototype.onLoaded = function() {
        this.emit("loaded", {
            content: this
        });
    };
    PIXI.ImageLoader.prototype.loadFramedSpriteSheet = function(frameWidth, frameHeight, textureName) {
        this.frames = [];
        var cols = Math.floor(this.texture.width / frameWidth);
        var rows = Math.floor(this.texture.height / frameHeight);
        var i = 0;
        for (var y = 0; y < rows; y++) {
            for (var x = 0; x < cols; x++, i++) {
                var texture = new PIXI.Texture(this.texture.baseTexture, {
                    x: x * frameWidth,
                    y: y * frameHeight,
                    width: frameWidth,
                    height: frameHeight
                });
                this.frames.push(texture);
                if (textureName) PIXI.TextureCache[textureName + "-" + i] = texture;
            }
        }
        this.load();
    };
    PIXI.BitmapFontLoader = function(url, crossorigin) {
        this.url = url;
        this.crossorigin = crossorigin;
        this.baseUrl = url.replace(/[^\/]*$/, "");
        this.texture = null;
    };
    PIXI.BitmapFontLoader.prototype.constructor = PIXI.BitmapFontLoader;
    PIXI.EventTarget.mixin(PIXI.BitmapFontLoader.prototype);
    PIXI.BitmapFontLoader.prototype.load = function() {
        this.ajaxRequest = new PIXI.AjaxRequest();
        this.ajaxRequest.onreadystatechange = this.onXMLLoaded.bind(this);
        this.ajaxRequest.open("GET", this.url, true);
        if (this.ajaxRequest.overrideMimeType) this.ajaxRequest.overrideMimeType("application/xml");
        this.ajaxRequest.send(null);
    };
    PIXI.BitmapFontLoader.prototype.onXMLLoaded = function() {
        if (this.ajaxRequest.readyState === 4) {
            if (this.ajaxRequest.status === 200 || window.location.protocol.indexOf("http") === -1) {
                var responseXML = this.ajaxRequest.responseXML;
                if (!responseXML || /MSIE 9/i.test(navigator.userAgent) || navigator.isCocoonJS) {
                    if (typeof window.DOMParser === "function") {
                        var domparser = new DOMParser();
                        responseXML = domparser.parseFromString(this.ajaxRequest.responseText, "text/xml");
                    } else {
                        var div = document.createElement("div");
                        div.innerHTML = this.ajaxRequest.responseText;
                        responseXML = div;
                    }
                }
                if (!responseXML.getElementsByTagName) {
                    responseXML = {};
                    responseXML.getElementsByTagName = function(name) {
                        var node = [], tagRegex = new RegExp("<" + name + "(.*)/>", "g"), tagArray = this.match(tagRegex);
                        tagArray.forEach(function(tag) {
                            var propertyString = tag.replace("<" + name, "").replace(/'/g, "").replace(" ", "").replace("/>", ""), propertyListArray = propertyString.split(" "), propertyArray = {};
                            propertyListArray.forEach(function(property) {
                                var split = property.split("=");
                                propertyArray[split[0]] = split[1];
                            });
                            node.push({
                                getAttribute: function(name) {
                                    return propertyArray[name].replace('"', "");
                                }
                            });
                        });
                        return node;
                    }.bind(this.ajaxRequest.responseText);
                }
                var textureUrl = this.baseUrl + responseXML.getElementsByTagName("page")[0].getAttribute("file");
                var image = new PIXI.ImageLoader(textureUrl, this.crossorigin);
                this.texture = image.texture.baseTexture;
                var data = {};
                var info = responseXML.getElementsByTagName("info")[0];
                var common = responseXML.getElementsByTagName("common")[0];
                data.font = info.getAttribute("face");
                data.size = parseInt(info.getAttribute("size"), 10);
                data.lineHeight = parseInt(common.getAttribute("lineHeight"), 10);
                data.chars = {};
                var letters = responseXML.getElementsByTagName("char");
                for (var i = 0; i < letters.length; i++) {
                    var charCode = parseInt(letters[i].getAttribute("id"), 10);
                    var textureRect = new PIXI.Rectangle(parseInt(letters[i].getAttribute("x"), 10), parseInt(letters[i].getAttribute("y"), 10), parseInt(letters[i].getAttribute("width"), 10), parseInt(letters[i].getAttribute("height"), 10));
                    data.chars[charCode] = {
                        xOffset: parseInt(letters[i].getAttribute("xoffset"), 10),
                        yOffset: parseInt(letters[i].getAttribute("yoffset"), 10),
                        xAdvance: parseInt(letters[i].getAttribute("xadvance"), 10),
                        kerning: {},
                        texture: PIXI.TextureCache[charCode] = new PIXI.Texture(this.texture, textureRect)
                    };
                }
                var kernings = responseXML.getElementsByTagName("kerning");
                for (i = 0; i < kernings.length; i++) {
                    var first = parseInt(kernings[i].getAttribute("first"), 10);
                    var second = parseInt(kernings[i].getAttribute("second"), 10);
                    var amount = parseInt(kernings[i].getAttribute("amount"), 10);
                    data.chars[second].kerning[first] = amount;
                }
                PIXI.BitmapText.fonts[data.font] = data;
                image.addEventListener("loaded", this.onLoaded.bind(this));
                image.load();
            }
        }
    };
    PIXI.BitmapFontLoader.prototype.onLoaded = function() {
        this.emit("loaded", {
            content: this
        });
    };
    PIXI.SpineLoader = function(url, crossorigin) {
        this.url = url;
        this.crossorigin = crossorigin;
        this.loaded = false;
    };
    PIXI.SpineLoader.prototype.constructor = PIXI.SpineLoader;
    PIXI.EventTarget.mixin(PIXI.SpineLoader.prototype);
    PIXI.SpineLoader.prototype.load = function() {
        var scope = this;
        var jsonLoader = new PIXI.JsonLoader(this.url, this.crossorigin);
        jsonLoader.on("loaded", function(event) {
            scope.json = event.data.content.json;
            scope.onLoaded();
        });
        jsonLoader.load();
    };
    PIXI.SpineLoader.prototype.onLoaded = function() {
        this.loaded = true;
        this.emit("loaded", {
            content: this
        });
    };
    PIXI.AbstractFilter = function(fragmentSrc, uniforms) {
        this.passes = [ this ];
        this.shaders = [];
        this.dirty = true;
        this.padding = 0;
        this.uniforms = uniforms || {};
        this.fragmentSrc = fragmentSrc || [];
    };
    PIXI.AbstractFilter.prototype.constructor = PIXI.AbstractFilter;
    PIXI.AbstractFilter.prototype.syncUniforms = function() {
        for (var i = 0, j = this.shaders.length; i < j; i++) {
            this.shaders[i].dirty = true;
        }
    };
    PIXI.AlphaMaskFilter = function(texture) {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        texture.baseTexture._powerOf2 = true;
        this.uniforms = {
            mask: {
                type: "sampler2D",
                value: texture
            },
            mapDimensions: {
                type: "2f",
                value: {
                    x: 1,
                    y: 5112
                }
            },
            dimensions: {
                type: "4fv",
                value: [ 0, 0, 0, 0 ]
            }
        };
        if (texture.baseTexture.hasLoaded) {
            this.uniforms.mask.value.x = texture.width;
            this.uniforms.mask.value.y = texture.height;
        } else {
            this.boundLoadedFunction = this.onTextureLoaded.bind(this);
            texture.baseTexture.on("loaded", this.boundLoadedFunction);
        }
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D mask;", "uniform sampler2D uSampler;", "uniform vec2 offset;", "uniform vec4 dimensions;", "uniform vec2 mapDimensions;", "void main(void) {", "   vec2 mapCords = vTextureCoord.xy;", "   mapCords += (dimensions.zw + offset)/ dimensions.xy ;", "   mapCords.y *= -1.0;", "   mapCords.y += 1.0;", "   mapCords *= dimensions.xy / mapDimensions;", "   vec4 original =  texture2D(uSampler, vTextureCoord);", "   float maskAlpha =  texture2D(mask, mapCords).r;", "   original *= maskAlpha;", "   gl_FragColor =  original;", "}" ];
    };
    PIXI.AlphaMaskFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.AlphaMaskFilter.prototype.constructor = PIXI.AlphaMaskFilter;
    PIXI.AlphaMaskFilter.prototype.onTextureLoaded = function() {
        this.uniforms.mapDimensions.value.x = this.uniforms.mask.value.width;
        this.uniforms.mapDimensions.value.y = this.uniforms.mask.value.height;
        this.uniforms.mask.value.baseTexture.off("loaded", this.boundLoadedFunction);
    };
    Object.defineProperty(PIXI.AlphaMaskFilter.prototype, "map", {
        get: function() {
            return this.uniforms.mask.value;
        },
        set: function(value) {
            this.uniforms.mask.value = value;
        }
    });
    PIXI.ColorMatrixFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            matrix: {
                type: "mat4",
                value: [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform float invert;", "uniform mat4 matrix;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * matrix;", "}" ];
    };
    PIXI.ColorMatrixFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.ColorMatrixFilter.prototype.constructor = PIXI.ColorMatrixFilter;
    Object.defineProperty(PIXI.ColorMatrixFilter.prototype, "matrix", {
        get: function() {
            return this.uniforms.matrix.value;
        },
        set: function(value) {
            this.uniforms.matrix.value = value;
        }
    });
    PIXI.GrayFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            gray: {
                type: "1f",
                value: 1
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "uniform float gray;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord);", "   gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126*gl_FragColor.r + 0.7152*gl_FragColor.g + 0.0722*gl_FragColor.b), gray);", "}" ];
    };
    PIXI.GrayFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.GrayFilter.prototype.constructor = PIXI.GrayFilter;
    Object.defineProperty(PIXI.GrayFilter.prototype, "gray", {
        get: function() {
            return this.uniforms.gray.value;
        },
        set: function(value) {
            this.uniforms.gray.value = value;
        }
    });
    PIXI.DisplacementFilter = function(texture) {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        texture.baseTexture._powerOf2 = true;
        this.uniforms = {
            displacementMap: {
                type: "sampler2D",
                value: texture
            },
            scale: {
                type: "2f",
                value: {
                    x: 30,
                    y: 30
                }
            },
            offset: {
                type: "2f",
                value: {
                    x: 0,
                    y: 0
                }
            },
            mapDimensions: {
                type: "2f",
                value: {
                    x: 1,
                    y: 5112
                }
            },
            dimensions: {
                type: "4fv",
                value: [ 0, 0, 0, 0 ]
            }
        };
        if (texture.baseTexture.hasLoaded) {
            this.uniforms.mapDimensions.value.x = texture.width;
            this.uniforms.mapDimensions.value.y = texture.height;
        } else {
            this.boundLoadedFunction = this.onTextureLoaded.bind(this);
            texture.baseTexture.on("loaded", this.boundLoadedFunction);
        }
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D displacementMap;", "uniform sampler2D uSampler;", "uniform vec2 scale;", "uniform vec2 offset;", "uniform vec4 dimensions;", "uniform vec2 mapDimensions;", "void main(void) {", "   vec2 mapCords = vTextureCoord.xy;", "   mapCords += (dimensions.zw + offset)/ dimensions.xy ;", "   mapCords.y *= -1.0;", "   mapCords.y += 1.0;", "   vec2 matSample = texture2D(displacementMap, mapCords).xy;", "   matSample -= 0.5;", "   matSample *= scale;", "   matSample /= mapDimensions;", "   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));", "   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);", "   vec2 cord = vTextureCoord;", "}" ];
    };
    PIXI.DisplacementFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.DisplacementFilter.prototype.constructor = PIXI.DisplacementFilter;
    PIXI.DisplacementFilter.prototype.onTextureLoaded = function() {
        this.uniforms.mapDimensions.value.x = this.uniforms.displacementMap.value.width;
        this.uniforms.mapDimensions.value.y = this.uniforms.displacementMap.value.height;
        this.uniforms.displacementMap.value.baseTexture.off("loaded", this.boundLoadedFunction);
    };
    Object.defineProperty(PIXI.DisplacementFilter.prototype, "map", {
        get: function() {
            return this.uniforms.displacementMap.value;
        },
        set: function(value) {
            this.uniforms.displacementMap.value = value;
        }
    });
    Object.defineProperty(PIXI.DisplacementFilter.prototype, "scale", {
        get: function() {
            return this.uniforms.scale.value;
        },
        set: function(value) {
            this.uniforms.scale.value = value;
        }
    });
    Object.defineProperty(PIXI.DisplacementFilter.prototype, "offset", {
        get: function() {
            return this.uniforms.offset.value;
        },
        set: function(value) {
            this.uniforms.offset.value = value;
        }
    });
    PIXI.PixelateFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            invert: {
                type: "1f",
                value: 0
            },
            dimensions: {
                type: "4fv",
                value: new PIXI.Float32Array([ 1e4, 100, 10, 10 ])
            },
            pixelSize: {
                type: "2f",
                value: {
                    x: 10,
                    y: 10
                }
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform vec2 testDim;", "uniform vec4 dimensions;", "uniform vec2 pixelSize;", "uniform sampler2D uSampler;", "void main(void) {", "   vec2 coord = vTextureCoord;", "   vec2 size = dimensions.xy/pixelSize;", "   vec2 color = floor( ( vTextureCoord * size ) ) / size + pixelSize/dimensions.xy * 0.5;", "   gl_FragColor = texture2D(uSampler, color);", "}" ];
    };
    PIXI.PixelateFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.PixelateFilter.prototype.constructor = PIXI.PixelateFilter;
    Object.defineProperty(PIXI.PixelateFilter.prototype, "size", {
        get: function() {
            return this.uniforms.pixelSize.value;
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.pixelSize.value = value;
        }
    });
    PIXI.BlurXFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            blur: {
                type: "1f",
                value: 1 / 512
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform float blur;", "uniform sampler2D uSampler;", "void main(void) {", "   vec4 sum = vec4(0.0);", "   sum += texture2D(uSampler, vec2(vTextureCoord.x - 4.0*blur, vTextureCoord.y)) * 0.05;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x - 3.0*blur, vTextureCoord.y)) * 0.09;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x - 2.0*blur, vTextureCoord.y)) * 0.12;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x - blur, vTextureCoord.y)) * 0.15;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x + blur, vTextureCoord.y)) * 0.15;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x + 2.0*blur, vTextureCoord.y)) * 0.12;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x + 3.0*blur, vTextureCoord.y)) * 0.09;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x + 4.0*blur, vTextureCoord.y)) * 0.05;", "   gl_FragColor = sum;", "}" ];
    };
    PIXI.BlurXFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.BlurXFilter.prototype.constructor = PIXI.BlurXFilter;
    Object.defineProperty(PIXI.BlurXFilter.prototype, "blur", {
        get: function() {
            return this.uniforms.blur.value / (1 / 7e3);
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.blur.value = 1 / 7e3 * value;
        }
    });
    PIXI.BlurYFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            blur: {
                type: "1f",
                value: 1 / 512
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform float blur;", "uniform sampler2D uSampler;", "void main(void) {", "   vec4 sum = vec4(0.0);", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 4.0*blur)) * 0.05;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 3.0*blur)) * 0.09;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 2.0*blur)) * 0.12;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - blur)) * 0.15;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + blur)) * 0.15;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 2.0*blur)) * 0.12;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 3.0*blur)) * 0.09;", "   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 4.0*blur)) * 0.05;", "   gl_FragColor = sum;", "}" ];
    };
    PIXI.BlurYFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.BlurYFilter.prototype.constructor = PIXI.BlurYFilter;
    Object.defineProperty(PIXI.BlurYFilter.prototype, "blur", {
        get: function() {
            return this.uniforms.blur.value / (1 / 7e3);
        },
        set: function(value) {
            this.uniforms.blur.value = 1 / 7e3 * value;
        }
    });
    PIXI.BlurFilter = function() {
        this.blurXFilter = new PIXI.BlurXFilter();
        this.blurYFilter = new PIXI.BlurYFilter();
        this.passes = [ this.blurXFilter, this.blurYFilter ];
    };
    PIXI.BlurFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.BlurFilter.prototype.constructor = PIXI.BlurFilter;
    Object.defineProperty(PIXI.BlurFilter.prototype, "blur", {
        get: function() {
            return this.blurXFilter.blur;
        },
        set: function(value) {
            this.blurXFilter.blur = this.blurYFilter.blur = value;
        }
    });
    Object.defineProperty(PIXI.BlurFilter.prototype, "blurX", {
        get: function() {
            return this.blurXFilter.blur;
        },
        set: function(value) {
            this.blurXFilter.blur = value;
        }
    });
    Object.defineProperty(PIXI.BlurFilter.prototype, "blurY", {
        get: function() {
            return this.blurYFilter.blur;
        },
        set: function(value) {
            this.blurYFilter.blur = value;
        }
    });
    PIXI.InvertFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            invert: {
                type: "1f",
                value: 1
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform float invert;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord);", "   gl_FragColor.rgb = mix( (vec3(1)-gl_FragColor.rgb) * gl_FragColor.a, gl_FragColor.rgb, 1.0 - invert);", "}" ];
    };
    PIXI.InvertFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.InvertFilter.prototype.constructor = PIXI.InvertFilter;
    Object.defineProperty(PIXI.InvertFilter.prototype, "invert", {
        get: function() {
            return this.uniforms.invert.value;
        },
        set: function(value) {
            this.uniforms.invert.value = value;
        }
    });
    PIXI.SepiaFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            sepia: {
                type: "1f",
                value: 1
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform float sepia;", "uniform sampler2D uSampler;", "const mat3 sepiaMatrix = mat3(0.3588, 0.7044, 0.1368, 0.2990, 0.5870, 0.1140, 0.2392, 0.4696, 0.0912);", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord);", "   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb * sepiaMatrix, sepia);", "}" ];
    };
    PIXI.SepiaFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.SepiaFilter.prototype.constructor = PIXI.SepiaFilter;
    Object.defineProperty(PIXI.SepiaFilter.prototype, "sepia", {
        get: function() {
            return this.uniforms.sepia.value;
        },
        set: function(value) {
            this.uniforms.sepia.value = value;
        }
    });
    PIXI.TwistFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            radius: {
                type: "1f",
                value: .5
            },
            angle: {
                type: "1f",
                value: 5
            },
            offset: {
                type: "2f",
                value: {
                    x: .5,
                    y: .5
                }
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform vec4 dimensions;", "uniform sampler2D uSampler;", "uniform float radius;", "uniform float angle;", "uniform vec2 offset;", "void main(void) {", "   vec2 coord = vTextureCoord - offset;", "   float distance = length(coord);", "   if (distance < radius) {", "       float ratio = (radius - distance) / radius;", "       float angleMod = ratio * ratio * angle;", "       float s = sin(angleMod);", "       float c = cos(angleMod);", "       coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);", "   }", "   gl_FragColor = texture2D(uSampler, coord+offset);", "}" ];
    };
    PIXI.TwistFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.TwistFilter.prototype.constructor = PIXI.TwistFilter;
    Object.defineProperty(PIXI.TwistFilter.prototype, "offset", {
        get: function() {
            return this.uniforms.offset.value;
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.offset.value = value;
        }
    });
    Object.defineProperty(PIXI.TwistFilter.prototype, "radius", {
        get: function() {
            return this.uniforms.radius.value;
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.radius.value = value;
        }
    });
    Object.defineProperty(PIXI.TwistFilter.prototype, "angle", {
        get: function() {
            return this.uniforms.angle.value;
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.angle.value = value;
        }
    });
    PIXI.ColorStepFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            step: {
                type: "1f",
                value: 5
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "uniform float step;", "void main(void) {", "   vec4 color = texture2D(uSampler, vTextureCoord);", "   color = floor(color * step) / step;", "   gl_FragColor = color;", "}" ];
    };
    PIXI.ColorStepFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.ColorStepFilter.prototype.constructor = PIXI.ColorStepFilter;
    Object.defineProperty(PIXI.ColorStepFilter.prototype, "step", {
        get: function() {
            return this.uniforms.step.value;
        },
        set: function(value) {
            this.uniforms.step.value = value;
        }
    });
    PIXI.DotScreenFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            scale: {
                type: "1f",
                value: 1
            },
            angle: {
                type: "1f",
                value: 5
            },
            dimensions: {
                type: "4fv",
                value: [ 0, 0, 0, 0 ]
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform vec4 dimensions;", "uniform sampler2D uSampler;", "uniform float angle;", "uniform float scale;", "float pattern() {", "   float s = sin(angle), c = cos(angle);", "   vec2 tex = vTextureCoord * dimensions.xy;", "   vec2 point = vec2(", "       c * tex.x - s * tex.y,", "       s * tex.x + c * tex.y", "   ) * scale;", "   return (sin(point.x) * sin(point.y)) * 4.0;", "}", "void main() {", "   vec4 color = texture2D(uSampler, vTextureCoord);", "   float average = (color.r + color.g + color.b) / 3.0;", "   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);", "}" ];
    };
    PIXI.DotScreenFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.DotScreenFilter.prototype.constructor = PIXI.DotScreenFilter;
    Object.defineProperty(PIXI.DotScreenFilter.prototype, "scale", {
        get: function() {
            return this.uniforms.scale.value;
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.scale.value = value;
        }
    });
    Object.defineProperty(PIXI.DotScreenFilter.prototype, "angle", {
        get: function() {
            return this.uniforms.angle.value;
        },
        set: function(value) {
            this.dirty = true;
            this.uniforms.angle.value = value;
        }
    });
    PIXI.CrossHatchFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            blur: {
                type: "1f",
                value: 1 / 512
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform float blur;", "uniform sampler2D uSampler;", "void main(void) {", "    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);", "    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);", "    if (lum < 1.00) {", "        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {", "            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);", "        }", "    }", "    if (lum < 0.75) {", "        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {", "            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);", "        }", "    }", "    if (lum < 0.50) {", "        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {", "            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);", "        }", "    }", "    if (lum < 0.3) {", "        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {", "            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);", "        }", "    }", "}" ];
    };
    PIXI.CrossHatchFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.CrossHatchFilter.prototype.constructor = PIXI.CrossHatchFilter;
    Object.defineProperty(PIXI.CrossHatchFilter.prototype, "blur", {
        get: function() {
            return this.uniforms.blur.value / (1 / 7e3);
        },
        set: function(value) {
            this.uniforms.blur.value = 1 / 7e3 * value;
        }
    });
    PIXI.RGBSplitFilter = function() {
        PIXI.AbstractFilter.call(this);
        this.passes = [ this ];
        this.uniforms = {
            red: {
                type: "2f",
                value: {
                    x: 20,
                    y: 20
                }
            },
            green: {
                type: "2f",
                value: {
                    x: -20,
                    y: 20
                }
            },
            blue: {
                type: "2f",
                value: {
                    x: 20,
                    y: -20
                }
            },
            dimensions: {
                type: "4fv",
                value: [ 0, 0, 0, 0 ]
            }
        };
        this.fragmentSrc = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform vec2 red;", "uniform vec2 green;", "uniform vec2 blue;", "uniform vec4 dimensions;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/dimensions.xy).r;", "   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/dimensions.xy).g;", "   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/dimensions.xy).b;", "   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;", "}" ];
    };
    PIXI.RGBSplitFilter.prototype = Object.create(PIXI.AbstractFilter.prototype);
    PIXI.RGBSplitFilter.prototype.constructor = PIXI.RGBSplitFilter;
    Object.defineProperty(PIXI.RGBSplitFilter.prototype, "red", {
        get: function() {
            return this.uniforms.red.value;
        },
        set: function(value) {
            this.uniforms.red.value = value;
        }
    });
    Object.defineProperty(PIXI.RGBSplitFilter.prototype, "green", {
        get: function() {
            return this.uniforms.green.value;
        },
        set: function(value) {
            this.uniforms.green.value = value;
        }
    });
    Object.defineProperty(PIXI.RGBSplitFilter.prototype, "blue", {
        get: function() {
            return this.uniforms.blue.value;
        },
        set: function(value) {
            this.uniforms.blue.value = value;
        }
    });
    if (typeof exports !== "undefined") {
        if (typeof module !== "undefined" && module.exports) {
            exports = module.exports = PIXI;
        }
        exports.PIXI = PIXI;
    } else if (typeof define !== "undefined" && define.amd) {
        define(PIXI);
    } else {
        root.PIXI = PIXI;
    }
}).call(this);

if (!window.performance) {
    var performance = undefined;
}

!function(e) {
    if ("object" == typeof exports) module.exports = e(); else if ("function" == typeof define && define.amd) define(e); else {
        var f;
        "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), 
        f.p2 = e();
    }
}(function() {
    var define, module, exports;
    return function e(t, n, r) {
        function s(o, u) {
            if (!n[o]) {
                if (!t[o]) {
                    var a = typeof require == "function" && require;
                    if (!u && a) return a(o, !0);
                    if (i) return i(o, !0);
                    throw new Error("Cannot find module '" + o + "'");
                }
                var f = n[o] = {
                    exports: {}
                };
                t[o][0].call(f.exports, function(e) {
                    var n = t[o][1][e];
                    return s(n ? n : e);
                }, f, f.exports, e, t, n, r);
            }
            return n[o].exports;
        }
        var i = typeof require == "function" && require;
        for (var o = 0; o < r.length; o++) s(r[o]);
        return s;
    }({
        1: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var base64 = _dereq_("base64-js");
                var ieee754 = _dereq_("ieee754");
                exports.Buffer = Buffer;
                exports.SlowBuffer = Buffer;
                exports.INSPECT_MAX_BYTES = 50;
                Buffer.poolSize = 8192;
                Buffer._useTypedArrays = function() {
                    if (typeof Uint8Array !== "function" || typeof ArrayBuffer !== "function") return false;
                    try {
                        var arr = new Uint8Array(0);
                        arr.foo = function() {
                            return 42;
                        };
                        return 42 === arr.foo() && typeof arr.subarray === "function";
                    } catch (e) {
                        return false;
                    }
                }();
                function Buffer(subject, encoding, noZero) {
                    if (!(this instanceof Buffer)) return new Buffer(subject, encoding, noZero);
                    var type = typeof subject;
                    if (encoding === "base64" && type === "string") {
                        subject = stringtrim(subject);
                        while (subject.length % 4 !== 0) {
                            subject = subject + "=";
                        }
                    }
                    var length;
                    if (type === "number") length = coerce(subject); else if (type === "string") length = Buffer.byteLength(subject, encoding); else if (type === "object") length = coerce(subject.length); else throw new Error("First argument needs to be a number, array or string.");
                    var buf;
                    if (Buffer._useTypedArrays) {
                        buf = augment(new Uint8Array(length));
                    } else {
                        buf = this;
                        buf.length = length;
                        buf._isBuffer = true;
                    }
                    var i;
                    if (Buffer._useTypedArrays && typeof Uint8Array === "function" && subject instanceof Uint8Array) {
                        buf._set(subject);
                    } else if (isArrayish(subject)) {
                        for (i = 0; i < length; i++) {
                            if (Buffer.isBuffer(subject)) buf[i] = subject.readUInt8(i); else buf[i] = subject[i];
                        }
                    } else if (type === "string") {
                        buf.write(subject, 0, encoding);
                    } else if (type === "number" && !Buffer._useTypedArrays && !noZero) {
                        for (i = 0; i < length; i++) {
                            buf[i] = 0;
                        }
                    }
                    return buf;
                }
                Buffer.isEncoding = function(encoding) {
                    switch (String(encoding).toLowerCase()) {
                      case "hex":
                      case "utf8":
                      case "utf-8":
                      case "ascii":
                      case "binary":
                      case "base64":
                      case "raw":
                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        return true;

                      default:
                        return false;
                    }
                };
                Buffer.isBuffer = function(b) {
                    return !!(b !== null && b !== undefined && b._isBuffer);
                };
                Buffer.byteLength = function(str, encoding) {
                    var ret;
                    str = str + "";
                    switch (encoding || "utf8") {
                      case "hex":
                        ret = str.length / 2;
                        break;

                      case "utf8":
                      case "utf-8":
                        ret = utf8ToBytes(str).length;
                        break;

                      case "ascii":
                      case "binary":
                      case "raw":
                        ret = str.length;
                        break;

                      case "base64":
                        ret = base64ToBytes(str).length;
                        break;

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        ret = str.length * 2;
                        break;

                      default:
                        throw new Error("Unknown encoding");
                    }
                    return ret;
                };
                Buffer.concat = function(list, totalLength) {
                    assert(isArray(list), "Usage: Buffer.concat(list, [totalLength])\n" + "list should be an Array.");
                    if (list.length === 0) {
                        return new Buffer(0);
                    } else if (list.length === 1) {
                        return list[0];
                    }
                    var i;
                    if (typeof totalLength !== "number") {
                        totalLength = 0;
                        for (i = 0; i < list.length; i++) {
                            totalLength += list[i].length;
                        }
                    }
                    var buf = new Buffer(totalLength);
                    var pos = 0;
                    for (i = 0; i < list.length; i++) {
                        var item = list[i];
                        item.copy(buf, pos);
                        pos += item.length;
                    }
                    return buf;
                };
                function _hexWrite(buf, string, offset, length) {
                    offset = Number(offset) || 0;
                    var remaining = buf.length - offset;
                    if (!length) {
                        length = remaining;
                    } else {
                        length = Number(length);
                        if (length > remaining) {
                            length = remaining;
                        }
                    }
                    var strLen = string.length;
                    assert(strLen % 2 === 0, "Invalid hex string");
                    if (length > strLen / 2) {
                        length = strLen / 2;
                    }
                    for (var i = 0; i < length; i++) {
                        var byte = parseInt(string.substr(i * 2, 2), 16);
                        assert(!isNaN(byte), "Invalid hex string");
                        buf[offset + i] = byte;
                    }
                    Buffer._charsWritten = i * 2;
                    return i;
                }
                function _utf8Write(buf, string, offset, length) {
                    var charsWritten = Buffer._charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length);
                    return charsWritten;
                }
                function _asciiWrite(buf, string, offset, length) {
                    var charsWritten = Buffer._charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length);
                    return charsWritten;
                }
                function _binaryWrite(buf, string, offset, length) {
                    return _asciiWrite(buf, string, offset, length);
                }
                function _base64Write(buf, string, offset, length) {
                    var charsWritten = Buffer._charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length);
                    return charsWritten;
                }
                function _utf16leWrite(buf, string, offset, length) {
                    var charsWritten = Buffer._charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length);
                    return charsWritten;
                }
                Buffer.prototype.write = function(string, offset, length, encoding) {
                    if (isFinite(offset)) {
                        if (!isFinite(length)) {
                            encoding = length;
                            length = undefined;
                        }
                    } else {
                        var swap = encoding;
                        encoding = offset;
                        offset = length;
                        length = swap;
                    }
                    offset = Number(offset) || 0;
                    var remaining = this.length - offset;
                    if (!length) {
                        length = remaining;
                    } else {
                        length = Number(length);
                        if (length > remaining) {
                            length = remaining;
                        }
                    }
                    encoding = String(encoding || "utf8").toLowerCase();
                    var ret;
                    switch (encoding) {
                      case "hex":
                        ret = _hexWrite(this, string, offset, length);
                        break;

                      case "utf8":
                      case "utf-8":
                        ret = _utf8Write(this, string, offset, length);
                        break;

                      case "ascii":
                        ret = _asciiWrite(this, string, offset, length);
                        break;

                      case "binary":
                        ret = _binaryWrite(this, string, offset, length);
                        break;

                      case "base64":
                        ret = _base64Write(this, string, offset, length);
                        break;

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        ret = _utf16leWrite(this, string, offset, length);
                        break;

                      default:
                        throw new Error("Unknown encoding");
                    }
                    return ret;
                };
                Buffer.prototype.toString = function(encoding, start, end) {
                    var self = this;
                    encoding = String(encoding || "utf8").toLowerCase();
                    start = Number(start) || 0;
                    end = end !== undefined ? Number(end) : end = self.length;
                    if (end === start) return "";
                    var ret;
                    switch (encoding) {
                      case "hex":
                        ret = _hexSlice(self, start, end);
                        break;

                      case "utf8":
                      case "utf-8":
                        ret = _utf8Slice(self, start, end);
                        break;

                      case "ascii":
                        ret = _asciiSlice(self, start, end);
                        break;

                      case "binary":
                        ret = _binarySlice(self, start, end);
                        break;

                      case "base64":
                        ret = _base64Slice(self, start, end);
                        break;

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        ret = _utf16leSlice(self, start, end);
                        break;

                      default:
                        throw new Error("Unknown encoding");
                    }
                    return ret;
                };
                Buffer.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    };
                };
                Buffer.prototype.copy = function(target, target_start, start, end) {
                    var source = this;
                    if (!start) start = 0;
                    if (!end && end !== 0) end = this.length;
                    if (!target_start) target_start = 0;
                    if (end === start) return;
                    if (target.length === 0 || source.length === 0) return;
                    assert(end >= start, "sourceEnd < sourceStart");
                    assert(target_start >= 0 && target_start < target.length, "targetStart out of bounds");
                    assert(start >= 0 && start < source.length, "sourceStart out of bounds");
                    assert(end >= 0 && end <= source.length, "sourceEnd out of bounds");
                    if (end > this.length) end = this.length;
                    if (target.length - target_start < end - start) end = target.length - target_start + start;
                    for (var i = 0; i < end - start; i++) target[i + target_start] = this[i + start];
                };
                function _base64Slice(buf, start, end) {
                    if (start === 0 && end === buf.length) {
                        return base64.fromByteArray(buf);
                    } else {
                        return base64.fromByteArray(buf.slice(start, end));
                    }
                }
                function _utf8Slice(buf, start, end) {
                    var res = "";
                    var tmp = "";
                    end = Math.min(buf.length, end);
                    for (var i = start; i < end; i++) {
                        if (buf[i] <= 127) {
                            res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);
                            tmp = "";
                        } else {
                            tmp += "%" + buf[i].toString(16);
                        }
                    }
                    return res + decodeUtf8Char(tmp);
                }
                function _asciiSlice(buf, start, end) {
                    var ret = "";
                    end = Math.min(buf.length, end);
                    for (var i = start; i < end; i++) ret += String.fromCharCode(buf[i]);
                    return ret;
                }
                function _binarySlice(buf, start, end) {
                    return _asciiSlice(buf, start, end);
                }
                function _hexSlice(buf, start, end) {
                    var len = buf.length;
                    if (!start || start < 0) start = 0;
                    if (!end || end < 0 || end > len) end = len;
                    var out = "";
                    for (var i = start; i < end; i++) {
                        out += toHex(buf[i]);
                    }
                    return out;
                }
                function _utf16leSlice(buf, start, end) {
                    var bytes = buf.slice(start, end);
                    var res = "";
                    for (var i = 0; i < bytes.length; i += 2) {
                        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
                    }
                    return res;
                }
                Buffer.prototype.slice = function(start, end) {
                    var len = this.length;
                    start = clamp(start, len, 0);
                    end = clamp(end, len, len);
                    if (Buffer._useTypedArrays) {
                        return augment(this.subarray(start, end));
                    } else {
                        var sliceLen = end - start;
                        var newBuf = new Buffer(sliceLen, undefined, true);
                        for (var i = 0; i < sliceLen; i++) {
                            newBuf[i] = this[i + start];
                        }
                        return newBuf;
                    }
                };
                Buffer.prototype.get = function(offset) {
                    console.log(".get() is deprecated. Access using array indexes instead.");
                    return this.readUInt8(offset);
                };
                Buffer.prototype.set = function(v, offset) {
                    console.log(".set() is deprecated. Access using array indexes instead.");
                    return this.writeUInt8(v, offset);
                };
                Buffer.prototype.readUInt8 = function(offset, noAssert) {
                    if (!noAssert) {
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset < this.length, "Trying to read beyond buffer length");
                    }
                    if (offset >= this.length) return;
                    return this[offset];
                };
                function _readUInt16(buf, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 1 < buf.length, "Trying to read beyond buffer length");
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    var val;
                    if (littleEndian) {
                        val = buf[offset];
                        if (offset + 1 < len) val |= buf[offset + 1] << 8;
                    } else {
                        val = buf[offset] << 8;
                        if (offset + 1 < len) val |= buf[offset + 1];
                    }
                    return val;
                }
                Buffer.prototype.readUInt16LE = function(offset, noAssert) {
                    return _readUInt16(this, offset, true, noAssert);
                };
                Buffer.prototype.readUInt16BE = function(offset, noAssert) {
                    return _readUInt16(this, offset, false, noAssert);
                };
                function _readUInt32(buf, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 3 < buf.length, "Trying to read beyond buffer length");
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    var val;
                    if (littleEndian) {
                        if (offset + 2 < len) val = buf[offset + 2] << 16;
                        if (offset + 1 < len) val |= buf[offset + 1] << 8;
                        val |= buf[offset];
                        if (offset + 3 < len) val = val + (buf[offset + 3] << 24 >>> 0);
                    } else {
                        if (offset + 1 < len) val = buf[offset + 1] << 16;
                        if (offset + 2 < len) val |= buf[offset + 2] << 8;
                        if (offset + 3 < len) val |= buf[offset + 3];
                        val = val + (buf[offset] << 24 >>> 0);
                    }
                    return val;
                }
                Buffer.prototype.readUInt32LE = function(offset, noAssert) {
                    return _readUInt32(this, offset, true, noAssert);
                };
                Buffer.prototype.readUInt32BE = function(offset, noAssert) {
                    return _readUInt32(this, offset, false, noAssert);
                };
                Buffer.prototype.readInt8 = function(offset, noAssert) {
                    if (!noAssert) {
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset < this.length, "Trying to read beyond buffer length");
                    }
                    if (offset >= this.length) return;
                    var neg = this[offset] & 128;
                    if (neg) return (255 - this[offset] + 1) * -1; else return this[offset];
                };
                function _readInt16(buf, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 1 < buf.length, "Trying to read beyond buffer length");
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    var val = _readUInt16(buf, offset, littleEndian, true);
                    var neg = val & 32768;
                    if (neg) return (65535 - val + 1) * -1; else return val;
                }
                Buffer.prototype.readInt16LE = function(offset, noAssert) {
                    return _readInt16(this, offset, true, noAssert);
                };
                Buffer.prototype.readInt16BE = function(offset, noAssert) {
                    return _readInt16(this, offset, false, noAssert);
                };
                function _readInt32(buf, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 3 < buf.length, "Trying to read beyond buffer length");
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    var val = _readUInt32(buf, offset, littleEndian, true);
                    var neg = val & 2147483648;
                    if (neg) return (4294967295 - val + 1) * -1; else return val;
                }
                Buffer.prototype.readInt32LE = function(offset, noAssert) {
                    return _readInt32(this, offset, true, noAssert);
                };
                Buffer.prototype.readInt32BE = function(offset, noAssert) {
                    return _readInt32(this, offset, false, noAssert);
                };
                function _readFloat(buf, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset + 3 < buf.length, "Trying to read beyond buffer length");
                    }
                    return ieee754.read(buf, offset, littleEndian, 23, 4);
                }
                Buffer.prototype.readFloatLE = function(offset, noAssert) {
                    return _readFloat(this, offset, true, noAssert);
                };
                Buffer.prototype.readFloatBE = function(offset, noAssert) {
                    return _readFloat(this, offset, false, noAssert);
                };
                function _readDouble(buf, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset + 7 < buf.length, "Trying to read beyond buffer length");
                    }
                    return ieee754.read(buf, offset, littleEndian, 52, 8);
                }
                Buffer.prototype.readDoubleLE = function(offset, noAssert) {
                    return _readDouble(this, offset, true, noAssert);
                };
                Buffer.prototype.readDoubleBE = function(offset, noAssert) {
                    return _readDouble(this, offset, false, noAssert);
                };
                Buffer.prototype.writeUInt8 = function(value, offset, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset < this.length, "trying to write beyond buffer length");
                        verifuint(value, 255);
                    }
                    if (offset >= this.length) return;
                    this[offset] = value;
                };
                function _writeUInt16(buf, value, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 1 < buf.length, "trying to write beyond buffer length");
                        verifuint(value, 65535);
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {
                        buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
                    }
                }
                Buffer.prototype.writeUInt16LE = function(value, offset, noAssert) {
                    _writeUInt16(this, value, offset, true, noAssert);
                };
                Buffer.prototype.writeUInt16BE = function(value, offset, noAssert) {
                    _writeUInt16(this, value, offset, false, noAssert);
                };
                function _writeUInt32(buf, value, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 3 < buf.length, "trying to write beyond buffer length");
                        verifuint(value, 4294967295);
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {
                        buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 255;
                    }
                }
                Buffer.prototype.writeUInt32LE = function(value, offset, noAssert) {
                    _writeUInt32(this, value, offset, true, noAssert);
                };
                Buffer.prototype.writeUInt32BE = function(value, offset, noAssert) {
                    _writeUInt32(this, value, offset, false, noAssert);
                };
                Buffer.prototype.writeInt8 = function(value, offset, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset < this.length, "Trying to write beyond buffer length");
                        verifsint(value, 127, -128);
                    }
                    if (offset >= this.length) return;
                    if (value >= 0) this.writeUInt8(value, offset, noAssert); else this.writeUInt8(255 + value + 1, offset, noAssert);
                };
                function _writeInt16(buf, value, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 1 < buf.length, "Trying to write beyond buffer length");
                        verifsint(value, 32767, -32768);
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    if (value >= 0) _writeUInt16(buf, value, offset, littleEndian, noAssert); else _writeUInt16(buf, 65535 + value + 1, offset, littleEndian, noAssert);
                }
                Buffer.prototype.writeInt16LE = function(value, offset, noAssert) {
                    _writeInt16(this, value, offset, true, noAssert);
                };
                Buffer.prototype.writeInt16BE = function(value, offset, noAssert) {
                    _writeInt16(this, value, offset, false, noAssert);
                };
                function _writeInt32(buf, value, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 3 < buf.length, "Trying to write beyond buffer length");
                        verifsint(value, 2147483647, -2147483648);
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    if (value >= 0) _writeUInt32(buf, value, offset, littleEndian, noAssert); else _writeUInt32(buf, 4294967295 + value + 1, offset, littleEndian, noAssert);
                }
                Buffer.prototype.writeInt32LE = function(value, offset, noAssert) {
                    _writeInt32(this, value, offset, true, noAssert);
                };
                Buffer.prototype.writeInt32BE = function(value, offset, noAssert) {
                    _writeInt32(this, value, offset, false, noAssert);
                };
                function _writeFloat(buf, value, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 3 < buf.length, "Trying to write beyond buffer length");
                        verifIEEE754(value, 3.4028234663852886e38, -3.4028234663852886e38);
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    ieee754.write(buf, value, offset, littleEndian, 23, 4);
                }
                Buffer.prototype.writeFloatLE = function(value, offset, noAssert) {
                    _writeFloat(this, value, offset, true, noAssert);
                };
                Buffer.prototype.writeFloatBE = function(value, offset, noAssert) {
                    _writeFloat(this, value, offset, false, noAssert);
                };
                function _writeDouble(buf, value, offset, littleEndian, noAssert) {
                    if (!noAssert) {
                        assert(value !== undefined && value !== null, "missing value");
                        assert(typeof littleEndian === "boolean", "missing or invalid endian");
                        assert(offset !== undefined && offset !== null, "missing offset");
                        assert(offset + 7 < buf.length, "Trying to write beyond buffer length");
                        verifIEEE754(value, 1.7976931348623157e308, -1.7976931348623157e308);
                    }
                    var len = buf.length;
                    if (offset >= len) return;
                    ieee754.write(buf, value, offset, littleEndian, 52, 8);
                }
                Buffer.prototype.writeDoubleLE = function(value, offset, noAssert) {
                    _writeDouble(this, value, offset, true, noAssert);
                };
                Buffer.prototype.writeDoubleBE = function(value, offset, noAssert) {
                    _writeDouble(this, value, offset, false, noAssert);
                };
                Buffer.prototype.fill = function(value, start, end) {
                    if (!value) value = 0;
                    if (!start) start = 0;
                    if (!end) end = this.length;
                    if (typeof value === "string") {
                        value = value.charCodeAt(0);
                    }
                    assert(typeof value === "number" && !isNaN(value), "value is not a number");
                    assert(end >= start, "end < start");
                    if (end === start) return;
                    if (this.length === 0) return;
                    assert(start >= 0 && start < this.length, "start out of bounds");
                    assert(end >= 0 && end <= this.length, "end out of bounds");
                    for (var i = start; i < end; i++) {
                        this[i] = value;
                    }
                };
                Buffer.prototype.inspect = function() {
                    var out = [];
                    var len = this.length;
                    for (var i = 0; i < len; i++) {
                        out[i] = toHex(this[i]);
                        if (i === exports.INSPECT_MAX_BYTES) {
                            out[i + 1] = "...";
                            break;
                        }
                    }
                    return "<Buffer " + out.join(" ") + ">";
                };
                Buffer.prototype.toArrayBuffer = function() {
                    if (typeof Uint8Array === "function") {
                        if (Buffer._useTypedArrays) {
                            return new Buffer(this).buffer;
                        } else {
                            var buf = new Uint8Array(this.length);
                            for (var i = 0, len = buf.length; i < len; i += 1) buf[i] = this[i];
                            return buf.buffer;
                        }
                    } else {
                        throw new Error("Buffer.toArrayBuffer not supported in this browser");
                    }
                };
                function stringtrim(str) {
                    if (str.trim) return str.trim();
                    return str.replace(/^\s+|\s+$/g, "");
                }
                var BP = Buffer.prototype;
                function augment(arr) {
                    arr._isBuffer = true;
                    arr._get = arr.get;
                    arr._set = arr.set;
                    arr.get = BP.get;
                    arr.set = BP.set;
                    arr.write = BP.write;
                    arr.toString = BP.toString;
                    arr.toLocaleString = BP.toString;
                    arr.toJSON = BP.toJSON;
                    arr.copy = BP.copy;
                    arr.slice = BP.slice;
                    arr.readUInt8 = BP.readUInt8;
                    arr.readUInt16LE = BP.readUInt16LE;
                    arr.readUInt16BE = BP.readUInt16BE;
                    arr.readUInt32LE = BP.readUInt32LE;
                    arr.readUInt32BE = BP.readUInt32BE;
                    arr.readInt8 = BP.readInt8;
                    arr.readInt16LE = BP.readInt16LE;
                    arr.readInt16BE = BP.readInt16BE;
                    arr.readInt32LE = BP.readInt32LE;
                    arr.readInt32BE = BP.readInt32BE;
                    arr.readFloatLE = BP.readFloatLE;
                    arr.readFloatBE = BP.readFloatBE;
                    arr.readDoubleLE = BP.readDoubleLE;
                    arr.readDoubleBE = BP.readDoubleBE;
                    arr.writeUInt8 = BP.writeUInt8;
                    arr.writeUInt16LE = BP.writeUInt16LE;
                    arr.writeUInt16BE = BP.writeUInt16BE;
                    arr.writeUInt32LE = BP.writeUInt32LE;
                    arr.writeUInt32BE = BP.writeUInt32BE;
                    arr.writeInt8 = BP.writeInt8;
                    arr.writeInt16LE = BP.writeInt16LE;
                    arr.writeInt16BE = BP.writeInt16BE;
                    arr.writeInt32LE = BP.writeInt32LE;
                    arr.writeInt32BE = BP.writeInt32BE;
                    arr.writeFloatLE = BP.writeFloatLE;
                    arr.writeFloatBE = BP.writeFloatBE;
                    arr.writeDoubleLE = BP.writeDoubleLE;
                    arr.writeDoubleBE = BP.writeDoubleBE;
                    arr.fill = BP.fill;
                    arr.inspect = BP.inspect;
                    arr.toArrayBuffer = BP.toArrayBuffer;
                    return arr;
                }
                function clamp(index, len, defaultValue) {
                    if (typeof index !== "number") return defaultValue;
                    index = ~~index;
                    if (index >= len) return len;
                    if (index >= 0) return index;
                    index += len;
                    if (index >= 0) return index;
                    return 0;
                }
                function coerce(length) {
                    length = ~~Math.ceil(+length);
                    return length < 0 ? 0 : length;
                }
                function isArray(subject) {
                    return (Array.isArray || function(subject) {
                        return Object.prototype.toString.call(subject) === "[object Array]";
                    })(subject);
                }
                function isArrayish(subject) {
                    return isArray(subject) || Buffer.isBuffer(subject) || subject && typeof subject === "object" && typeof subject.length === "number";
                }
                function toHex(n) {
                    if (n < 16) return "0" + n.toString(16);
                    return n.toString(16);
                }
                function utf8ToBytes(str) {
                    var byteArray = [];
                    for (var i = 0; i < str.length; i++) {
                        var b = str.charCodeAt(i);
                        if (b <= 127) byteArray.push(str.charCodeAt(i)); else {
                            var start = i;
                            if (b >= 55296 && b <= 57343) i++;
                            var h = encodeURIComponent(str.slice(start, i + 1)).substr(1).split("%");
                            for (var j = 0; j < h.length; j++) byteArray.push(parseInt(h[j], 16));
                        }
                    }
                    return byteArray;
                }
                function asciiToBytes(str) {
                    var byteArray = [];
                    for (var i = 0; i < str.length; i++) {
                        byteArray.push(str.charCodeAt(i) & 255);
                    }
                    return byteArray;
                }
                function utf16leToBytes(str) {
                    var c, hi, lo;
                    var byteArray = [];
                    for (var i = 0; i < str.length; i++) {
                        c = str.charCodeAt(i);
                        hi = c >> 8;
                        lo = c % 256;
                        byteArray.push(lo);
                        byteArray.push(hi);
                    }
                    return byteArray;
                }
                function base64ToBytes(str) {
                    return base64.toByteArray(str);
                }
                function blitBuffer(src, dst, offset, length) {
                    var pos;
                    for (var i = 0; i < length; i++) {
                        if (i + offset >= dst.length || i >= src.length) break;
                        dst[i + offset] = src[i];
                    }
                    return i;
                }
                function decodeUtf8Char(str) {
                    try {
                        return decodeURIComponent(str);
                    } catch (err) {
                        return String.fromCharCode(65533);
                    }
                }
                function verifuint(value, max) {
                    assert(typeof value === "number", "cannot write a non-number as a number");
                    assert(value >= 0, "specified a negative value for writing an unsigned value");
                    assert(value <= max, "value is larger than maximum value for type");
                    assert(Math.floor(value) === value, "value has a fractional component");
                }
                function verifsint(value, max, min) {
                    assert(typeof value === "number", "cannot write a non-number as a number");
                    assert(value <= max, "value larger than maximum allowed value");
                    assert(value >= min, "value smaller than minimum allowed value");
                    assert(Math.floor(value) === value, "value has a fractional component");
                }
                function verifIEEE754(value, max, min) {
                    assert(typeof value === "number", "cannot write a non-number as a number");
                    assert(value <= max, "value larger than maximum allowed value");
                    assert(value >= min, "value smaller than minimum allowed value");
                }
                function assert(test, message) {
                    if (!test) throw new Error(message || "Failed assertion");
                }
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/buffer/index.js", "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/buffer");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            "base64-js": 2,
            buffer: 1,
            ieee754: 3
        } ],
        2: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var lookup = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
                (function(exports) {
                    "use strict";
                    var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
                    var ZERO = "0".charCodeAt(0);
                    var PLUS = "+".charCodeAt(0);
                    var SLASH = "/".charCodeAt(0);
                    var NUMBER = "0".charCodeAt(0);
                    var LOWER = "a".charCodeAt(0);
                    var UPPER = "A".charCodeAt(0);
                    function decode(elt) {
                        var code = elt.charCodeAt(0);
                        if (code === PLUS) return 62;
                        if (code === SLASH) return 63;
                        if (code < NUMBER) return -1;
                        if (code < NUMBER + 10) return code - NUMBER + 26 + 26;
                        if (code < UPPER + 26) return code - UPPER;
                        if (code < LOWER + 26) return code - LOWER + 26;
                    }
                    function b64ToByteArray(b64) {
                        var i, j, l, tmp, placeHolders, arr;
                        if (b64.length % 4 > 0) {
                            throw new Error("Invalid string. Length must be a multiple of 4");
                        }
                        var len = b64.length;
                        placeHolders = "=" === b64.charAt(len - 2) ? 2 : "=" === b64.charAt(len - 1) ? 1 : 0;
                        arr = new Arr(b64.length * 3 / 4 - placeHolders);
                        l = placeHolders > 0 ? b64.length - 4 : b64.length;
                        var L = 0;
                        function push(v) {
                            arr[L++] = v;
                        }
                        for (i = 0, j = 0; i < l; i += 4, j += 3) {
                            tmp = decode(b64.charAt(i)) << 18 | decode(b64.charAt(i + 1)) << 12 | decode(b64.charAt(i + 2)) << 6 | decode(b64.charAt(i + 3));
                            push((tmp & 16711680) >> 16);
                            push((tmp & 65280) >> 8);
                            push(tmp & 255);
                        }
                        if (placeHolders === 2) {
                            tmp = decode(b64.charAt(i)) << 2 | decode(b64.charAt(i + 1)) >> 4;
                            push(tmp & 255);
                        } else if (placeHolders === 1) {
                            tmp = decode(b64.charAt(i)) << 10 | decode(b64.charAt(i + 1)) << 4 | decode(b64.charAt(i + 2)) >> 2;
                            push(tmp >> 8 & 255);
                            push(tmp & 255);
                        }
                        return arr;
                    }
                    function uint8ToBase64(uint8) {
                        var i, extraBytes = uint8.length % 3, output = "", temp, length;
                        function encode(num) {
                            return lookup.charAt(num);
                        }
                        function tripletToBase64(num) {
                            return encode(num >> 18 & 63) + encode(num >> 12 & 63) + encode(num >> 6 & 63) + encode(num & 63);
                        }
                        for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
                            temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
                            output += tripletToBase64(temp);
                        }
                        switch (extraBytes) {
                          case 1:
                            temp = uint8[uint8.length - 1];
                            output += encode(temp >> 2);
                            output += encode(temp << 4 & 63);
                            output += "==";
                            break;

                          case 2:
                            temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];
                            output += encode(temp >> 10);
                            output += encode(temp >> 4 & 63);
                            output += encode(temp << 2 & 63);
                            output += "=";
                            break;
                        }
                        return output;
                    }
                    module.exports.toByteArray = b64ToByteArray;
                    module.exports.fromByteArray = uint8ToBase64;
                })();
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js", "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        3: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                exports.read = function(buffer, offset, isLE, mLen, nBytes) {
                    var e, m, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, nBits = -7, i = isLE ? nBytes - 1 : 0, d = isLE ? -1 : 1, s = buffer[offset + i];
                    i += d;
                    e = s & (1 << -nBits) - 1;
                    s >>= -nBits;
                    nBits += eLen;
                    for (;nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) ;
                    m = e & (1 << -nBits) - 1;
                    e >>= -nBits;
                    nBits += mLen;
                    for (;nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) ;
                    if (e === 0) {
                        e = 1 - eBias;
                    } else if (e === eMax) {
                        return m ? NaN : (s ? -1 : 1) * Infinity;
                    } else {
                        m = m + Math.pow(2, mLen);
                        e = e - eBias;
                    }
                    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
                };
                exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
                    var e, m, c, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, i = isLE ? 0 : nBytes - 1, d = isLE ? 1 : -1, s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
                    value = Math.abs(value);
                    if (isNaN(value) || value === Infinity) {
                        m = isNaN(value) ? 1 : 0;
                        e = eMax;
                    } else {
                        e = Math.floor(Math.log(value) / Math.LN2);
                        if (value * (c = Math.pow(2, -e)) < 1) {
                            e--;
                            c *= 2;
                        }
                        if (e + eBias >= 1) {
                            value += rt / c;
                        } else {
                            value += rt * Math.pow(2, 1 - eBias);
                        }
                        if (value * c >= 2) {
                            e++;
                            c /= 2;
                        }
                        if (e + eBias >= eMax) {
                            m = 0;
                            e = eMax;
                        } else if (e + eBias >= 1) {
                            m = (value * c - 1) * Math.pow(2, mLen);
                            e = e + eBias;
                        } else {
                            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
                            e = 0;
                        }
                    }
                    for (;mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) ;
                    e = e << mLen | m;
                    eLen += mLen;
                    for (;eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) ;
                    buffer[offset + i - d] |= s * 128;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js", "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/buffer/node_modules/ieee754");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        4: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var process = module.exports = {};
                process.nextTick = function() {
                    var canSetImmediate = typeof window !== "undefined" && window.setImmediate;
                    var canPost = typeof window !== "undefined" && window.postMessage && window.addEventListener;
                    if (canSetImmediate) {
                        return function(f) {
                            return window.setImmediate(f);
                        };
                    }
                    if (canPost) {
                        var queue = [];
                        window.addEventListener("message", function(ev) {
                            var source = ev.source;
                            if ((source === window || source === null) && ev.data === "process-tick") {
                                ev.stopPropagation();
                                if (queue.length > 0) {
                                    var fn = queue.shift();
                                    fn();
                                }
                            }
                        }, true);
                        return function nextTick(fn) {
                            queue.push(fn);
                            window.postMessage("process-tick", "*");
                        };
                    }
                    return function nextTick(fn) {
                        setTimeout(fn, 0);
                    };
                }();
                process.title = "browser";
                process.browser = true;
                process.env = {};
                process.argv = [];
                function noop() {}
                process.on = noop;
                process.once = noop;
                process.off = noop;
                process.emit = noop;
                process.binding = function(name) {
                    throw new Error("process.binding is not supported");
                };
                process.cwd = function() {
                    return "/";
                };
                process.chdir = function(dir) {
                    throw new Error("process.chdir is not supported");
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js", "/../node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        5: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Scalar = _dereq_("./Scalar");
                module.exports = Line;
                function Line() {}
                Line.lineInt = function(l1, l2, precision) {
                    precision = precision || 0;
                    var i = [ 0, 0 ];
                    var a1, b1, c1, a2, b2, c2, det;
                    a1 = l1[1][1] - l1[0][1];
                    b1 = l1[0][0] - l1[1][0];
                    c1 = a1 * l1[0][0] + b1 * l1[0][1];
                    a2 = l2[1][1] - l2[0][1];
                    b2 = l2[0][0] - l2[1][0];
                    c2 = a2 * l2[0][0] + b2 * l2[0][1];
                    det = a1 * b2 - a2 * b1;
                    if (!Scalar.eq(det, 0, precision)) {
                        i[0] = (b2 * c1 - b1 * c2) / det;
                        i[1] = (a1 * c2 - a2 * c1) / det;
                    }
                    return i;
                };
                Line.segmentsIntersect = function(p1, p2, q1, q2) {
                    var dx = p2[0] - p1[0];
                    var dy = p2[1] - p1[1];
                    var da = q2[0] - q1[0];
                    var db = q2[1] - q1[1];
                    if (da * dy - db * dx == 0) return false;
                    var s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);
                    var t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);
                    return s >= 0 && s <= 1 && t >= 0 && t <= 1;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/poly-decomp/src/Line.js", "/../node_modules/poly-decomp/src");
        }, {
            "./Scalar": 8,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        6: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Point;
                function Point() {}
                Point.area = function(a, b, c) {
                    return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);
                };
                Point.left = function(a, b, c) {
                    return Point.area(a, b, c) > 0;
                };
                Point.leftOn = function(a, b, c) {
                    return Point.area(a, b, c) >= 0;
                };
                Point.right = function(a, b, c) {
                    return Point.area(a, b, c) < 0;
                };
                Point.rightOn = function(a, b, c) {
                    return Point.area(a, b, c) <= 0;
                };
                var tmpPoint1 = [], tmpPoint2 = [];
                Point.collinear = function(a, b, c, thresholdAngle) {
                    if (!thresholdAngle) return Point.area(a, b, c) == 0; else {
                        var ab = tmpPoint1, bc = tmpPoint2;
                        ab[0] = b[0] - a[0];
                        ab[1] = b[1] - a[1];
                        bc[0] = c[0] - b[0];
                        bc[1] = c[1] - b[1];
                        var dot = ab[0] * bc[0] + ab[1] * bc[1], magA = Math.sqrt(ab[0] * ab[0] + ab[1] * ab[1]), magB = Math.sqrt(bc[0] * bc[0] + bc[1] * bc[1]), angle = Math.acos(dot / (magA * magB));
                        return angle < thresholdAngle;
                    }
                };
                Point.sqdist = function(a, b) {
                    var dx = b[0] - a[0];
                    var dy = b[1] - a[1];
                    return dx * dx + dy * dy;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/poly-decomp/src/Point.js", "/../node_modules/poly-decomp/src");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        7: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Line = _dereq_("./Line"), Point = _dereq_("./Point"), Scalar = _dereq_("./Scalar");
                module.exports = Polygon;
                function Polygon() {
                    this.vertices = [];
                }
                Polygon.prototype.at = function(i) {
                    var v = this.vertices, s = v.length;
                    return v[i < 0 ? i % s + s : i % s];
                };
                Polygon.prototype.first = function() {
                    return this.vertices[0];
                };
                Polygon.prototype.last = function() {
                    return this.vertices[this.vertices.length - 1];
                };
                Polygon.prototype.clear = function() {
                    this.vertices.length = 0;
                };
                Polygon.prototype.append = function(poly, from, to) {
                    if (typeof from == "undefined") throw new Error("From is not given!");
                    if (typeof to == "undefined") throw new Error("To is not given!");
                    if (to - 1 < from) throw new Error("lol1");
                    if (to > poly.vertices.length) throw new Error("lol2");
                    if (from < 0) throw new Error("lol3");
                    for (var i = from; i < to; i++) {
                        this.vertices.push(poly.vertices[i]);
                    }
                };
                Polygon.prototype.makeCCW = function() {
                    var br = 0, v = this.vertices;
                    for (var i = 1; i < this.vertices.length; ++i) {
                        if (v[i][1] < v[br][1] || v[i][1] == v[br][1] && v[i][0] > v[br][0]) {
                            br = i;
                        }
                    }
                    if (!Point.left(this.at(br - 1), this.at(br), this.at(br + 1))) {
                        this.reverse();
                    }
                };
                Polygon.prototype.reverse = function() {
                    var tmp = [];
                    for (var i = 0, N = this.vertices.length; i !== N; i++) {
                        tmp.push(this.vertices.pop());
                    }
                    this.vertices = tmp;
                };
                Polygon.prototype.isReflex = function(i) {
                    return Point.right(this.at(i - 1), this.at(i), this.at(i + 1));
                };
                var tmpLine1 = [], tmpLine2 = [];
                Polygon.prototype.canSee = function(a, b) {
                    var p, dist, l1 = tmpLine1, l2 = tmpLine2;
                    if (Point.leftOn(this.at(a + 1), this.at(a), this.at(b)) && Point.rightOn(this.at(a - 1), this.at(a), this.at(b))) {
                        return false;
                    }
                    dist = Point.sqdist(this.at(a), this.at(b));
                    for (var i = 0; i !== this.vertices.length; ++i) {
                        if ((i + 1) % this.vertices.length === a || i === a) continue;
                        if (Point.leftOn(this.at(a), this.at(b), this.at(i + 1)) && Point.rightOn(this.at(a), this.at(b), this.at(i))) {
                            l1[0] = this.at(a);
                            l1[1] = this.at(b);
                            l2[0] = this.at(i);
                            l2[1] = this.at(i + 1);
                            p = Line.lineInt(l1, l2);
                            if (Point.sqdist(this.at(a), p) < dist) {
                                return false;
                            }
                        }
                    }
                    return true;
                };
                Polygon.prototype.copy = function(i, j, targetPoly) {
                    var p = targetPoly || new Polygon();
                    p.clear();
                    if (i < j) {
                        for (var k = i; k <= j; k++) p.vertices.push(this.vertices[k]);
                    } else {
                        for (var k = 0; k <= j; k++) p.vertices.push(this.vertices[k]);
                        for (var k = i; k < this.vertices.length; k++) p.vertices.push(this.vertices[k]);
                    }
                    return p;
                };
                Polygon.prototype.getCutEdges = function() {
                    var min = [], tmp1 = [], tmp2 = [], tmpPoly = new Polygon();
                    var nDiags = Number.MAX_VALUE;
                    for (var i = 0; i < this.vertices.length; ++i) {
                        if (this.isReflex(i)) {
                            for (var j = 0; j < this.vertices.length; ++j) {
                                if (this.canSee(i, j)) {
                                    tmp1 = this.copy(i, j, tmpPoly).getCutEdges();
                                    tmp2 = this.copy(j, i, tmpPoly).getCutEdges();
                                    for (var k = 0; k < tmp2.length; k++) tmp1.push(tmp2[k]);
                                    if (tmp1.length < nDiags) {
                                        min = tmp1;
                                        nDiags = tmp1.length;
                                        min.push([ this.at(i), this.at(j) ]);
                                    }
                                }
                            }
                        }
                    }
                    return min;
                };
                Polygon.prototype.decomp = function() {
                    var edges = this.getCutEdges();
                    if (edges.length > 0) return this.slice(edges); else return [ this ];
                };
                Polygon.prototype.slice = function(cutEdges) {
                    if (cutEdges.length == 0) return [ this ];
                    if (cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length == 2 && cutEdges[0][0] instanceof Array) {
                        var polys = [ this ];
                        for (var i = 0; i < cutEdges.length; i++) {
                            var cutEdge = cutEdges[i];
                            for (var j = 0; j < polys.length; j++) {
                                var poly = polys[j];
                                var result = poly.slice(cutEdge);
                                if (result) {
                                    polys.splice(j, 1);
                                    polys.push(result[0], result[1]);
                                    break;
                                }
                            }
                        }
                        return polys;
                    } else {
                        var cutEdge = cutEdges;
                        var i = this.vertices.indexOf(cutEdge[0]);
                        var j = this.vertices.indexOf(cutEdge[1]);
                        if (i != -1 && j != -1) {
                            return [ this.copy(i, j), this.copy(j, i) ];
                        } else {
                            return false;
                        }
                    }
                };
                Polygon.prototype.isSimple = function() {
                    var path = this.vertices;
                    for (var i = 0; i < path.length - 1; i++) {
                        for (var j = 0; j < i - 1; j++) {
                            if (Line.segmentsIntersect(path[i], path[i + 1], path[j], path[j + 1])) {
                                return false;
                            }
                        }
                    }
                    for (var i = 1; i < path.length - 2; i++) {
                        if (Line.segmentsIntersect(path[0], path[path.length - 1], path[i], path[i + 1])) {
                            return false;
                        }
                    }
                    return true;
                };
                function getIntersectionPoint(p1, p2, q1, q2, delta) {
                    delta = delta || 0;
                    var a1 = p2[1] - p1[1];
                    var b1 = p1[0] - p2[0];
                    var c1 = a1 * p1[0] + b1 * p1[1];
                    var a2 = q2[1] - q1[1];
                    var b2 = q1[0] - q2[0];
                    var c2 = a2 * q1[0] + b2 * q1[1];
                    var det = a1 * b2 - a2 * b1;
                    if (!Scalar.eq(det, 0, delta)) return [ (b2 * c1 - b1 * c2) / det, (a1 * c2 - a2 * c1) / det ]; else return [ 0, 0 ];
                }
                Polygon.prototype.quickDecomp = function(result, reflexVertices, steinerPoints, delta, maxlevel, level) {
                    maxlevel = maxlevel || 100;
                    level = level || 0;
                    delta = delta || 25;
                    result = typeof result != "undefined" ? result : [];
                    reflexVertices = reflexVertices || [];
                    steinerPoints = steinerPoints || [];
                    var upperInt = [ 0, 0 ], lowerInt = [ 0, 0 ], p = [ 0, 0 ];
                    var upperDist = 0, lowerDist = 0, d = 0, closestDist = 0;
                    var upperIndex = 0, lowerIndex = 0, closestIndex = 0;
                    var lowerPoly = new Polygon(), upperPoly = new Polygon();
                    var poly = this, v = this.vertices;
                    if (v.length < 3) return result;
                    level++;
                    if (level > maxlevel) {
                        console.warn("quickDecomp: max level (" + maxlevel + ") reached.");
                        return result;
                    }
                    for (var i = 0; i < this.vertices.length; ++i) {
                        if (poly.isReflex(i)) {
                            reflexVertices.push(poly.vertices[i]);
                            upperDist = lowerDist = Number.MAX_VALUE;
                            for (var j = 0; j < this.vertices.length; ++j) {
                                if (Point.left(poly.at(i - 1), poly.at(i), poly.at(j)) && Point.rightOn(poly.at(i - 1), poly.at(i), poly.at(j - 1))) {
                                    p = getIntersectionPoint(poly.at(i - 1), poly.at(i), poly.at(j), poly.at(j - 1));
                                    if (Point.right(poly.at(i + 1), poly.at(i), p)) {
                                        d = Point.sqdist(poly.vertices[i], p);
                                        if (d < lowerDist) {
                                            lowerDist = d;
                                            lowerInt = p;
                                            lowerIndex = j;
                                        }
                                    }
                                }
                                if (Point.left(poly.at(i + 1), poly.at(i), poly.at(j + 1)) && Point.rightOn(poly.at(i + 1), poly.at(i), poly.at(j))) {
                                    p = getIntersectionPoint(poly.at(i + 1), poly.at(i), poly.at(j), poly.at(j + 1));
                                    if (Point.left(poly.at(i - 1), poly.at(i), p)) {
                                        d = Point.sqdist(poly.vertices[i], p);
                                        if (d < upperDist) {
                                            upperDist = d;
                                            upperInt = p;
                                            upperIndex = j;
                                        }
                                    }
                                }
                            }
                            if (lowerIndex == (upperIndex + 1) % this.vertices.length) {
                                p[0] = (lowerInt[0] + upperInt[0]) / 2;
                                p[1] = (lowerInt[1] + upperInt[1]) / 2;
                                steinerPoints.push(p);
                                if (i < upperIndex) {
                                    lowerPoly.append(poly, i, upperIndex + 1);
                                    lowerPoly.vertices.push(p);
                                    upperPoly.vertices.push(p);
                                    if (lowerIndex != 0) {
                                        upperPoly.append(poly, lowerIndex, poly.vertices.length);
                                    }
                                    upperPoly.append(poly, 0, i + 1);
                                } else {
                                    if (i != 0) {
                                        lowerPoly.append(poly, i, poly.vertices.length);
                                    }
                                    lowerPoly.append(poly, 0, upperIndex + 1);
                                    lowerPoly.vertices.push(p);
                                    upperPoly.vertices.push(p);
                                    upperPoly.append(poly, lowerIndex, i + 1);
                                }
                            } else {
                                if (lowerIndex > upperIndex) {
                                    upperIndex += this.vertices.length;
                                }
                                closestDist = Number.MAX_VALUE;
                                if (upperIndex < lowerIndex) {
                                    return result;
                                }
                                for (var j = lowerIndex; j <= upperIndex; ++j) {
                                    if (Point.leftOn(poly.at(i - 1), poly.at(i), poly.at(j)) && Point.rightOn(poly.at(i + 1), poly.at(i), poly.at(j))) {
                                        d = Point.sqdist(poly.at(i), poly.at(j));
                                        if (d < closestDist) {
                                            closestDist = d;
                                            closestIndex = j % this.vertices.length;
                                        }
                                    }
                                }
                                if (i < closestIndex) {
                                    lowerPoly.append(poly, i, closestIndex + 1);
                                    if (closestIndex != 0) {
                                        upperPoly.append(poly, closestIndex, v.length);
                                    }
                                    upperPoly.append(poly, 0, i + 1);
                                } else {
                                    if (i != 0) {
                                        lowerPoly.append(poly, i, v.length);
                                    }
                                    lowerPoly.append(poly, 0, closestIndex + 1);
                                    upperPoly.append(poly, closestIndex, i + 1);
                                }
                            }
                            if (lowerPoly.vertices.length < upperPoly.vertices.length) {
                                lowerPoly.quickDecomp(result, reflexVertices, steinerPoints, delta, maxlevel, level);
                                upperPoly.quickDecomp(result, reflexVertices, steinerPoints, delta, maxlevel, level);
                            } else {
                                upperPoly.quickDecomp(result, reflexVertices, steinerPoints, delta, maxlevel, level);
                                lowerPoly.quickDecomp(result, reflexVertices, steinerPoints, delta, maxlevel, level);
                            }
                            return result;
                        }
                    }
                    result.push(this);
                    return result;
                };
                Polygon.prototype.removeCollinearPoints = function(precision) {
                    var num = 0;
                    for (var i = this.vertices.length - 1; this.vertices.length > 3 && i >= 0; --i) {
                        if (Point.collinear(this.at(i - 1), this.at(i), this.at(i + 1), precision)) {
                            this.vertices.splice(i % this.vertices.length, 1);
                            i--;
                            num++;
                        }
                    }
                    return num;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/poly-decomp/src/Polygon.js", "/../node_modules/poly-decomp/src");
        }, {
            "./Line": 5,
            "./Point": 6,
            "./Scalar": 8,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        8: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Scalar;
                function Scalar() {}
                Scalar.eq = function(a, b, precision) {
                    precision = precision || 0;
                    return Math.abs(a - b) < precision;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/poly-decomp/src/Scalar.js", "/../node_modules/poly-decomp/src");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        9: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = {
                    Polygon: _dereq_("./Polygon"),
                    Point: _dereq_("./Point")
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/../node_modules/poly-decomp/src/index.js", "/../node_modules/poly-decomp/src");
        }, {
            "./Point": 6,
            "./Polygon": 7,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        10: [ function(_dereq_, module, exports) {
            module.exports = {
                name: "p2",
                version: "0.6.0",
                description: "A JavaScript 2D physics engine.",
                author: "Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",
                keywords: [ "p2.js", "p2", "physics", "engine", "2d" ],
                main: "./src/p2.js",
                engines: {
                    node: "*"
                },
                repository: {
                    type: "git",
                    url: "https://github.com/schteppe/p2.js.git"
                },
                bugs: {
                    url: "https://github.com/schteppe/p2.js/issues"
                },
                licenses: [ {
                    type: "MIT"
                } ],
                devDependencies: {
                    grunt: "~0.4.0",
                    "grunt-contrib-jshint": "~0.9.2",
                    "grunt-contrib-nodeunit": "~0.1.2",
                    "grunt-contrib-uglify": "~0.4.0",
                    "grunt-contrib-watch": "~0.5.0",
                    "grunt-browserify": "~2.0.1",
                    "grunt-contrib-concat": "^0.4.0"
                },
                dependencies: {
                    "poly-decomp": "0.1.0"
                }
            };
        }, {} ],
        11: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), Utils = _dereq_("../utils/Utils");
                module.exports = AABB;
                function AABB(options) {
                    this.lowerBound = vec2.create();
                    if (options && options.lowerBound) {
                        vec2.copy(this.lowerBound, options.lowerBound);
                    }
                    this.upperBound = vec2.create();
                    if (options && options.upperBound) {
                        vec2.copy(this.upperBound, options.upperBound);
                    }
                }
                var tmp = vec2.create();
                AABB.prototype.setFromPoints = function(points, position, angle, skinSize) {
                    var l = this.lowerBound, u = this.upperBound;
                    if (typeof angle !== "number") {
                        angle = 0;
                    }
                    if (angle !== 0) {
                        vec2.rotate(l, points[0], angle);
                    } else {
                        vec2.copy(l, points[0]);
                    }
                    vec2.copy(u, l);
                    var cosAngle = Math.cos(angle), sinAngle = Math.sin(angle);
                    for (var i = 1; i < points.length; i++) {
                        var p = points[i];
                        if (angle !== 0) {
                            var x = p[0], y = p[1];
                            tmp[0] = cosAngle * x - sinAngle * y;
                            tmp[1] = sinAngle * x + cosAngle * y;
                            p = tmp;
                        }
                        for (var j = 0; j < 2; j++) {
                            if (p[j] > u[j]) {
                                u[j] = p[j];
                            }
                            if (p[j] < l[j]) {
                                l[j] = p[j];
                            }
                        }
                    }
                    if (position) {
                        vec2.add(this.lowerBound, this.lowerBound, position);
                        vec2.add(this.upperBound, this.upperBound, position);
                    }
                    if (skinSize) {
                        this.lowerBound[0] -= skinSize;
                        this.lowerBound[1] -= skinSize;
                        this.upperBound[0] += skinSize;
                        this.upperBound[1] += skinSize;
                    }
                };
                AABB.prototype.copy = function(aabb) {
                    vec2.copy(this.lowerBound, aabb.lowerBound);
                    vec2.copy(this.upperBound, aabb.upperBound);
                };
                AABB.prototype.extend = function(aabb) {
                    var i = 2;
                    while (i--) {
                        var l = aabb.lowerBound[i];
                        if (this.lowerBound[i] > l) {
                            this.lowerBound[i] = l;
                        }
                        var u = aabb.upperBound[i];
                        if (this.upperBound[i] < u) {
                            this.upperBound[i] = u;
                        }
                    }
                };
                AABB.prototype.overlaps = function(aabb) {
                    var l1 = this.lowerBound, u1 = this.upperBound, l2 = aabb.lowerBound, u2 = aabb.upperBound;
                    return (l2[0] <= u1[0] && u1[0] <= u2[0] || l1[0] <= u2[0] && u2[0] <= u1[0]) && (l2[1] <= u1[1] && u1[1] <= u2[1] || l1[1] <= u2[1] && u2[1] <= u1[1]);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/collision/AABB.js", "/collision");
        }, {
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        12: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2");
                var Body = _dereq_("../objects/Body");
                module.exports = Broadphase;
                function Broadphase(type) {
                    this.type = type;
                    this.result = [];
                    this.world = null;
                    this.boundingVolumeType = Broadphase.AABB;
                }
                Broadphase.AABB = 1;
                Broadphase.BOUNDING_CIRCLE = 2;
                Broadphase.prototype.setWorld = function(world) {
                    this.world = world;
                };
                Broadphase.prototype.getCollisionPairs = function(world) {
                    throw new Error("getCollisionPairs must be implemented in a subclass!");
                };
                var dist = vec2.create();
                Broadphase.boundingRadiusCheck = function(bodyA, bodyB) {
                    vec2.sub(dist, bodyA.position, bodyB.position);
                    var d2 = vec2.squaredLength(dist), r = bodyA.boundingRadius + bodyB.boundingRadius;
                    return d2 <= r * r;
                };
                Broadphase.aabbCheck = function(bodyA, bodyB) {
                    if (bodyA.aabbNeedsUpdate) {
                        bodyA.updateAABB();
                    }
                    if (bodyB.aabbNeedsUpdate) {
                        bodyB.updateAABB();
                    }
                    return bodyA.aabb.overlaps(bodyB.aabb);
                };
                Broadphase.prototype.boundingVolumeCheck = function(bodyA, bodyB) {
                    var result;
                    switch (this.boundingVolumeType) {
                      case Broadphase.BOUNDING_CIRCLE:
                        result = Broadphase.boundingRadiusCheck(bodyA, bodyB);
                        break;

                      case Broadphase.AABB:
                        result = Broadphase.aabbCheck(bodyA, bodyB);
                        break;

                      default:
                        throw new Error("Bounding volume type not recognized: " + this.boundingVolumeType);
                    }
                    return result;
                };
                Broadphase.canCollide = function(bodyA, bodyB) {
                    if (bodyA.type === Body.STATIC && bodyB.type === Body.STATIC) {
                        return false;
                    }
                    if (bodyA.type === Body.KINEMATIC && bodyB.type === Body.STATIC || bodyA.type === Body.STATIC && bodyB.type === Body.KINEMATIC) {
                        return false;
                    }
                    if (bodyA.type === Body.KINEMATIC && bodyB.type === Body.KINEMATIC) {
                        return false;
                    }
                    if (bodyA.sleepState === Body.SLEEPING && bodyB.sleepState === Body.SLEEPING) {
                        return false;
                    }
                    if (bodyA.sleepState === Body.SLEEPING && bodyB.type === Body.STATIC || bodyB.sleepState === Body.SLEEPING && bodyA.type === Body.STATIC) {
                        return false;
                    }
                    return true;
                };
                Broadphase.NAIVE = 1;
                Broadphase.SAP = 2;
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/collision/Broadphase.js", "/collision");
        }, {
            "../math/vec2": 33,
            "../objects/Body": 34,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        13: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Circle = _dereq_("../shapes/Circle"), Plane = _dereq_("../shapes/Plane"), Particle = _dereq_("../shapes/Particle"), Broadphase = _dereq_("../collision/Broadphase"), vec2 = _dereq_("../math/vec2"), Utils = _dereq_("../utils/Utils");
                module.exports = GridBroadphase;
                function GridBroadphase(options) {
                    Broadphase.apply(this);
                    options = Utils.defaults(options, {
                        xmin: -100,
                        xmax: 100,
                        ymin: -100,
                        ymax: 100,
                        nx: 10,
                        ny: 10
                    });
                    this.xmin = options.xmin;
                    this.ymin = options.ymin;
                    this.xmax = options.xmax;
                    this.ymax = options.ymax;
                    this.nx = options.nx;
                    this.ny = options.ny;
                    this.binsizeX = (this.xmax - this.xmin) / this.nx;
                    this.binsizeY = (this.ymax - this.ymin) / this.ny;
                }
                GridBroadphase.prototype = new Broadphase();
                GridBroadphase.prototype.getCollisionPairs = function(world) {
                    var result = [], bodies = world.bodies, Ncolliding = bodies.length, binsizeX = this.binsizeX, binsizeY = this.binsizeY, nx = this.nx, ny = this.ny, xmin = this.xmin, ymin = this.ymin, xmax = this.xmax, ymax = this.ymax;
                    var bins = [], Nbins = nx * ny;
                    for (var i = 0; i < Nbins; i++) {
                        bins.push([]);
                    }
                    var xmult = nx / (xmax - xmin);
                    var ymult = ny / (ymax - ymin);
                    for (var i = 0; i !== Ncolliding; i++) {
                        var bi = bodies[i];
                        var aabb = bi.aabb;
                        var lowerX = Math.max(aabb.lowerBound[0], xmin);
                        var lowerY = Math.max(aabb.lowerBound[1], ymin);
                        var upperX = Math.min(aabb.upperBound[0], xmax);
                        var upperY = Math.min(aabb.upperBound[1], ymax);
                        var xi1 = Math.floor(xmult * (lowerX - xmin));
                        var yi1 = Math.floor(ymult * (lowerY - ymin));
                        var xi2 = Math.floor(xmult * (upperX - xmin));
                        var yi2 = Math.floor(ymult * (upperY - ymin));
                        for (var j = xi1; j <= xi2; j++) {
                            for (var k = yi1; k <= yi2; k++) {
                                var xi = j;
                                var yi = k;
                                var idx = xi * (ny - 1) + yi;
                                if (idx >= 0 && idx < Nbins) {
                                    bins[idx].push(bi);
                                }
                            }
                        }
                    }
                    for (var i = 0; i !== Nbins; i++) {
                        var bin = bins[i];
                        for (var j = 0, NbodiesInBin = bin.length; j !== NbodiesInBin; j++) {
                            var bi = bin[j];
                            for (var k = 0; k !== j; k++) {
                                var bj = bin[k];
                                if (Broadphase.canCollide(bi, bj) && this.boundingVolumeCheck(bi, bj)) {
                                    result.push(bi, bj);
                                }
                            }
                        }
                    }
                    return result;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/collision/GridBroadphase.js", "/collision");
        }, {
            "../collision/Broadphase": 12,
            "../math/vec2": 33,
            "../shapes/Circle": 40,
            "../shapes/Particle": 44,
            "../shapes/Plane": 45,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        14: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Circle = _dereq_("../shapes/Circle"), Plane = _dereq_("../shapes/Plane"), Shape = _dereq_("../shapes/Shape"), Particle = _dereq_("../shapes/Particle"), Broadphase = _dereq_("../collision/Broadphase"), vec2 = _dereq_("../math/vec2");
                module.exports = NaiveBroadphase;
                function NaiveBroadphase() {
                    Broadphase.call(this, Broadphase.NAIVE);
                }
                NaiveBroadphase.prototype = new Broadphase();
                NaiveBroadphase.prototype.getCollisionPairs = function(world) {
                    var bodies = world.bodies, result = this.result;
                    result.length = 0;
                    for (var i = 0, Ncolliding = bodies.length; i !== Ncolliding; i++) {
                        var bi = bodies[i];
                        for (var j = 0; j < i; j++) {
                            var bj = bodies[j];
                            if (Broadphase.canCollide(bi, bj) && this.boundingVolumeCheck(bi, bj)) {
                                result.push(bi, bj);
                            }
                        }
                    }
                    return result;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/collision/NaiveBroadphase.js", "/collision");
        }, {
            "../collision/Broadphase": 12,
            "../math/vec2": 33,
            "../shapes/Circle": 40,
            "../shapes/Particle": 44,
            "../shapes/Plane": 45,
            "../shapes/Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        15: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), sub = vec2.sub, add = vec2.add, dot = vec2.dot, Utils = _dereq_("../utils/Utils"), TupleDictionary = _dereq_("../utils/TupleDictionary"), Equation = _dereq_("../equations/Equation"), ContactEquation = _dereq_("../equations/ContactEquation"), FrictionEquation = _dereq_("../equations/FrictionEquation"), Circle = _dereq_("../shapes/Circle"), Convex = _dereq_("../shapes/Convex"), Shape = _dereq_("../shapes/Shape"), Body = _dereq_("../objects/Body"), Rectangle = _dereq_("../shapes/Rectangle");
                module.exports = Narrowphase;
                var yAxis = vec2.fromValues(0, 1);
                var tmp1 = vec2.fromValues(0, 0), tmp2 = vec2.fromValues(0, 0), tmp3 = vec2.fromValues(0, 0), tmp4 = vec2.fromValues(0, 0), tmp5 = vec2.fromValues(0, 0), tmp6 = vec2.fromValues(0, 0), tmp7 = vec2.fromValues(0, 0), tmp8 = vec2.fromValues(0, 0), tmp9 = vec2.fromValues(0, 0), tmp10 = vec2.fromValues(0, 0), tmp11 = vec2.fromValues(0, 0), tmp12 = vec2.fromValues(0, 0), tmp13 = vec2.fromValues(0, 0), tmp14 = vec2.fromValues(0, 0), tmp15 = vec2.fromValues(0, 0), tmp16 = vec2.fromValues(0, 0), tmp17 = vec2.fromValues(0, 0), tmp18 = vec2.fromValues(0, 0), tmpArray = [];
                function Narrowphase() {
                    this.contactEquations = [];
                    this.frictionEquations = [];
                    this.enableFriction = true;
                    this.slipForce = 10;
                    this.frictionCoefficient = .3;
                    this.surfaceVelocity = 0;
                    this.reuseObjects = true;
                    this.reusableContactEquations = [];
                    this.reusableFrictionEquations = [];
                    this.restitution = 0;
                    this.stiffness = Equation.DEFAULT_STIFFNESS;
                    this.relaxation = Equation.DEFAULT_RELAXATION;
                    this.frictionStiffness = Equation.DEFAULT_STIFFNESS;
                    this.frictionRelaxation = Equation.DEFAULT_RELAXATION;
                    this.enableFrictionReduction = true;
                    this.collidingBodiesLastStep = new TupleDictionary();
                    this.contactSkinSize = .01;
                }
                Narrowphase.prototype.collidedLastStep = function(bodyA, bodyB) {
                    var id1 = bodyA.id | 0, id2 = bodyB.id | 0;
                    return !!this.collidingBodiesLastStep.get(id1, id2);
                };
                Narrowphase.prototype.reset = function() {
                    this.collidingBodiesLastStep.reset();
                    var eqs = this.contactEquations;
                    var l = eqs.length;
                    while (l--) {
                        var eq = eqs[l], id1 = eq.bodyA.id, id2 = eq.bodyB.id;
                        this.collidingBodiesLastStep.set(id1, id2, true);
                    }
                    if (this.reuseObjects) {
                        var ce = this.contactEquations, fe = this.frictionEquations, rfe = this.reusableFrictionEquations, rce = this.reusableContactEquations;
                        Utils.appendArray(rce, ce);
                        Utils.appendArray(rfe, fe);
                    }
                    this.contactEquations.length = this.frictionEquations.length = 0;
                };
                Narrowphase.prototype.createContactEquation = function(bodyA, bodyB, shapeA, shapeB) {
                    var c = this.reusableContactEquations.length ? this.reusableContactEquations.pop() : new ContactEquation(bodyA, bodyB);
                    c.bodyA = bodyA;
                    c.bodyB = bodyB;
                    c.shapeA = shapeA;
                    c.shapeB = shapeB;
                    c.restitution = this.restitution;
                    c.firstImpact = !this.collidedLastStep(bodyA, bodyB);
                    c.stiffness = this.stiffness;
                    c.relaxation = this.relaxation;
                    c.needsUpdate = true;
                    c.enabled = true;
                    c.offset = this.contactSkinSize;
                    return c;
                };
                Narrowphase.prototype.createFrictionEquation = function(bodyA, bodyB, shapeA, shapeB) {
                    var c = this.reusableFrictionEquations.length ? this.reusableFrictionEquations.pop() : new FrictionEquation(bodyA, bodyB);
                    c.bodyA = bodyA;
                    c.bodyB = bodyB;
                    c.shapeA = shapeA;
                    c.shapeB = shapeB;
                    c.setSlipForce(this.slipForce);
                    c.frictionCoefficient = this.frictionCoefficient;
                    c.relativeVelocity = this.surfaceVelocity;
                    c.enabled = true;
                    c.needsUpdate = true;
                    c.stiffness = this.frictionStiffness;
                    c.relaxation = this.frictionRelaxation;
                    c.contactEquations.length = 0;
                    return c;
                };
                Narrowphase.prototype.createFrictionFromContact = function(c) {
                    var eq = this.createFrictionEquation(c.bodyA, c.bodyB, c.shapeA, c.shapeB);
                    vec2.copy(eq.contactPointA, c.contactPointA);
                    vec2.copy(eq.contactPointB, c.contactPointB);
                    vec2.rotate90cw(eq.t, c.normalA);
                    eq.contactEquations.push(c);
                    return eq;
                };
                Narrowphase.prototype.createFrictionFromAverage = function(numContacts) {
                    if (!numContacts) {
                        throw new Error("numContacts == 0!");
                    }
                    var c = this.contactEquations[this.contactEquations.length - 1];
                    var eq = this.createFrictionEquation(c.bodyA, c.bodyB, c.shapeA, c.shapeB);
                    var bodyA = c.bodyA;
                    var bodyB = c.bodyB;
                    vec2.set(eq.contactPointA, 0, 0);
                    vec2.set(eq.contactPointB, 0, 0);
                    vec2.set(eq.t, 0, 0);
                    for (var i = 0; i !== numContacts; i++) {
                        c = this.contactEquations[this.contactEquations.length - 1 - i];
                        if (c.bodyA === bodyA) {
                            vec2.add(eq.t, eq.t, c.normalA);
                            vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);
                            vec2.add(eq.contactPointB, eq.contactPointB, c.contactPointB);
                        } else {
                            vec2.sub(eq.t, eq.t, c.normalA);
                            vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointB);
                            vec2.add(eq.contactPointB, eq.contactPointB, c.contactPointA);
                        }
                        eq.contactEquations.push(c);
                    }
                    var invNumContacts = 1 / numContacts;
                    vec2.scale(eq.contactPointA, eq.contactPointA, invNumContacts);
                    vec2.scale(eq.contactPointB, eq.contactPointB, invNumContacts);
                    vec2.normalize(eq.t, eq.t);
                    vec2.rotate90cw(eq.t, eq.t);
                    return eq;
                };
                Narrowphase.prototype[Shape.LINE | Shape.CONVEX] = Narrowphase.prototype.convexLine = function(convexBody, convexShape, convexOffset, convexAngle, lineBody, lineShape, lineOffset, lineAngle, justTest) {
                    if (justTest) {
                        return false;
                    } else {
                        return 0;
                    }
                };
                Narrowphase.prototype[Shape.LINE | Shape.RECTANGLE] = Narrowphase.prototype.lineRectangle = function(lineBody, lineShape, lineOffset, lineAngle, rectangleBody, rectangleShape, rectangleOffset, rectangleAngle, justTest) {
                    if (justTest) {
                        return false;
                    } else {
                        return 0;
                    }
                };
                function setConvexToCapsuleShapeMiddle(convexShape, capsuleShape) {
                    vec2.set(convexShape.vertices[0], -capsuleShape.length * .5, -capsuleShape.radius);
                    vec2.set(convexShape.vertices[1], capsuleShape.length * .5, -capsuleShape.radius);
                    vec2.set(convexShape.vertices[2], capsuleShape.length * .5, capsuleShape.radius);
                    vec2.set(convexShape.vertices[3], -capsuleShape.length * .5, capsuleShape.radius);
                }
                var convexCapsule_tempRect = new Rectangle(1, 1), convexCapsule_tempVec = vec2.create();
                Narrowphase.prototype[Shape.CAPSULE | Shape.CONVEX] = Narrowphase.prototype[Shape.CAPSULE | Shape.RECTANGLE] = Narrowphase.prototype.convexCapsule = function(convexBody, convexShape, convexPosition, convexAngle, capsuleBody, capsuleShape, capsulePosition, capsuleAngle, justTest) {
                    var circlePos = convexCapsule_tempVec;
                    vec2.set(circlePos, capsuleShape.length / 2, 0);
                    vec2.rotate(circlePos, circlePos, capsuleAngle);
                    vec2.add(circlePos, circlePos, capsulePosition);
                    var result1 = this.circleConvex(capsuleBody, capsuleShape, circlePos, capsuleAngle, convexBody, convexShape, convexPosition, convexAngle, justTest, capsuleShape.radius);
                    vec2.set(circlePos, -capsuleShape.length / 2, 0);
                    vec2.rotate(circlePos, circlePos, capsuleAngle);
                    vec2.add(circlePos, circlePos, capsulePosition);
                    var result2 = this.circleConvex(capsuleBody, capsuleShape, circlePos, capsuleAngle, convexBody, convexShape, convexPosition, convexAngle, justTest, capsuleShape.radius);
                    if (justTest && (result1 || result2)) {
                        return true;
                    }
                    var r = convexCapsule_tempRect;
                    setConvexToCapsuleShapeMiddle(r, capsuleShape);
                    var result = this.convexConvex(convexBody, convexShape, convexPosition, convexAngle, capsuleBody, r, capsulePosition, capsuleAngle, justTest);
                    return result + result1 + result2;
                };
                Narrowphase.prototype[Shape.CAPSULE | Shape.LINE] = Narrowphase.prototype.lineCapsule = function(lineBody, lineShape, linePosition, lineAngle, capsuleBody, capsuleShape, capsulePosition, capsuleAngle, justTest) {
                    if (justTest) {
                        return false;
                    } else {
                        return 0;
                    }
                };
                var capsuleCapsule_tempVec1 = vec2.create();
                var capsuleCapsule_tempVec2 = vec2.create();
                var capsuleCapsule_tempRect1 = new Rectangle(1, 1);
                Narrowphase.prototype[Shape.CAPSULE | Shape.CAPSULE] = Narrowphase.prototype.capsuleCapsule = function(bi, si, xi, ai, bj, sj, xj, aj, justTest) {
                    var enableFrictionBefore;
                    var circlePosi = capsuleCapsule_tempVec1, circlePosj = capsuleCapsule_tempVec2;
                    var numContacts = 0;
                    for (var i = 0; i < 2; i++) {
                        vec2.set(circlePosi, (i === 0 ? -1 : 1) * si.length / 2, 0);
                        vec2.rotate(circlePosi, circlePosi, ai);
                        vec2.add(circlePosi, circlePosi, xi);
                        for (var j = 0; j < 2; j++) {
                            vec2.set(circlePosj, (j === 0 ? -1 : 1) * sj.length / 2, 0);
                            vec2.rotate(circlePosj, circlePosj, aj);
                            vec2.add(circlePosj, circlePosj, xj);
                            if (this.enableFrictionReduction) {
                                enableFrictionBefore = this.enableFriction;
                                this.enableFriction = false;
                            }
                            var result = this.circleCircle(bi, si, circlePosi, ai, bj, sj, circlePosj, aj, justTest, si.radius, sj.radius);
                            if (this.enableFrictionReduction) {
                                this.enableFriction = enableFrictionBefore;
                            }
                            if (justTest && result) {
                                return true;
                            }
                            numContacts += result;
                        }
                    }
                    if (this.enableFrictionReduction) {
                        enableFrictionBefore = this.enableFriction;
                        this.enableFriction = false;
                    }
                    var rect = capsuleCapsule_tempRect1;
                    setConvexToCapsuleShapeMiddle(rect, si);
                    var result1 = this.convexCapsule(bi, rect, xi, ai, bj, sj, xj, aj, justTest);
                    if (this.enableFrictionReduction) {
                        this.enableFriction = enableFrictionBefore;
                    }
                    if (justTest && result1) {
                        return true;
                    }
                    numContacts += result1;
                    if (this.enableFrictionReduction) {
                        var enableFrictionBefore = this.enableFriction;
                        this.enableFriction = false;
                    }
                    setConvexToCapsuleShapeMiddle(rect, sj);
                    var result2 = this.convexCapsule(bj, rect, xj, aj, bi, si, xi, ai, justTest);
                    if (this.enableFrictionReduction) {
                        this.enableFriction = enableFrictionBefore;
                    }
                    if (justTest && result2) {
                        return true;
                    }
                    numContacts += result2;
                    if (this.enableFrictionReduction) {
                        if (numContacts && this.enableFriction) {
                            this.frictionEquations.push(this.createFrictionFromAverage(numContacts));
                        }
                    }
                    return numContacts;
                };
                Narrowphase.prototype[Shape.LINE | Shape.LINE] = Narrowphase.prototype.lineLine = function(bodyA, shapeA, positionA, angleA, bodyB, shapeB, positionB, angleB, justTest) {
                    if (justTest) {
                        return false;
                    } else {
                        return 0;
                    }
                };
                Narrowphase.prototype[Shape.PLANE | Shape.LINE] = Narrowphase.prototype.planeLine = function(planeBody, planeShape, planeOffset, planeAngle, lineBody, lineShape, lineOffset, lineAngle, justTest) {
                    var worldVertex0 = tmp1, worldVertex1 = tmp2, worldVertex01 = tmp3, worldVertex11 = tmp4, worldEdge = tmp5, worldEdgeUnit = tmp6, dist = tmp7, worldNormal = tmp8, worldTangent = tmp9, verts = tmpArray, numContacts = 0;
                    vec2.set(worldVertex0, -lineShape.length / 2, 0);
                    vec2.set(worldVertex1, lineShape.length / 2, 0);
                    vec2.rotate(worldVertex01, worldVertex0, lineAngle);
                    vec2.rotate(worldVertex11, worldVertex1, lineAngle);
                    add(worldVertex01, worldVertex01, lineOffset);
                    add(worldVertex11, worldVertex11, lineOffset);
                    vec2.copy(worldVertex0, worldVertex01);
                    vec2.copy(worldVertex1, worldVertex11);
                    sub(worldEdge, worldVertex1, worldVertex0);
                    vec2.normalize(worldEdgeUnit, worldEdge);
                    vec2.rotate90cw(worldTangent, worldEdgeUnit);
                    vec2.rotate(worldNormal, yAxis, planeAngle);
                    verts[0] = worldVertex0;
                    verts[1] = worldVertex1;
                    for (var i = 0; i < verts.length; i++) {
                        var v = verts[i];
                        sub(dist, v, planeOffset);
                        var d = dot(dist, worldNormal);
                        if (d < 0) {
                            if (justTest) {
                                return true;
                            }
                            var c = this.createContactEquation(planeBody, lineBody, planeShape, lineShape);
                            numContacts++;
                            vec2.copy(c.normalA, worldNormal);
                            vec2.normalize(c.normalA, c.normalA);
                            vec2.scale(dist, worldNormal, d);
                            sub(c.contactPointA, v, dist);
                            sub(c.contactPointA, c.contactPointA, planeBody.position);
                            sub(c.contactPointB, v, lineOffset);
                            add(c.contactPointB, c.contactPointB, lineOffset);
                            sub(c.contactPointB, c.contactPointB, lineBody.position);
                            this.contactEquations.push(c);
                            if (!this.enableFrictionReduction) {
                                if (this.enableFriction) {
                                    this.frictionEquations.push(this.createFrictionFromContact(c));
                                }
                            }
                        }
                    }
                    if (justTest) {
                        return false;
                    }
                    if (!this.enableFrictionReduction) {
                        if (numContacts && this.enableFriction) {
                            this.frictionEquations.push(this.createFrictionFromAverage(numContacts));
                        }
                    }
                    return numContacts;
                };
                Narrowphase.prototype[Shape.PARTICLE | Shape.CAPSULE] = Narrowphase.prototype.particleCapsule = function(particleBody, particleShape, particlePosition, particleAngle, capsuleBody, capsuleShape, capsulePosition, capsuleAngle, justTest) {
                    return this.circleLine(particleBody, particleShape, particlePosition, particleAngle, capsuleBody, capsuleShape, capsulePosition, capsuleAngle, justTest, capsuleShape.radius, 0);
                };
                Narrowphase.prototype[Shape.CIRCLE | Shape.LINE] = Narrowphase.prototype.circleLine = function(circleBody, circleShape, circleOffset, circleAngle, lineBody, lineShape, lineOffset, lineAngle, justTest, lineRadius, circleRadius) {
                    var lineRadius = lineRadius || 0, circleRadius = typeof circleRadius !== "undefined" ? circleRadius : circleShape.radius, orthoDist = tmp1, lineToCircleOrthoUnit = tmp2, projectedPoint = tmp3, centerDist = tmp4, worldTangent = tmp5, worldEdge = tmp6, worldEdgeUnit = tmp7, worldVertex0 = tmp8, worldVertex1 = tmp9, worldVertex01 = tmp10, worldVertex11 = tmp11, dist = tmp12, lineToCircle = tmp13, lineEndToLineRadius = tmp14, verts = tmpArray;
                    vec2.set(worldVertex0, -lineShape.length / 2, 0);
                    vec2.set(worldVertex1, lineShape.length / 2, 0);
                    vec2.rotate(worldVertex01, worldVertex0, lineAngle);
                    vec2.rotate(worldVertex11, worldVertex1, lineAngle);
                    add(worldVertex01, worldVertex01, lineOffset);
                    add(worldVertex11, worldVertex11, lineOffset);
                    vec2.copy(worldVertex0, worldVertex01);
                    vec2.copy(worldVertex1, worldVertex11);
                    sub(worldEdge, worldVertex1, worldVertex0);
                    vec2.normalize(worldEdgeUnit, worldEdge);
                    vec2.rotate90cw(worldTangent, worldEdgeUnit);
                    sub(dist, circleOffset, worldVertex0);
                    var d = dot(dist, worldTangent);
                    sub(centerDist, worldVertex0, lineOffset);
                    sub(lineToCircle, circleOffset, lineOffset);
                    var radiusSum = circleRadius + lineRadius;
                    if (Math.abs(d) < radiusSum) {
                        vec2.scale(orthoDist, worldTangent, d);
                        sub(projectedPoint, circleOffset, orthoDist);
                        vec2.scale(lineToCircleOrthoUnit, worldTangent, dot(worldTangent, lineToCircle));
                        vec2.normalize(lineToCircleOrthoUnit, lineToCircleOrthoUnit);
                        vec2.scale(lineToCircleOrthoUnit, lineToCircleOrthoUnit, lineRadius);
                        add(projectedPoint, projectedPoint, lineToCircleOrthoUnit);
                        var pos = dot(worldEdgeUnit, projectedPoint);
                        var pos0 = dot(worldEdgeUnit, worldVertex0);
                        var pos1 = dot(worldEdgeUnit, worldVertex1);
                        if (pos > pos0 && pos < pos1) {
                            if (justTest) {
                                return true;
                            }
                            var c = this.createContactEquation(circleBody, lineBody, circleShape, lineShape);
                            vec2.scale(c.normalA, orthoDist, -1);
                            vec2.normalize(c.normalA, c.normalA);
                            vec2.scale(c.contactPointA, c.normalA, circleRadius);
                            add(c.contactPointA, c.contactPointA, circleOffset);
                            sub(c.contactPointA, c.contactPointA, circleBody.position);
                            sub(c.contactPointB, projectedPoint, lineOffset);
                            add(c.contactPointB, c.contactPointB, lineOffset);
                            sub(c.contactPointB, c.contactPointB, lineBody.position);
                            this.contactEquations.push(c);
                            if (this.enableFriction) {
                                this.frictionEquations.push(this.createFrictionFromContact(c));
                            }
                            return 1;
                        }
                    }
                    verts[0] = worldVertex0;
                    verts[1] = worldVertex1;
                    for (var i = 0; i < verts.length; i++) {
                        var v = verts[i];
                        sub(dist, v, circleOffset);
                        if (vec2.squaredLength(dist) < Math.pow(radiusSum, 2)) {
                            if (justTest) {
                                return true;
                            }
                            var c = this.createContactEquation(circleBody, lineBody, circleShape, lineShape);
                            vec2.copy(c.normalA, dist);
                            vec2.normalize(c.normalA, c.normalA);
                            vec2.scale(c.contactPointA, c.normalA, circleRadius);
                            add(c.contactPointA, c.contactPointA, circleOffset);
                            sub(c.contactPointA, c.contactPointA, circleBody.position);
                            sub(c.contactPointB, v, lineOffset);
                            vec2.scale(lineEndToLineRadius, c.normalA, -lineRadius);
                            add(c.contactPointB, c.contactPointB, lineEndToLineRadius);
                            add(c.contactPointB, c.contactPointB, lineOffset);
                            sub(c.contactPointB, c.contactPointB, lineBody.position);
                            this.contactEquations.push(c);
                            if (this.enableFriction) {
                                this.frictionEquations.push(this.createFrictionFromContact(c));
                            }
                            return 1;
                        }
                    }
                    return 0;
                };
                Narrowphase.prototype[Shape.CIRCLE | Shape.CAPSULE] = Narrowphase.prototype.circleCapsule = function(bi, si, xi, ai, bj, sj, xj, aj, justTest) {
                    return this.circleLine(bi, si, xi, ai, bj, sj, xj, aj, justTest, sj.radius);
                };
                Narrowphase.prototype[Shape.CIRCLE | Shape.CONVEX] = Narrowphase.prototype[Shape.CIRCLE | Shape.RECTANGLE] = Narrowphase.prototype.circleConvex = function(circleBody, circleShape, circleOffset, circleAngle, convexBody, convexShape, convexOffset, convexAngle, justTest, circleRadius) {
                    var circleRadius = typeof circleRadius === "number" ? circleRadius : circleShape.radius;
                    var worldVertex0 = tmp1, worldVertex1 = tmp2, worldEdge = tmp3, worldEdgeUnit = tmp4, worldNormal = tmp5, centerDist = tmp6, convexToCircle = tmp7, orthoDist = tmp8, projectedPoint = tmp9, dist = tmp10, worldVertex = tmp11, closestEdge = -1, closestEdgeDistance = null, closestEdgeOrthoDist = tmp12, closestEdgeProjectedPoint = tmp13, candidate = tmp14, candidateDist = tmp15, minCandidate = tmp16, found = false, minCandidateDistance = Number.MAX_VALUE;
                    var numReported = 0;
                    var verts = convexShape.vertices;
                    for (var i = 0; i !== verts.length + 1; i++) {
                        var v0 = verts[i % verts.length], v1 = verts[(i + 1) % verts.length];
                        vec2.rotate(worldVertex0, v0, convexAngle);
                        vec2.rotate(worldVertex1, v1, convexAngle);
                        add(worldVertex0, worldVertex0, convexOffset);
                        add(worldVertex1, worldVertex1, convexOffset);
                        sub(worldEdge, worldVertex1, worldVertex0);
                        vec2.normalize(worldEdgeUnit, worldEdge);
                        vec2.rotate90cw(worldNormal, worldEdgeUnit);
                        vec2.scale(candidate, worldNormal, -circleShape.radius);
                        add(candidate, candidate, circleOffset);
                        if (pointInConvex(candidate, convexShape, convexOffset, convexAngle)) {
                            vec2.sub(candidateDist, worldVertex0, candidate);
                            var candidateDistance = Math.abs(vec2.dot(candidateDist, worldNormal));
                            if (candidateDistance < minCandidateDistance) {
                                vec2.copy(minCandidate, candidate);
                                minCandidateDistance = candidateDistance;
                                vec2.scale(closestEdgeProjectedPoint, worldNormal, candidateDistance);
                                vec2.add(closestEdgeProjectedPoint, closestEdgeProjectedPoint, candidate);
                                found = true;
                            }
                        }
                    }
                    if (found) {
                        if (justTest) {
                            return true;
                        }
                        var c = this.createContactEquation(circleBody, convexBody, circleShape, convexShape);
                        vec2.sub(c.normalA, minCandidate, circleOffset);
                        vec2.normalize(c.normalA, c.normalA);
                        vec2.scale(c.contactPointA, c.normalA, circleRadius);
                        add(c.contactPointA, c.contactPointA, circleOffset);
                        sub(c.contactPointA, c.contactPointA, circleBody.position);
                        sub(c.contactPointB, closestEdgeProjectedPoint, convexOffset);
                        add(c.contactPointB, c.contactPointB, convexOffset);
                        sub(c.contactPointB, c.contactPointB, convexBody.position);
                        this.contactEquations.push(c);
                        if (this.enableFriction) {
                            this.frictionEquations.push(this.createFrictionFromContact(c));
                        }
                        return 1;
                    }
                    if (circleRadius > 0) {
                        for (var i = 0; i < verts.length; i++) {
                            var localVertex = verts[i];
                            vec2.rotate(worldVertex, localVertex, convexAngle);
                            add(worldVertex, worldVertex, convexOffset);
                            sub(dist, worldVertex, circleOffset);
                            if (vec2.squaredLength(dist) < Math.pow(circleRadius, 2)) {
                                if (justTest) {
                                    return true;
                                }
                                var c = this.createContactEquation(circleBody, convexBody, circleShape, convexShape);
                                vec2.copy(c.normalA, dist);
                                vec2.normalize(c.normalA, c.normalA);
                                vec2.scale(c.contactPointA, c.normalA, circleRadius);
                                add(c.contactPointA, c.contactPointA, circleOffset);
                                sub(c.contactPointA, c.contactPointA, circleBody.position);
                                sub(c.contactPointB, worldVertex, convexOffset);
                                add(c.contactPointB, c.contactPointB, convexOffset);
                                sub(c.contactPointB, c.contactPointB, convexBody.position);
                                this.contactEquations.push(c);
                                if (this.enableFriction) {
                                    this.frictionEquations.push(this.createFrictionFromContact(c));
                                }
                                return 1;
                            }
                        }
                    }
                    return 0;
                };
                var pic_worldVertex0 = vec2.create(), pic_worldVertex1 = vec2.create(), pic_r0 = vec2.create(), pic_r1 = vec2.create();
                function pointInConvex(worldPoint, convexShape, convexOffset, convexAngle) {
                    var worldVertex0 = pic_worldVertex0, worldVertex1 = pic_worldVertex1, r0 = pic_r0, r1 = pic_r1, point = worldPoint, verts = convexShape.vertices, lastCross = null;
                    for (var i = 0; i !== verts.length + 1; i++) {
                        var v0 = verts[i % verts.length], v1 = verts[(i + 1) % verts.length];
                        vec2.rotate(worldVertex0, v0, convexAngle);
                        vec2.rotate(worldVertex1, v1, convexAngle);
                        add(worldVertex0, worldVertex0, convexOffset);
                        add(worldVertex1, worldVertex1, convexOffset);
                        sub(r0, worldVertex0, point);
                        sub(r1, worldVertex1, point);
                        var cross = vec2.crossLength(r0, r1);
                        if (lastCross === null) {
                            lastCross = cross;
                        }
                        if (cross * lastCross <= 0) {
                            return false;
                        }
                        lastCross = cross;
                    }
                    return true;
                }
                Narrowphase.prototype[Shape.PARTICLE | Shape.CONVEX] = Narrowphase.prototype[Shape.PARTICLE | Shape.RECTANGLE] = Narrowphase.prototype.particleConvex = function(particleBody, particleShape, particleOffset, particleAngle, convexBody, convexShape, convexOffset, convexAngle, justTest) {
                    var worldVertex0 = tmp1, worldVertex1 = tmp2, worldEdge = tmp3, worldEdgeUnit = tmp4, worldTangent = tmp5, centerDist = tmp6, convexToparticle = tmp7, orthoDist = tmp8, projectedPoint = tmp9, dist = tmp10, worldVertex = tmp11, closestEdge = -1, closestEdgeDistance = null, closestEdgeOrthoDist = tmp12, closestEdgeProjectedPoint = tmp13, r0 = tmp14, r1 = tmp15, localPoint = tmp16, candidateDist = tmp17, minEdgeNormal = tmp18, minCandidateDistance = Number.MAX_VALUE;
                    var numReported = 0, found = false, verts = convexShape.vertices;
                    if (!pointInConvex(particleOffset, convexShape, convexOffset, convexAngle)) {
                        return 0;
                    }
                    if (justTest) {
                        return true;
                    }
                    var lastCross = null;
                    for (var i = 0; i !== verts.length + 1; i++) {
                        var v0 = verts[i % verts.length], v1 = verts[(i + 1) % verts.length];
                        vec2.rotate(worldVertex0, v0, convexAngle);
                        vec2.rotate(worldVertex1, v1, convexAngle);
                        add(worldVertex0, worldVertex0, convexOffset);
                        add(worldVertex1, worldVertex1, convexOffset);
                        sub(worldEdge, worldVertex1, worldVertex0);
                        vec2.normalize(worldEdgeUnit, worldEdge);
                        vec2.rotate90cw(worldTangent, worldEdgeUnit);
                        sub(dist, particleOffset, worldVertex0);
                        var d = dot(dist, worldTangent);
                        sub(centerDist, worldVertex0, convexOffset);
                        sub(convexToparticle, particleOffset, convexOffset);
                        vec2.sub(candidateDist, worldVertex0, particleOffset);
                        var candidateDistance = Math.abs(vec2.dot(candidateDist, worldTangent));
                        if (candidateDistance < minCandidateDistance) {
                            minCandidateDistance = candidateDistance;
                            vec2.scale(closestEdgeProjectedPoint, worldTangent, candidateDistance);
                            vec2.add(closestEdgeProjectedPoint, closestEdgeProjectedPoint, particleOffset);
                            vec2.copy(minEdgeNormal, worldTangent);
                            found = true;
                        }
                    }
                    if (found) {
                        var c = this.createContactEquation(particleBody, convexBody, particleShape, convexShape);
                        vec2.scale(c.normalA, minEdgeNormal, -1);
                        vec2.normalize(c.normalA, c.normalA);
                        vec2.set(c.contactPointA, 0, 0);
                        add(c.contactPointA, c.contactPointA, particleOffset);
                        sub(c.contactPointA, c.contactPointA, particleBody.position);
                        sub(c.contactPointB, closestEdgeProjectedPoint, convexOffset);
                        add(c.contactPointB, c.contactPointB, convexOffset);
                        sub(c.contactPointB, c.contactPointB, convexBody.position);
                        this.contactEquations.push(c);
                        if (this.enableFriction) {
                            this.frictionEquations.push(this.createFrictionFromContact(c));
                        }
                        return 1;
                    }
                    return 0;
                };
                Narrowphase.prototype[Shape.CIRCLE] = Narrowphase.prototype.circleCircle = function(bodyA, shapeA, offsetA, angleA, bodyB, shapeB, offsetB, angleB, justTest, radiusA, radiusB) {
                    var dist = tmp1, radiusA = radiusA || shapeA.radius, radiusB = radiusB || shapeB.radius;
                    sub(dist, offsetA, offsetB);
                    var r = radiusA + radiusB;
                    if (vec2.squaredLength(dist) > Math.pow(r, 2)) {
                        return 0;
                    }
                    if (justTest) {
                        return true;
                    }
                    var c = this.createContactEquation(bodyA, bodyB, shapeA, shapeB);
                    sub(c.normalA, offsetB, offsetA);
                    vec2.normalize(c.normalA, c.normalA);
                    vec2.scale(c.contactPointA, c.normalA, radiusA);
                    vec2.scale(c.contactPointB, c.normalA, -radiusB);
                    add(c.contactPointA, c.contactPointA, offsetA);
                    sub(c.contactPointA, c.contactPointA, bodyA.position);
                    add(c.contactPointB, c.contactPointB, offsetB);
                    sub(c.contactPointB, c.contactPointB, bodyB.position);
                    this.contactEquations.push(c);
                    if (this.enableFriction) {
                        this.frictionEquations.push(this.createFrictionFromContact(c));
                    }
                    return 1;
                };
                Narrowphase.prototype[Shape.PLANE | Shape.CONVEX] = Narrowphase.prototype[Shape.PLANE | Shape.RECTANGLE] = Narrowphase.prototype.planeConvex = function(planeBody, planeShape, planeOffset, planeAngle, convexBody, convexShape, convexOffset, convexAngle, justTest) {
                    var worldVertex = tmp1, worldNormal = tmp2, dist = tmp3;
                    var numReported = 0;
                    vec2.rotate(worldNormal, yAxis, planeAngle);
                    for (var i = 0; i !== convexShape.vertices.length; i++) {
                        var v = convexShape.vertices[i];
                        vec2.rotate(worldVertex, v, convexAngle);
                        add(worldVertex, worldVertex, convexOffset);
                        sub(dist, worldVertex, planeOffset);
                        if (dot(dist, worldNormal) <= 0) {
                            if (justTest) {
                                return true;
                            }
                            numReported++;
                            var c = this.createContactEquation(planeBody, convexBody, planeShape, convexShape);
                            sub(dist, worldVertex, planeOffset);
                            vec2.copy(c.normalA, worldNormal);
                            var d = dot(dist, c.normalA);
                            vec2.scale(dist, c.normalA, d);
                            sub(c.contactPointB, worldVertex, convexBody.position);
                            sub(c.contactPointA, worldVertex, dist);
                            sub(c.contactPointA, c.contactPointA, planeBody.position);
                            this.contactEquations.push(c);
                            if (!this.enableFrictionReduction) {
                                if (this.enableFriction) {
                                    this.frictionEquations.push(this.createFrictionFromContact(c));
                                }
                            }
                        }
                    }
                    if (this.enableFrictionReduction) {
                        if (this.enableFriction && numReported) {
                            this.frictionEquations.push(this.createFrictionFromAverage(numReported));
                        }
                    }
                    return numReported;
                };
                Narrowphase.prototype[Shape.PARTICLE | Shape.PLANE] = Narrowphase.prototype.particlePlane = function(particleBody, particleShape, particleOffset, particleAngle, planeBody, planeShape, planeOffset, planeAngle, justTest) {
                    var dist = tmp1, worldNormal = tmp2;
                    planeAngle = planeAngle || 0;
                    sub(dist, particleOffset, planeOffset);
                    vec2.rotate(worldNormal, yAxis, planeAngle);
                    var d = dot(dist, worldNormal);
                    if (d > 0) {
                        return 0;
                    }
                    if (justTest) {
                        return true;
                    }
                    var c = this.createContactEquation(planeBody, particleBody, planeShape, particleShape);
                    vec2.copy(c.normalA, worldNormal);
                    vec2.scale(dist, c.normalA, d);
                    sub(c.contactPointA, particleOffset, dist);
                    sub(c.contactPointA, c.contactPointA, planeBody.position);
                    sub(c.contactPointB, particleOffset, particleBody.position);
                    this.contactEquations.push(c);
                    if (this.enableFriction) {
                        this.frictionEquations.push(this.createFrictionFromContact(c));
                    }
                    return 1;
                };
                Narrowphase.prototype[Shape.CIRCLE | Shape.PARTICLE] = Narrowphase.prototype.circleParticle = function(circleBody, circleShape, circleOffset, circleAngle, particleBody, particleShape, particleOffset, particleAngle, justTest) {
                    var dist = tmp1;
                    sub(dist, particleOffset, circleOffset);
                    if (vec2.squaredLength(dist) > Math.pow(circleShape.radius, 2)) {
                        return 0;
                    }
                    if (justTest) {
                        return true;
                    }
                    var c = this.createContactEquation(circleBody, particleBody, circleShape, particleShape);
                    vec2.copy(c.normalA, dist);
                    vec2.normalize(c.normalA, c.normalA);
                    vec2.scale(c.contactPointA, c.normalA, circleShape.radius);
                    add(c.contactPointA, c.contactPointA, circleOffset);
                    sub(c.contactPointA, c.contactPointA, circleBody.position);
                    sub(c.contactPointB, particleOffset, particleBody.position);
                    this.contactEquations.push(c);
                    if (this.enableFriction) {
                        this.frictionEquations.push(this.createFrictionFromContact(c));
                    }
                    return 1;
                };
                var planeCapsule_tmpCircle = new Circle(1), planeCapsule_tmp1 = vec2.create(), planeCapsule_tmp2 = vec2.create(), planeCapsule_tmp3 = vec2.create();
                Narrowphase.prototype[Shape.PLANE | Shape.CAPSULE] = Narrowphase.prototype.planeCapsule = function(planeBody, planeShape, planeOffset, planeAngle, capsuleBody, capsuleShape, capsuleOffset, capsuleAngle, justTest) {
                    var end1 = planeCapsule_tmp1, end2 = planeCapsule_tmp2, circle = planeCapsule_tmpCircle, dst = planeCapsule_tmp3;
                    vec2.set(end1, -capsuleShape.length / 2, 0);
                    vec2.rotate(end1, end1, capsuleAngle);
                    add(end1, end1, capsuleOffset);
                    vec2.set(end2, capsuleShape.length / 2, 0);
                    vec2.rotate(end2, end2, capsuleAngle);
                    add(end2, end2, capsuleOffset);
                    circle.radius = capsuleShape.radius;
                    var enableFrictionBefore;
                    if (this.enableFrictionReduction) {
                        enableFrictionBefore = this.enableFriction;
                        this.enableFriction = false;
                    }
                    var numContacts1 = this.circlePlane(capsuleBody, circle, end1, 0, planeBody, planeShape, planeOffset, planeAngle, justTest), numContacts2 = this.circlePlane(capsuleBody, circle, end2, 0, planeBody, planeShape, planeOffset, planeAngle, justTest);
                    if (this.enableFrictionReduction) {
                        this.enableFriction = enableFrictionBefore;
                    }
                    if (justTest) {
                        return numContacts1 || numContacts2;
                    } else {
                        var numTotal = numContacts1 + numContacts2;
                        if (this.enableFrictionReduction) {
                            if (numTotal) {
                                this.frictionEquations.push(this.createFrictionFromAverage(numTotal));
                            }
                        }
                        return numTotal;
                    }
                };
                Narrowphase.prototype[Shape.CIRCLE | Shape.PLANE] = Narrowphase.prototype.circlePlane = function(bi, si, xi, ai, bj, sj, xj, aj, justTest) {
                    var circleBody = bi, circleShape = si, circleOffset = xi, planeBody = bj, shapeB = sj, planeOffset = xj, planeAngle = aj;
                    planeAngle = planeAngle || 0;
                    var planeToCircle = tmp1, worldNormal = tmp2, temp = tmp3;
                    sub(planeToCircle, circleOffset, planeOffset);
                    vec2.rotate(worldNormal, yAxis, planeAngle);
                    var d = dot(worldNormal, planeToCircle);
                    if (d > circleShape.radius) {
                        return 0;
                    }
                    if (justTest) {
                        return true;
                    }
                    var contact = this.createContactEquation(planeBody, circleBody, sj, si);
                    vec2.copy(contact.normalA, worldNormal);
                    vec2.scale(contact.contactPointB, contact.normalA, -circleShape.radius);
                    add(contact.contactPointB, contact.contactPointB, circleOffset);
                    sub(contact.contactPointB, contact.contactPointB, circleBody.position);
                    vec2.scale(temp, contact.normalA, d);
                    sub(contact.contactPointA, planeToCircle, temp);
                    add(contact.contactPointA, contact.contactPointA, planeOffset);
                    sub(contact.contactPointA, contact.contactPointA, planeBody.position);
                    this.contactEquations.push(contact);
                    if (this.enableFriction) {
                        this.frictionEquations.push(this.createFrictionFromContact(contact));
                    }
                    return 1;
                };
                Narrowphase.prototype[Shape.CONVEX] = Narrowphase.prototype[Shape.CONVEX | Shape.RECTANGLE] = Narrowphase.prototype[Shape.RECTANGLE] = Narrowphase.prototype.convexConvex = function(bi, si, xi, ai, bj, sj, xj, aj, justTest, precision) {
                    var sepAxis = tmp1, worldPoint = tmp2, worldPoint0 = tmp3, worldPoint1 = tmp4, worldEdge = tmp5, projected = tmp6, penetrationVec = tmp7, dist = tmp8, worldNormal = tmp9, numContacts = 0, precision = typeof precision === "number" ? precision : 0;
                    var found = Narrowphase.findSeparatingAxis(si, xi, ai, sj, xj, aj, sepAxis);
                    if (!found) {
                        return 0;
                    }
                    sub(dist, xj, xi);
                    if (dot(sepAxis, dist) > 0) {
                        vec2.scale(sepAxis, sepAxis, -1);
                    }
                    var closestEdge1 = Narrowphase.getClosestEdge(si, ai, sepAxis, true), closestEdge2 = Narrowphase.getClosestEdge(sj, aj, sepAxis);
                    if (closestEdge1 === -1 || closestEdge2 === -1) {
                        return 0;
                    }
                    for (var k = 0; k < 2; k++) {
                        var closestEdgeA = closestEdge1, closestEdgeB = closestEdge2, shapeA = si, shapeB = sj, offsetA = xi, offsetB = xj, angleA = ai, angleB = aj, bodyA = bi, bodyB = bj;
                        if (k === 0) {
                            var tmp;
                            tmp = closestEdgeA;
                            closestEdgeA = closestEdgeB;
                            closestEdgeB = tmp;
                            tmp = shapeA;
                            shapeA = shapeB;
                            shapeB = tmp;
                            tmp = offsetA;
                            offsetA = offsetB;
                            offsetB = tmp;
                            tmp = angleA;
                            angleA = angleB;
                            angleB = tmp;
                            tmp = bodyA;
                            bodyA = bodyB;
                            bodyB = tmp;
                        }
                        for (var j = closestEdgeB; j < closestEdgeB + 2; j++) {
                            var v = shapeB.vertices[(j + shapeB.vertices.length) % shapeB.vertices.length];
                            vec2.rotate(worldPoint, v, angleB);
                            add(worldPoint, worldPoint, offsetB);
                            var insideNumEdges = 0;
                            for (var i = closestEdgeA - 1; i < closestEdgeA + 2; i++) {
                                var v0 = shapeA.vertices[(i + shapeA.vertices.length) % shapeA.vertices.length], v1 = shapeA.vertices[(i + 1 + shapeA.vertices.length) % shapeA.vertices.length];
                                vec2.rotate(worldPoint0, v0, angleA);
                                vec2.rotate(worldPoint1, v1, angleA);
                                add(worldPoint0, worldPoint0, offsetA);
                                add(worldPoint1, worldPoint1, offsetA);
                                sub(worldEdge, worldPoint1, worldPoint0);
                                vec2.rotate90cw(worldNormal, worldEdge);
                                vec2.normalize(worldNormal, worldNormal);
                                sub(dist, worldPoint, worldPoint0);
                                var d = dot(worldNormal, dist);
                                if (i === closestEdgeA && d <= precision || i !== closestEdgeA && d <= 0) {
                                    insideNumEdges++;
                                }
                            }
                            if (insideNumEdges >= 3) {
                                if (justTest) {
                                    return true;
                                }
                                var c = this.createContactEquation(bodyA, bodyB, shapeA, shapeB);
                                numContacts++;
                                var v0 = shapeA.vertices[closestEdgeA % shapeA.vertices.length], v1 = shapeA.vertices[(closestEdgeA + 1) % shapeA.vertices.length];
                                vec2.rotate(worldPoint0, v0, angleA);
                                vec2.rotate(worldPoint1, v1, angleA);
                                add(worldPoint0, worldPoint0, offsetA);
                                add(worldPoint1, worldPoint1, offsetA);
                                sub(worldEdge, worldPoint1, worldPoint0);
                                vec2.rotate90cw(c.normalA, worldEdge);
                                vec2.normalize(c.normalA, c.normalA);
                                sub(dist, worldPoint, worldPoint0);
                                var d = dot(c.normalA, dist);
                                vec2.scale(penetrationVec, c.normalA, d);
                                sub(c.contactPointA, worldPoint, offsetA);
                                sub(c.contactPointA, c.contactPointA, penetrationVec);
                                add(c.contactPointA, c.contactPointA, offsetA);
                                sub(c.contactPointA, c.contactPointA, bodyA.position);
                                sub(c.contactPointB, worldPoint, offsetB);
                                add(c.contactPointB, c.contactPointB, offsetB);
                                sub(c.contactPointB, c.contactPointB, bodyB.position);
                                this.contactEquations.push(c);
                                if (!this.enableFrictionReduction) {
                                    if (this.enableFriction) {
                                        this.frictionEquations.push(this.createFrictionFromContact(c));
                                    }
                                }
                            }
                        }
                    }
                    if (this.enableFrictionReduction) {
                        if (this.enableFriction && numContacts) {
                            this.frictionEquations.push(this.createFrictionFromAverage(numContacts));
                        }
                    }
                    return numContacts;
                };
                var pcoa_tmp1 = vec2.fromValues(0, 0);
                Narrowphase.projectConvexOntoAxis = function(convexShape, convexOffset, convexAngle, worldAxis, result) {
                    var max = null, min = null, v, value, localAxis = pcoa_tmp1;
                    vec2.rotate(localAxis, worldAxis, -convexAngle);
                    for (var i = 0; i < convexShape.vertices.length; i++) {
                        v = convexShape.vertices[i];
                        value = dot(v, localAxis);
                        if (max === null || value > max) {
                            max = value;
                        }
                        if (min === null || value < min) {
                            min = value;
                        }
                    }
                    if (min > max) {
                        var t = min;
                        min = max;
                        max = t;
                    }
                    var offset = dot(convexOffset, worldAxis);
                    vec2.set(result, min + offset, max + offset);
                };
                var fsa_tmp1 = vec2.fromValues(0, 0), fsa_tmp2 = vec2.fromValues(0, 0), fsa_tmp3 = vec2.fromValues(0, 0), fsa_tmp4 = vec2.fromValues(0, 0), fsa_tmp5 = vec2.fromValues(0, 0), fsa_tmp6 = vec2.fromValues(0, 0);
                Narrowphase.findSeparatingAxis = function(c1, offset1, angle1, c2, offset2, angle2, sepAxis) {
                    var maxDist = null, overlap = false, found = false, edge = fsa_tmp1, worldPoint0 = fsa_tmp2, worldPoint1 = fsa_tmp3, normal = fsa_tmp4, span1 = fsa_tmp5, span2 = fsa_tmp6;
                    if (c1 instanceof Rectangle && c2 instanceof Rectangle) {
                        for (var j = 0; j !== 2; j++) {
                            var c = c1, angle = angle1;
                            if (j === 1) {
                                c = c2;
                                angle = angle2;
                            }
                            for (var i = 0; i !== 2; i++) {
                                if (i === 0) {
                                    vec2.set(normal, 0, 1);
                                } else if (i === 1) {
                                    vec2.set(normal, 1, 0);
                                }
                                if (angle !== 0) {
                                    vec2.rotate(normal, normal, angle);
                                }
                                Narrowphase.projectConvexOntoAxis(c1, offset1, angle1, normal, span1);
                                Narrowphase.projectConvexOntoAxis(c2, offset2, angle2, normal, span2);
                                var a = span1, b = span2, swapped = false;
                                if (span1[0] > span2[0]) {
                                    b = span1;
                                    a = span2;
                                    swapped = true;
                                }
                                var dist = b[0] - a[1];
                                overlap = dist <= 0;
                                if (maxDist === null || dist > maxDist) {
                                    vec2.copy(sepAxis, normal);
                                    maxDist = dist;
                                    found = overlap;
                                }
                            }
                        }
                    } else {
                        for (var j = 0; j !== 2; j++) {
                            var c = c1, angle = angle1;
                            if (j === 1) {
                                c = c2;
                                angle = angle2;
                            }
                            for (var i = 0; i !== c.vertices.length; i++) {
                                vec2.rotate(worldPoint0, c.vertices[i], angle);
                                vec2.rotate(worldPoint1, c.vertices[(i + 1) % c.vertices.length], angle);
                                sub(edge, worldPoint1, worldPoint0);
                                vec2.rotate90cw(normal, edge);
                                vec2.normalize(normal, normal);
                                Narrowphase.projectConvexOntoAxis(c1, offset1, angle1, normal, span1);
                                Narrowphase.projectConvexOntoAxis(c2, offset2, angle2, normal, span2);
                                var a = span1, b = span2, swapped = false;
                                if (span1[0] > span2[0]) {
                                    b = span1;
                                    a = span2;
                                    swapped = true;
                                }
                                var dist = b[0] - a[1];
                                overlap = dist <= 0;
                                if (maxDist === null || dist > maxDist) {
                                    vec2.copy(sepAxis, normal);
                                    maxDist = dist;
                                    found = overlap;
                                }
                            }
                        }
                    }
                    return found;
                };
                var gce_tmp1 = vec2.fromValues(0, 0), gce_tmp2 = vec2.fromValues(0, 0), gce_tmp3 = vec2.fromValues(0, 0);
                Narrowphase.getClosestEdge = function(c, angle, axis, flip) {
                    var localAxis = gce_tmp1, edge = gce_tmp2, normal = gce_tmp3;
                    vec2.rotate(localAxis, axis, -angle);
                    if (flip) {
                        vec2.scale(localAxis, localAxis, -1);
                    }
                    var closestEdge = -1, N = c.vertices.length, maxDot = -1;
                    for (var i = 0; i !== N; i++) {
                        sub(edge, c.vertices[(i + 1) % N], c.vertices[i % N]);
                        vec2.rotate90cw(normal, edge);
                        vec2.normalize(normal, normal);
                        var d = dot(normal, localAxis);
                        if (closestEdge === -1 || d > maxDot) {
                            closestEdge = i % N;
                            maxDot = d;
                        }
                    }
                    return closestEdge;
                };
                var circleHeightfield_candidate = vec2.create(), circleHeightfield_dist = vec2.create(), circleHeightfield_v0 = vec2.create(), circleHeightfield_v1 = vec2.create(), circleHeightfield_minCandidate = vec2.create(), circleHeightfield_worldNormal = vec2.create(), circleHeightfield_minCandidateNormal = vec2.create();
                Narrowphase.prototype[Shape.CIRCLE | Shape.HEIGHTFIELD] = Narrowphase.prototype.circleHeightfield = function(circleBody, circleShape, circlePos, circleAngle, hfBody, hfShape, hfPos, hfAngle, justTest, radius) {
                    var data = hfShape.data, radius = radius || circleShape.radius, w = hfShape.elementWidth, dist = circleHeightfield_dist, candidate = circleHeightfield_candidate, minCandidate = circleHeightfield_minCandidate, minCandidateNormal = circleHeightfield_minCandidateNormal, worldNormal = circleHeightfield_worldNormal, v0 = circleHeightfield_v0, v1 = circleHeightfield_v1;
                    var idxA = Math.floor((circlePos[0] - radius - hfPos[0]) / w), idxB = Math.ceil((circlePos[0] + radius - hfPos[0]) / w);
                    if (idxA < 0) {
                        idxA = 0;
                    }
                    if (idxB >= data.length) {
                        idxB = data.length - 1;
                    }
                    var max = data[idxA], min = data[idxB];
                    for (var i = idxA; i < idxB; i++) {
                        if (data[i] < min) {
                            min = data[i];
                        }
                        if (data[i] > max) {
                            max = data[i];
                        }
                    }
                    if (circlePos[1] - radius > max) {
                        return justTest ? false : 0;
                    }
                    if (circlePos[1] + radius < min) {}
                    var found = false;
                    for (var i = idxA; i < idxB; i++) {
                        vec2.set(v0, i * w, data[i]);
                        vec2.set(v1, (i + 1) * w, data[i + 1]);
                        vec2.add(v0, v0, hfPos);
                        vec2.add(v1, v1, hfPos);
                        vec2.sub(worldNormal, v1, v0);
                        vec2.rotate(worldNormal, worldNormal, Math.PI / 2);
                        vec2.normalize(worldNormal, worldNormal);
                        vec2.scale(candidate, worldNormal, -radius);
                        vec2.add(candidate, candidate, circlePos);
                        vec2.sub(dist, candidate, v0);
                        var d = vec2.dot(dist, worldNormal);
                        if (candidate[0] >= v0[0] && candidate[0] < v1[0] && d <= 0) {
                            if (justTest) {
                                return true;
                            }
                            found = true;
                            vec2.scale(dist, worldNormal, -d);
                            vec2.add(minCandidate, candidate, dist);
                            vec2.copy(minCandidateNormal, worldNormal);
                            var c = this.createContactEquation(hfBody, circleBody, hfShape, circleShape);
                            vec2.copy(c.normalA, minCandidateNormal);
                            vec2.scale(c.contactPointB, c.normalA, -radius);
                            add(c.contactPointB, c.contactPointB, circlePos);
                            sub(c.contactPointB, c.contactPointB, circleBody.position);
                            vec2.copy(c.contactPointA, minCandidate);
                            vec2.sub(c.contactPointA, c.contactPointA, hfBody.position);
                            this.contactEquations.push(c);
                            if (this.enableFriction) {
                                this.frictionEquations.push(this.createFrictionFromContact(c));
                            }
                        }
                    }
                    found = false;
                    if (radius > 0) {
                        for (var i = idxA; i <= idxB; i++) {
                            vec2.set(v0, i * w, data[i]);
                            vec2.add(v0, v0, hfPos);
                            vec2.sub(dist, circlePos, v0);
                            if (vec2.squaredLength(dist) < Math.pow(radius, 2)) {
                                if (justTest) {
                                    return true;
                                }
                                found = true;
                                var c = this.createContactEquation(hfBody, circleBody, hfShape, circleShape);
                                vec2.copy(c.normalA, dist);
                                vec2.normalize(c.normalA, c.normalA);
                                vec2.scale(c.contactPointB, c.normalA, -radius);
                                add(c.contactPointB, c.contactPointB, circlePos);
                                sub(c.contactPointB, c.contactPointB, circleBody.position);
                                sub(c.contactPointA, v0, hfPos);
                                add(c.contactPointA, c.contactPointA, hfPos);
                                sub(c.contactPointA, c.contactPointA, hfBody.position);
                                this.contactEquations.push(c);
                                if (this.enableFriction) {
                                    this.frictionEquations.push(this.createFrictionFromContact(c));
                                }
                            }
                        }
                    }
                    if (found) {
                        return 1;
                    }
                    return 0;
                };
                var convexHeightfield_v0 = vec2.create(), convexHeightfield_v1 = vec2.create(), convexHeightfield_tilePos = vec2.create(), convexHeightfield_tempConvexShape = new Convex([ vec2.create(), vec2.create(), vec2.create(), vec2.create() ]);
                Narrowphase.prototype[Shape.RECTANGLE | Shape.HEIGHTFIELD] = Narrowphase.prototype[Shape.CONVEX | Shape.HEIGHTFIELD] = Narrowphase.prototype.convexHeightfield = function(convexBody, convexShape, convexPos, convexAngle, hfBody, hfShape, hfPos, hfAngle, justTest) {
                    var data = hfShape.data, w = hfShape.elementWidth, v0 = convexHeightfield_v0, v1 = convexHeightfield_v1, tilePos = convexHeightfield_tilePos, tileConvex = convexHeightfield_tempConvexShape;
                    var idxA = Math.floor((convexBody.aabb.lowerBound[0] - hfPos[0]) / w), idxB = Math.ceil((convexBody.aabb.upperBound[0] - hfPos[0]) / w);
                    if (idxA < 0) {
                        idxA = 0;
                    }
                    if (idxB >= data.length) {
                        idxB = data.length - 1;
                    }
                    var max = data[idxA], min = data[idxB];
                    for (var i = idxA; i < idxB; i++) {
                        if (data[i] < min) {
                            min = data[i];
                        }
                        if (data[i] > max) {
                            max = data[i];
                        }
                    }
                    if (convexBody.aabb.lowerBound[1] > max) {
                        return justTest ? false : 0;
                    }
                    var found = false;
                    var numContacts = 0;
                    for (var i = idxA; i < idxB; i++) {
                        vec2.set(v0, i * w, data[i]);
                        vec2.set(v1, (i + 1) * w, data[i + 1]);
                        vec2.add(v0, v0, hfPos);
                        vec2.add(v1, v1, hfPos);
                        var tileHeight = 100;
                        vec2.set(tilePos, (v1[0] + v0[0]) * .5, (v1[1] + v0[1] - tileHeight) * .5);
                        vec2.sub(tileConvex.vertices[0], v1, tilePos);
                        vec2.sub(tileConvex.vertices[1], v0, tilePos);
                        vec2.copy(tileConvex.vertices[2], tileConvex.vertices[1]);
                        vec2.copy(tileConvex.vertices[3], tileConvex.vertices[0]);
                        tileConvex.vertices[2][1] -= tileHeight;
                        tileConvex.vertices[3][1] -= tileHeight;
                        numContacts += this.convexConvex(convexBody, convexShape, convexPos, convexAngle, hfBody, tileConvex, tilePos, 0, justTest);
                    }
                    return numContacts;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/collision/Narrowphase.js", "/collision");
        }, {
            "../equations/ContactEquation": 24,
            "../equations/Equation": 25,
            "../equations/FrictionEquation": 26,
            "../math/vec2": 33,
            "../objects/Body": 34,
            "../shapes/Circle": 40,
            "../shapes/Convex": 41,
            "../shapes/Rectangle": 46,
            "../shapes/Shape": 47,
            "../utils/TupleDictionary": 51,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        16: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Utils = _dereq_("../utils/Utils"), Broadphase = _dereq_("../collision/Broadphase");
                module.exports = SAPBroadphase;
                function SAPBroadphase() {
                    Broadphase.call(this, Broadphase.SAP);
                    this.axisList = [];
                    this.world = null;
                    this.axisIndex = 0;
                    var axisList = this.axisList;
                    this._addBodyHandler = function(e) {
                        axisList.push(e.body);
                    };
                    this._removeBodyHandler = function(e) {
                        var idx = axisList.indexOf(e.body);
                        if (idx !== -1) {
                            axisList.splice(idx, 1);
                        }
                    };
                }
                SAPBroadphase.prototype = new Broadphase();
                SAPBroadphase.prototype.setWorld = function(world) {
                    this.axisList.length = 0;
                    Utils.appendArray(this.axisList, world.bodies);
                    world.off("addBody", this._addBodyHandler).off("removeBody", this._removeBodyHandler);
                    world.on("addBody", this._addBodyHandler).on("removeBody", this._removeBodyHandler);
                    this.world = world;
                };
                SAPBroadphase.sortAxisList = function(a, axisIndex) {
                    axisIndex = axisIndex | 0;
                    for (var i = 1, l = a.length; i < l; i++) {
                        var v = a[i];
                        for (var j = i - 1; j >= 0; j--) {
                            if (a[j].aabb.lowerBound[axisIndex] <= v.aabb.lowerBound[axisIndex]) {
                                break;
                            }
                            a[j + 1] = a[j];
                        }
                        a[j + 1] = v;
                    }
                    return a;
                };
                SAPBroadphase.prototype.getCollisionPairs = function(world) {
                    var bodies = this.axisList, result = this.result, axisIndex = this.axisIndex;
                    result.length = 0;
                    var l = bodies.length;
                    while (l--) {
                        var b = bodies[l];
                        if (b.aabbNeedsUpdate) {
                            b.updateAABB();
                        }
                    }
                    SAPBroadphase.sortAxisList(bodies, axisIndex);
                    for (var i = 0, N = bodies.length | 0; i !== N; i++) {
                        var bi = bodies[i];
                        for (var j = i + 1; j < N; j++) {
                            var bj = bodies[j];
                            var overlaps = bj.aabb.lowerBound[axisIndex] <= bi.aabb.upperBound[axisIndex];
                            if (!overlaps) {
                                break;
                            }
                            if (Broadphase.canCollide(bi, bj) && this.boundingVolumeCheck(bi, bj)) {
                                result.push(bi, bj);
                            }
                        }
                    }
                    return result;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/collision/SAPBroadphase.js", "/collision");
        }, {
            "../collision/Broadphase": 12,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        17: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Constraint;
                var Utils = _dereq_("../utils/Utils");
                function Constraint(bodyA, bodyB, type, options) {
                    this.type = type;
                    options = Utils.defaults(options, {
                        collideConnected: true,
                        wakeUpBodies: true
                    });
                    this.equations = [];
                    this.bodyA = bodyA;
                    this.bodyB = bodyB;
                    this.collideConnected = options.collideConnected;
                    if (options.wakeUpBodies) {
                        if (bodyA) {
                            bodyA.wakeUp();
                        }
                        if (bodyB) {
                            bodyB.wakeUp();
                        }
                    }
                }
                Constraint.prototype.update = function() {
                    throw new Error("method update() not implmemented in this Constraint subclass!");
                };
                Constraint.DISTANCE = 1;
                Constraint.GEAR = 2;
                Constraint.LOCK = 3;
                Constraint.PRISMATIC = 4;
                Constraint.REVOLUTE = 5;
                Constraint.prototype.setStiffness = function(stiffness) {
                    var eqs = this.equations;
                    for (var i = 0; i !== eqs.length; i++) {
                        var eq = eqs[i];
                        eq.stiffness = stiffness;
                        eq.needsUpdate = true;
                    }
                };
                Constraint.prototype.setRelaxation = function(relaxation) {
                    var eqs = this.equations;
                    for (var i = 0; i !== eqs.length; i++) {
                        var eq = eqs[i];
                        eq.relaxation = relaxation;
                        eq.needsUpdate = true;
                    }
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/constraints/Constraint.js", "/constraints");
        }, {
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        18: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Constraint = _dereq_("./Constraint"), Equation = _dereq_("../equations/Equation"), vec2 = _dereq_("../math/vec2"), Utils = _dereq_("../utils/Utils");
                module.exports = DistanceConstraint;
                function DistanceConstraint(bodyA, bodyB, options) {
                    options = Utils.defaults(options, {
                        localAnchorA: [ 0, 0 ],
                        localAnchorB: [ 0, 0 ]
                    });
                    Constraint.call(this, bodyA, bodyB, Constraint.DISTANCE, options);
                    this.localAnchorA = vec2.fromValues(options.localAnchorA[0], options.localAnchorA[1]);
                    this.localAnchorB = vec2.fromValues(options.localAnchorB[0], options.localAnchorB[1]);
                    var localAnchorA = this.localAnchorA;
                    var localAnchorB = this.localAnchorB;
                    this.distance = 0;
                    if (typeof options.distance === "number") {
                        this.distance = options.distance;
                    } else {
                        var worldAnchorA = vec2.create(), worldAnchorB = vec2.create(), r = vec2.create();
                        vec2.rotate(worldAnchorA, localAnchorA, bodyA.angle);
                        vec2.rotate(worldAnchorB, localAnchorB, bodyB.angle);
                        vec2.add(r, bodyB.position, worldAnchorB);
                        vec2.sub(r, r, worldAnchorA);
                        vec2.sub(r, r, bodyA.position);
                        this.distance = vec2.length(r);
                    }
                    var maxForce;
                    if (typeof options.maxForce === "undefined") {
                        maxForce = Number.MAX_VALUE;
                    } else {
                        maxForce = options.maxForce;
                    }
                    var normal = new Equation(bodyA, bodyB, -maxForce, maxForce);
                    this.equations = [ normal ];
                    this.maxForce = maxForce;
                    var r = vec2.create();
                    var ri = vec2.create();
                    var rj = vec2.create();
                    var that = this;
                    normal.computeGq = function() {
                        var bodyA = this.bodyA, bodyB = this.bodyB, xi = bodyA.position, xj = bodyB.position;
                        vec2.rotate(ri, localAnchorA, bodyA.angle);
                        vec2.rotate(rj, localAnchorB, bodyB.angle);
                        vec2.add(r, xj, rj);
                        vec2.sub(r, r, ri);
                        vec2.sub(r, r, xi);
                        return vec2.length(r) - that.distance;
                    };
                    this.setMaxForce(maxForce);
                    this.upperLimitEnabled = false;
                    this.upperLimit = 1;
                    this.lowerLimitEnabled = false;
                    this.lowerLimit = 0;
                    this.position = 0;
                }
                DistanceConstraint.prototype = new Constraint();
                var n = vec2.create();
                var ri = vec2.create();
                var rj = vec2.create();
                DistanceConstraint.prototype.update = function() {
                    var normal = this.equations[0], bodyA = this.bodyA, bodyB = this.bodyB, distance = this.distance, xi = bodyA.position, xj = bodyB.position, normalEquation = this.equations[0], G = normal.G;
                    vec2.rotate(ri, this.localAnchorA, bodyA.angle);
                    vec2.rotate(rj, this.localAnchorB, bodyB.angle);
                    vec2.add(n, xj, rj);
                    vec2.sub(n, n, ri);
                    vec2.sub(n, n, xi);
                    this.position = vec2.length(n);
                    var violating = false;
                    if (this.upperLimitEnabled) {
                        if (this.position > this.upperLimit) {
                            normalEquation.maxForce = 0;
                            normalEquation.minForce = -this.maxForce;
                            this.distance = this.upperLimit;
                            violating = true;
                        }
                    }
                    if (this.lowerLimitEnabled) {
                        if (this.position < this.lowerLimit) {
                            normalEquation.maxForce = this.maxForce;
                            normalEquation.minForce = 0;
                            this.distance = this.lowerLimit;
                            violating = true;
                        }
                    }
                    if ((this.lowerLimitEnabled || this.upperLimitEnabled) && !violating) {
                        normalEquation.enabled = false;
                        return;
                    }
                    normalEquation.enabled = true;
                    vec2.normalize(n, n);
                    var rixn = vec2.crossLength(ri, n), rjxn = vec2.crossLength(rj, n);
                    G[0] = -n[0];
                    G[1] = -n[1];
                    G[2] = -rixn;
                    G[3] = n[0];
                    G[4] = n[1];
                    G[5] = rjxn;
                };
                DistanceConstraint.prototype.setMaxForce = function(f) {
                    var normal = this.equations[0];
                    normal.minForce = -f;
                    normal.maxForce = f;
                };
                DistanceConstraint.prototype.getMaxForce = function(f) {
                    var normal = this.equations[0];
                    return normal.maxForce;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/constraints/DistanceConstraint.js", "/constraints");
        }, {
            "../equations/Equation": 25,
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "./Constraint": 17,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        19: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Constraint = _dereq_("./Constraint"), Equation = _dereq_("../equations/Equation"), AngleLockEquation = _dereq_("../equations/AngleLockEquation"), vec2 = _dereq_("../math/vec2");
                module.exports = GearConstraint;
                function GearConstraint(bodyA, bodyB, options) {
                    options = options || {};
                    Constraint.call(this, bodyA, bodyB, Constraint.GEAR, options);
                    this.ratio = typeof options.ratio === "number" ? options.ratio : 1;
                    this.angle = typeof options.angle === "number" ? options.angle : bodyB.angle - this.ratio * bodyA.angle;
                    options.angle = this.angle;
                    options.ratio = this.ratio;
                    this.equations = [ new AngleLockEquation(bodyA, bodyB, options) ];
                    if (typeof options.maxTorque === "number") {
                        this.setMaxTorque(options.maxTorque);
                    }
                }
                GearConstraint.prototype = new Constraint();
                GearConstraint.prototype.update = function() {
                    var eq = this.equations[0];
                    if (eq.ratio !== this.ratio) {
                        eq.setRatio(this.ratio);
                    }
                    eq.angle = this.angle;
                };
                GearConstraint.prototype.setMaxTorque = function(torque) {
                    this.equations[0].setMaxTorque(torque);
                };
                GearConstraint.prototype.getMaxTorque = function(torque) {
                    return this.equations[0].maxForce;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/constraints/GearConstraint.js", "/constraints");
        }, {
            "../equations/AngleLockEquation": 23,
            "../equations/Equation": 25,
            "../math/vec2": 33,
            "./Constraint": 17,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        20: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Constraint = _dereq_("./Constraint"), vec2 = _dereq_("../math/vec2"), Equation = _dereq_("../equations/Equation");
                module.exports = LockConstraint;
                function LockConstraint(bodyA, bodyB, options) {
                    options = options || {};
                    Constraint.call(this, bodyA, bodyB, Constraint.LOCK, options);
                    var maxForce = typeof options.maxForce === "undefined" ? Number.MAX_VALUE : options.maxForce;
                    var localAngleB = options.localAngleB || 0;
                    var x = new Equation(bodyA, bodyB, -maxForce, maxForce), y = new Equation(bodyA, bodyB, -maxForce, maxForce), rot = new Equation(bodyA, bodyB, -maxForce, maxForce);
                    var l = vec2.create(), g = vec2.create(), that = this;
                    x.computeGq = function() {
                        vec2.rotate(l, that.localOffsetB, bodyA.angle);
                        vec2.sub(g, bodyB.position, bodyA.position);
                        vec2.sub(g, g, l);
                        return g[0];
                    };
                    y.computeGq = function() {
                        vec2.rotate(l, that.localOffsetB, bodyA.angle);
                        vec2.sub(g, bodyB.position, bodyA.position);
                        vec2.sub(g, g, l);
                        return g[1];
                    };
                    var r = vec2.create(), t = vec2.create();
                    rot.computeGq = function() {
                        vec2.rotate(r, that.localOffsetB, bodyB.angle - that.localAngleB);
                        vec2.scale(r, r, -1);
                        vec2.sub(g, bodyA.position, bodyB.position);
                        vec2.add(g, g, r);
                        vec2.rotate(t, r, -Math.PI / 2);
                        vec2.normalize(t, t);
                        return vec2.dot(g, t);
                    };
                    this.localOffsetB = vec2.create();
                    if (options.localOffsetB) {
                        vec2.copy(this.localOffsetB, options.localOffsetB);
                    } else {
                        vec2.sub(this.localOffsetB, bodyB.position, bodyA.position);
                        vec2.rotate(this.localOffsetB, this.localOffsetB, -bodyA.angle);
                    }
                    this.localAngleB = 0;
                    if (typeof options.localAngleB === "number") {
                        this.localAngleB = options.localAngleB;
                    } else {
                        this.localAngleB = bodyB.angle - bodyA.angle;
                    }
                    this.equations.push(x, y, rot);
                    this.setMaxForce(maxForce);
                }
                LockConstraint.prototype = new Constraint();
                LockConstraint.prototype.setMaxForce = function(force) {
                    var eqs = this.equations;
                    for (var i = 0; i < this.equations.length; i++) {
                        eqs[i].maxForce = force;
                        eqs[i].minForce = -force;
                    }
                };
                LockConstraint.prototype.getMaxForce = function() {
                    return this.equations[0].maxForce;
                };
                var l = vec2.create();
                var r = vec2.create();
                var t = vec2.create();
                var xAxis = vec2.fromValues(1, 0);
                var yAxis = vec2.fromValues(0, 1);
                LockConstraint.prototype.update = function() {
                    var x = this.equations[0], y = this.equations[1], rot = this.equations[2], bodyA = this.bodyA, bodyB = this.bodyB;
                    vec2.rotate(l, this.localOffsetB, bodyA.angle);
                    vec2.rotate(r, this.localOffsetB, bodyB.angle - this.localAngleB);
                    vec2.scale(r, r, -1);
                    vec2.rotate(t, r, Math.PI / 2);
                    vec2.normalize(t, t);
                    x.G[0] = -1;
                    x.G[1] = 0;
                    x.G[2] = -vec2.crossLength(l, xAxis);
                    x.G[3] = 1;
                    y.G[0] = 0;
                    y.G[1] = -1;
                    y.G[2] = -vec2.crossLength(l, yAxis);
                    y.G[4] = 1;
                    rot.G[0] = -t[0];
                    rot.G[1] = -t[1];
                    rot.G[3] = t[0];
                    rot.G[4] = t[1];
                    rot.G[5] = vec2.crossLength(r, t);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/constraints/LockConstraint.js", "/constraints");
        }, {
            "../equations/Equation": 25,
            "../math/vec2": 33,
            "./Constraint": 17,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        21: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Constraint = _dereq_("./Constraint"), ContactEquation = _dereq_("../equations/ContactEquation"), Equation = _dereq_("../equations/Equation"), vec2 = _dereq_("../math/vec2"), RotationalLockEquation = _dereq_("../equations/RotationalLockEquation");
                module.exports = PrismaticConstraint;
                function PrismaticConstraint(bodyA, bodyB, options) {
                    options = options || {};
                    Constraint.call(this, bodyA, bodyB, Constraint.PRISMATIC, options);
                    var localAnchorA = vec2.fromValues(0, 0), localAxisA = vec2.fromValues(1, 0), localAnchorB = vec2.fromValues(0, 0);
                    if (options.localAnchorA) {
                        vec2.copy(localAnchorA, options.localAnchorA);
                    }
                    if (options.localAxisA) {
                        vec2.copy(localAxisA, options.localAxisA);
                    }
                    if (options.localAnchorB) {
                        vec2.copy(localAnchorB, options.localAnchorB);
                    }
                    this.localAnchorA = localAnchorA;
                    this.localAnchorB = localAnchorB;
                    this.localAxisA = localAxisA;
                    var maxForce = this.maxForce = typeof options.maxForce !== "undefined" ? options.maxForce : Number.MAX_VALUE;
                    var trans = new Equation(bodyA, bodyB, -maxForce, maxForce);
                    var ri = new vec2.create(), rj = new vec2.create(), gg = new vec2.create(), t = new vec2.create();
                    trans.computeGq = function() {
                        return vec2.dot(gg, t);
                    };
                    trans.updateJacobian = function() {
                        var G = this.G, xi = bodyA.position, xj = bodyB.position;
                        vec2.rotate(ri, localAnchorA, bodyA.angle);
                        vec2.rotate(rj, localAnchorB, bodyB.angle);
                        vec2.add(gg, xj, rj);
                        vec2.sub(gg, gg, xi);
                        vec2.sub(gg, gg, ri);
                        vec2.rotate(t, localAxisA, bodyA.angle + Math.PI / 2);
                        G[0] = -t[0];
                        G[1] = -t[1];
                        G[2] = -vec2.crossLength(ri, t) + vec2.crossLength(t, gg);
                        G[3] = t[0];
                        G[4] = t[1];
                        G[5] = vec2.crossLength(rj, t);
                    };
                    this.equations.push(trans);
                    if (!options.disableRotationalLock) {
                        var rot = new RotationalLockEquation(bodyA, bodyB, -maxForce, maxForce);
                        this.equations.push(rot);
                    }
                    this.position = 0;
                    this.velocity = 0;
                    this.lowerLimitEnabled = typeof options.lowerLimit !== "undefined" ? true : false;
                    this.upperLimitEnabled = typeof options.upperLimit !== "undefined" ? true : false;
                    this.lowerLimit = typeof options.lowerLimit !== "undefined" ? options.lowerLimit : 0;
                    this.upperLimit = typeof options.upperLimit !== "undefined" ? options.upperLimit : 1;
                    this.upperLimitEquation = new ContactEquation(bodyA, bodyB);
                    this.lowerLimitEquation = new ContactEquation(bodyA, bodyB);
                    this.upperLimitEquation.minForce = this.lowerLimitEquation.minForce = 0;
                    this.upperLimitEquation.maxForce = this.lowerLimitEquation.maxForce = maxForce;
                    this.motorEquation = new Equation(bodyA, bodyB);
                    this.motorEnabled = false;
                    this.motorSpeed = 0;
                    var that = this;
                    var motorEquation = this.motorEquation;
                    var old = motorEquation.computeGW;
                    motorEquation.computeGq = function() {
                        return 0;
                    };
                    motorEquation.computeGW = function() {
                        var G = this.G, bi = this.bodyA, bj = this.bodyB, vi = bi.velocity, vj = bj.velocity, wi = bi.angularVelocity, wj = bj.angularVelocity;
                        return this.gmult(G, vi, wi, vj, wj) + that.motorSpeed;
                    };
                }
                PrismaticConstraint.prototype = new Constraint();
                var worldAxisA = vec2.create(), worldAnchorA = vec2.create(), worldAnchorB = vec2.create(), orientedAnchorA = vec2.create(), orientedAnchorB = vec2.create(), tmp = vec2.create();
                PrismaticConstraint.prototype.update = function() {
                    var eqs = this.equations, trans = eqs[0], upperLimit = this.upperLimit, lowerLimit = this.lowerLimit, upperLimitEquation = this.upperLimitEquation, lowerLimitEquation = this.lowerLimitEquation, bodyA = this.bodyA, bodyB = this.bodyB, localAxisA = this.localAxisA, localAnchorA = this.localAnchorA, localAnchorB = this.localAnchorB;
                    trans.updateJacobian();
                    vec2.rotate(worldAxisA, localAxisA, bodyA.angle);
                    vec2.rotate(orientedAnchorA, localAnchorA, bodyA.angle);
                    vec2.add(worldAnchorA, orientedAnchorA, bodyA.position);
                    vec2.rotate(orientedAnchorB, localAnchorB, bodyB.angle);
                    vec2.add(worldAnchorB, orientedAnchorB, bodyB.position);
                    var relPosition = this.position = vec2.dot(worldAnchorB, worldAxisA) - vec2.dot(worldAnchorA, worldAxisA);
                    if (this.motorEnabled) {
                        var G = this.motorEquation.G;
                        G[0] = worldAxisA[0];
                        G[1] = worldAxisA[1];
                        G[2] = vec2.crossLength(worldAxisA, orientedAnchorB);
                        G[3] = -worldAxisA[0];
                        G[4] = -worldAxisA[1];
                        G[5] = -vec2.crossLength(worldAxisA, orientedAnchorA);
                    }
                    if (this.upperLimitEnabled && relPosition > upperLimit) {
                        vec2.scale(upperLimitEquation.normalA, worldAxisA, -1);
                        vec2.sub(upperLimitEquation.contactPointA, worldAnchorA, bodyA.position);
                        vec2.sub(upperLimitEquation.contactPointB, worldAnchorB, bodyB.position);
                        vec2.scale(tmp, worldAxisA, upperLimit);
                        vec2.add(upperLimitEquation.contactPointA, upperLimitEquation.contactPointA, tmp);
                        if (eqs.indexOf(upperLimitEquation) === -1) {
                            eqs.push(upperLimitEquation);
                        }
                    } else {
                        var idx = eqs.indexOf(upperLimitEquation);
                        if (idx !== -1) {
                            eqs.splice(idx, 1);
                        }
                    }
                    if (this.lowerLimitEnabled && relPosition < lowerLimit) {
                        vec2.scale(lowerLimitEquation.normalA, worldAxisA, 1);
                        vec2.sub(lowerLimitEquation.contactPointA, worldAnchorA, bodyA.position);
                        vec2.sub(lowerLimitEquation.contactPointB, worldAnchorB, bodyB.position);
                        vec2.scale(tmp, worldAxisA, lowerLimit);
                        vec2.sub(lowerLimitEquation.contactPointB, lowerLimitEquation.contactPointB, tmp);
                        if (eqs.indexOf(lowerLimitEquation) === -1) {
                            eqs.push(lowerLimitEquation);
                        }
                    } else {
                        var idx = eqs.indexOf(lowerLimitEquation);
                        if (idx !== -1) {
                            eqs.splice(idx, 1);
                        }
                    }
                };
                PrismaticConstraint.prototype.enableMotor = function() {
                    if (this.motorEnabled) {
                        return;
                    }
                    this.equations.push(this.motorEquation);
                    this.motorEnabled = true;
                };
                PrismaticConstraint.prototype.disableMotor = function() {
                    if (!this.motorEnabled) {
                        return;
                    }
                    var i = this.equations.indexOf(this.motorEquation);
                    this.equations.splice(i, 1);
                    this.motorEnabled = false;
                };
                PrismaticConstraint.prototype.setLimits = function(lower, upper) {
                    if (typeof lower === "number") {
                        this.lowerLimit = lower;
                        this.lowerLimitEnabled = true;
                    } else {
                        this.lowerLimit = lower;
                        this.lowerLimitEnabled = false;
                    }
                    if (typeof upper === "number") {
                        this.upperLimit = upper;
                        this.upperLimitEnabled = true;
                    } else {
                        this.upperLimit = upper;
                        this.upperLimitEnabled = false;
                    }
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/constraints/PrismaticConstraint.js", "/constraints");
        }, {
            "../equations/ContactEquation": 24,
            "../equations/Equation": 25,
            "../equations/RotationalLockEquation": 27,
            "../math/vec2": 33,
            "./Constraint": 17,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        22: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Constraint = _dereq_("./Constraint"), Equation = _dereq_("../equations/Equation"), RotationalVelocityEquation = _dereq_("../equations/RotationalVelocityEquation"), RotationalLockEquation = _dereq_("../equations/RotationalLockEquation"), vec2 = _dereq_("../math/vec2");
                module.exports = RevoluteConstraint;
                var worldPivotA = vec2.create(), worldPivotB = vec2.create(), xAxis = vec2.fromValues(1, 0), yAxis = vec2.fromValues(0, 1), g = vec2.create();
                function RevoluteConstraint(bodyA, bodyB, options) {
                    options = options || {};
                    Constraint.call(this, bodyA, bodyB, Constraint.REVOLUTE, options);
                    var maxForce = this.maxForce = typeof options.maxForce !== "undefined" ? options.maxForce : Number.MAX_VALUE;
                    this.pivotA = vec2.create();
                    this.pivotB = vec2.create();
                    if (options.worldPivot) {
                        vec2.sub(this.pivotA, options.worldPivot, bodyA.position);
                        vec2.sub(this.pivotB, options.worldPivot, bodyB.position);
                        vec2.rotate(this.pivotA, this.pivotA, -bodyA.angle);
                        vec2.rotate(this.pivotB, this.pivotB, -bodyB.angle);
                    } else {
                        vec2.copy(this.pivotA, options.localPivotA);
                        vec2.copy(this.pivotB, options.localPivotB);
                    }
                    var eqs = this.equations = [ new Equation(bodyA, bodyB, -maxForce, maxForce), new Equation(bodyA, bodyB, -maxForce, maxForce) ];
                    var x = eqs[0];
                    var y = eqs[1];
                    var that = this;
                    x.computeGq = function() {
                        vec2.rotate(worldPivotA, that.pivotA, bodyA.angle);
                        vec2.rotate(worldPivotB, that.pivotB, bodyB.angle);
                        vec2.add(g, bodyB.position, worldPivotB);
                        vec2.sub(g, g, bodyA.position);
                        vec2.sub(g, g, worldPivotA);
                        return vec2.dot(g, xAxis);
                    };
                    y.computeGq = function() {
                        vec2.rotate(worldPivotA, that.pivotA, bodyA.angle);
                        vec2.rotate(worldPivotB, that.pivotB, bodyB.angle);
                        vec2.add(g, bodyB.position, worldPivotB);
                        vec2.sub(g, g, bodyA.position);
                        vec2.sub(g, g, worldPivotA);
                        return vec2.dot(g, yAxis);
                    };
                    y.minForce = x.minForce = -maxForce;
                    y.maxForce = x.maxForce = maxForce;
                    this.motorEquation = new RotationalVelocityEquation(bodyA, bodyB);
                    this.motorEnabled = false;
                    this.angle = 0;
                    this.lowerLimitEnabled = false;
                    this.upperLimitEnabled = false;
                    this.lowerLimit = 0;
                    this.upperLimit = 0;
                    this.upperLimitEquation = new RotationalLockEquation(bodyA, bodyB);
                    this.lowerLimitEquation = new RotationalLockEquation(bodyA, bodyB);
                    this.upperLimitEquation.minForce = 0;
                    this.lowerLimitEquation.maxForce = 0;
                }
                RevoluteConstraint.prototype = new Constraint();
                RevoluteConstraint.prototype.setLimits = function(lower, upper) {
                    if (typeof lower === "number") {
                        this.lowerLimit = lower;
                        this.lowerLimitEnabled = true;
                    } else {
                        this.lowerLimit = lower;
                        this.lowerLimitEnabled = false;
                    }
                    if (typeof upper === "number") {
                        this.upperLimit = upper;
                        this.upperLimitEnabled = true;
                    } else {
                        this.upperLimit = upper;
                        this.upperLimitEnabled = false;
                    }
                };
                RevoluteConstraint.prototype.update = function() {
                    var bodyA = this.bodyA, bodyB = this.bodyB, pivotA = this.pivotA, pivotB = this.pivotB, eqs = this.equations, normal = eqs[0], tangent = eqs[1], x = eqs[0], y = eqs[1], upperLimit = this.upperLimit, lowerLimit = this.lowerLimit, upperLimitEquation = this.upperLimitEquation, lowerLimitEquation = this.lowerLimitEquation;
                    var relAngle = this.angle = bodyB.angle - bodyA.angle;
                    if (this.upperLimitEnabled && relAngle > upperLimit) {
                        upperLimitEquation.angle = upperLimit;
                        if (eqs.indexOf(upperLimitEquation) === -1) {
                            eqs.push(upperLimitEquation);
                        }
                    } else {
                        var idx = eqs.indexOf(upperLimitEquation);
                        if (idx !== -1) {
                            eqs.splice(idx, 1);
                        }
                    }
                    if (this.lowerLimitEnabled && relAngle < lowerLimit) {
                        lowerLimitEquation.angle = lowerLimit;
                        if (eqs.indexOf(lowerLimitEquation) === -1) {
                            eqs.push(lowerLimitEquation);
                        }
                    } else {
                        var idx = eqs.indexOf(lowerLimitEquation);
                        if (idx !== -1) {
                            eqs.splice(idx, 1);
                        }
                    }
                    vec2.rotate(worldPivotA, pivotA, bodyA.angle);
                    vec2.rotate(worldPivotB, pivotB, bodyB.angle);
                    x.G[0] = -1;
                    x.G[1] = 0;
                    x.G[2] = -vec2.crossLength(worldPivotA, xAxis);
                    x.G[3] = 1;
                    x.G[4] = 0;
                    x.G[5] = vec2.crossLength(worldPivotB, xAxis);
                    y.G[0] = 0;
                    y.G[1] = -1;
                    y.G[2] = -vec2.crossLength(worldPivotA, yAxis);
                    y.G[3] = 0;
                    y.G[4] = 1;
                    y.G[5] = vec2.crossLength(worldPivotB, yAxis);
                };
                RevoluteConstraint.prototype.enableMotor = function() {
                    if (this.motorEnabled) {
                        return;
                    }
                    this.equations.push(this.motorEquation);
                    this.motorEnabled = true;
                };
                RevoluteConstraint.prototype.disableMotor = function() {
                    if (!this.motorEnabled) {
                        return;
                    }
                    var i = this.equations.indexOf(this.motorEquation);
                    this.equations.splice(i, 1);
                    this.motorEnabled = false;
                };
                RevoluteConstraint.prototype.motorIsEnabled = function() {
                    return !!this.motorEnabled;
                };
                RevoluteConstraint.prototype.setMotorSpeed = function(speed) {
                    if (!this.motorEnabled) {
                        return;
                    }
                    var i = this.equations.indexOf(this.motorEquation);
                    this.equations[i].relativeVelocity = speed;
                };
                RevoluteConstraint.prototype.getMotorSpeed = function() {
                    if (!this.motorEnabled) {
                        return false;
                    }
                    return this.motorEquation.relativeVelocity;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/constraints/RevoluteConstraint.js", "/constraints");
        }, {
            "../equations/Equation": 25,
            "../equations/RotationalLockEquation": 27,
            "../equations/RotationalVelocityEquation": 28,
            "../math/vec2": 33,
            "./Constraint": 17,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        23: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Equation = _dereq_("./Equation"), vec2 = _dereq_("../math/vec2");
                module.exports = AngleLockEquation;
                function AngleLockEquation(bodyA, bodyB, options) {
                    options = options || {};
                    Equation.call(this, bodyA, bodyB, -Number.MAX_VALUE, Number.MAX_VALUE);
                    this.angle = options.angle || 0;
                    this.ratio = typeof options.ratio === "number" ? options.ratio : 1;
                    this.setRatio(this.ratio);
                }
                AngleLockEquation.prototype = new Equation();
                AngleLockEquation.prototype.constructor = AngleLockEquation;
                AngleLockEquation.prototype.computeGq = function() {
                    return this.ratio * this.bodyA.angle - this.bodyB.angle + this.angle;
                };
                AngleLockEquation.prototype.setRatio = function(ratio) {
                    var G = this.G;
                    G[2] = ratio;
                    G[5] = -1;
                    this.ratio = ratio;
                };
                AngleLockEquation.prototype.setMaxTorque = function(torque) {
                    this.maxForce = torque;
                    this.minForce = -torque;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/equations/AngleLockEquation.js", "/equations");
        }, {
            "../math/vec2": 33,
            "./Equation": 25,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        24: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Equation = _dereq_("./Equation"), vec2 = _dereq_("../math/vec2");
                module.exports = ContactEquation;
                function ContactEquation(bodyA, bodyB) {
                    Equation.call(this, bodyA, bodyB, 0, Number.MAX_VALUE);
                    this.contactPointA = vec2.create();
                    this.penetrationVec = vec2.create();
                    this.contactPointB = vec2.create();
                    this.normalA = vec2.create();
                    this.restitution = 0;
                    this.firstImpact = false;
                    this.shapeA = null;
                    this.shapeB = null;
                }
                ContactEquation.prototype = new Equation();
                ContactEquation.prototype.constructor = ContactEquation;
                ContactEquation.prototype.computeB = function(a, b, h) {
                    var bi = this.bodyA, bj = this.bodyB, ri = this.contactPointA, rj = this.contactPointB, xi = bi.position, xj = bj.position;
                    var penetrationVec = this.penetrationVec, n = this.normalA, G = this.G;
                    var rixn = vec2.crossLength(ri, n), rjxn = vec2.crossLength(rj, n);
                    G[0] = -n[0];
                    G[1] = -n[1];
                    G[2] = -rixn;
                    G[3] = n[0];
                    G[4] = n[1];
                    G[5] = rjxn;
                    vec2.add(penetrationVec, xj, rj);
                    vec2.sub(penetrationVec, penetrationVec, xi);
                    vec2.sub(penetrationVec, penetrationVec, ri);
                    var GW, Gq;
                    if (this.firstImpact && this.restitution !== 0) {
                        Gq = 0;
                        GW = 1 / b * (1 + this.restitution) * this.computeGW();
                    } else {
                        Gq = vec2.dot(n, penetrationVec) + this.offset;
                        GW = this.computeGW();
                    }
                    var GiMf = this.computeGiMf();
                    var B = -Gq * a - GW * b - h * GiMf;
                    return B;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/equations/ContactEquation.js", "/equations");
        }, {
            "../math/vec2": 33,
            "./Equation": 25,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        25: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Equation;
                var vec2 = _dereq_("../math/vec2"), Utils = _dereq_("../utils/Utils"), Body = _dereq_("../objects/Body");
                function Equation(bodyA, bodyB, minForce, maxForce) {
                    this.minForce = typeof minForce === "undefined" ? -Number.MAX_VALUE : minForce;
                    this.maxForce = typeof maxForce === "undefined" ? Number.MAX_VALUE : maxForce;
                    this.bodyA = bodyA;
                    this.bodyB = bodyB;
                    this.stiffness = Equation.DEFAULT_STIFFNESS;
                    this.relaxation = Equation.DEFAULT_RELAXATION;
                    this.G = new Utils.ARRAY_TYPE(6);
                    for (var i = 0; i < 6; i++) {
                        this.G[i] = 0;
                    }
                    this.offset = 0;
                    this.a = 0;
                    this.b = 0;
                    this.epsilon = 0;
                    this.timeStep = 1 / 60;
                    this.needsUpdate = true;
                    this.multiplier = 0;
                    this.relativeVelocity = 0;
                    this.enabled = true;
                }
                Equation.prototype.constructor = Equation;
                Equation.DEFAULT_STIFFNESS = 1e6;
                Equation.DEFAULT_RELAXATION = 4;
                Equation.prototype.update = function() {
                    var k = this.stiffness, d = this.relaxation, h = this.timeStep;
                    this.a = 4 / (h * (1 + 4 * d));
                    this.b = 4 * d / (1 + 4 * d);
                    this.epsilon = 4 / (h * h * k * (1 + 4 * d));
                    this.needsUpdate = false;
                };
                Equation.prototype.gmult = function(G, vi, wi, vj, wj) {
                    return G[0] * vi[0] + G[1] * vi[1] + G[2] * wi + G[3] * vj[0] + G[4] * vj[1] + G[5] * wj;
                };
                Equation.prototype.computeB = function(a, b, h) {
                    var GW = this.computeGW();
                    var Gq = this.computeGq();
                    var GiMf = this.computeGiMf();
                    return -Gq * a - GW * b - GiMf * h;
                };
                var qi = vec2.create(), qj = vec2.create();
                Equation.prototype.computeGq = function() {
                    var G = this.G, bi = this.bodyA, bj = this.bodyB, xi = bi.position, xj = bj.position, ai = bi.angle, aj = bj.angle;
                    return this.gmult(G, qi, ai, qj, aj) + this.offset;
                };
                Equation.prototype.computeGW = function() {
                    var G = this.G, bi = this.bodyA, bj = this.bodyB, vi = bi.velocity, vj = bj.velocity, wi = bi.angularVelocity, wj = bj.angularVelocity;
                    return this.gmult(G, vi, wi, vj, wj) + this.relativeVelocity;
                };
                Equation.prototype.computeGWlambda = function() {
                    var G = this.G, bi = this.bodyA, bj = this.bodyB, vi = bi.vlambda, vj = bj.vlambda, wi = bi.wlambda, wj = bj.wlambda;
                    return this.gmult(G, vi, wi, vj, wj);
                };
                var iMfi = vec2.create(), iMfj = vec2.create();
                Equation.prototype.computeGiMf = function() {
                    var bi = this.bodyA, bj = this.bodyB, fi = bi.force, ti = bi.angularForce, fj = bj.force, tj = bj.angularForce, invMassi = bi.invMassSolve, invMassj = bj.invMassSolve, invIi = bi.invInertiaSolve, invIj = bj.invInertiaSolve, G = this.G;
                    vec2.scale(iMfi, fi, invMassi);
                    vec2.scale(iMfj, fj, invMassj);
                    return this.gmult(G, iMfi, ti * invIi, iMfj, tj * invIj);
                };
                Equation.prototype.computeGiMGt = function() {
                    var bi = this.bodyA, bj = this.bodyB, invMassi = bi.invMassSolve, invMassj = bj.invMassSolve, invIi = bi.invInertiaSolve, invIj = bj.invInertiaSolve, G = this.G;
                    return G[0] * G[0] * invMassi + G[1] * G[1] * invMassi + G[2] * G[2] * invIi + G[3] * G[3] * invMassj + G[4] * G[4] * invMassj + G[5] * G[5] * invIj;
                };
                var addToWlambda_temp = vec2.create(), addToWlambda_Gi = vec2.create(), addToWlambda_Gj = vec2.create(), addToWlambda_ri = vec2.create(), addToWlambda_rj = vec2.create(), addToWlambda_Mdiag = vec2.create();
                Equation.prototype.addToWlambda = function(deltalambda) {
                    var bi = this.bodyA, bj = this.bodyB, temp = addToWlambda_temp, Gi = addToWlambda_Gi, Gj = addToWlambda_Gj, ri = addToWlambda_ri, rj = addToWlambda_rj, invMassi = bi.invMassSolve, invMassj = bj.invMassSolve, invIi = bi.invInertiaSolve, invIj = bj.invInertiaSolve, Mdiag = addToWlambda_Mdiag, G = this.G;
                    Gi[0] = G[0];
                    Gi[1] = G[1];
                    Gj[0] = G[3];
                    Gj[1] = G[4];
                    vec2.scale(temp, Gi, invMassi * deltalambda);
                    vec2.add(bi.vlambda, bi.vlambda, temp);
                    bi.wlambda += invIi * G[2] * deltalambda;
                    vec2.scale(temp, Gj, invMassj * deltalambda);
                    vec2.add(bj.vlambda, bj.vlambda, temp);
                    bj.wlambda += invIj * G[5] * deltalambda;
                };
                Equation.prototype.computeInvC = function(eps) {
                    return 1 / (this.computeGiMGt() + eps);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/equations/Equation.js", "/equations");
        }, {
            "../math/vec2": 33,
            "../objects/Body": 34,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        26: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), Equation = _dereq_("./Equation"), Utils = _dereq_("../utils/Utils");
                module.exports = FrictionEquation;
                function FrictionEquation(bodyA, bodyB, slipForce) {
                    Equation.call(this, bodyA, bodyB, -slipForce, slipForce);
                    this.contactPointA = vec2.create();
                    this.contactPointB = vec2.create();
                    this.t = vec2.create();
                    this.contactEquations = [];
                    this.shapeA = null;
                    this.shapeB = null;
                    this.frictionCoefficient = .3;
                }
                FrictionEquation.prototype = new Equation();
                FrictionEquation.prototype.constructor = FrictionEquation;
                FrictionEquation.prototype.setSlipForce = function(slipForce) {
                    this.maxForce = slipForce;
                    this.minForce = -slipForce;
                };
                FrictionEquation.prototype.getSlipForce = function() {
                    return this.maxForce;
                };
                FrictionEquation.prototype.computeB = function(a, b, h) {
                    var bi = this.bodyA, bj = this.bodyB, ri = this.contactPointA, rj = this.contactPointB, t = this.t, G = this.G;
                    G[0] = -t[0];
                    G[1] = -t[1];
                    G[2] = -vec2.crossLength(ri, t);
                    G[3] = t[0];
                    G[4] = t[1];
                    G[5] = vec2.crossLength(rj, t);
                    var GW = this.computeGW(), GiMf = this.computeGiMf();
                    var B = -GW * b - h * GiMf;
                    return B;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/equations/FrictionEquation.js", "/equations");
        }, {
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "./Equation": 25,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        27: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Equation = _dereq_("./Equation"), vec2 = _dereq_("../math/vec2");
                module.exports = RotationalLockEquation;
                function RotationalLockEquation(bodyA, bodyB, options) {
                    options = options || {};
                    Equation.call(this, bodyA, bodyB, -Number.MAX_VALUE, Number.MAX_VALUE);
                    this.angle = options.angle || 0;
                    var G = this.G;
                    G[2] = 1;
                    G[5] = -1;
                }
                RotationalLockEquation.prototype = new Equation();
                RotationalLockEquation.prototype.constructor = RotationalLockEquation;
                var worldVectorA = vec2.create(), worldVectorB = vec2.create(), xAxis = vec2.fromValues(1, 0), yAxis = vec2.fromValues(0, 1);
                RotationalLockEquation.prototype.computeGq = function() {
                    vec2.rotate(worldVectorA, xAxis, this.bodyA.angle + this.angle);
                    vec2.rotate(worldVectorB, yAxis, this.bodyB.angle);
                    return vec2.dot(worldVectorA, worldVectorB);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/equations/RotationalLockEquation.js", "/equations");
        }, {
            "../math/vec2": 33,
            "./Equation": 25,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        28: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Equation = _dereq_("./Equation"), vec2 = _dereq_("../math/vec2");
                module.exports = RotationalVelocityEquation;
                function RotationalVelocityEquation(bodyA, bodyB) {
                    Equation.call(this, bodyA, bodyB, -Number.MAX_VALUE, Number.MAX_VALUE);
                    this.relativeVelocity = 1;
                    this.ratio = 1;
                }
                RotationalVelocityEquation.prototype = new Equation();
                RotationalVelocityEquation.prototype.constructor = RotationalVelocityEquation;
                RotationalVelocityEquation.prototype.computeB = function(a, b, h) {
                    var G = this.G;
                    G[2] = -1;
                    G[5] = this.ratio;
                    var GiMf = this.computeGiMf();
                    var GW = this.computeGW();
                    var B = -GW * b - h * GiMf;
                    return B;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/equations/RotationalVelocityEquation.js", "/equations");
        }, {
            "../math/vec2": 33,
            "./Equation": 25,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        29: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var EventEmitter = function() {};
                module.exports = EventEmitter;
                EventEmitter.prototype = {
                    constructor: EventEmitter,
                    on: function(type, listener, context) {
                        listener.context = context || this;
                        if (this._listeners === undefined) {
                            this._listeners = {};
                        }
                        var listeners = this._listeners;
                        if (listeners[type] === undefined) {
                            listeners[type] = [];
                        }
                        if (listeners[type].indexOf(listener) === -1) {
                            listeners[type].push(listener);
                        }
                        return this;
                    },
                    has: function(type, listener) {
                        if (this._listeners === undefined) {
                            return false;
                        }
                        var listeners = this._listeners;
                        if (listener) {
                            if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {
                                return true;
                            }
                        } else {
                            if (listeners[type] !== undefined) {
                                return true;
                            }
                        }
                        return false;
                    },
                    off: function(type, listener) {
                        if (this._listeners === undefined) {
                            return this;
                        }
                        var listeners = this._listeners;
                        var index = listeners[type].indexOf(listener);
                        if (index !== -1) {
                            listeners[type].splice(index, 1);
                        }
                        return this;
                    },
                    emit: function(event) {
                        if (this._listeners === undefined) {
                            return this;
                        }
                        var listeners = this._listeners;
                        var listenerArray = listeners[event.type];
                        if (listenerArray !== undefined) {
                            event.target = this;
                            for (var i = 0, l = listenerArray.length; i < l; i++) {
                                var listener = listenerArray[i];
                                listener.call(listener.context, event);
                            }
                        }
                        return this;
                    }
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/events/EventEmitter.js", "/events");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        30: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Material = _dereq_("./Material");
                var Equation = _dereq_("../equations/Equation");
                module.exports = ContactMaterial;
                function ContactMaterial(materialA, materialB, options) {
                    options = options || {};
                    if (!(materialA instanceof Material) || !(materialB instanceof Material)) {
                        throw new Error("First two arguments must be Material instances.");
                    }
                    this.id = ContactMaterial.idCounter++;
                    this.materialA = materialA;
                    this.materialB = materialB;
                    this.friction = typeof options.friction !== "undefined" ? Number(options.friction) : .3;
                    this.restitution = typeof options.restitution !== "undefined" ? Number(options.restitution) : 0;
                    this.stiffness = typeof options.stiffness !== "undefined" ? Number(options.stiffness) : Equation.DEFAULT_STIFFNESS;
                    this.relaxation = typeof options.relaxation !== "undefined" ? Number(options.relaxation) : Equation.DEFAULT_RELAXATION;
                    this.frictionStiffness = typeof options.frictionStiffness !== "undefined" ? Number(options.frictionStiffness) : Equation.DEFAULT_STIFFNESS;
                    this.frictionRelaxation = typeof options.frictionRelaxation !== "undefined" ? Number(options.frictionRelaxation) : Equation.DEFAULT_RELAXATION;
                    this.surfaceVelocity = typeof options.surfaceVelocity !== "undefined" ? Number(options.surfaceVelocity) : 0;
                    this.contactSkinSize = .005;
                }
                ContactMaterial.idCounter = 0;
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/material/ContactMaterial.js", "/material");
        }, {
            "../equations/Equation": 25,
            "./Material": 31,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        31: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Material;
                function Material(id) {
                    this.id = id || Material.idCounter++;
                }
                Material.idCounter = 0;
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/material/Material.js", "/material");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        32: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var PolyK = {};
                PolyK.GetArea = function(p) {
                    if (p.length < 6) return 0;
                    var l = p.length - 2;
                    var sum = 0;
                    for (var i = 0; i < l; i += 2) sum += (p[i + 2] - p[i]) * (p[i + 1] + p[i + 3]);
                    sum += (p[0] - p[l]) * (p[l + 1] + p[1]);
                    return -sum * .5;
                };
                PolyK.Triangulate = function(p) {
                    var n = p.length >> 1;
                    if (n < 3) return [];
                    var tgs = [];
                    var avl = [];
                    for (var i = 0; i < n; i++) avl.push(i);
                    var i = 0;
                    var al = n;
                    while (al > 3) {
                        var i0 = avl[(i + 0) % al];
                        var i1 = avl[(i + 1) % al];
                        var i2 = avl[(i + 2) % al];
                        var ax = p[2 * i0], ay = p[2 * i0 + 1];
                        var bx = p[2 * i1], by = p[2 * i1 + 1];
                        var cx = p[2 * i2], cy = p[2 * i2 + 1];
                        var earFound = false;
                        if (PolyK._convex(ax, ay, bx, by, cx, cy)) {
                            earFound = true;
                            for (var j = 0; j < al; j++) {
                                var vi = avl[j];
                                if (vi == i0 || vi == i1 || vi == i2) continue;
                                if (PolyK._PointInTriangle(p[2 * vi], p[2 * vi + 1], ax, ay, bx, by, cx, cy)) {
                                    earFound = false;
                                    break;
                                }
                            }
                        }
                        if (earFound) {
                            tgs.push(i0, i1, i2);
                            avl.splice((i + 1) % al, 1);
                            al--;
                            i = 0;
                        } else if (i++ > 3 * al) break;
                    }
                    tgs.push(avl[0], avl[1], avl[2]);
                    return tgs;
                };
                PolyK._PointInTriangle = function(px, py, ax, ay, bx, by, cx, cy) {
                    var v0x = cx - ax;
                    var v0y = cy - ay;
                    var v1x = bx - ax;
                    var v1y = by - ay;
                    var v2x = px - ax;
                    var v2y = py - ay;
                    var dot00 = v0x * v0x + v0y * v0y;
                    var dot01 = v0x * v1x + v0y * v1y;
                    var dot02 = v0x * v2x + v0y * v2y;
                    var dot11 = v1x * v1x + v1y * v1y;
                    var dot12 = v1x * v2x + v1y * v2y;
                    var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
                    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
                    var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
                    return u >= 0 && v >= 0 && u + v < 1;
                };
                PolyK._convex = function(ax, ay, bx, by, cx, cy) {
                    return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0;
                };
                module.exports = PolyK;
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/math/polyk.js", "/math");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        33: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = module.exports = {};
                var Utils = _dereq_("../utils/Utils");
                vec2.crossLength = function(a, b) {
                    return a[0] * b[1] - a[1] * b[0];
                };
                vec2.crossVZ = function(out, vec, zcomp) {
                    vec2.rotate(out, vec, -Math.PI / 2);
                    vec2.scale(out, out, zcomp);
                    return out;
                };
                vec2.crossZV = function(out, zcomp, vec) {
                    vec2.rotate(out, vec, Math.PI / 2);
                    vec2.scale(out, out, zcomp);
                    return out;
                };
                vec2.rotate = function(out, a, angle) {
                    if (angle !== 0) {
                        var c = Math.cos(angle), s = Math.sin(angle), x = a[0], y = a[1];
                        out[0] = c * x - s * y;
                        out[1] = s * x + c * y;
                    } else {
                        out[0] = a[0];
                        out[1] = a[1];
                    }
                };
                vec2.rotate90cw = function(out, a) {
                    var x = a[0];
                    var y = a[1];
                    out[0] = y;
                    out[1] = -x;
                };
                vec2.toLocalFrame = function(out, worldPoint, framePosition, frameAngle) {
                    vec2.copy(out, worldPoint);
                    vec2.sub(out, out, framePosition);
                    vec2.rotate(out, out, -frameAngle);
                };
                vec2.toGlobalFrame = function(out, localPoint, framePosition, frameAngle) {
                    vec2.copy(out, localPoint);
                    vec2.rotate(out, out, frameAngle);
                    vec2.add(out, out, framePosition);
                };
                vec2.centroid = function(out, a, b, c) {
                    vec2.add(out, a, b);
                    vec2.add(out, out, c);
                    vec2.scale(out, out, 1 / 3);
                    return out;
                };
                vec2.create = function() {
                    var out = new Utils.ARRAY_TYPE(2);
                    out[0] = 0;
                    out[1] = 0;
                    return out;
                };
                vec2.clone = function(a) {
                    var out = new Utils.ARRAY_TYPE(2);
                    out[0] = a[0];
                    out[1] = a[1];
                    return out;
                };
                vec2.fromValues = function(x, y) {
                    var out = new Utils.ARRAY_TYPE(2);
                    out[0] = x;
                    out[1] = y;
                    return out;
                };
                vec2.copy = function(out, a) {
                    out[0] = a[0];
                    out[1] = a[1];
                    return out;
                };
                vec2.set = function(out, x, y) {
                    out[0] = x;
                    out[1] = y;
                    return out;
                };
                vec2.add = function(out, a, b) {
                    out[0] = a[0] + b[0];
                    out[1] = a[1] + b[1];
                    return out;
                };
                vec2.subtract = function(out, a, b) {
                    out[0] = a[0] - b[0];
                    out[1] = a[1] - b[1];
                    return out;
                };
                vec2.sub = vec2.subtract;
                vec2.multiply = function(out, a, b) {
                    out[0] = a[0] * b[0];
                    out[1] = a[1] * b[1];
                    return out;
                };
                vec2.mul = vec2.multiply;
                vec2.divide = function(out, a, b) {
                    out[0] = a[0] / b[0];
                    out[1] = a[1] / b[1];
                    return out;
                };
                vec2.div = vec2.divide;
                vec2.scale = function(out, a, b) {
                    out[0] = a[0] * b;
                    out[1] = a[1] * b;
                    return out;
                };
                vec2.distance = function(a, b) {
                    var x = b[0] - a[0], y = b[1] - a[1];
                    return Math.sqrt(x * x + y * y);
                };
                vec2.dist = vec2.distance;
                vec2.squaredDistance = function(a, b) {
                    var x = b[0] - a[0], y = b[1] - a[1];
                    return x * x + y * y;
                };
                vec2.sqrDist = vec2.squaredDistance;
                vec2.length = function(a) {
                    var x = a[0], y = a[1];
                    return Math.sqrt(x * x + y * y);
                };
                vec2.len = vec2.length;
                vec2.squaredLength = function(a) {
                    var x = a[0], y = a[1];
                    return x * x + y * y;
                };
                vec2.sqrLen = vec2.squaredLength;
                vec2.negate = function(out, a) {
                    out[0] = -a[0];
                    out[1] = -a[1];
                    return out;
                };
                vec2.normalize = function(out, a) {
                    var x = a[0], y = a[1];
                    var len = x * x + y * y;
                    if (len > 0) {
                        len = 1 / Math.sqrt(len);
                        out[0] = a[0] * len;
                        out[1] = a[1] * len;
                    }
                    return out;
                };
                vec2.dot = function(a, b) {
                    return a[0] * b[0] + a[1] * b[1];
                };
                vec2.str = function(a) {
                    return "vec2(" + a[0] + ", " + a[1] + ")";
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/math/vec2.js", "/math");
        }, {
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        34: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), decomp = _dereq_("poly-decomp"), Convex = _dereq_("../shapes/Convex"), AABB = _dereq_("../collision/AABB"), EventEmitter = _dereq_("../events/EventEmitter");
                module.exports = Body;
                function Body(options) {
                    options = options || {};
                    EventEmitter.call(this);
                    this.id = ++Body._idCounter;
                    this.world = null;
                    this.shapes = [];
                    this.shapeOffsets = [];
                    this.shapeAngles = [];
                    this.mass = options.mass || 0;
                    this.invMass = 0;
                    this.inertia = 0;
                    this.invInertia = 0;
                    this.invMassSolve = 0;
                    this.invInertiaSolve = 0;
                    this.fixedRotation = !!options.fixedRotation || false;
                    this.position = vec2.fromValues(0, 0);
                    if (options.position) {
                        vec2.copy(this.position, options.position);
                    }
                    this.interpolatedPosition = vec2.fromValues(0, 0);
                    this.interpolatedAngle = 0;
                    this.previousPosition = vec2.fromValues(0, 0);
                    this.previousAngle = 0;
                    this.velocity = vec2.fromValues(0, 0);
                    if (options.velocity) {
                        vec2.copy(this.velocity, options.velocity);
                    }
                    this.vlambda = vec2.fromValues(0, 0);
                    this.wlambda = 0;
                    this.angle = options.angle || 0;
                    this.angularVelocity = options.angularVelocity || 0;
                    this.force = vec2.create();
                    if (options.force) {
                        vec2.copy(this.force, options.force);
                    }
                    this.angularForce = options.angularForce || 0;
                    this.damping = typeof options.damping === "number" ? options.damping : .1;
                    this.angularDamping = typeof options.angularDamping === "number" ? options.angularDamping : .1;
                    this.type = Body.STATIC;
                    if (typeof options.type !== "undefined") {
                        this.type = options.type;
                    } else if (!options.mass) {
                        this.type = Body.STATIC;
                    } else {
                        this.type = Body.DYNAMIC;
                    }
                    this.boundingRadius = 0;
                    this.aabb = new AABB();
                    this.aabbNeedsUpdate = true;
                    this.allowSleep = true;
                    this.wantsToSleep = false;
                    this.sleepState = Body.AWAKE;
                    this.sleepSpeedLimit = .2;
                    this.sleepTimeLimit = 1;
                    this.gravityScale = 1;
                    this.timeLastSleepy = 0;
                    this.concavePath = null;
                    this.lastDampingScale = 1;
                    this.lastAngularDampingScale = 1;
                    this.lastDampingTimeStep = -1;
                    this._wakeUpAfterNarrowphase = false;
                    this.updateMassProperties();
                }
                Body.prototype = new EventEmitter();
                Body._idCounter = 0;
                Body.prototype.updateSolveMassProperties = function() {
                    if (this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC) {
                        this.invMassSolve = 0;
                        this.invInertiaSolve = 0;
                    } else {
                        this.invMassSolve = this.invMass;
                        this.invInertiaSolve = this.invInertia;
                    }
                };
                Body.prototype.setDensity = function(density) {
                    var totalArea = this.getArea();
                    this.mass = totalArea * density;
                    this.updateMassProperties();
                };
                Body.prototype.getArea = function() {
                    var totalArea = 0;
                    for (var i = 0; i < this.shapes.length; i++) {
                        totalArea += this.shapes[i].area;
                    }
                    return totalArea;
                };
                Body.prototype.getAABB = function() {
                    if (this.aabbNeedsUpdate) {
                        this.updateAABB();
                    }
                    return this.aabb;
                };
                var shapeAABB = new AABB(), tmp = vec2.create();
                Body.prototype.updateAABB = function() {
                    var shapes = this.shapes, shapeOffsets = this.shapeOffsets, shapeAngles = this.shapeAngles, N = shapes.length, offset = tmp, bodyAngle = this.angle;
                    for (var i = 0; i !== N; i++) {
                        var shape = shapes[i], angle = shapeAngles[i] + bodyAngle;
                        vec2.rotate(offset, shapeOffsets[i], bodyAngle);
                        vec2.add(offset, offset, this.position);
                        shape.computeAABB(shapeAABB, offset, angle);
                        if (i === 0) {
                            this.aabb.copy(shapeAABB);
                        } else {
                            this.aabb.extend(shapeAABB);
                        }
                    }
                    this.aabbNeedsUpdate = false;
                };
                Body.prototype.updateBoundingRadius = function() {
                    var shapes = this.shapes, shapeOffsets = this.shapeOffsets, N = shapes.length, radius = 0;
                    for (var i = 0; i !== N; i++) {
                        var shape = shapes[i], offset = vec2.length(shapeOffsets[i]), r = shape.boundingRadius;
                        if (offset + r > radius) {
                            radius = offset + r;
                        }
                    }
                    this.boundingRadius = radius;
                };
                Body.prototype.addShape = function(shape, offset, angle) {
                    angle = angle || 0;
                    if (offset) {
                        offset = vec2.fromValues(offset[0], offset[1]);
                    } else {
                        offset = vec2.fromValues(0, 0);
                    }
                    this.shapes.push(shape);
                    this.shapeOffsets.push(offset);
                    this.shapeAngles.push(angle);
                    this.updateMassProperties();
                    this.updateBoundingRadius();
                    this.aabbNeedsUpdate = true;
                };
                Body.prototype.removeShape = function(shape) {
                    var idx = this.shapes.indexOf(shape);
                    if (idx !== -1) {
                        this.shapes.splice(idx, 1);
                        this.shapeOffsets.splice(idx, 1);
                        this.shapeAngles.splice(idx, 1);
                        this.aabbNeedsUpdate = true;
                        return true;
                    } else {
                        return false;
                    }
                };
                Body.prototype.updateMassProperties = function() {
                    if (this.type === Body.STATIC || this.type === Body.KINEMATIC) {
                        this.mass = Number.MAX_VALUE;
                        this.invMass = 0;
                        this.inertia = Number.MAX_VALUE;
                        this.invInertia = 0;
                    } else {
                        var shapes = this.shapes, N = shapes.length, m = this.mass / N, I = 0;
                        if (!this.fixedRotation) {
                            for (var i = 0; i < N; i++) {
                                var shape = shapes[i], r2 = vec2.squaredLength(this.shapeOffsets[i]), Icm = shape.computeMomentOfInertia(m);
                                I += Icm + m * r2;
                            }
                            this.inertia = I;
                            this.invInertia = I > 0 ? 1 / I : 0;
                        } else {
                            this.inertia = Number.MAX_VALUE;
                            this.invInertia = 0;
                        }
                        this.invMass = 1 / this.mass;
                    }
                };
                var Body_applyForce_r = vec2.create();
                Body.prototype.applyForce = function(force, worldPoint) {
                    var r = Body_applyForce_r;
                    vec2.sub(r, worldPoint, this.position);
                    vec2.add(this.force, this.force, force);
                    var rotForce = vec2.crossLength(r, force);
                    this.angularForce += rotForce;
                };
                Body.prototype.toLocalFrame = function(out, worldPoint) {
                    vec2.toLocalFrame(out, worldPoint, this.position, this.angle);
                };
                Body.prototype.toWorldFrame = function(out, localPoint) {
                    vec2.toGlobalFrame(out, localPoint, this.position, this.angle);
                };
                Body.prototype.fromPolygon = function(path, options) {
                    options = options || {};
                    for (var i = this.shapes.length; i >= 0; --i) {
                        this.removeShape(this.shapes[i]);
                    }
                    var p = new decomp.Polygon();
                    p.vertices = path;
                    p.makeCCW();
                    if (typeof options.removeCollinearPoints === "number") {
                        p.removeCollinearPoints(options.removeCollinearPoints);
                    }
                    if (typeof options.skipSimpleCheck === "undefined") {
                        if (!p.isSimple()) {
                            return false;
                        }
                    }
                    this.concavePath = p.vertices.slice(0);
                    for (var i = 0; i < this.concavePath.length; i++) {
                        var v = [ 0, 0 ];
                        vec2.copy(v, this.concavePath[i]);
                        this.concavePath[i] = v;
                    }
                    var convexes;
                    if (options.optimalDecomp) {
                        convexes = p.decomp();
                    } else {
                        convexes = p.quickDecomp();
                    }
                    var cm = vec2.create();
                    for (var i = 0; i !== convexes.length; i++) {
                        var c = new Convex(convexes[i].vertices);
                        for (var j = 0; j !== c.vertices.length; j++) {
                            var v = c.vertices[j];
                            vec2.sub(v, v, c.centerOfMass);
                        }
                        vec2.scale(cm, c.centerOfMass, 1);
                        c.updateTriangles();
                        c.updateCenterOfMass();
                        c.updateBoundingRadius();
                        this.addShape(c, cm);
                    }
                    this.adjustCenterOfMass();
                    this.aabbNeedsUpdate = true;
                    return true;
                };
                var adjustCenterOfMass_tmp1 = vec2.fromValues(0, 0), adjustCenterOfMass_tmp2 = vec2.fromValues(0, 0), adjustCenterOfMass_tmp3 = vec2.fromValues(0, 0), adjustCenterOfMass_tmp4 = vec2.fromValues(0, 0);
                Body.prototype.adjustCenterOfMass = function() {
                    var offset_times_area = adjustCenterOfMass_tmp2, sum = adjustCenterOfMass_tmp3, cm = adjustCenterOfMass_tmp4, totalArea = 0;
                    vec2.set(sum, 0, 0);
                    for (var i = 0; i !== this.shapes.length; i++) {
                        var s = this.shapes[i], offset = this.shapeOffsets[i];
                        vec2.scale(offset_times_area, offset, s.area);
                        vec2.add(sum, sum, offset_times_area);
                        totalArea += s.area;
                    }
                    vec2.scale(cm, sum, 1 / totalArea);
                    for (var i = 0; i !== this.shapes.length; i++) {
                        var s = this.shapes[i], offset = this.shapeOffsets[i];
                        if (!offset) {
                            offset = this.shapeOffsets[i] = vec2.create();
                        }
                        vec2.sub(offset, offset, cm);
                    }
                    vec2.add(this.position, this.position, cm);
                    for (var i = 0; this.concavePath && i < this.concavePath.length; i++) {
                        vec2.sub(this.concavePath[i], this.concavePath[i], cm);
                    }
                    this.updateMassProperties();
                    this.updateBoundingRadius();
                };
                Body.prototype.setZeroForce = function() {
                    vec2.set(this.force, 0, 0);
                    this.angularForce = 0;
                };
                Body.prototype.resetConstraintVelocity = function() {
                    var b = this, vlambda = b.vlambda;
                    vec2.set(vlambda, 0, 0);
                    b.wlambda = 0;
                };
                Body.prototype.addConstraintVelocity = function() {
                    var b = this, v = b.velocity;
                    vec2.add(v, v, b.vlambda);
                    b.angularVelocity += b.wlambda;
                };
                Body.prototype.applyDamping = function(dt) {
                    if (this.type === Body.DYNAMIC) {
                        if (dt !== this.lastDampingTimeStep) {
                            this.lastDampingScale = Math.pow(1 - this.damping, dt);
                            this.lastAngularDampingScale = Math.pow(1 - this.angularDamping, dt);
                            this.lastDampingTimeStep = dt;
                        }
                        var v = this.velocity;
                        vec2.scale(v, v, this.lastDampingScale);
                        this.angularVelocity *= this.lastAngularDampingScale;
                    }
                };
                Body.prototype.wakeUp = function() {
                    var s = this.sleepState;
                    this.sleepState = Body.AWAKE;
                    this.idleTime = 0;
                    if (s !== Body.AWAKE) {
                        this.emit(Body.wakeUpEvent);
                    }
                };
                Body.prototype.sleep = function() {
                    this.sleepState = Body.SLEEPING;
                    this.angularVelocity = 0;
                    this.angularForce = 0;
                    vec2.set(this.velocity, 0, 0);
                    vec2.set(this.force, 0, 0);
                    this.emit(Body.sleepEvent);
                };
                Body.prototype.sleepTick = function(time, dontSleep, dt) {
                    if (!this.allowSleep || this.type === Body.SLEEPING) {
                        return;
                    }
                    this.wantsToSleep = false;
                    var sleepState = this.sleepState, speedSquared = vec2.squaredLength(this.velocity) + Math.pow(this.angularVelocity, 2), speedLimitSquared = Math.pow(this.sleepSpeedLimit, 2);
                    if (speedSquared >= speedLimitSquared) {
                        this.idleTime = 0;
                        this.sleepState = Body.AWAKE;
                    } else {
                        this.idleTime += dt;
                        this.sleepState = Body.SLEEPY;
                    }
                    if (this.idleTime > this.sleepTimeLimit) {
                        if (!dontSleep) {
                            this.sleep();
                        } else {
                            this.wantsToSleep = true;
                        }
                    }
                };
                Body.prototype.getVelocityFromPosition = function(store, timeStep) {
                    store = store || vec2.create();
                    vec2.sub(store, this.position, this.previousPosition);
                    vec2.scale(store, store, 1 / timeStep);
                    return store;
                };
                Body.prototype.getAngularVelocityFromPosition = function(timeStep) {
                    return (this.angle - this.previousAngle) / timeStep;
                };
                Body.prototype.overlaps = function(body) {
                    return this.world.overlapKeeper.bodiesAreOverlapping(this, body);
                };
                Body.sleepyEvent = {
                    type: "sleepy"
                };
                Body.sleepEvent = {
                    type: "sleep"
                };
                Body.wakeUpEvent = {
                    type: "wakeup"
                };
                Body.DYNAMIC = 1;
                Body.STATIC = 2;
                Body.KINEMATIC = 4;
                Body.AWAKE = 0;
                Body.SLEEPY = 1;
                Body.SLEEPING = 2;
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/objects/Body.js", "/objects");
        }, {
            "../collision/AABB": 11,
            "../events/EventEmitter": 29,
            "../math/vec2": 33,
            "../shapes/Convex": 41,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1,
            "poly-decomp": 9
        } ],
        35: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2");
                var Spring = _dereq_("./Spring");
                var Utils = _dereq_("../utils/Utils");
                module.exports = LinearSpring;
                function LinearSpring(bodyA, bodyB, options) {
                    options = options || {};
                    Spring.call(this, bodyA, bodyB, options);
                    this.localAnchorA = vec2.fromValues(0, 0);
                    this.localAnchorB = vec2.fromValues(0, 0);
                    if (options.localAnchorA) {
                        vec2.copy(this.localAnchorA, options.localAnchorA);
                    }
                    if (options.localAnchorB) {
                        vec2.copy(this.localAnchorB, options.localAnchorB);
                    }
                    if (options.worldAnchorA) {
                        this.setWorldAnchorA(options.worldAnchorA);
                    }
                    if (options.worldAnchorB) {
                        this.setWorldAnchorB(options.worldAnchorB);
                    }
                    var worldAnchorA = vec2.create();
                    var worldAnchorB = vec2.create();
                    this.getWorldAnchorA(worldAnchorA);
                    this.getWorldAnchorB(worldAnchorB);
                    var worldDistance = vec2.distance(worldAnchorA, worldAnchorB);
                    this.restLength = typeof options.restLength === "number" ? options.restLength : worldDistance;
                }
                LinearSpring.prototype = new Spring();
                LinearSpring.prototype.setWorldAnchorA = function(worldAnchorA) {
                    this.bodyA.toLocalFrame(this.localAnchorA, worldAnchorA);
                };
                LinearSpring.prototype.setWorldAnchorB = function(worldAnchorB) {
                    this.bodyB.toLocalFrame(this.localAnchorB, worldAnchorB);
                };
                LinearSpring.prototype.getWorldAnchorA = function(result) {
                    this.bodyA.toWorldFrame(result, this.localAnchorA);
                };
                LinearSpring.prototype.getWorldAnchorB = function(result) {
                    this.bodyB.toWorldFrame(result, this.localAnchorB);
                };
                var applyForce_r = vec2.create(), applyForce_r_unit = vec2.create(), applyForce_u = vec2.create(), applyForce_f = vec2.create(), applyForce_worldAnchorA = vec2.create(), applyForce_worldAnchorB = vec2.create(), applyForce_ri = vec2.create(), applyForce_rj = vec2.create(), applyForce_tmp = vec2.create();
                LinearSpring.prototype.applyForce = function() {
                    var k = this.stiffness, d = this.damping, l = this.restLength, bodyA = this.bodyA, bodyB = this.bodyB, r = applyForce_r, r_unit = applyForce_r_unit, u = applyForce_u, f = applyForce_f, tmp = applyForce_tmp;
                    var worldAnchorA = applyForce_worldAnchorA, worldAnchorB = applyForce_worldAnchorB, ri = applyForce_ri, rj = applyForce_rj;
                    this.getWorldAnchorA(worldAnchorA);
                    this.getWorldAnchorB(worldAnchorB);
                    vec2.sub(ri, worldAnchorA, bodyA.position);
                    vec2.sub(rj, worldAnchorB, bodyB.position);
                    vec2.sub(r, worldAnchorB, worldAnchorA);
                    var rlen = vec2.len(r);
                    vec2.normalize(r_unit, r);
                    vec2.sub(u, bodyB.velocity, bodyA.velocity);
                    vec2.crossZV(tmp, bodyB.angularVelocity, rj);
                    vec2.add(u, u, tmp);
                    vec2.crossZV(tmp, bodyA.angularVelocity, ri);
                    vec2.sub(u, u, tmp);
                    vec2.scale(f, r_unit, -k * (rlen - l) - d * vec2.dot(u, r_unit));
                    vec2.sub(bodyA.force, bodyA.force, f);
                    vec2.add(bodyB.force, bodyB.force, f);
                    var ri_x_f = vec2.crossLength(ri, f);
                    var rj_x_f = vec2.crossLength(rj, f);
                    bodyA.angularForce -= ri_x_f;
                    bodyB.angularForce += rj_x_f;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/objects/LinearSpring.js", "/objects");
        }, {
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "./Spring": 37,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        36: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2");
                var Spring = _dereq_("./Spring");
                module.exports = RotationalSpring;
                function RotationalSpring(bodyA, bodyB, options) {
                    options = options || {};
                    Spring.call(this, bodyA, bodyB, options);
                    this.restAngle = typeof options.restAngle === "number" ? options.restAngle : bodyB.angle - bodyA.angle;
                }
                RotationalSpring.prototype = new Spring();
                RotationalSpring.prototype.applyForce = function() {
                    var k = this.stiffness, d = this.damping, l = this.restAngle, bodyA = this.bodyA, bodyB = this.bodyB, x = bodyB.angle - bodyA.angle, u = bodyB.angularVelocity - bodyA.angularVelocity;
                    var torque = -k * (x - l) - d * u * 0;
                    bodyA.angularForce -= torque;
                    bodyB.angularForce += torque;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/objects/RotationalSpring.js", "/objects");
        }, {
            "../math/vec2": 33,
            "./Spring": 37,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        37: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2");
                var Utils = _dereq_("../utils/Utils");
                module.exports = Spring;
                function Spring(bodyA, bodyB, options) {
                    options = Utils.defaults(options, {
                        stiffness: 100,
                        damping: 1
                    });
                    this.stiffness = options.stiffness;
                    this.damping = options.damping;
                    this.bodyA = bodyA;
                    this.bodyB = bodyB;
                }
                Spring.prototype.applyForce = function() {};
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/objects/Spring.js", "/objects");
        }, {
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        38: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = {
                    AABB: _dereq_("./collision/AABB"),
                    AngleLockEquation: _dereq_("./equations/AngleLockEquation"),
                    Body: _dereq_("./objects/Body"),
                    Broadphase: _dereq_("./collision/Broadphase"),
                    Capsule: _dereq_("./shapes/Capsule"),
                    Circle: _dereq_("./shapes/Circle"),
                    Constraint: _dereq_("./constraints/Constraint"),
                    ContactEquation: _dereq_("./equations/ContactEquation"),
                    ContactMaterial: _dereq_("./material/ContactMaterial"),
                    Convex: _dereq_("./shapes/Convex"),
                    DistanceConstraint: _dereq_("./constraints/DistanceConstraint"),
                    Equation: _dereq_("./equations/Equation"),
                    EventEmitter: _dereq_("./events/EventEmitter"),
                    FrictionEquation: _dereq_("./equations/FrictionEquation"),
                    GearConstraint: _dereq_("./constraints/GearConstraint"),
                    GridBroadphase: _dereq_("./collision/GridBroadphase"),
                    GSSolver: _dereq_("./solver/GSSolver"),
                    Heightfield: _dereq_("./shapes/Heightfield"),
                    Line: _dereq_("./shapes/Line"),
                    LockConstraint: _dereq_("./constraints/LockConstraint"),
                    Material: _dereq_("./material/Material"),
                    Narrowphase: _dereq_("./collision/Narrowphase"),
                    NaiveBroadphase: _dereq_("./collision/NaiveBroadphase"),
                    Particle: _dereq_("./shapes/Particle"),
                    Plane: _dereq_("./shapes/Plane"),
                    RevoluteConstraint: _dereq_("./constraints/RevoluteConstraint"),
                    PrismaticConstraint: _dereq_("./constraints/PrismaticConstraint"),
                    Rectangle: _dereq_("./shapes/Rectangle"),
                    RotationalVelocityEquation: _dereq_("./equations/RotationalVelocityEquation"),
                    SAPBroadphase: _dereq_("./collision/SAPBroadphase"),
                    Shape: _dereq_("./shapes/Shape"),
                    Solver: _dereq_("./solver/Solver"),
                    Spring: _dereq_("./objects/Spring"),
                    LinearSpring: _dereq_("./objects/LinearSpring"),
                    RotationalSpring: _dereq_("./objects/RotationalSpring"),
                    Utils: _dereq_("./utils/Utils"),
                    World: _dereq_("./world/World"),
                    vec2: _dereq_("./math/vec2"),
                    version: _dereq_("../package.json").version
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/p2.js", "/");
        }, {
            "../package.json": 10,
            "./collision/AABB": 11,
            "./collision/Broadphase": 12,
            "./collision/GridBroadphase": 13,
            "./collision/NaiveBroadphase": 14,
            "./collision/Narrowphase": 15,
            "./collision/SAPBroadphase": 16,
            "./constraints/Constraint": 17,
            "./constraints/DistanceConstraint": 18,
            "./constraints/GearConstraint": 19,
            "./constraints/LockConstraint": 20,
            "./constraints/PrismaticConstraint": 21,
            "./constraints/RevoluteConstraint": 22,
            "./equations/AngleLockEquation": 23,
            "./equations/ContactEquation": 24,
            "./equations/Equation": 25,
            "./equations/FrictionEquation": 26,
            "./equations/RotationalVelocityEquation": 28,
            "./events/EventEmitter": 29,
            "./material/ContactMaterial": 30,
            "./material/Material": 31,
            "./math/vec2": 33,
            "./objects/Body": 34,
            "./objects/LinearSpring": 35,
            "./objects/RotationalSpring": 36,
            "./objects/Spring": 37,
            "./shapes/Capsule": 39,
            "./shapes/Circle": 40,
            "./shapes/Convex": 41,
            "./shapes/Heightfield": 42,
            "./shapes/Line": 43,
            "./shapes/Particle": 44,
            "./shapes/Plane": 45,
            "./shapes/Rectangle": 46,
            "./shapes/Shape": 47,
            "./solver/GSSolver": 48,
            "./solver/Solver": 49,
            "./utils/Utils": 52,
            "./world/World": 56,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        39: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2");
                module.exports = Capsule;
                function Capsule(length, radius) {
                    this.length = length || 1;
                    this.radius = radius || 1;
                    Shape.call(this, Shape.CAPSULE);
                }
                Capsule.prototype = new Shape();
                Capsule.prototype.computeMomentOfInertia = function(mass) {
                    var r = this.radius, w = this.length + r, h = r * 2;
                    return mass * (h * h + w * w) / 12;
                };
                Capsule.prototype.updateBoundingRadius = function() {
                    this.boundingRadius = this.radius + this.length / 2;
                };
                Capsule.prototype.updateArea = function() {
                    this.area = Math.PI * this.radius * this.radius + this.radius * 2 * this.length;
                };
                var r = vec2.create();
                Capsule.prototype.computeAABB = function(out, position, angle) {
                    var radius = this.radius;
                    vec2.set(r, this.length / 2, 0);
                    if (angle !== 0) {
                        vec2.rotate(r, r, angle);
                    }
                    vec2.set(out.upperBound, Math.max(r[0] + radius, -r[0] + radius), Math.max(r[1] + radius, -r[1] + radius));
                    vec2.set(out.lowerBound, Math.min(r[0] - radius, -r[0] - radius), Math.min(r[1] - radius, -r[1] - radius));
                    vec2.add(out.lowerBound, out.lowerBound, position);
                    vec2.add(out.upperBound, out.upperBound, position);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Capsule.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        40: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2");
                module.exports = Circle;
                function Circle(radius) {
                    this.radius = radius || 1;
                    Shape.call(this, Shape.CIRCLE);
                }
                Circle.prototype = new Shape();
                Circle.prototype.computeMomentOfInertia = function(mass) {
                    var r = this.radius;
                    return mass * r * r / 2;
                };
                Circle.prototype.updateBoundingRadius = function() {
                    this.boundingRadius = this.radius;
                };
                Circle.prototype.updateArea = function() {
                    this.area = Math.PI * this.radius * this.radius;
                };
                Circle.prototype.computeAABB = function(out, position, angle) {
                    var r = this.radius;
                    vec2.set(out.upperBound, r, r);
                    vec2.set(out.lowerBound, -r, -r);
                    if (position) {
                        vec2.add(out.lowerBound, out.lowerBound, position);
                        vec2.add(out.upperBound, out.upperBound, position);
                    }
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Circle.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        41: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2"), polyk = _dereq_("../math/polyk"), decomp = _dereq_("poly-decomp");
                module.exports = Convex;
                function Convex(vertices, axes) {
                    this.vertices = [];
                    this.axes = [];
                    for (var i = 0; i < vertices.length; i++) {
                        var v = vec2.create();
                        vec2.copy(v, vertices[i]);
                        this.vertices.push(v);
                    }
                    if (axes) {
                        for (var i = 0; i < axes.length; i++) {
                            var axis = vec2.create();
                            vec2.copy(axis, axes[i]);
                            this.axes.push(axis);
                        }
                    } else {
                        for (var i = 0; i < vertices.length; i++) {
                            var worldPoint0 = vertices[i];
                            var worldPoint1 = vertices[(i + 1) % vertices.length];
                            var normal = vec2.create();
                            vec2.sub(normal, worldPoint1, worldPoint0);
                            vec2.rotate90cw(normal, normal);
                            vec2.normalize(normal, normal);
                            this.axes.push(normal);
                        }
                    }
                    this.centerOfMass = vec2.fromValues(0, 0);
                    this.triangles = [];
                    if (this.vertices.length) {
                        this.updateTriangles();
                        this.updateCenterOfMass();
                    }
                    this.boundingRadius = 0;
                    Shape.call(this, Shape.CONVEX);
                    this.updateBoundingRadius();
                    this.updateArea();
                    if (this.area < 0) {
                        throw new Error("Convex vertices must be given in conter-clockwise winding.");
                    }
                }
                Convex.prototype = new Shape();
                var tmpVec1 = vec2.create();
                var tmpVec2 = vec2.create();
                Convex.prototype.projectOntoLocalAxis = function(localAxis, result) {
                    var max = null, min = null, v, value, localAxis = tmpVec1;
                    for (var i = 0; i < this.vertices.length; i++) {
                        v = this.vertices[i];
                        value = vec2.dot(v, localAxis);
                        if (max === null || value > max) {
                            max = value;
                        }
                        if (min === null || value < min) {
                            min = value;
                        }
                    }
                    if (min > max) {
                        var t = min;
                        min = max;
                        max = t;
                    }
                    vec2.set(result, min, max);
                };
                Convex.prototype.projectOntoWorldAxis = function(localAxis, shapeOffset, shapeAngle, result) {
                    var worldAxis = tmpVec2;
                    this.projectOntoLocalAxis(localAxis, result);
                    if (shapeAngle !== 0) {
                        vec2.rotate(worldAxis, localAxis, shapeAngle);
                    } else {
                        worldAxis = localAxis;
                    }
                    var offset = vec2.dot(shapeOffset, worldAxis);
                    vec2.set(result, result[0] + offset, result[1] + offset);
                };
                Convex.prototype.updateTriangles = function() {
                    this.triangles.length = 0;
                    var polykVerts = [];
                    for (var i = 0; i < this.vertices.length; i++) {
                        var v = this.vertices[i];
                        polykVerts.push(v[0], v[1]);
                    }
                    var triangles = polyk.Triangulate(polykVerts);
                    for (var i = 0; i < triangles.length; i += 3) {
                        var id1 = triangles[i], id2 = triangles[i + 1], id3 = triangles[i + 2];
                        this.triangles.push([ id1, id2, id3 ]);
                    }
                };
                var updateCenterOfMass_centroid = vec2.create(), updateCenterOfMass_centroid_times_mass = vec2.create(), updateCenterOfMass_a = vec2.create(), updateCenterOfMass_b = vec2.create(), updateCenterOfMass_c = vec2.create(), updateCenterOfMass_ac = vec2.create(), updateCenterOfMass_ca = vec2.create(), updateCenterOfMass_cb = vec2.create(), updateCenterOfMass_n = vec2.create();
                Convex.prototype.updateCenterOfMass = function() {
                    var triangles = this.triangles, verts = this.vertices, cm = this.centerOfMass, centroid = updateCenterOfMass_centroid, n = updateCenterOfMass_n, a = updateCenterOfMass_a, b = updateCenterOfMass_b, c = updateCenterOfMass_c, ac = updateCenterOfMass_ac, ca = updateCenterOfMass_ca, cb = updateCenterOfMass_cb, centroid_times_mass = updateCenterOfMass_centroid_times_mass;
                    vec2.set(cm, 0, 0);
                    var totalArea = 0;
                    for (var i = 0; i !== triangles.length; i++) {
                        var t = triangles[i], a = verts[t[0]], b = verts[t[1]], c = verts[t[2]];
                        vec2.centroid(centroid, a, b, c);
                        var m = Convex.triangleArea(a, b, c);
                        totalArea += m;
                        vec2.scale(centroid_times_mass, centroid, m);
                        vec2.add(cm, cm, centroid_times_mass);
                    }
                    vec2.scale(cm, cm, 1 / totalArea);
                };
                Convex.prototype.computeMomentOfInertia = function(mass) {
                    var denom = 0, numer = 0, N = this.vertices.length;
                    for (var j = N - 1, i = 0; i < N; j = i, i++) {
                        var p0 = this.vertices[j];
                        var p1 = this.vertices[i];
                        var a = Math.abs(vec2.crossLength(p0, p1));
                        var b = vec2.dot(p1, p1) + vec2.dot(p1, p0) + vec2.dot(p0, p0);
                        denom += a * b;
                        numer += a;
                    }
                    return mass / 6 * (denom / numer);
                };
                Convex.prototype.updateBoundingRadius = function() {
                    var verts = this.vertices, r2 = 0;
                    for (var i = 0; i !== verts.length; i++) {
                        var l2 = vec2.squaredLength(verts[i]);
                        if (l2 > r2) {
                            r2 = l2;
                        }
                    }
                    this.boundingRadius = Math.sqrt(r2);
                };
                Convex.triangleArea = function(a, b, c) {
                    return ((b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1])) * .5;
                };
                Convex.prototype.updateArea = function() {
                    this.updateTriangles();
                    this.area = 0;
                    var triangles = this.triangles, verts = this.vertices;
                    for (var i = 0; i !== triangles.length; i++) {
                        var t = triangles[i], a = verts[t[0]], b = verts[t[1]], c = verts[t[2]];
                        var m = Convex.triangleArea(a, b, c);
                        this.area += m;
                    }
                };
                Convex.prototype.computeAABB = function(out, position, angle) {
                    out.setFromPoints(this.vertices, position, angle, 0);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Convex.js", "/shapes");
        }, {
            "../math/polyk": 32,
            "../math/vec2": 33,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1,
            "poly-decomp": 9
        } ],
        42: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2"), Utils = _dereq_("../utils/Utils");
                module.exports = Heightfield;
                function Heightfield(data, options) {
                    options = Utils.defaults(options, {
                        maxValue: null,
                        minValue: null,
                        elementWidth: .1
                    });
                    if (options.minValue === null || options.maxValue === null) {
                        options.maxValue = data[0];
                        options.minValue = data[0];
                        for (var i = 0; i !== data.length; i++) {
                            var v = data[i];
                            if (v > options.maxValue) {
                                options.maxValue = v;
                            }
                            if (v < options.minValue) {
                                options.minValue = v;
                            }
                        }
                    }
                    this.data = data;
                    this.maxValue = options.maxValue;
                    this.minValue = options.minValue;
                    this.elementWidth = options.elementWidth;
                    Shape.call(this, Shape.HEIGHTFIELD);
                }
                Heightfield.prototype = new Shape();
                Heightfield.prototype.computeMomentOfInertia = function(mass) {
                    return Number.MAX_VALUE;
                };
                Heightfield.prototype.updateBoundingRadius = function() {
                    this.boundingRadius = Number.MAX_VALUE;
                };
                Heightfield.prototype.updateArea = function() {
                    var data = this.data, area = 0;
                    for (var i = 0; i < data.length - 1; i++) {
                        area += (data[i] + data[i + 1]) / 2 * this.elementWidth;
                    }
                    this.area = area;
                };
                Heightfield.prototype.computeAABB = function(out, position, angle) {
                    out.upperBound[0] = this.elementWidth * this.data.length + position[0];
                    out.upperBound[1] = this.maxValue + position[1];
                    out.lowerBound[0] = position[0];
                    out.lowerBound[1] = -Number.MAX_VALUE;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Heightfield.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        43: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2");
                module.exports = Line;
                function Line(length) {
                    this.length = length || 1;
                    Shape.call(this, Shape.LINE);
                }
                Line.prototype = new Shape();
                Line.prototype.computeMomentOfInertia = function(mass) {
                    return mass * Math.pow(this.length, 2) / 12;
                };
                Line.prototype.updateBoundingRadius = function() {
                    this.boundingRadius = this.length / 2;
                };
                var points = [ vec2.create(), vec2.create() ];
                Line.prototype.computeAABB = function(out, position, angle) {
                    var l2 = this.length / 2;
                    vec2.set(points[0], -l2, 0);
                    vec2.set(points[1], l2, 0);
                    out.setFromPoints(points, position, angle, 0);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Line.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        44: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2");
                module.exports = Particle;
                function Particle() {
                    Shape.call(this, Shape.PARTICLE);
                }
                Particle.prototype = new Shape();
                Particle.prototype.computeMomentOfInertia = function(mass) {
                    return 0;
                };
                Particle.prototype.updateBoundingRadius = function() {
                    this.boundingRadius = 0;
                };
                Particle.prototype.computeAABB = function(out, position, angle) {
                    vec2.copy(out.lowerBound, position);
                    vec2.copy(out.upperBound, position);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Particle.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        45: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Shape = _dereq_("./Shape"), vec2 = _dereq_("../math/vec2"), Utils = _dereq_("../utils/Utils");
                module.exports = Plane;
                function Plane() {
                    Shape.call(this, Shape.PLANE);
                }
                Plane.prototype = new Shape();
                Plane.prototype.computeMomentOfInertia = function(mass) {
                    return 0;
                };
                Plane.prototype.updateBoundingRadius = function() {
                    this.boundingRadius = Number.MAX_VALUE;
                };
                Plane.prototype.computeAABB = function(out, position, angle) {
                    var a = 0, set = vec2.set;
                    if (typeof angle === "number") {
                        a = angle % (2 * Math.PI);
                    }
                    if (a === 0) {
                        set(out.lowerBound, -Number.MAX_VALUE, -Number.MAX_VALUE);
                        set(out.upperBound, Number.MAX_VALUE, 0);
                    } else if (a === Math.PI / 2) {
                        set(out.lowerBound, 0, -Number.MAX_VALUE);
                        set(out.upperBound, Number.MAX_VALUE, Number.MAX_VALUE);
                    } else if (a === Math.PI) {
                        set(out.lowerBound, -Number.MAX_VALUE, 0);
                        set(out.upperBound, Number.MAX_VALUE, Number.MAX_VALUE);
                    } else if (a === 3 * Math.PI / 2) {
                        set(out.lowerBound, -Number.MAX_VALUE, -Number.MAX_VALUE);
                        set(out.upperBound, 0, Number.MAX_VALUE);
                    } else {
                        set(out.lowerBound, -Number.MAX_VALUE, -Number.MAX_VALUE);
                        set(out.upperBound, Number.MAX_VALUE, Number.MAX_VALUE);
                    }
                    vec2.add(out.lowerBound, out.lowerBound, position);
                    vec2.add(out.upperBound, out.upperBound, position);
                };
                Plane.prototype.updateArea = function() {
                    this.area = Number.MAX_VALUE;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Plane.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        46: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), Shape = _dereq_("./Shape"), Convex = _dereq_("./Convex");
                module.exports = Rectangle;
                function Rectangle(width, height) {
                    this.width = width || 1;
                    this.height = height || 1;
                    var verts = [ vec2.fromValues(-width / 2, -height / 2), vec2.fromValues(width / 2, -height / 2), vec2.fromValues(width / 2, height / 2), vec2.fromValues(-width / 2, height / 2) ];
                    var axes = [ vec2.fromValues(1, 0), vec2.fromValues(0, 1) ];
                    Convex.call(this, verts, axes);
                    this.type = Shape.RECTANGLE;
                }
                Rectangle.prototype = new Convex([]);
                Rectangle.prototype.computeMomentOfInertia = function(mass) {
                    var w = this.width, h = this.height;
                    return mass * (h * h + w * w) / 12;
                };
                Rectangle.prototype.updateBoundingRadius = function() {
                    var w = this.width, h = this.height;
                    this.boundingRadius = Math.sqrt(w * w + h * h) / 2;
                };
                var corner1 = vec2.create(), corner2 = vec2.create(), corner3 = vec2.create(), corner4 = vec2.create();
                Rectangle.prototype.computeAABB = function(out, position, angle) {
                    out.setFromPoints(this.vertices, position, angle, 0);
                };
                Rectangle.prototype.updateArea = function() {
                    this.area = this.width * this.height;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Rectangle.js", "/shapes");
        }, {
            "../math/vec2": 33,
            "./Convex": 41,
            "./Shape": 47,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        47: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Shape;
                function Shape(type) {
                    this.type = type;
                    this.id = Shape.idCounter++;
                    this.boundingRadius = 0;
                    this.collisionGroup = 1;
                    this.collisionMask = 1;
                    if (type) {
                        this.updateBoundingRadius();
                    }
                    this.material = null;
                    this.area = 0;
                    this.sensor = false;
                    this.updateArea();
                }
                Shape.idCounter = 0;
                Shape.CIRCLE = 1;
                Shape.PARTICLE = 2;
                Shape.PLANE = 4;
                Shape.CONVEX = 8;
                Shape.LINE = 16;
                Shape.RECTANGLE = 32;
                Shape.CAPSULE = 64;
                Shape.HEIGHTFIELD = 128;
                Shape.prototype.computeMomentOfInertia = function(mass) {
                    throw new Error("Shape.computeMomentOfInertia is not implemented in this Shape...");
                };
                Shape.prototype.updateBoundingRadius = function() {
                    throw new Error("Shape.updateBoundingRadius is not implemented in this Shape...");
                };
                Shape.prototype.updateArea = function() {};
                Shape.prototype.computeAABB = function(out, position, angle) {};
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/shapes/Shape.js", "/shapes");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        48: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), Solver = _dereq_("./Solver"), Utils = _dereq_("../utils/Utils"), FrictionEquation = _dereq_("../equations/FrictionEquation");
                module.exports = GSSolver;
                function GSSolver(options) {
                    Solver.call(this, options, Solver.GS);
                    options = options || {};
                    this.iterations = options.iterations || 10;
                    this.tolerance = options.tolerance || 1e-10;
                    this.arrayStep = 30;
                    this.lambda = new Utils.ARRAY_TYPE(this.arrayStep);
                    this.Bs = new Utils.ARRAY_TYPE(this.arrayStep);
                    this.invCs = new Utils.ARRAY_TYPE(this.arrayStep);
                    this.useZeroRHS = false;
                    this.frictionIterations = 0;
                    this.usedIterations = 0;
                }
                GSSolver.prototype = new Solver();
                function setArrayZero(array) {
                    var l = array.length;
                    while (l--) {
                        array[l] = +0;
                    }
                }
                GSSolver.prototype.solve = function(h, world) {
                    this.sortEquations();
                    var iter = 0, maxIter = this.iterations, maxFrictionIter = this.frictionIterations, equations = this.equations, Neq = equations.length, tolSquared = Math.pow(this.tolerance * Neq, 2), bodies = world.bodies, Nbodies = world.bodies.length, add = vec2.add, set = vec2.set, useZeroRHS = this.useZeroRHS, lambda = this.lambda;
                    this.usedIterations = 0;
                    if (Neq) {
                        for (var i = 0; i !== Nbodies; i++) {
                            var b = bodies[i];
                            b.updateSolveMassProperties();
                        }
                    }
                    if (lambda.length < Neq) {
                        lambda = this.lambda = new Utils.ARRAY_TYPE(Neq + this.arrayStep);
                        this.Bs = new Utils.ARRAY_TYPE(Neq + this.arrayStep);
                        this.invCs = new Utils.ARRAY_TYPE(Neq + this.arrayStep);
                    }
                    setArrayZero(lambda);
                    var invCs = this.invCs, Bs = this.Bs, lambda = this.lambda;
                    for (var i = 0; i !== equations.length; i++) {
                        var c = equations[i];
                        if (c.timeStep !== h || c.needsUpdate) {
                            c.timeStep = h;
                            c.update();
                        }
                        Bs[i] = c.computeB(c.a, c.b, h);
                        invCs[i] = c.computeInvC(c.epsilon);
                    }
                    var q, B, c, deltalambdaTot, i, j;
                    if (Neq !== 0) {
                        for (i = 0; i !== Nbodies; i++) {
                            var b = bodies[i];
                            b.resetConstraintVelocity();
                        }
                        if (maxFrictionIter) {
                            for (iter = 0; iter !== maxFrictionIter; iter++) {
                                deltalambdaTot = 0;
                                for (j = 0; j !== Neq; j++) {
                                    c = equations[j];
                                    var deltalambda = GSSolver.iterateEquation(j, c, c.epsilon, Bs, invCs, lambda, useZeroRHS, h, iter);
                                    deltalambdaTot += Math.abs(deltalambda);
                                }
                                this.usedIterations++;
                                if (deltalambdaTot * deltalambdaTot <= tolSquared) {
                                    break;
                                }
                            }
                            GSSolver.updateMultipliers(equations, lambda, 1 / h);
                            for (j = 0; j !== Neq; j++) {
                                var eq = equations[j];
                                if (eq instanceof FrictionEquation) {
                                    var f = 0;
                                    for (var k = 0; k !== eq.contactEquations.length; k++) {
                                        f += eq.contactEquations[k].multiplier;
                                    }
                                    f *= eq.frictionCoefficient / eq.contactEquations.length;
                                    eq.maxForce = f;
                                    eq.minForce = -f;
                                }
                            }
                        }
                        for (iter = 0; iter !== maxIter; iter++) {
                            deltalambdaTot = 0;
                            for (j = 0; j !== Neq; j++) {
                                c = equations[j];
                                var deltalambda = GSSolver.iterateEquation(j, c, c.epsilon, Bs, invCs, lambda, useZeroRHS, h, iter);
                                deltalambdaTot += Math.abs(deltalambda);
                            }
                            this.usedIterations++;
                            if (deltalambdaTot * deltalambdaTot <= tolSquared) {
                                break;
                            }
                        }
                        for (i = 0; i !== Nbodies; i++) {
                            bodies[i].addConstraintVelocity();
                        }
                        GSSolver.updateMultipliers(equations, lambda, 1 / h);
                    }
                };
                GSSolver.updateMultipliers = function(equations, lambda, invDt) {
                    var l = equations.length;
                    while (l--) {
                        equations[l].multiplier = lambda[l] * invDt;
                    }
                };
                GSSolver.iterateEquation = function(j, eq, eps, Bs, invCs, lambda, useZeroRHS, dt, iter) {
                    var B = Bs[j], invC = invCs[j], lambdaj = lambda[j], GWlambda = eq.computeGWlambda();
                    var maxForce = eq.maxForce, minForce = eq.minForce;
                    if (useZeroRHS) {
                        B = 0;
                    }
                    var deltalambda = invC * (B - GWlambda - eps * lambdaj);
                    var lambdaj_plus_deltalambda = lambdaj + deltalambda;
                    if (lambdaj_plus_deltalambda < minForce * dt) {
                        deltalambda = minForce * dt - lambdaj;
                    } else if (lambdaj_plus_deltalambda > maxForce * dt) {
                        deltalambda = maxForce * dt - lambdaj;
                    }
                    lambda[j] += deltalambda;
                    eq.addToWlambda(deltalambda);
                    return deltalambda;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/solver/GSSolver.js", "/solver");
        }, {
            "../equations/FrictionEquation": 26,
            "../math/vec2": 33,
            "../utils/Utils": 52,
            "./Solver": 49,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        49: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Utils = _dereq_("../utils/Utils"), EventEmitter = _dereq_("../events/EventEmitter");
                module.exports = Solver;
                function Solver(options, type) {
                    options = options || {};
                    EventEmitter.call(this);
                    this.type = type;
                    this.equations = [];
                    this.equationSortFunction = options.equationSortFunction || false;
                }
                Solver.prototype = new EventEmitter();
                Solver.prototype.solve = function(dt, world) {
                    throw new Error("Solver.solve should be implemented by subclasses!");
                };
                var mockWorld = {
                    bodies: []
                };
                Solver.prototype.solveIsland = function(dt, island) {
                    this.removeAllEquations();
                    if (island.equations.length) {
                        this.addEquations(island.equations);
                        mockWorld.bodies.length = 0;
                        island.getBodies(mockWorld.bodies);
                        if (mockWorld.bodies.length) {
                            this.solve(dt, mockWorld);
                        }
                    }
                };
                Solver.prototype.sortEquations = function() {
                    if (this.equationSortFunction) {
                        this.equations.sort(this.equationSortFunction);
                    }
                };
                Solver.prototype.addEquation = function(eq) {
                    if (eq.enabled) {
                        this.equations.push(eq);
                    }
                };
                Solver.prototype.addEquations = function(eqs) {
                    for (var i = 0, N = eqs.length; i !== N; i++) {
                        var eq = eqs[i];
                        if (eq.enabled) {
                            this.equations.push(eq);
                        }
                    }
                };
                Solver.prototype.removeEquation = function(eq) {
                    var i = this.equations.indexOf(eq);
                    if (i !== -1) {
                        this.equations.splice(i, 1);
                    }
                };
                Solver.prototype.removeAllEquations = function() {
                    this.equations.length = 0;
                };
                Solver.GS = 1;
                Solver.ISLAND = 2;
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/solver/Solver.js", "/solver");
        }, {
            "../events/EventEmitter": 29,
            "../utils/Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        50: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var TupleDictionary = _dereq_("./TupleDictionary");
                var Utils = _dereq_("./Utils");
                module.exports = OverlapKeeper;
                function OverlapKeeper() {
                    this.overlappingShapesLastState = new TupleDictionary();
                    this.overlappingShapesCurrentState = new TupleDictionary();
                    this.recordPool = [];
                    this.tmpDict = new TupleDictionary();
                    this.tmpArray1 = [];
                }
                OverlapKeeper.prototype.tick = function() {
                    var last = this.overlappingShapesLastState;
                    var current = this.overlappingShapesCurrentState;
                    var l = last.keys.length;
                    while (l--) {
                        var key = last.keys[l];
                        var lastObject = last.getByKey(key);
                        var currentObject = current.getByKey(key);
                        if (lastObject && !currentObject) {
                            this.recordPool.push(lastObject);
                        }
                    }
                    last.reset();
                    last.copy(current);
                    current.reset();
                };
                OverlapKeeper.prototype.setOverlapping = function(bodyA, shapeA, bodyB, shapeB) {
                    var last = this.overlappingShapesLastState;
                    var current = this.overlappingShapesCurrentState;
                    if (!current.get(shapeA.id, shapeB.id)) {
                        var data;
                        if (this.recordPool.length) {
                            data = this.recordPool.pop();
                            data.set(bodyA, shapeA, bodyB, shapeB);
                        } else {
                            data = new OverlapKeeperRecord(bodyA, shapeA, bodyB, shapeB);
                        }
                        current.set(shapeA.id, shapeB.id, data);
                    }
                };
                OverlapKeeper.prototype.getNewOverlaps = function(result) {
                    return this.getDiff(this.overlappingShapesLastState, this.overlappingShapesCurrentState, result);
                };
                OverlapKeeper.prototype.getEndOverlaps = function(result) {
                    return this.getDiff(this.overlappingShapesCurrentState, this.overlappingShapesLastState, result);
                };
                OverlapKeeper.prototype.bodiesAreOverlapping = function(bodyA, bodyB) {
                    var current = this.overlappingShapesCurrentState;
                    var l = current.keys.length;
                    while (l--) {
                        var key = current.keys[l];
                        var data = current.data[key];
                        if (data.bodyA === bodyA && data.bodyB === bodyB || data.bodyA === bodyB && data.bodyB === bodyA) {
                            return true;
                        }
                    }
                    return false;
                };
                OverlapKeeper.prototype.getDiff = function(dictA, dictB, result) {
                    var result = result || [];
                    var last = dictA;
                    var current = dictB;
                    result.length = 0;
                    var l = current.keys.length;
                    while (l--) {
                        var key = current.keys[l];
                        var data = current.data[key];
                        if (!data) {
                            throw new Error("Key " + key + " had no data!");
                        }
                        var lastData = last.data[key];
                        if (!lastData) {
                            result.push(data);
                        }
                    }
                    return result;
                };
                OverlapKeeper.prototype.isNewOverlap = function(shapeA, shapeB) {
                    var idA = shapeA.id | 0, idB = shapeB.id | 0;
                    var last = this.overlappingShapesLastState;
                    var current = this.overlappingShapesCurrentState;
                    return !!!last.get(idA, idB) && !!current.get(idA, idB);
                };
                OverlapKeeper.prototype.getNewBodyOverlaps = function(result) {
                    this.tmpArray1.length = 0;
                    var overlaps = this.getNewOverlaps(this.tmpArray1);
                    return this.getBodyDiff(overlaps, result);
                };
                OverlapKeeper.prototype.getEndBodyOverlaps = function(result) {
                    this.tmpArray1.length = 0;
                    var overlaps = this.getEndOverlaps(this.tmpArray1);
                    return this.getBodyDiff(overlaps, result);
                };
                OverlapKeeper.prototype.getBodyDiff = function(overlaps, result) {
                    result = result || [];
                    var accumulator = this.tmpDict;
                    var l = overlaps.length;
                    while (l--) {
                        var data = overlaps[l];
                        accumulator.set(data.bodyA.id | 0, data.bodyB.id | 0, data);
                    }
                    l = accumulator.keys.length;
                    while (l--) {
                        var data = accumulator.getByKey(accumulator.keys[l]);
                        if (data) {
                            result.push(data.bodyA, data.bodyB);
                        }
                    }
                    accumulator.reset();
                    return result;
                };
                function OverlapKeeperRecord(bodyA, shapeA, bodyB, shapeB) {
                    this.shapeA = shapeA;
                    this.shapeB = shapeB;
                    this.bodyA = bodyA;
                    this.bodyB = bodyB;
                }
                OverlapKeeperRecord.prototype.set = function(bodyA, shapeA, bodyB, shapeB) {
                    OverlapKeeperRecord.call(this, bodyA, shapeA, bodyB, shapeB);
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/utils/OverlapKeeper.js", "/utils");
        }, {
            "./TupleDictionary": 51,
            "./Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        51: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Utils = _dereq_("./Utils");
                module.exports = TupleDictionary;
                function TupleDictionary() {
                    this.data = {};
                    this.keys = [];
                }
                TupleDictionary.prototype.getKey = function(id1, id2) {
                    id1 = id1 | 0;
                    id2 = id2 | 0;
                    if ((id1 | 0) === (id2 | 0)) {
                        return -1;
                    }
                    return ((id1 | 0) > (id2 | 0) ? id1 << 16 | id2 & 65535 : id2 << 16 | id1 & 65535) | 0;
                };
                TupleDictionary.prototype.getByKey = function(key) {
                    key = key | 0;
                    return this.data[key];
                };
                TupleDictionary.prototype.get = function(i, j) {
                    return this.data[this.getKey(i, j)];
                };
                TupleDictionary.prototype.set = function(i, j, value) {
                    if (!value) {
                        throw new Error("No data!");
                    }
                    var key = this.getKey(i, j);
                    if (!this.data[key]) {
                        this.keys.push(key);
                    }
                    this.data[key] = value;
                    return key;
                };
                TupleDictionary.prototype.reset = function() {
                    var data = this.data, keys = this.keys;
                    var l = keys.length;
                    while (l--) {
                        delete data[keys[l]];
                    }
                    keys.length = 0;
                };
                TupleDictionary.prototype.copy = function(dict) {
                    this.reset();
                    Utils.appendArray(this.keys, dict.keys);
                    var l = dict.keys.length;
                    while (l--) {
                        var key = dict.keys[l];
                        this.data[key] = dict.data[key];
                    }
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/utils/TupleDictionary.js", "/utils");
        }, {
            "./Utils": 52,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        52: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = Utils;
                function Utils() {}
                Utils.appendArray = function(a, b) {
                    if (b.length < 15e4) {
                        a.push.apply(a, b);
                    } else {
                        for (var i = 0, len = b.length; i !== len; ++i) {
                            a.push(b[i]);
                        }
                    }
                };
                Utils.splice = function(array, index, howmany) {
                    howmany = howmany || 1;
                    for (var i = index, len = array.length - howmany; i < len; i++) {
                        array[i] = array[i + howmany];
                    }
                    array.length = len;
                };
                if (typeof P2_ARRAY_TYPE !== "undefined") {
                    Utils.ARRAY_TYPE = P2_ARRAY_TYPE;
                } else if (typeof Float32Array !== "undefined") {
                    Utils.ARRAY_TYPE = Float32Array;
                } else {
                    Utils.ARRAY_TYPE = Array;
                }
                Utils.extend = function(a, b) {
                    for (var key in b) {
                        a[key] = b[key];
                    }
                };
                Utils.defaults = function(options, defaults) {
                    options = options || {};
                    for (var key in defaults) {
                        if (!(key in options)) {
                            options[key] = defaults[key];
                        }
                    }
                    return options;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/utils/Utils.js", "/utils");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        53: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var Body = _dereq_("../objects/Body");
                module.exports = Island;
                function Island() {
                    this.equations = [];
                    this.bodies = [];
                }
                Island.prototype.reset = function() {
                    this.equations.length = this.bodies.length = 0;
                };
                var bodyIds = [];
                Island.prototype.getBodies = function(result) {
                    var bodies = result || [], eqs = this.equations;
                    bodyIds.length = 0;
                    for (var i = 0; i !== eqs.length; i++) {
                        var eq = eqs[i];
                        if (bodyIds.indexOf(eq.bodyA.id) === -1) {
                            bodies.push(eq.bodyA);
                            bodyIds.push(eq.bodyA.id);
                        }
                        if (bodyIds.indexOf(eq.bodyB.id) === -1) {
                            bodies.push(eq.bodyB);
                            bodyIds.push(eq.bodyB.id);
                        }
                    }
                    return bodies;
                };
                Island.prototype.wantsToSleep = function() {
                    for (var i = 0; i < this.bodies.length; i++) {
                        var b = this.bodies[i];
                        if (b.type === Body.DYNAMIC && !b.wantsToSleep) {
                            return false;
                        }
                    }
                    return true;
                };
                Island.prototype.sleep = function() {
                    for (var i = 0; i < this.bodies.length; i++) {
                        var b = this.bodies[i];
                        b.sleep();
                    }
                    return true;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/world/Island.js", "/world");
        }, {
            "../objects/Body": 34,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        54: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var vec2 = _dereq_("../math/vec2"), Island = _dereq_("./Island"), IslandNode = _dereq_("./IslandNode"), Body = _dereq_("../objects/Body");
                module.exports = IslandManager;
                function IslandManager(options) {
                    this._nodePool = [];
                    this._islandPool = [];
                    this.equations = [];
                    this.islands = [];
                    this.nodes = [];
                    this.queue = [];
                }
                IslandManager.getUnvisitedNode = function(nodes) {
                    var Nnodes = nodes.length;
                    for (var i = 0; i !== Nnodes; i++) {
                        var node = nodes[i];
                        if (!node.visited && node.body.type === Body.DYNAMIC) {
                            return node;
                        }
                    }
                    return false;
                };
                IslandManager.prototype.visit = function(node, bds, eqs) {
                    bds.push(node.body);
                    var Neqs = node.equations.length;
                    for (var i = 0; i !== Neqs; i++) {
                        var eq = node.equations[i];
                        if (eqs.indexOf(eq) === -1) {
                            eqs.push(eq);
                        }
                    }
                };
                IslandManager.prototype.bfs = function(root, bds, eqs) {
                    var queue = this.queue;
                    queue.length = 0;
                    queue.push(root);
                    root.visited = true;
                    this.visit(root, bds, eqs);
                    while (queue.length) {
                        var node = queue.pop();
                        var child;
                        while (child = IslandManager.getUnvisitedNode(node.neighbors)) {
                            child.visited = true;
                            this.visit(child, bds, eqs);
                            if (child.body.type === Body.DYNAMIC) {
                                queue.push(child);
                            }
                        }
                    }
                };
                IslandManager.prototype.split = function(world) {
                    var bodies = world.bodies, nodes = this.nodes, equations = this.equations;
                    while (nodes.length) {
                        this._nodePool.push(nodes.pop());
                    }
                    for (var i = 0; i !== bodies.length; i++) {
                        if (this._nodePool.length) {
                            var node = this._nodePool.pop();
                            node.reset();
                            node.body = bodies[i];
                            nodes.push(node);
                        } else {
                            nodes.push(new IslandNode(bodies[i]));
                        }
                    }
                    for (var k = 0; k !== equations.length; k++) {
                        var eq = equations[k], i = bodies.indexOf(eq.bodyA), j = bodies.indexOf(eq.bodyB), ni = nodes[i], nj = nodes[j];
                        ni.neighbors.push(nj);
                        nj.neighbors.push(ni);
                        ni.equations.push(eq);
                        nj.equations.push(eq);
                    }
                    var islands = this.islands;
                    while (islands.length) {
                        var island = islands.pop();
                        island.reset();
                        this._islandPool.push(island);
                    }
                    var child;
                    while (child = IslandManager.getUnvisitedNode(nodes)) {
                        var island = this._islandPool.length ? this._islandPool.pop() : new Island();
                        this.bfs(child, island.bodies, island.equations);
                        islands.push(island);
                    }
                    return islands;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/world/IslandManager.js", "/world");
        }, {
            "../math/vec2": 33,
            "../objects/Body": 34,
            "./Island": 53,
            "./IslandNode": 55,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        55: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                module.exports = IslandNode;
                function IslandNode(body) {
                    this.body = body;
                    this.neighbors = [];
                    this.equations = [];
                    this.visited = false;
                }
                IslandNode.prototype.reset = function() {
                    this.equations.length = 0;
                    this.neighbors.length = 0;
                    this.visited = false;
                    this.body = null;
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/world/IslandNode.js", "/world");
        }, {
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ],
        56: [ function(_dereq_, module, exports) {
            (function(process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {
                var GSSolver = _dereq_("../solver/GSSolver"), Solver = _dereq_("../solver/Solver"), NaiveBroadphase = _dereq_("../collision/NaiveBroadphase"), vec2 = _dereq_("../math/vec2"), Circle = _dereq_("../shapes/Circle"), Rectangle = _dereq_("../shapes/Rectangle"), Convex = _dereq_("../shapes/Convex"), Line = _dereq_("../shapes/Line"), Plane = _dereq_("../shapes/Plane"), Capsule = _dereq_("../shapes/Capsule"), Particle = _dereq_("../shapes/Particle"), EventEmitter = _dereq_("../events/EventEmitter"), Body = _dereq_("../objects/Body"), Shape = _dereq_("../shapes/Shape"), LinearSpring = _dereq_("../objects/LinearSpring"), Material = _dereq_("../material/Material"), ContactMaterial = _dereq_("../material/ContactMaterial"), DistanceConstraint = _dereq_("../constraints/DistanceConstraint"), Constraint = _dereq_("../constraints/Constraint"), LockConstraint = _dereq_("../constraints/LockConstraint"), RevoluteConstraint = _dereq_("../constraints/RevoluteConstraint"), PrismaticConstraint = _dereq_("../constraints/PrismaticConstraint"), GearConstraint = _dereq_("../constraints/GearConstraint"), pkg = _dereq_("../../package.json"), Broadphase = _dereq_("../collision/Broadphase"), SAPBroadphase = _dereq_("../collision/SAPBroadphase"), Narrowphase = _dereq_("../collision/Narrowphase"), Utils = _dereq_("../utils/Utils"), OverlapKeeper = _dereq_("../utils/OverlapKeeper"), IslandManager = _dereq_("./IslandManager"), RotationalSpring = _dereq_("../objects/RotationalSpring");
                module.exports = World;
                if (typeof performance === "undefined") {
                    performance = {};
                }
                if (!performance.now) {
                    var nowOffset = Date.now();
                    if (performance.timing && performance.timing.navigationStart) {
                        nowOffset = performance.timing.navigationStart;
                    }
                    performance.now = function() {
                        return Date.now() - nowOffset;
                    };
                }
                function World(options) {
                    EventEmitter.apply(this);
                    options = options || {};
                    this.springs = [];
                    this.bodies = [];
                    this.disabledBodyCollisionPairs = [];
                    this.solver = options.solver || new GSSolver();
                    this.narrowphase = new Narrowphase(this);
                    this.islandManager = new IslandManager();
                    this.gravity = vec2.fromValues(0, -9.78);
                    if (options.gravity) {
                        vec2.copy(this.gravity, options.gravity);
                    }
                    this.frictionGravity = vec2.length(this.gravity) || 10;
                    this.useWorldGravityAsFrictionGravity = true;
                    this.useFrictionGravityOnZeroGravity = true;
                    this.doProfiling = options.doProfiling || false;
                    this.lastStepTime = 0;
                    this.broadphase = options.broadphase || new NaiveBroadphase();
                    this.broadphase.setWorld(this);
                    this.constraints = [];
                    this.defaultMaterial = new Material();
                    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial);
                    this.lastTimeStep = 1 / 60;
                    this.applySpringForces = true;
                    this.applyDamping = true;
                    this.applyGravity = true;
                    this.solveConstraints = true;
                    this.contactMaterials = [];
                    this.time = 0;
                    this.stepping = false;
                    this.bodiesToBeRemoved = [];
                    this.fixedStepTime = 0;
                    this.islandSplit = typeof options.islandSplit !== "undefined" ? !!options.islandSplit : false;
                    this.emitImpactEvent = true;
                    this._constraintIdCounter = 0;
                    this._bodyIdCounter = 0;
                    this.postStepEvent = {
                        type: "postStep"
                    };
                    this.addBodyEvent = {
                        type: "addBody",
                        body: null
                    };
                    this.removeBodyEvent = {
                        type: "removeBody",
                        body: null
                    };
                    this.addSpringEvent = {
                        type: "addSpring",
                        spring: null
                    };
                    this.impactEvent = {
                        type: "impact",
                        bodyA: null,
                        bodyB: null,
                        shapeA: null,
                        shapeB: null,
                        contactEquation: null
                    };
                    this.postBroadphaseEvent = {
                        type: "postBroadphase",
                        pairs: null
                    };
                    this.sleepMode = World.NO_SLEEPING;
                    this.beginContactEvent = {
                        type: "beginContact",
                        shapeA: null,
                        shapeB: null,
                        bodyA: null,
                        bodyB: null,
                        contactEquations: []
                    };
                    this.endContactEvent = {
                        type: "endContact",
                        shapeA: null,
                        shapeB: null,
                        bodyA: null,
                        bodyB: null
                    };
                    this.preSolveEvent = {
                        type: "preSolve",
                        contactEquations: null,
                        frictionEquations: null
                    };
                    this.overlappingShapesLastState = {
                        keys: []
                    };
                    this.overlappingShapesCurrentState = {
                        keys: []
                    };
                    this.overlapKeeper = new OverlapKeeper();
                }
                World.prototype = new Object(EventEmitter.prototype);
                World.NO_SLEEPING = 1;
                World.BODY_SLEEPING = 2;
                World.ISLAND_SLEEPING = 4;
                World.prototype.addConstraint = function(c) {
                    this.constraints.push(c);
                };
                World.prototype.addContactMaterial = function(contactMaterial) {
                    this.contactMaterials.push(contactMaterial);
                };
                World.prototype.removeContactMaterial = function(cm) {
                    var idx = this.contactMaterials.indexOf(cm);
                    if (idx !== -1) {
                        Utils.splice(this.contactMaterials, idx, 1);
                    }
                };
                World.prototype.getContactMaterial = function(materialA, materialB) {
                    var cmats = this.contactMaterials;
                    for (var i = 0, N = cmats.length; i !== N; i++) {
                        var cm = cmats[i];
                        if (cm.materialA.id === materialA.id && cm.materialB.id === materialB.id || cm.materialA.id === materialB.id && cm.materialB.id === materialA.id) {
                            return cm;
                        }
                    }
                    return false;
                };
                World.prototype.removeConstraint = function(c) {
                    var idx = this.constraints.indexOf(c);
                    if (idx !== -1) {
                        Utils.splice(this.constraints, idx, 1);
                    }
                };
                var step_r = vec2.create(), step_runit = vec2.create(), step_u = vec2.create(), step_f = vec2.create(), step_fhMinv = vec2.create(), step_velodt = vec2.create(), step_mg = vec2.create(), xiw = vec2.fromValues(0, 0), xjw = vec2.fromValues(0, 0), zero = vec2.fromValues(0, 0), interpvelo = vec2.fromValues(0, 0);
                World.prototype.step = function(dt, timeSinceLastCalled, maxSubSteps) {
                    maxSubSteps = maxSubSteps || 10;
                    timeSinceLastCalled = timeSinceLastCalled || 0;
                    if (timeSinceLastCalled === 0) {
                        this.internalStep(dt);
                        this.time += dt;
                    } else {
                        var internalSteps = Math.floor((this.time + timeSinceLastCalled) / dt) - Math.floor(this.time / dt);
                        internalSteps = Math.min(internalSteps, maxSubSteps);
                        var t0 = performance.now();
                        for (var i = 0; i !== internalSteps; i++) {
                            this.internalStep(dt);
                            if (performance.now() - t0 > dt * 1e3) {
                                break;
                            }
                        }
                        this.time += timeSinceLastCalled;
                        var h = this.time % dt;
                        var h_div_dt = h / dt;
                        for (var j = 0; j !== this.bodies.length; j++) {
                            var b = this.bodies[j];
                            if (b.type !== Body.STATIC && b.sleepState !== Body.SLEEPING) {
                                vec2.sub(interpvelo, b.position, b.previousPosition);
                                vec2.scale(interpvelo, interpvelo, h_div_dt);
                                vec2.add(b.interpolatedPosition, b.position, interpvelo);
                                b.interpolatedAngle = b.angle + (b.angle - b.previousAngle) * h_div_dt;
                            } else {
                                vec2.copy(b.interpolatedPosition, b.position);
                                b.interpolatedAngle = b.angle;
                            }
                        }
                    }
                };
                var endOverlaps = [];
                World.prototype.internalStep = function(dt) {
                    this.stepping = true;
                    var that = this, doProfiling = this.doProfiling, Nsprings = this.springs.length, springs = this.springs, bodies = this.bodies, g = this.gravity, solver = this.solver, Nbodies = this.bodies.length, broadphase = this.broadphase, np = this.narrowphase, constraints = this.constraints, t0, t1, fhMinv = step_fhMinv, velodt = step_velodt, mg = step_mg, scale = vec2.scale, add = vec2.add, rotate = vec2.rotate, islandManager = this.islandManager;
                    this.overlapKeeper.tick();
                    this.lastTimeStep = dt;
                    if (doProfiling) {
                        t0 = performance.now();
                    }
                    if (this.useWorldGravityAsFrictionGravity) {
                        var gravityLen = vec2.length(this.gravity);
                        if (gravityLen === 0 && this.useFrictionGravityOnZeroGravity) {} else {
                            this.frictionGravity = gravityLen;
                        }
                    }
                    if (this.applyGravity) {
                        for (var i = 0; i !== Nbodies; i++) {
                            var b = bodies[i], fi = b.force;
                            if (b.type !== Body.DYNAMIC || b.sleepState === Body.SLEEPING) {
                                continue;
                            }
                            vec2.scale(mg, g, b.mass * b.gravityScale);
                            add(fi, fi, mg);
                        }
                    }
                    if (this.applySpringForces) {
                        for (var i = 0; i !== Nsprings; i++) {
                            var s = springs[i];
                            s.applyForce();
                        }
                    }
                    if (this.applyDamping) {
                        for (var i = 0; i !== Nbodies; i++) {
                            var b = bodies[i];
                            if (b.type === Body.DYNAMIC) {
                                b.applyDamping(dt);
                            }
                        }
                    }
                    var result = broadphase.getCollisionPairs(this);
                    var ignoredPairs = this.disabledBodyCollisionPairs;
                    for (var i = ignoredPairs.length - 2; i >= 0; i -= 2) {
                        for (var j = result.length - 2; j >= 0; j -= 2) {
                            if (ignoredPairs[i] === result[j] && ignoredPairs[i + 1] === result[j + 1] || ignoredPairs[i + 1] === result[j] && ignoredPairs[i] === result[j + 1]) {
                                result.splice(j, 2);
                            }
                        }
                    }
                    var Nconstraints = constraints.length;
                    for (i = 0; i !== Nconstraints; i++) {
                        var c = constraints[i];
                        if (!c.collideConnected) {
                            for (var j = result.length - 2; j >= 0; j -= 2) {
                                if (c.bodyA === result[j] && c.bodyB === result[j + 1] || c.bodyB === result[j] && c.bodyA === result[j + 1]) {
                                    result.splice(j, 2);
                                }
                            }
                        }
                    }
                    this.postBroadphaseEvent.pairs = result;
                    this.emit(this.postBroadphaseEvent);
                    np.reset(this);
                    for (var i = 0, Nresults = result.length; i !== Nresults; i += 2) {
                        var bi = result[i], bj = result[i + 1];
                        for (var k = 0, Nshapesi = bi.shapes.length; k !== Nshapesi; k++) {
                            var si = bi.shapes[k], xi = bi.shapeOffsets[k], ai = bi.shapeAngles[k];
                            for (var l = 0, Nshapesj = bj.shapes.length; l !== Nshapesj; l++) {
                                var sj = bj.shapes[l], xj = bj.shapeOffsets[l], aj = bj.shapeAngles[l];
                                var cm = this.defaultContactMaterial;
                                if (si.material && sj.material) {
                                    var tmp = this.getContactMaterial(si.material, sj.material);
                                    if (tmp) {
                                        cm = tmp;
                                    }
                                }
                                this.runNarrowphase(np, bi, si, xi, ai, bj, sj, xj, aj, cm, this.frictionGravity);
                            }
                        }
                    }
                    for (var i = 0; i !== Nbodies; i++) {
                        var body = bodies[i];
                        if (body._wakeUpAfterNarrowphase) {
                            body.wakeUp();
                            body._wakeUpAfterNarrowphase = false;
                        }
                    }
                    if (this.has("endContact")) {
                        this.overlapKeeper.getEndOverlaps(endOverlaps);
                        var e = this.endContactEvent;
                        var l = endOverlaps.length;
                        while (l--) {
                            var data = endOverlaps[l];
                            e.shapeA = data.shapeA;
                            e.shapeB = data.shapeB;
                            e.bodyA = data.bodyA;
                            e.bodyB = data.bodyA;
                            this.emit(e);
                        }
                    }
                    var preSolveEvent = this.preSolveEvent;
                    preSolveEvent.contactEquations = np.contactEquations;
                    preSolveEvent.frictionEquations = np.frictionEquations;
                    this.emit(preSolveEvent);
                    var Nconstraints = constraints.length;
                    for (i = 0; i !== Nconstraints; i++) {
                        constraints[i].update();
                    }
                    if (np.contactEquations.length || np.frictionEquations.length || constraints.length) {
                        if (this.islandSplit) {
                            islandManager.equations.length = 0;
                            Utils.appendArray(islandManager.equations, np.contactEquations);
                            Utils.appendArray(islandManager.equations, np.frictionEquations);
                            for (i = 0; i !== Nconstraints; i++) {
                                Utils.appendArray(islandManager.equations, constraints[i].equations);
                            }
                            islandManager.split(this);
                            for (var i = 0; i !== islandManager.islands.length; i++) {
                                var island = islandManager.islands[i];
                                if (island.equations.length) {
                                    solver.solveIsland(dt, island);
                                }
                            }
                        } else {
                            solver.addEquations(np.contactEquations);
                            solver.addEquations(np.frictionEquations);
                            for (i = 0; i !== Nconstraints; i++) {
                                solver.addEquations(constraints[i].equations);
                            }
                            if (this.solveConstraints) {
                                solver.solve(dt, this);
                            }
                            solver.removeAllEquations();
                        }
                    }
                    for (var i = 0; i !== Nbodies; i++) {
                        var body = bodies[i];
                        if (body.sleepState !== Body.SLEEPING && body.type !== Body.STATIC) {
                            World.integrateBody(body, dt);
                        }
                    }
                    for (var i = 0; i !== Nbodies; i++) {
                        bodies[i].setZeroForce();
                    }
                    if (doProfiling) {
                        t1 = performance.now();
                        that.lastStepTime = t1 - t0;
                    }
                    if (this.emitImpactEvent && this.has("impact")) {
                        var ev = this.impactEvent;
                        for (var i = 0; i !== np.contactEquations.length; i++) {
                            var eq = np.contactEquations[i];
                            if (eq.firstImpact) {
                                ev.bodyA = eq.bodyA;
                                ev.bodyB = eq.bodyB;
                                ev.shapeA = eq.shapeA;
                                ev.shapeB = eq.shapeB;
                                ev.contactEquation = eq;
                                this.emit(ev);
                            }
                        }
                    }
                    if (this.sleepMode === World.BODY_SLEEPING) {
                        for (i = 0; i !== Nbodies; i++) {
                            bodies[i].sleepTick(this.time, false, dt);
                        }
                    } else if (this.sleepMode === World.ISLAND_SLEEPING && this.islandSplit) {
                        for (i = 0; i !== Nbodies; i++) {
                            bodies[i].sleepTick(this.time, true, dt);
                        }
                        for (var i = 0; i < this.islandManager.islands.length; i++) {
                            var island = this.islandManager.islands[i];
                            if (island.wantsToSleep()) {
                                island.sleep();
                            }
                        }
                    }
                    this.stepping = false;
                    if (this.bodiesToBeRemoved.length) {
                        for (var i = 0; i !== this.bodiesToBeRemoved.length; i++) {
                            this.removeBody(this.bodiesToBeRemoved[i]);
                        }
                        this.bodiesToBeRemoved.length = 0;
                    }
                    this.emit(this.postStepEvent);
                };
                var ib_fhMinv = vec2.create();
                var ib_velodt = vec2.create();
                World.integrateBody = function(body, dt) {
                    var minv = body.invMass, f = body.force, pos = body.position, velo = body.velocity;
                    vec2.copy(body.previousPosition, body.position);
                    body.previousAngle = body.angle;
                    if (!body.fixedRotation) {
                        body.angularVelocity += body.angularForce * body.invInertia * dt;
                        body.angle += body.angularVelocity * dt;
                    }
                    vec2.scale(ib_fhMinv, f, dt * minv);
                    vec2.add(velo, ib_fhMinv, velo);
                    vec2.scale(ib_velodt, velo, dt);
                    vec2.add(pos, pos, ib_velodt);
                    body.aabbNeedsUpdate = true;
                };
                World.prototype.runNarrowphase = function(np, bi, si, xi, ai, bj, sj, xj, aj, cm, glen) {
                    if (!((si.collisionGroup & sj.collisionMask) !== 0 && (sj.collisionGroup & si.collisionMask) !== 0)) {
                        return;
                    }
                    vec2.rotate(xiw, xi, bi.angle);
                    vec2.rotate(xjw, xj, bj.angle);
                    vec2.add(xiw, xiw, bi.position);
                    vec2.add(xjw, xjw, bj.position);
                    var aiw = ai + bi.angle;
                    var ajw = aj + bj.angle;
                    np.enableFriction = cm.friction > 0;
                    np.frictionCoefficient = cm.friction;
                    var reducedMass;
                    if (bi.type === Body.STATIC || bi.type === Body.KINEMATIC) {
                        reducedMass = bj.mass;
                    } else if (bj.type === Body.STATIC || bj.type === Body.KINEMATIC) {
                        reducedMass = bi.mass;
                    } else {
                        reducedMass = bi.mass * bj.mass / (bi.mass + bj.mass);
                    }
                    np.slipForce = cm.friction * glen * reducedMass;
                    np.restitution = cm.restitution;
                    np.surfaceVelocity = cm.surfaceVelocity;
                    np.frictionStiffness = cm.frictionStiffness;
                    np.frictionRelaxation = cm.frictionRelaxation;
                    np.stiffness = cm.stiffness;
                    np.relaxation = cm.relaxation;
                    np.contactSkinSize = cm.contactSkinSize;
                    var resolver = np[si.type | sj.type], numContacts = 0;
                    if (resolver) {
                        var sensor = si.sensor || sj.sensor;
                        var numFrictionBefore = np.frictionEquations.length;
                        if (si.type < sj.type) {
                            numContacts = resolver.call(np, bi, si, xiw, aiw, bj, sj, xjw, ajw, sensor);
                        } else {
                            numContacts = resolver.call(np, bj, sj, xjw, ajw, bi, si, xiw, aiw, sensor);
                        }
                        var numFrictionEquations = np.frictionEquations.length - numFrictionBefore;
                        if (numContacts) {
                            if (bi.allowSleep && bi.type === Body.DYNAMIC && bi.sleepState === Body.SLEEPING && bj.sleepState === Body.AWAKE && bj.type !== Body.STATIC) {
                                var speedSquaredB = vec2.squaredLength(bj.velocity) + Math.pow(bj.angularVelocity, 2);
                                var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit, 2);
                                if (speedSquaredB >= speedLimitSquaredB * 2) {
                                    bi._wakeUpAfterNarrowphase = true;
                                }
                            }
                            if (bj.allowSleep && bj.type === Body.DYNAMIC && bj.sleepState === Body.SLEEPING && bi.sleepState === Body.AWAKE && bi.type !== Body.STATIC) {
                                var speedSquaredA = vec2.squaredLength(bi.velocity) + Math.pow(bi.angularVelocity, 2);
                                var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit, 2);
                                if (speedSquaredA >= speedLimitSquaredA * 2) {
                                    bj._wakeUpAfterNarrowphase = true;
                                }
                            }
                            this.overlapKeeper.setOverlapping(bi, si, bj, sj);
                            if (this.has("beginContact") && this.overlapKeeper.isNewOverlap(si, sj)) {
                                var e = this.beginContactEvent;
                                e.shapeA = si;
                                e.shapeB = sj;
                                e.bodyA = bi;
                                e.bodyB = bj;
                                e.contactEquations.length = 0;
                                if (typeof numContacts === "number") {
                                    for (var i = np.contactEquations.length - numContacts; i < np.contactEquations.length; i++) {
                                        e.contactEquations.push(np.contactEquations[i]);
                                    }
                                }
                                this.emit(e);
                            }
                            if (typeof numContacts === "number" && numFrictionEquations > 1) {
                                for (var i = np.frictionEquations.length - numFrictionEquations; i < np.frictionEquations.length; i++) {
                                    var f = np.frictionEquations[i];
                                    f.setSlipForce(f.getSlipForce() / numFrictionEquations);
                                }
                            }
                        }
                    }
                };
                World.prototype.addSpring = function(s) {
                    this.springs.push(s);
                    this.addSpringEvent.spring = s;
                    this.emit(this.addSpringEvent);
                };
                World.prototype.removeSpring = function(s) {
                    var idx = this.springs.indexOf(s);
                    if (idx !== -1) {
                        Utils.splice(this.springs, idx, 1);
                    }
                };
                World.prototype.addBody = function(body) {
                    if (this.bodies.indexOf(body) === -1) {
                        this.bodies.push(body);
                        body.world = this;
                        this.addBodyEvent.body = body;
                        this.emit(this.addBodyEvent);
                    }
                };
                World.prototype.removeBody = function(body) {
                    if (this.stepping) {
                        this.bodiesToBeRemoved.push(body);
                    } else {
                        body.world = null;
                        var idx = this.bodies.indexOf(body);
                        if (idx !== -1) {
                            Utils.splice(this.bodies, idx, 1);
                            this.removeBodyEvent.body = body;
                            body.resetConstraintVelocity();
                            this.emit(this.removeBodyEvent);
                        }
                    }
                };
                World.prototype.getBodyById = function(id) {
                    var bodies = this.bodies;
                    for (var i = 0; i < bodies.length; i++) {
                        var b = bodies[i];
                        if (b.id === id) {
                            return b;
                        }
                    }
                    return false;
                };
                World.prototype.disableBodyCollision = function(bodyA, bodyB) {
                    this.disabledBodyCollisionPairs.push(bodyA, bodyB);
                };
                World.prototype.enableBodyCollision = function(bodyA, bodyB) {
                    var pairs = this.disabledBodyCollisionPairs;
                    for (var i = 0; i < pairs.length; i += 2) {
                        if (pairs[i] === bodyA && pairs[i + 1] === bodyB || pairs[i + 1] === bodyA && pairs[i] === bodyB) {
                            pairs.splice(i, 2);
                            return;
                        }
                    }
                };
                function v2a(v) {
                    if (!v) {
                        return v;
                    }
                    return [ v[0], v[1] ];
                }
                function extend(a, b) {
                    for (var key in b) {
                        a[key] = b[key];
                    }
                }
                function contactMaterialToJSON(cm) {
                    return {
                        id: cm.id,
                        materialA: cm.materialA.id,
                        materialB: cm.materialB.id,
                        friction: cm.friction,
                        restitution: cm.restitution,
                        stiffness: cm.stiffness,
                        relaxation: cm.relaxation,
                        frictionStiffness: cm.frictionStiffness,
                        frictionRelaxation: cm.frictionRelaxation
                    };
                }
                World.prototype.clear = function() {
                    this.time = 0;
                    this.fixedStepTime = 0;
                    if (this.solver && this.solver.equations.length) {
                        this.solver.removeAllEquations();
                    }
                    var cs = this.constraints;
                    for (var i = cs.length - 1; i >= 0; i--) {
                        this.removeConstraint(cs[i]);
                    }
                    var bodies = this.bodies;
                    for (var i = bodies.length - 1; i >= 0; i--) {
                        this.removeBody(bodies[i]);
                    }
                    var springs = this.springs;
                    for (var i = springs.length - 1; i >= 0; i--) {
                        this.removeSpring(springs[i]);
                    }
                    var cms = this.contactMaterials;
                    for (var i = cms.length - 1; i >= 0; i--) {
                        this.removeContactMaterial(cms[i]);
                    }
                    World.apply(this);
                };
                World.prototype.clone = function() {
                    var world = new World();
                    world.fromJSON(this.toJSON());
                    return world;
                };
                var hitTest_tmp1 = vec2.create(), hitTest_zero = vec2.fromValues(0, 0), hitTest_tmp2 = vec2.fromValues(0, 0);
                World.prototype.hitTest = function(worldPoint, bodies, precision) {
                    precision = precision || 0;
                    var pb = new Body({
                        position: worldPoint
                    }), ps = new Particle(), px = worldPoint, pa = 0, x = hitTest_tmp1, zero = hitTest_zero, tmp = hitTest_tmp2;
                    pb.addShape(ps);
                    var n = this.narrowphase, result = [];
                    for (var i = 0, N = bodies.length; i !== N; i++) {
                        var b = bodies[i];
                        for (var j = 0, NS = b.shapes.length; j !== NS; j++) {
                            var s = b.shapes[j], offset = b.shapeOffsets[j] || zero, angle = b.shapeAngles[j] || 0;
                            vec2.rotate(x, offset, b.angle);
                            vec2.add(x, x, b.position);
                            var a = angle + b.angle;
                            if (s instanceof Circle && n.circleParticle(b, s, x, a, pb, ps, px, pa, true) || s instanceof Convex && n.particleConvex(pb, ps, px, pa, b, s, x, a, true) || s instanceof Plane && n.particlePlane(pb, ps, px, pa, b, s, x, a, true) || s instanceof Capsule && n.particleCapsule(pb, ps, px, pa, b, s, x, a, true) || s instanceof Particle && vec2.squaredLength(vec2.sub(tmp, x, worldPoint)) < precision * precision) {
                                result.push(b);
                            }
                        }
                    }
                    return result;
                };
                World.prototype.setGlobalEquationParameters = function(parameters) {
                    parameters = parameters || {};
                    for (var i = 0; i !== this.constraints.length; i++) {
                        var c = this.constraints[i];
                        for (var j = 0; j !== c.equations.length; j++) {
                            var eq = c.equations[j];
                            if (typeof parameters.stiffness !== "undefined") {
                                eq.stiffness = parameters.stiffness;
                            }
                            if (typeof parameters.relaxation !== "undefined") {
                                eq.relaxation = parameters.relaxation;
                            }
                            eq.needsUpdate = true;
                        }
                    }
                    for (var i = 0; i !== this.contactMaterials.length; i++) {
                        var c = this.contactMaterials[i];
                        if (typeof parameters.stiffness !== "undefined") {
                            c.stiffness = parameters.stiffness;
                            c.frictionStiffness = parameters.stiffness;
                        }
                        if (typeof parameters.relaxation !== "undefined") {
                            c.relaxation = parameters.relaxation;
                            c.frictionRelaxation = parameters.relaxation;
                        }
                    }
                    var c = this.defaultContactMaterial;
                    if (typeof parameters.stiffness !== "undefined") {
                        c.stiffness = parameters.stiffness;
                        c.frictionStiffness = parameters.stiffness;
                    }
                    if (typeof parameters.relaxation !== "undefined") {
                        c.relaxation = parameters.relaxation;
                        c.frictionRelaxation = parameters.relaxation;
                    }
                };
                World.prototype.setGlobalStiffness = function(stiffness) {
                    this.setGlobalEquationParameters({
                        stiffness: stiffness
                    });
                };
                World.prototype.setGlobalRelaxation = function(relaxation) {
                    this.setGlobalEquationParameters({
                        relaxation: relaxation
                    });
                };
            }).call(this, _dereq_("/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"), typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, _dereq_("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/world/World.js", "/world");
        }, {
            "../../package.json": 10,
            "../collision/Broadphase": 12,
            "../collision/NaiveBroadphase": 14,
            "../collision/Narrowphase": 15,
            "../collision/SAPBroadphase": 16,
            "../constraints/Constraint": 17,
            "../constraints/DistanceConstraint": 18,
            "../constraints/GearConstraint": 19,
            "../constraints/LockConstraint": 20,
            "../constraints/PrismaticConstraint": 21,
            "../constraints/RevoluteConstraint": 22,
            "../events/EventEmitter": 29,
            "../material/ContactMaterial": 30,
            "../material/Material": 31,
            "../math/vec2": 33,
            "../objects/Body": 34,
            "../objects/LinearSpring": 35,
            "../objects/RotationalSpring": 36,
            "../shapes/Capsule": 39,
            "../shapes/Circle": 40,
            "../shapes/Convex": 41,
            "../shapes/Line": 43,
            "../shapes/Particle": 44,
            "../shapes/Plane": 45,
            "../shapes/Rectangle": 46,
            "../shapes/Shape": 47,
            "../solver/GSSolver": 48,
            "../solver/Solver": 49,
            "../utils/OverlapKeeper": 50,
            "../utils/Utils": 52,
            "./IslandManager": 54,
            "/Users/schteppe/git/p2.js/node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js": 4,
            buffer: 1
        } ]
    }, {}, [ 38 ])(38);
});

(function(a, b) {
    function bf(a, b, c, d) {
        bf._super_.call(this), this.reset(a, b, c, d);
    }
    function be(a, b, c, d) {
        be._super_.call(this), this.x = a, this.y = b, this.width = c, this.height = d;
    }
    function bd(a, b) {
        bd._super_.call(this), this.x = a, this.y = b;
    }
    function bc(a, b, c) {
        bc._super_.call(this), this.x = a, this.y = b, this.radius = c, this.angle = 0, 
        this.center = {
            x: this.x,
            y: this.y
        };
    }
    function bb(a, b, d, e, f) {
        bb._super_.call(this), d - a >= 0 ? (this.x1 = a, this.y1 = b, this.x2 = d, this.y2 = e) : (this.x1 = d, 
        this.y1 = e, this.x2 = a, this.y2 = b), this.dx = this.x2 - this.x1, this.dy = this.y2 - this.y1, 
        this.minx = Math.min(this.x1, this.x2), this.miny = Math.min(this.y1, this.y2), 
        this.maxx = Math.max(this.x1, this.x2), this.maxy = Math.max(this.y1, this.y2), 
        this.dot = this.x2 * this.y1 - this.x1 * this.y2, this.xxyy = this.dx * this.dx + this.dy * this.dy, 
        this.gradient = this.getGradient(), this.length = this.getLength(), this.direction = c.Util.initValue(f, ">");
    }
    function ba() {
        this.vector = new c.Vector2D(0, 0), this.random = 0, this.crossType = "dead", this.alert = !0;
    }
    function _(a, b) {
        _._super_.call(this, a, b), this.gl = this.element.getContext("experimental-webgl", {
            antialias: !0,
            stencil: !1,
            depth: !1
        }), this.gl || alert("Sorry your browser do not suppest WebGL!"), this.initVar(), 
        this.setMaxRadius(), this.initShaders(), this.initBuffers(), this.gl.blendEquation(this.gl.FUNC_ADD), 
        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA), this.gl.enable(this.gl.BLEND);
    }
    function $(a, b, c) {
        $._super_.call(this, a, b), this.context = this.element.getContext("2d"), this.imageData = null, 
        this.rectangle = null, this.rectangle = c, this.createImageData(c);
    }
    function Z(a, b) {
        Z._super_.call(this, a, b), this.stroke = null, this.context = this.element.getContext("2d"), 
        this.bufferCache = {};
    }
    function Y(a, b, c) {
        Y._super_.call(this, a, b), this.stroke = c;
    }
    function X(a, b) {
        X._super_.call(this, a, b), this.stroke = null;
    }
    function W(a, b, c) {
        this.proton = a, this.element = b, this.stroke = c;
    }
    function V(a, b, d) {
        this.element = d, this.type = c.Util.initValue(a, "canvas"), this.proton = b, this.renderer = this.getRenderer();
    }
    function T(b, d, e) {
        this.mouseTarget = c.Util.initValue(b, a), this.ease = c.Util.initValue(d, .7), 
        this._allowEmitting = !1, this.initEventHandler(), T._super_.call(this, e);
    }
    function S(a) {
        this.selfBehaviours = [], S._super_.call(this, a);
    }
    function R(a) {
        this.initializes = [], this.particles = [], this.behaviours = [], this.emitTime = 0, 
        this.emitTotalTimes = -1, this.damping = .006, this.bindEmitter = !0, this.rate = new c.Rate(1, .1), 
        R._super_.call(this, a), this.id = "emitter_" + R.ID++;
    }
    function Q(a, b, d, e) {
        Q._super_.call(this, d, e), this.distanceVec = new c.Vector2D(), this.centerPoint = c.Util.initValue(a, new c.Vector2D()), 
        this.force = c.Util.initValue(this.normalizeValue(b), 100), this.name = "GravityWell";
    }
    function P(a, b, c, d) {
        P._super_.call(this, c, d), this.reset(a, b), this.name = "Color";
    }
    function O(a, b, c, d, e) {
        O._super_.call(this, d, e), this.reset(a, b, c), this.name = "Rotate";
    }
    function N(a, b, c, d) {
        N._super_.call(this, c, d), this.reset(a, b), this.name = "Scale";
    }
    function M(a, b, c, d) {
        M._super_.call(this, c, d), this.reset(a, b), this.name = "Alpha";
    }
    function L(a, b, c, d) {
        L._super_.call(this, c, d), this.reset(a, b), this.name = "CrossZone";
    }
    function K(a, b, c, d, e) {
        K._super_.call(this, d, e), this.reset(a, b, c), this.name = "Collision";
    }
    function J(a, b, c) {
        J._super_.call(this, 0, a, b, c), this.name = "Gravity";
    }
    function I(a, b, c, d, e) {
        I._super_.call(this, a, b, c, d, e), this.force *= -1, this.name = "Repulsion";
    }
    function H(a, b, c, d, e) {
        H._super_.call(this, d, e), this.reset(a, b, c), this.time = 0, this.name = "RandomDrift";
    }
    function G(a, b, d, e, f) {
        G._super_.call(this, e, f), this.targetPosition = c.Util.initValue(a, new c.Vector2D()), 
        this.radius = c.Util.initValue(d, 1e3), this.force = c.Util.initValue(this.normalizeValue(b), 100), 
        this.radiusSq = this.radius * this.radius, this.attractionForce = new c.Vector2D(), 
        this.lengthSq = 0, this.name = "Attraction";
    }
    function F(a, b, d, e) {
        F._super_.call(this, d, e), this.force = this.normalizeForce(new c.Vector2D(a, b)), 
        this.name = "Force";
    }
    function E(a, b, d) {
        E._super_.call(this), this.image = this.setSpanValue(a), this.w = c.Util.initValue(b, 20), 
        this.h = c.Util.initValue(d, this.w);
    }
    function D(a, b, d) {
        D._super_.call(this), this.radius = c.Util.setSpanValue(a, b, d);
    }
    function C(a, b, d) {
        C._super_.call(this), this.massPan = c.Util.setSpanValue(a, b, d);
    }
    function B(a, b, d) {
        B._super_.call(this), this.rPan = c.Util.setSpanValue(a), this.thaPan = c.Util.setSpanValue(b), 
        this.type = c.Util.initValue(d, "vector");
    }
    function A(a) {
        A._super_.call(this), this.zone = c.Util.initValue(a, new c.PointZone());
    }
    function z(a, b, d) {
        z._super_.call(this), this.lifePan = c.Util.setSpanValue(a, b, d);
    }
    function x() {}
    function w(a, b) {
        this.numPan = c.Util.initValue(a, 1), this.timePan = c.Util.initValue(b, 1), this.numPan = c.Util.setSpanValue(this.numPan), 
        this.timePan = c.Util.setSpanValue(this.timePan), this.startTime = 0, this.nextTime = 0, 
        this.init();
    }
    function v(a, b) {
        this.id = "Behaviour_" + v.id++, this.life = c.Util.initValue(a, Infinity), this.easing = c.ease.setEasingByName(b), 
        this.age = 0, this.energy = 1, this.dead = !1, this.parents = [], this.name = "Behaviour";
    }
    function t(a, b, c, d) {
        this.x = a, this.y = b, this.width = c, this.height = d, this.bottom = this.y + this.height, 
        this.right = this.x + this.width;
    }
    function s(a) {
        c.Util.isArray(a) ? this.colorArr = a : this.colorArr = [ a ];
    }
    function r(a, b, d) {
        this.isArray = !1, c.Util.isArray(a) ? (this.isArray = !0, this.a = a) : (this.a = c.Util.initValue(a, 1), 
        this.b = c.Util.initValue(b, this.a), this.center = c.Util.initValue(d, !1));
    }
    function l(a, b) {
        this.proParticleCount = c.Util.initValue(a, 0), this.releaseTime = c.Util.initValue(b, -1), 
        this.poolList = [], this.timeoutID = 0;
        for (var d = 0; d < this.proParticleCount; d++) this.add();
        this.releaseTime > 0 && (this.timeoutID = setTimeout(this.release, this.releaseTime / 1e3));
    }
    function k(a) {
        this.id = "particle_" + k.ID++, this.reset(!0), c.Util.setPrototypeByObject(this, a);
    }
    function j() {
        this.mats = [], this.size = 0;
        for (var a = 0; a < 20; a++) this.mats.push(c.Mat3.create([ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]));
    }
    function f(a) {
        this.type = a.type, this.particle = a.particle, this.emitter = a.emitter;
    }
    function d() {
        this.initialize();
    }
    function c(a, b) {
        this.proParticleCount = c.Util.initValue(a, c.POOL_MAX), this.integrationType = c.Util.initValue(b, c.EULER), 
        this.emitters = [], this.renderers = [], this.time = 0, this.oldTime = 0, c.pool = new c.ParticlePool(this.proParticleCount), 
        c.integrator = new c.NumericalIntegration(this.integrationType);
    }
    c.POOL_MAX = 1e3, c.TIME_STEP = 60, c.MEASURE = 100, c.EULER = "euler", c.RK2 = "runge-kutta2", 
    c.RK4 = "runge-kutta4", c.VERLET = "verlet", c.PARTICLE_CREATED = "partilcleCreated", 
    c.PARTICLE_UPDATE = "partilcleUpdate", c.PARTICLE_SLEEP = "particleSleep", c.PARTICLE_DEAD = "partilcleDead", 
    c.PROTON_UPDATE = "protonUpdate", c.PROTON_UPDATE_AFTER = "protonUpdateAfter", c.EMITTER_ADDED = "emitterAdded", 
    c.EMITTER_REMOVED = "emitterRemoved", c.amendChangeTabsBug = !0, c.TextureBuffer = {}, 
    c.TextureCanvasBuffer = {}, c.prototype = {
        addRender: function(a) {
            a.proton = this, this.renderers.push(a.proton);
        },
        addEmitter: function(a) {
            this.emitters.push(a), a.parent = this, this.dispatchEvent(new c.Event({
                type: c.EMITTER_ADDED,
                emitter: a
            }));
        },
        removeEmitter: function(a) {
            var b = this.emitters.indexOf(a);
            this.emitters.splice(b, 1), a.parent = null, this.dispatchEvent(new c.Event({
                type: c.EMITTER_REMOVED,
                emitter: a
            }));
        },
        update: function() {
            this.dispatchEvent(new c.Event({
                type: c.PROTON_UPDATE
            })), this.oldTime || (this.oldTime = new Date().getTime());
            var a = new Date().getTime();
            this.elapsed = (a - this.oldTime) / 1e3, c.amendChangeTabsBug && this.amendChangeTabsBug(), 
            this.oldTime = a;
            if (this.elapsed > 0) for (var b = 0; b < this.emitters.length; b++) this.emitters[b].update(this.elapsed);
            this.dispatchEvent(new c.Event({
                type: c.PROTON_UPDATE_AFTER
            }));
        },
        amendChangeTabsBug: function() {
            this.elapsed > .5 && (this.oldTime = new Date().getTime(), this.elapsed = 0);
        },
        getCount: function() {
            var a = 0, b = this.emitters.length;
            for (var c = 0; c < b; c++) a += this.emitters[c].particles.length;
            return a;
        },
        destory: function() {
            var a = this.emitters.length;
            for (var b = 0; b < a; b++) this.emitters[b].destory(), delete this.emitters[b];
            this.emitters = [], this.time = 0, this.oldTime = 0, c.pool.release();
        }
    }, a.Proton = c;
    var e = d.prototype;
    d.initialize = function(a) {
        a.addEventListener = e.addEventListener, a.removeEventListener = e.removeEventListener, 
        a.removeAllEventListeners = e.removeAllEventListeners, a.hasEventListener = e.hasEventListener, 
        a.dispatchEvent = e.dispatchEvent;
    }, e._listeners = null, e.initialize = function() {}, e.addEventListener = function(a, b) {
        var c = this._listeners;
        c ? this.removeEventListener(a, b) : c = this._listeners = {};
        var d = c[a];
        d || (d = c[a] = []), d.push(b);
        return b;
    }, e.removeEventListener = function(a, b) {
        var c = this._listeners;
        if (!!c) {
            var d = c[a];
            if (!d) return;
            for (var e = 0, f = d.length; e < f; e++) if (d[e] == b) {
                f == 1 ? delete c[a] : d.splice(e, 1);
                break;
            }
        }
    }, e.removeAllEventListeners = function(a) {
        a ? this._listeners && delete this._listeners[a] : this._listeners = null;
    }, e.dispatchEvent = function(a) {
        var b = !1, c = this._listeners;
        if (a && c) {
            var d = c[a.type];
            if (!d) return b;
            d = d.slice();
            for (var e = 0, f = d.length; e < f; e++) {
                var g = d[e];
                b = b || g(a);
            }
        }
        return !!b;
    }, e.hasEventListener = function(a) {
        var b = this._listeners;
        return !!b && !!b[a];
    }, c.EventDispatcher = d, c.EventDispatcher.initialize(c.prototype), c.Event = f;
    var g = g || {
        initValue: function(a, c) {
            var a = a != null && a != b ? a : c;
            return a;
        },
        isArray: function(a) {
            return typeof a == "object" && a.hasOwnProperty("length");
        },
        destroyArray: function(a) {
            a.length = 0;
        },
        destroyObject: function(a) {
            for (var b in a) delete a[b];
        },
        getVector2D: function(a, b) {
            if (typeof a == "object") return a;
            var d = new c.Vector2D(a, b);
            return d;
        },
        judgeVector2D: function(a) {
            var b = "";
            if (a.hasOwnProperty("x") || a.hasOwnProperty("y") || a.hasOwnProperty("p") || a.hasOwnProperty("position")) b += "p";
            if (a.hasOwnProperty("vx") || a.hasOwnProperty("vx") || a.hasOwnProperty("v") || a.hasOwnProperty("velocity")) b += "v";
            if (a.hasOwnProperty("ax") || a.hasOwnProperty("ax") || a.hasOwnProperty("a") || a.hasOwnProperty("accelerate")) b += "a";
            return b;
        },
        setVector2DByObject: function(a, b) {
            b.hasOwnProperty("x") && (a.p.x = b.x), b.hasOwnProperty("y") && (a.p.y = b.y), 
            b.hasOwnProperty("vx") && (a.v.x = b.vx), b.hasOwnProperty("vy") && (a.v.y = b.vy), 
            b.hasOwnProperty("ax") && (a.a.x = b.ax), b.hasOwnProperty("ay") && (a.a.y = b.ay), 
            b.hasOwnProperty("p") && particle.p.copy(b.p), b.hasOwnProperty("v") && particle.v.copy(b.v), 
            b.hasOwnProperty("a") && particle.a.copy(b.a), b.hasOwnProperty("position") && particle.p.copy(b.position), 
            b.hasOwnProperty("velocity") && particle.v.copy(b.velocity), b.hasOwnProperty("accelerate") && particle.a.copy(b.accelerate);
        },
        addPrototypeByObject: function(a, b, d) {
            for (var e in b) d ? d.indexOf(e) < 0 && (a[e] = c.Util.getSpanValue(b[e])) : a[e] = c.Util.getSpanValue(b[e]);
            return a;
        },
        setPrototypeByObject: function(a, b, d) {
            for (var e in b) a.hasOwnProperty(e) && (d ? d.indexOf(e) < 0 && (a[e] = c.Util.getSpanValue(b[e])) : a[e] = c.Util.getSpanValue(b[e]));
            return a;
        },
        setSpanValue: function(a, b, d) {
            return a instanceof c.Span ? a : b ? d ? new c.Span(a, b, d) : new c.Span(a, b) : new c.Span(a);
        },
        getSpanValue: function(a) {
            return a instanceof c.Span ? a.getValue() : a;
        },
        inherits: function(a, b) {
            a._super_ = b;
            if (Object.create) a.prototype = Object.create(b.prototype, {
                constructor: {
                    value: b
                }
            }); else {
                var c = function() {};
                c.prototype = b.prototype, a.prototype = new c(), a.prototype.constructor = a;
            }
        },
        getImageData: function(a, b, c) {
            a.drawImage(b, c.x, c.y);
            var d = a.getImageData(c.x, c.y, c.width, c.height);
            a.clearRect(c.x, c.y, c.width, c.height);
            return d;
        },
        getImage: function(a, b, c, d) {
            typeof a == "string" ? this.loadAndSetImage(a, b, c, d) : typeof a == "object" ? this.loadAndSetImage(a.src, b, c, d) : a instanceof Image && this.loadedImage(a.src, b, c, d, a);
        },
        loadedImage: function(a, b, d, e, f) {
            b.target = f, b.transform.src = a, c.TextureBuffer[a] || (c.TextureBuffer[a] = b.target);
            if (d) if (c.TextureCanvasBuffer[a]) b.transform.canvas = c.TextureCanvasBuffer[a]; else {
                var g = c.WebGLUtil.nhpot(b.target.width), h = c.WebGLUtil.nhpot(b.target.height);
                b.transform.canvas = c.DomUtil.createCanvas("canvas" + a, g, h);
                var i = b.transform.canvas.getContext("2d");
                i.drawImage(b.target, 0, 0, b.target.width, b.target.height), c.TextureCanvasBuffer[a] = b.transform.canvas;
            }
            e && e(b);
        },
        loadAndSetImage: function(a, b, d, e) {
            if (c.TextureBuffer[a]) this.loadedImage(a, b, d, e, c.TextureBuffer[a]); else {
                var f = this, g = new Image();
                g.onload = function(c) {
                    f.loadedImage(a, b, d, e, c.target);
                }, g.src = a;
            }
        },
        hexToRGB: function(a) {
            var b = a.charAt(0) == "#" ? a.substring(1, 7) : a, c = parseInt(b.substring(0, 2), 16), d = parseInt(b.substring(2, 4), 16), e = parseInt(b.substring(4, 6), 16);
            return {
                r: c,
                g: d,
                b: e
            };
        },
        rgbToHex: function(a) {
            return "rgb(" + a.r + ", " + a.g + ", " + a.b + ")";
        }
    };
    c.Util = g;
    var h = h || {
        ipot: function(a) {
            return (a & a - 1) == 0;
        },
        nhpot: function(a) {
            --a;
            for (var b = 1; b < 32; b <<= 1) a = a | a >> b;
            return a + 1;
        },
        makeTranslation: function(a, b) {
            return [ 1, 0, 0, 0, 1, 0, a, b, 1 ];
        },
        makeRotation: function(a) {
            var b = Math.cos(a), c = Math.sin(a);
            return [ b, -c, 0, c, b, 0, 0, 0, 1 ];
        },
        makeScale: function(a, b) {
            return [ a, 0, 0, 0, b, 0, 0, 0, 1 ];
        },
        matrixMultiply: function(a, b) {
            var c = a[0], d = a[1], e = a[2], f = a[3], g = a[4], h = a[5], i = a[6], j = a[7], k = a[8], l = b[0], m = b[1], n = b[2], o = b[3], p = b[4], q = b[5], r = b[6], s = b[7], t = b[8];
            return [ c * l + d * o + e * r, c * m + d * p + e * s, c * n + d * q + e * t, f * l + g * o + h * r, f * m + g * p + h * s, f * n + g * q + h * t, i * l + j * o + k * r, i * m + j * p + k * s, i * n + j * q + k * t ];
        }
    };
    c.WebGLUtil = h;
    var i = i || {
        createCanvas: function(a, b, c, d) {
            var e = document.createElement("canvas"), f = d ? d : "absolute";
            e.id = a, e.width = b, e.height = c, e.style.position = f, e.style.opacity = 0, 
            this.transformDom(e, -500, -500, 0, 0);
            return e;
        },
        transformDom: function(a, b, c, d, e) {
            a.style.WebkitTransform = "translate(" + b + "px, " + c + "px) " + "scale(" + d + ") " + "rotate(" + e + "deg)", 
            a.style.MozTransform = "translate(" + b + "px, " + c + "px) " + "scale(" + d + ") " + "rotate(" + e + "deg)", 
            a.style.OTransform = "translate(" + b + "px, " + c + "px) " + "scale(" + d + ") " + "rotate(" + e + "deg)", 
            a.style.msTransform = "translate(" + b + "px, " + c + "px) " + "scale(" + d + ") " + "rotate(" + e + "deg)", 
            a.style.transform = "translate(" + b + "px, " + c + "px) " + "scale(" + d + ") " + "rotate(" + e + "deg)";
        }
    };
    c.DomUtil = i, j.prototype.set = function(a, b) {
        b == 0 ? c.Mat3.set(a, this.mats[0]) : c.Mat3.multiply(this.mats[b - 1], a, this.mats[b]), 
        this.size = Math.max(this.size, b + 1);
    }, j.prototype.push = function(a) {
        this.size == 0 ? c.Mat3.set(a, this.mats[0]) : c.Mat3.multiply(this.mats[this.size - 1], a, this.mats[this.size]), 
        this.size++;
    }, j.prototype.pop = function() {
        this.size > 0 && this.size--;
    }, j.prototype.top = function() {
        return this.mats[this.size - 1];
    }, c.MStack = j, k.ID = 0, k.prototype = {
        getDirection: function() {
            return Math.atan2(this.v.x, -this.v.y) * (180 / Math.PI);
        },
        reset: function(a) {
            this.life = Infinity, this.age = 0, this.energy = 1, this.dead = !1, this.sleep = !1, 
            this.target = null, this.sprite = null, this.parent = null, this.mass = 1, this.radius = 10, 
            this.alpha = 1, this.scale = 1, this.rotation = 0, this.color = null, this.easing = c.ease.setEasingByName(c.easeLinear), 
            a ? (this.transform = {}, this.p = new c.Vector2D(), this.v = new c.Vector2D(), 
            this.a = new c.Vector2D(), this.old = {
                p: new c.Vector2D(),
                v: new c.Vector2D(),
                a: new c.Vector2D()
            }, this.behaviours = []) : (c.Util.destroyObject(this.transform), this.p.set(0, 0), 
            this.v.set(0, 0), this.a.set(0, 0), this.old.p.set(0, 0), this.old.v.set(0, 0), 
            this.old.a.set(0, 0), this.removeAllBehaviours()), this.transform.rgb = {
                r: 255,
                g: 255,
                b: 255
            };
            return this;
        },
        update: function(a, b) {
            if (!this.sleep) {
                this.age += a;
                var c = this.behaviours.length, d;
                for (d = 0; d < c; d++) this.behaviours[d] && this.behaviours[d].applyBehaviour(this, a, b);
            }
            if (this.age >= this.life) this.destory(); else {
                var e = this.easing(this.age / this.life);
                this.energy = Math.max(1 - e, 0);
            }
        },
        addBehaviour: function(a) {
            this.behaviours.push(a), a.hasOwnProperty("parents") && a.parents.push(this), a.initialize(this);
        },
        addBehaviours: function(a) {
            var b = a.length, c;
            for (c = 0; c < b; c++) this.addBehaviour(a[c]);
        },
        removeBehaviour: function(a) {
            var b = this.behaviours.indexOf(a);
            if (b > -1) {
                var a = this.behaviours.splice(b, 1);
                a.parents = null;
            }
        },
        removeAllBehaviours: function() {
            c.Util.destroyArray(this.behaviours);
        },
        destory: function() {
            this.removeAllBehaviours(), this.energy = 0, this.dead = !0, this.parent = null;
        }
    }, c.Particle = k, l.prototype = {
        create: function(a) {
            return a ? new newTypeParticle() : new c.Particle();
        },
        getCount: function() {
            return this.poolList.length;
        },
        add: function() {
            return this.poolList.push(this.create());
        },
        get: function() {
            return this.poolList.length === 0 ? this.create() : this.poolList.pop().reset();
        },
        set: function(a) {
            if (this.poolList.length < c.POOL_MAX) return this.poolList.push(a);
        },
        release: function() {
            for (var a = 0; a < this.poolList.length; a++) this.poolList[a].destory && this.poolList[a].destory(), 
            delete this.poolList[a];
            this.poolList = [];
        }
    }, c.ParticlePool = l;
    var m = {
        randomAToB: function(a, b, c) {
            return c ? Math.floor(Math.random() * (b - a)) + a : a + Math.random() * (b - a);
        },
        randomFloating: function(a, b, c) {
            return m.randomAToB(a - b, a + b, c);
        },
        randomZone: function(a) {},
        degreeTransform: function(a) {
            return a * Math.PI / 180;
        },
        toColor16: function(a) {
            return "#" + a.toString(16);
        },
        randomColor: function() {
            return "#" + ("00000" + (Math.random() * 16777216 << 0).toString(16)).slice(-6);
        }
    };
    c.MathUtils = m;
    var o = function(a) {
        this.type = c.Util.initValue(a, c.EULER);
    };
    o.prototype = {
        integrate: function(a, b, c) {
            this.eulerIntegrate(a, b, c);
        },
        eulerIntegrate: function(a, b, c) {
            a.sleep || (a.old.p.copy(a.p), a.old.v.copy(a.v), a.a.multiplyScalar(1 / a.mass), 
            a.v.add(a.a.multiplyScalar(b)), a.p.add(a.old.v.multiplyScalar(b)), c && a.v.multiplyScalar(c), 
            a.a.clear());
        }
    }, c.NumericalIntegration = o;
    var p = function(a, b) {
        this.x = a || 0, this.y = b || 0;
    };
    p.prototype = {
        set: function(a, b) {
            this.x = a, this.y = b;
            return this;
        },
        setX: function(a) {
            this.x = a;
            return this;
        },
        setY: function(a) {
            this.y = a;
            return this;
        },
        setComponent: function(a, b) {
            switch (a) {
              case 0:
                this.x = b;
                break;

              case 1:
                this.y = b;
                break;

              default:
                throw new Error("index is out of range: " + a);
            }
        },
        getGradient: function() {
            if (this.x != 0) return Math.atan2(this.y, this.x);
            if (this.y > 0) return Math.PI / 2;
            if (this.y < 0) return -Math.PI / 2;
        },
        getComponent: function(a) {
            switch (a) {
              case 0:
                return this.x;

              case 1:
                return this.y;

              default:
                throw new Error("index is out of range: " + a);
            }
        },
        copy: function(a) {
            this.x = a.x, this.y = a.y;
            return this;
        },
        add: function(a, c) {
            if (c !== b) return this.addVectors(a, c);
            this.x += a.x, this.y += a.y;
            return this;
        },
        addXY: function(a, b) {
            this.x += a, this.y += b;
            return this;
        },
        addVectors: function(a, b) {
            this.x = a.x + b.x, this.y = a.y + b.y;
            return this;
        },
        addScalar: function(a) {
            this.x += a, this.y += a;
            return this;
        },
        sub: function(a, c) {
            if (c !== b) return this.subVectors(a, c);
            this.x -= a.x, this.y -= a.y;
            return this;
        },
        subVectors: function(a, b) {
            this.x = a.x - b.x, this.y = a.y - b.y;
            return this;
        },
        multiplyScalar: function(a) {
            this.x *= a, this.y *= a;
            return this;
        },
        divideScalar: function(a) {
            a !== 0 ? (this.x /= a, this.y /= a) : this.set(0, 0);
            return this;
        },
        min: function(a) {
            this.x > a.x && (this.x = a.x), this.y > a.y && (this.y = a.y);
            return this;
        },
        max: function(a) {
            this.x < a.x && (this.x = a.x), this.y < a.y && (this.y = a.y);
            return this;
        },
        clamp: function(a, b) {
            this.x < a.x ? this.x = a.x : this.x > b.x && (this.x = b.x), this.y < a.y ? this.y = a.y : this.y > b.y && (this.y = b.y);
            return this;
        },
        negate: function() {
            return this.multiplyScalar(-1);
        },
        dot: function(a) {
            return this.x * a.x + this.y * a.y;
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y;
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        normalize: function() {
            return this.divideScalar(this.length());
        },
        distanceTo: function(a) {
            return Math.sqrt(this.distanceToSquared(a));
        },
        rotate: function(a) {
            var b = this.x, c = this.y;
            this.x = b * Math.cos(a) + c * Math.sin(a), this.y = -b * Math.sin(a) + c * Math.cos(a);
            return this;
        },
        distanceToSquared: function(a) {
            var b = this.x - a.x, c = this.y - a.y;
            return b * b + c * c;
        },
        setLength: function(a) {
            var b = this.length();
            b !== 0 && a !== b && this.multiplyScalar(a / b);
            return this;
        },
        lerp: function(a, b) {
            this.x += (a.x - this.x) * b, this.y += (a.y - this.y) * b;
            return this;
        },
        equals: function(a) {
            return a.x === this.x && a.y === this.y;
        },
        toArray: function() {
            return [ this.x, this.y ];
        },
        clear: function() {
            this.x = 0, this.y = 0;
            return this;
        },
        clone: function() {
            return new c.Vector2D(this.x, this.y);
        }
    }, c.Vector2D = p;
    var q = function(a, b) {
        this.r = Math.abs(a) || 0, this.tha = b || 0;
    };
    q.prototype = {
        set: function(a, b) {
            this.r = a, this.tha = b;
            return this;
        },
        setR: function(a) {
            this.r = a;
            return this;
        },
        setTha: function(a) {
            this.tha = a;
            return this;
        },
        copy: function(a) {
            this.r = a.r, this.tha = a.tha;
            return this;
        },
        toVector: function() {
            return new c.Vector2D(this.getX(), this.getY());
        },
        getX: function() {
            return this.r * Math.sin(this.tha);
        },
        getY: function() {
            return -this.r * Math.cos(this.tha);
        },
        normalize: function() {
            this.r = 1;
            return this;
        },
        equals: function(a) {
            return a.r === this.r && a.tha === this.tha;
        },
        toArray: function() {
            return [ this.r, this.tha ];
        },
        clear: function() {
            this.r = 0, this.tha = 0;
            return this;
        },
        clone: function() {
            return new c.Polar2D(this.r, this.tha);
        }
    }, c.Polar2D = q, r.prototype = {
        getValue: function(a) {
            return this.isArray ? this.a[Math.floor(this.a.length * Math.random())] : this.center ? c.MathUtils.randomFloating(this.a, this.b, a) : c.MathUtils.randomAToB(this.a, this.b, a);
        }
    }, c.Span = r, c.getSpan = function(a, b, d) {
        return new c.Span(a, b, d);
    }, c.Util.inherits(s, c.Span), s.prototype.getValue = function() {
        var a = this.colorArr[Math.floor(this.colorArr.length * Math.random())];
        return a == "random" || a == "Random" ? c.MathUtils.randomColor() : a;
    }, c.ColorSpan = s, t.prototype = {
        contains: function(a, b) {
            return a <= this.right && a >= this.x && b <= this.bottom && b >= this.y ? !0 : !1;
        }
    }, c.Rectangle = t;
    var u = u || {
        create: function(a) {
            var b = new Float32Array(9);
            a && this.set(a, b);
            return b;
        },
        set: function(a, b) {
            for (var c = 0; c < 9; c++) b[c] = a[c];
            return b;
        },
        multiply: function(a, b, c) {
            var d = a[0], e = a[1], f = a[2], g = a[3], h = a[4], i = a[6], j = a[7], k = b[0], l = b[1], m = b[2], n = b[3], o = b[4], p = b[6], q = b[7];
            c[0] = k * d + l * g, c[1] = k * e + l * h, c[2] = f * m, c[3] = n * d + o * g, 
            c[4] = n * e + o * h, c[6] = p * d + q * g + i, c[7] = p * e + q * h + j;
            return c;
        },
        inverse: function(a, b) {
            var c = a[0], d = a[1], e = a[3], f = a[4], g = a[6], h = a[7], i = f, j = -e, k = h * e - f * g, l = c * i + d * j, m;
            m = 1 / l, b[0] = i * m, b[1] = -d * m, b[3] = j * m, b[4] = c * m, b[6] = k * m, 
            b[7] = (-h * c + d * g) * m;
            return b;
        },
        multiplyVec2: function(a, b, c) {
            var d = b[0], e = b[1];
            c[0] = d * a[0] + e * a[3] + a[6], c[1] = d * a[1] + e * a[4] + a[7];
            return c;
        }
    };
    c.Mat3 = u, v.id = 0, v.prototype = {
        reset: function(a, b) {
            this.life = c.Util.initValue(a, Infinity), this.easing = c.Util.initValue(b, c.ease.setEasingByName(c.easeLinear));
        },
        normalizeForce: function(a) {
            return a.multiplyScalar(c.MEASURE);
        },
        normalizeValue: function(a) {
            return a * c.MEASURE;
        },
        initialize: function(a) {},
        applyBehaviour: function(a, b, c) {
            this.age += b;
            if (this.age >= this.life || this.dead) this.energy = 0, this.dead = !0, this.destory(); else {
                var d = this.easing(a.age / a.life);
                this.energy = Math.max(1 - d, 0);
            }
        },
        destory: function() {
            var a, b = this.parents.length, c;
            for (c = 0; c < b; c++) this.parents[c].removeBehaviour(this);
            this.parents = [];
        }
    }, c.Behaviour = v, w.prototype = {
        init: function() {
            this.startTime = 0, this.nextTime = this.timePan.getValue();
        },
        getValue: function(a) {
            this.startTime += a;
            if (this.startTime >= this.nextTime) {
                this.startTime = 0, this.nextTime = this.timePan.getValue();
                return this.numPan.b == 1 ? this.numPan.getValue(!1) > .5 ? 1 : 0 : this.numPan.getValue(!0);
            }
            return 0;
        }
    }, c.Rate = w, x.prototype.reset = function() {}, x.prototype.init = function(a, b) {
        b ? this.initialize(b) : this.initialize(a);
    }, x.prototype.initialize = function(a) {}, c.Initialize = x;
    var y = {
        initialize: function(a, b, d) {
            var e = d.length, f;
            for (f = 0; f < e; f++) d[f] instanceof c.Initialize ? d[f].init(a, b) : c.InitializeUtil.init(a, b, d[f]);
            c.InitializeUtil.bindEmitter(a, b);
        },
        init: function(a, b, d) {
            c.Util.setPrototypeByObject(b, d), c.Util.setVector2DByObject(b, d);
        },
        bindEmitter: function(a, b) {
            a.bindEmitter && (b.p.add(a.p), b.v.add(a.v), b.a.add(a.a), b.v.rotate(c.MathUtils.degreeTransform(a.rotation)));
        }
    };
    c.InitializeUtil = y, c.Util.inherits(z, c.Initialize), z.prototype.initialize = function(a) {
        this.lifePan.a == Infinity ? a.life = Infinity : a.life = this.lifePan.getValue();
    }, c.Life = z, c.Util.inherits(A, c.Initialize), A.prototype.reset = function(a) {
        this.zone = c.Util.initValue(a, new c.PointZone());
    }, A.prototype.initialize = function(a) {
        this.zone.getPosition(), a.p.x = this.zone.vector.x, a.p.y = this.zone.vector.y;
    }, c.Position = A, c.P = A, c.Util.inherits(B, c.Initialize), B.prototype.reset = function(a, b, d) {
        this.rPan = c.Util.setSpanValue(a), this.thaPan = c.Util.setSpanValue(b), this.type = c.Util.initValue(d, "vector");
    }, B.prototype.normalizeVelocity = function(a) {
        return a * c.MEASURE;
    }, B.prototype.initialize = function(a) {
        if (this.type == "p" || this.type == "P" || this.type == "polar") {
            var b = new c.Polar2D(this.normalizeVelocity(this.rPan.getValue()), this.thaPan.getValue() * Math.PI / 180);
            a.v.x = b.getX(), a.v.y = b.getY();
        } else a.v.x = this.normalizeVelocity(this.rPan.getValue()), a.v.y = this.normalizeVelocity(this.thaPan.getValue());
    }, c.Velocity = B, c.V = B, c.Util.inherits(C, c.Initialize), C.prototype.initialize = function(a) {
        a.mass = this.massPan.getValue();
    }, c.Mass = C, c.Util.inherits(D, c.Initialize), D.prototype.reset = function(a, b, d) {
        this.radius = c.Util.setSpanValue(a, b, d);
    }, D.prototype.initialize = function(a) {
        a.radius = this.radius.getValue(), a.transform.oldRadius = a.radius;
    }, c.Radius = D, c.Util.inherits(E, c.Initialize), E.prototype.initialize = function(a) {
        var b = this.image.getValue();
        typeof b == "string" ? a.target = {
            width: this.w,
            height: this.h,
            src: b
        } : a.target = b;
    }, E.prototype.setSpanValue = function(a) {
        return a instanceof c.ColorSpan ? a : new c.ColorSpan(a);
    }, c.ImageTarget = E, c.Util.inherits(F, c.Behaviour), F.prototype.reset = function(a, b, d, e) {
        this.force = this.normalizeForce(new c.Vector2D(a, b)), d && F._super_.prototype.reset.call(this, d, e);
    }, F.prototype.applyBehaviour = function(a, b, c) {
        F._super_.prototype.applyBehaviour.call(this, a, b, c), a.a.add(this.force);
    }, c.Force = F, c.F = F, c.Util.inherits(G, c.Behaviour), G.prototype.reset = function(a, b, d, e, f) {
        this.targetPosition = c.Util.initValue(a, new c.Vector2D()), this.radius = c.Util.initValue(d, 1e3), 
        this.force = c.Util.initValue(this.normalizeValue(b), 100), this.radiusSq = this.radius * this.radius, 
        this.attractionForce = new c.Vector2D(), this.lengthSq = 0, e && G._super_.prototype.reset.call(this, e, f);
    }, G.prototype.applyBehaviour = function(a, b, c) {
        G._super_.prototype.applyBehaviour.call(this, a, b, c), this.attractionForce.copy(this.targetPosition), 
        this.attractionForce.sub(a.p), this.lengthSq = this.attractionForce.lengthSq(), 
        this.lengthSq > 4e-6 && this.lengthSq < this.radiusSq && (this.attractionForce.normalize(), 
        this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq), this.attractionForce.multiplyScalar(this.force), 
        a.a.add(this.attractionForce));
    }, c.Attraction = G, c.Util.inherits(H, c.Behaviour), H.prototype.reset = function(a, b, d, e, f) {
        this.panFoce = new c.Vector2D(a, b), this.panFoce = this.normalizeForce(this.panFoce), 
        this.delay = d, e && H._super_.prototype.reset.call(this, e, f);
    }, H.prototype.applyBehaviour = function(a, b, d) {
        H._super_.prototype.applyBehaviour.call(this, a, b, d), this.time += b, this.time >= this.delay && (a.a.addXY(c.MathUtils.randomAToB(-this.panFoce.x, this.panFoce.x), c.MathUtils.randomAToB(-this.panFoce.y, this.panFoce.y)), 
        this.time = 0);
    }, c.RandomDrift = H, c.Util.inherits(I, c.Attraction), I.prototype.reset = function(a, b, c, d, e) {
        I._super_.prototype.reset.call(this, a, b, c, d, e), this.force *= -1;
    }, c.Repulsion = I, c.Util.inherits(J, c.Force), J.prototype.reset = function(a, b, c) {
        J._super_.prototype.reset.call(this, 0, a, b, c);
    }, c.Gravity = J, c.G = J, c.Util.inherits(K, c.Behaviour), K.prototype.reset = function(a, b, d, e, f) {
        this.emitter = c.Util.initValue(a, null), this.mass = c.Util.initValue(b, !0), this.callback = c.Util.initValue(d, null), 
        this.collisionPool = [], this.delta = new c.Vector2D(), e && K._super_.prototype.reset.call(this, e, f);
    }, K.prototype.applyBehaviour = function(a, b, c) {
        var d = this.emitter ? this.emitter.particles.slice(c) : this.pool.slice(c), e, f, g, h, i, j = d.length;
        for (var k = 0; k < j; k++) e = d[k], e !== a && (this.delta.copy(e.p), this.delta.sub(a.p), 
        f = this.delta.lengthSq(), distance = a.radius + e.radius, f <= distance * distance && (g = distance - Math.sqrt(f), 
        g += .5, totalMass = a.mass + e.mass, h = this.mass ? e.mass / totalMass : .5, i = this.mass ? a.mass / totalMass : .5, 
        a.p.add(this.delta.clone().normalize().multiplyScalar(g * -h)), e.p.add(this.delta.normalize().multiplyScalar(g * i)), 
        this.callback && this.callback(a, e)));
    }, c.Collision = K, c.Util.inherits(L, c.Behaviour), L.prototype.reset = function(a, b, d, e) {
        this.zone = a, this.zone.crossType = c.Util.initValue(b, "dead"), d && L._super_.prototype.reset.call(this, d, e);
    }, L.prototype.applyBehaviour = function(a, b, c) {
        L._super_.prototype.applyBehaviour.call(this, a, b, c), this.zone.crossing(a);
    }, c.CrossZone = L, c.Util.inherits(M, c.Behaviour), M.prototype.reset = function(a, d, e, f) {
        d == null || d == b ? this.same = !0 : this.same = !1, this.a = c.Util.setSpanValue(c.Util.initValue(a, 1)), 
        this.b = c.Util.setSpanValue(d), e && M._super_.prototype.reset.call(this, e, f);
    }, M.prototype.initialize = function(a) {
        a.transform.alphaA = this.a.getValue(), this.same ? a.transform.alphaB = a.transform.alphaA : a.transform.alphaB = this.b.getValue();
    }, M.prototype.applyBehaviour = function(a, b, c) {
        M._super_.prototype.applyBehaviour.call(this, a, b, c), a.alpha = a.transform.alphaB + (a.transform.alphaA - a.transform.alphaB) * this.energy, 
        a.alpha < .001 && (a.alpha = 0);
    }, c.Alpha = M, c.Util.inherits(N, c.Behaviour), N.prototype.reset = function(a, d, e, f) {
        d == null || d == b ? this.same = !0 : this.same = !1, this.a = c.Util.setSpanValue(c.Util.initValue(a, 1)), 
        this.b = c.Util.setSpanValue(d), e && N._super_.prototype.reset.call(this, e, f);
    }, N.prototype.initialize = function(a) {
        a.transform.scaleA = this.a.getValue(), a.transform.oldRadius = a.radius, this.same ? a.transform.scaleB = a.transform.scaleA : a.transform.scaleB = this.b.getValue();
    }, N.prototype.applyBehaviour = function(a, b, c) {
        N._super_.prototype.applyBehaviour.call(this, a, b, c), a.scale = a.transform.scaleB + (a.transform.scaleA - a.transform.scaleB) * this.energy, 
        a.scale < 1e-4 && (a.scale = 0), a.radius = a.transform.oldRadius * a.scale;
    }, c.Scale = N, c.Util.inherits(O, c.Behaviour), O.prototype.reset = function(a, d, e, f, g) {
        d == null || d == b ? this.same = !0 : this.same = !1, this.a = c.Util.setSpanValue(c.Util.initValue(a, "Velocity")), 
        this.b = c.Util.setSpanValue(c.Util.initValue(d, 0)), this.style = c.Util.initValue(e, "to"), 
        f && O._super_.prototype.reset.call(this, f, g);
    }, O.prototype.initialize = function(a) {
        a.rotation = this.a.getValue(), a.transform.rotationA = this.a.getValue(), this.same || (a.transform.rotationB = this.b.getValue());
    }, O.prototype.applyBehaviour = function(a, b, c) {
        O._super_.prototype.applyBehaviour.call(this, a, b, c);
        if (!this.same) this.style == "to" || this.style == "TO" || this.style == "_" ? a.rotation += a.transform.rotationB + (a.transform.rotationA - a.transform.rotationB) * this.energy : a.rotation += a.transform.rotationB; else if (this.a.a == "V" || this.a.a == "Velocity" || this.a.a == "v") a.rotation = a.getDirection();
    }, c.Rotate = O, c.Util.inherits(P, c.Behaviour), P.prototype.reset = function(a, b, c, d) {
        this.color1 = this.setSpanValue(a), this.color2 = this.setSpanValue(b), c && P._super_.prototype.reset.call(this, c, d);
    }, P.prototype.initialize = function(a) {
        a.color = this.color1.getValue(), a.transform.beginRGB = c.Util.hexToRGB(a.color), 
        this.color2 && (a.transform.endRGB = c.Util.hexToRGB(this.color2.getValue()));
    }, P.prototype.applyBehaviour = function(a, b, c) {
        this.color2 ? (P._super_.prototype.applyBehaviour.call(this, a, b, c), a.transform.rgb.r = a.transform.endRGB.r + (a.transform.beginRGB.r - a.transform.endRGB.r) * this.energy, 
        a.transform.rgb.g = a.transform.endRGB.g + (a.transform.beginRGB.g - a.transform.endRGB.g) * this.energy, 
        a.transform.rgb.b = a.transform.endRGB.b + (a.transform.beginRGB.b - a.transform.endRGB.b) * this.energy, 
        a.transform.rgb.r = parseInt(a.transform.rgb.r, 10), a.transform.rgb.g = parseInt(a.transform.rgb.g, 10), 
        a.transform.rgb.b = parseInt(a.transform.rgb.b, 10)) : (a.transform.rgb.r = a.transform.beginRGB.r, 
        a.transform.rgb.g = a.transform.beginRGB.g, a.transform.rgb.b = a.transform.beginRGB.b);
    }, P.prototype.setSpanValue = function(a) {
        return a ? a instanceof c.ColorSpan ? a : new c.ColorSpan(a) : null;
    }, c.Color = P, c.Util.inherits(Q, c.Behaviour), Q.prototype.reset = function(a, b, d, e) {
        this.distanceVec = new c.Vector2D(), this.centerPoint = c.Util.initValue(a, new c.Vector2D()), 
        this.force = c.Util.initValue(this.normalizeValue(b), 100), d && Q._super_.prototype.reset.call(this, d, e);
    }, Q.prototype.initialize = function(a) {}, Q.prototype.applyBehaviour = function(a, b, c) {
        this.distanceVec.set(this.centerPoint.x - a.p.x, this.centerPoint.y - a.p.y);
        var d = this.distanceVec.lengthSq();
        if (d != 0) {
            var e = this.distanceVec.length(), f = this.force * b / (d * e);
            a.v.x += f * this.distanceVec.x, a.v.y += f * this.distanceVec.y;
        }
    }, c.GravityWell = Q, R.ID = 0, c.Util.inherits(R, c.Particle), c.EventDispatcher.initialize(R.prototype), 
    R.prototype.emit = function(a, b) {
        this.emitTime = 0, this.emitTotalTimes = c.Util.initValue(a, Infinity), b == !0 || b == "life" || b == "destroy" ? a == "once" ? this.life = 1 : this.life = this.emitTotalTimes : isNaN(b) || (this.life = b), 
        this.rate.init();
    }, R.prototype.stopEmit = function() {
        this.emitTotalTimes = -1, this.emitTime = 0;
    }, R.prototype.removeAllParticles = function() {
        for (var a = 0; a < this.particles.length; a++) this.particles[a].dead = !0;
    }, R.prototype.createParticle = function(a, b) {
        var d = c.pool.get();
        this.setupParticle(d, a, b), this.dispatchEvent(new c.Event({
            type: c.PARTICLE_CREATED,
            particle: d
        }));
        return d;
    }, R.prototype.addSelfInitialize = function(a) {
        a.init ? a.init(this) : this.initAll();
    }, R.prototype.addInitialize = function() {
        var a = arguments.length, b;
        for (b = 0; b < a; b++) this.initializes.push(arguments[b]);
    }, R.prototype.removeInitialize = function(a) {
        var b = this.initializes.indexOf(a);
        b > -1 && this.initializes.splice(b, 1);
    }, R.prototype.removeInitializers = function() {
        c.Util.destroyArray(this.initializes);
    }, R.prototype.addBehaviour = function() {
        var a = arguments.length, b;
        for (b = 0; b < a; b++) this.behaviours.push(arguments[b]), arguments[b].hasOwnProperty("parents") && arguments[b].parents.push(this);
    }, R.prototype.removeBehaviour = function(a) {
        var b = this.behaviours.indexOf(a);
        b > -1 && this.behaviours.splice(b, 1);
    }, R.prototype.removeAllBehaviours = function() {
        c.Util.destroyArray(this.behaviours);
    }, R.prototype.integrate = function(a) {
        var b = 1 - this.damping;
        c.integrator.integrate(this, a, b);
        var d = this.particles.length, e;
        for (e = 0; e < d; e++) {
            var f = this.particles[e];
            f.update(a, e), c.integrator.integrate(f, a, b), this.dispatchEvent(new c.Event({
                type: c.PARTICLE_UPDATE,
                particle: f
            }));
        }
    }, R.prototype.emitting = function(a) {
        if (this.emitTotalTimes == "once") {
            var b = this.rate.getValue(99999), c;
            for (c = 0; c < b; c++) this.createParticle();
            this.emitTotalTimes = "none";
        } else if (!isNaN(this.emitTotalTimes)) {
            this.emitTime += a;
            if (this.emitTime < this.emitTotalTimes) {
                var b = this.rate.getValue(a), c;
                for (c = 0; c < b; c++) this.createParticle();
            }
        }
    }, R.prototype.update = function(a) {
        this.age += a, (this.age >= this.life || this.dead) && this.destroy(), this.emitting(a), 
        this.integrate(a);
        var b, d = this.particles.length, e;
        for (e = d - 1; e >= 0; e--) b = this.particles[e], b.dead && (c.pool.set(b), this.particles.splice(e, 1), 
        this.dispatchEvent(new c.Event({
            type: c.PARTICLE_DEAD,
            particle: b
        })));
    }, R.prototype.setupParticle = function(a, b, d) {
        var e = this.initializes, f = this.behaviours;
        b && (b instanceof Array ? e = b : e = [ b ]), d && (d instanceof Array ? f = d : f = [ d ]), 
        c.InitializeUtil.initialize(this, a, e), a.addBehaviours(f), a.parent = this, this.particles.push(a);
    }, R.prototype.destroy = function() {
        this.dead = !0, this.emitTotalTimes = -1, this.particles.length == 0 && (this.removeInitializers(), 
        this.removeAllBehaviours(), this.parent && this.parent.removeEmitter(this));
    }, c.Emitter = R, c.Util.inherits(S, c.Emitter), S.prototype.addSelfBehaviour = function() {
        var a = arguments.length, b;
        for (b = 0; b < a; b++) this.selfBehaviours.push(arguments[b]);
    }, S.prototype.removeSelfBehaviour = function(a) {
        var b = this.selfBehaviours.indexOf(a);
        b > -1 && this.selfBehaviours.splice(b, 1);
    }, S.prototype.update = function(a) {
        S._super_.prototype.update.call(this, a);
        if (!this.sleep) {
            var b = this.selfBehaviours.length, c;
            for (c = 0; c < b; c++) this.selfBehaviours[c].applyBehaviour(this, a, c);
        }
    }, c.BehaviourEmitter = S, c.Util.inherits(T, c.Emitter), T.prototype.initEventHandler = function() {
        var a = this;
        this.mousemoveHandler = function(b) {
            a.mousemove.call(a, b);
        }, this.mousedownHandler = function(b) {
            a.mousedown.call(a, b);
        }, this.mouseupHandler = function(b) {
            a.mouseup.call(a, b);
        }, this.mouseTarget.addEventListener("mousemove", this.mousemoveHandler, !1);
    }, T.prototype.emit = function() {
        this._allowEmitting = !0;
    }, T.prototype.stopEmit = function() {
        this._allowEmitting = !1;
    }, T.prototype.mousemove = function(a) {
        if (a.layerX || a.layerX == 0) this.p.x += (a.layerX - this.p.x) * this.ease, this.p.y += (a.layerY - this.p.y) * this.ease; else if (a.offsetX || a.offsetX == 0) this.p.x += (a.offsetX - this.p.x) * this.ease, 
        this.p.y += (a.offsetY - this.p.y) * this.ease;
        this._allowEmitting && T._super_.prototype.emit.call(this, "once");
    }, T.prototype.destroy = function() {
        T._super_.prototype.destroy.call(this), this.mouseTarget.removeEventListener("mousemove", this.mousemoveHandler, !1);
    }, c.FollowEmitter = T;
    var U = U || {
        easeLinear: function(a) {
            return a;
        },
        easeInQuad: function(a) {
            return Math.pow(a, 2);
        },
        easeOutQuad: function(a) {
            return -(Math.pow(a - 1, 2) - 1);
        },
        easeInOutQuad: function(a) {
            if ((a /= .5) < 1) return .5 * Math.pow(a, 2);
            return -.5 * ((a -= 2) * a - 2);
        },
        easeInCubic: function(a) {
            return Math.pow(a, 3);
        },
        easeOutCubic: function(a) {
            return Math.pow(a - 1, 3) + 1;
        },
        easeInOutCubic: function(a) {
            if ((a /= .5) < 1) return .5 * Math.pow(a, 3);
            return .5 * (Math.pow(a - 2, 3) + 2);
        },
        easeInQuart: function(a) {
            return Math.pow(a, 4);
        },
        easeOutQuart: function(a) {
            return -(Math.pow(a - 1, 4) - 1);
        },
        easeInOutQuart: function(a) {
            if ((a /= .5) < 1) return .5 * Math.pow(a, 4);
            return -.5 * ((a -= 2) * Math.pow(a, 3) - 2);
        },
        easeInSine: function(a) {
            return -Math.cos(a * (Math.PI / 2)) + 1;
        },
        easeOutSine: function(a) {
            return Math.sin(a * (Math.PI / 2));
        },
        easeInOutSine: function(a) {
            return -.5 * (Math.cos(Math.PI * a) - 1);
        },
        easeInExpo: function(a) {
            return a === 0 ? 0 : Math.pow(2, 10 * (a - 1));
        },
        easeOutExpo: function(a) {
            return a === 1 ? 1 : -Math.pow(2, -10 * a) + 1;
        },
        easeInOutExpo: function(a) {
            if (a === 0) return 0;
            if (a === 1) return 1;
            if ((a /= .5) < 1) return .5 * Math.pow(2, 10 * (a - 1));
            return .5 * (-Math.pow(2, -10 * --a) + 2);
        },
        easeInCirc: function(a) {
            return -(Math.sqrt(1 - a * a) - 1);
        },
        easeOutCirc: function(a) {
            return Math.sqrt(1 - Math.pow(a - 1, 2));
        },
        easeInOutCirc: function(a) {
            if ((a /= .5) < 1) return -.5 * (Math.sqrt(1 - a * a) - 1);
            return .5 * (Math.sqrt(1 - (a -= 2) * a) + 1);
        },
        easeInBack: function(a) {
            var b = 1.70158;
            return a * a * ((b + 1) * a - b);
        },
        easeOutBack: function(a) {
            var b = 1.70158;
            return (a = a - 1) * a * ((b + 1) * a + b) + 1;
        },
        easeInOutBack: function(a) {
            var b = 1.70158;
            if ((a /= .5) < 1) return .5 * a * a * (((b *= 1.525) + 1) * a - b);
            return .5 * ((a -= 2) * a * (((b *= 1.525) + 1) * a + b) + 2);
        },
        setEasingByName: function(a) {
            switch (a) {
              case "easeLinear":
                return c.ease.easeLinear;

              case "easeInQuad":
                return c.ease.easeInQuad;

              case "easeOutQuad":
                return c.ease.easeOutQuad;

              case "easeInOutQuad":
                return c.ease.easeInOutQuad;

              case "easeInCubic":
                return c.ease.easeInCubic;

              case "easeOutCubic":
                return c.ease.easeOutCubic;

              case "easeInOutCubic":
                return c.ease.easeInOutCubic;

              case "easeInQuart":
                return c.ease.easeInQuart;

              case "easeOutQuart":
                return c.ease.easeOutQuart;

              case "easeInOutQuart":
                return c.ease.easeInOutQuart;

              case "easeInSine":
                return c.ease.easeInSine;

              case "easeOutSine":
                return c.ease.easeOutSine;

              case "easeInOutSine":
                return c.ease.easeInOutSine;

              case "easeInExpo":
                return c.ease.easeInExpo;

              case "easeOutExpo":
                return c.ease.easeOutExpo;

              case "easeInOutExpo":
                return c.ease.easeInOutExpo;

              case "easeInCirc":
                return c.ease.easeInCirc;

              case "easeOutCirc":
                return c.ease.easeOutCirc;

              case "easeInOutCirc":
                return c.ease.easeInOutCirc;

              case "easeInBack":
                return c.ease.easeInBack;

              case "easeOutBack":
                return c.ease.easeOutBack;

              case "easeInOutBack":
                return c.ease.easeInOutBack;

              default:
                return c.ease.easeLinear;
            }
        }
    };
    c.ease = U, c.easeLinear = "easeLinear", c.easeInQuad = "easeInQuad", c.easeOutQuad = "easeOutQuad", 
    c.easeInOutQuad = "easeInOutQuad", c.easeInCubic = "easeInCubic", c.easeOutCubic = "easeOutCubic", 
    c.easeInOutCubic = "easeInOutCubic", c.easeInQuart = "easeInQuart", c.easeOutQuart = "easeOutQuart", 
    c.easeInOutQuart = "easeInOutQuart", c.easeInSine = "easeInSine", c.easeOutSine = "easeOutSine", 
    c.easeInOutSine = "easeInOutSine", c.easeInExpo = "easeInExpo", c.easeOutExpo = "easeOutExpo", 
    c.easeInOutExpo = "easeInOutExpo", c.easeInCirc = "easeInCirc", c.easeOutCirc = "easeOutCirc", 
    c.easeInOutCirc = "easeInOutCirc", c.easeInBack = "easeInBack", c.easeOutBack = "easeOutBack", 
    c.easeInOutBack = "easeInOutBack", V.prototype = {
        start: function() {
            this.addEventHandler(), this.renderer.start();
        },
        stop: function() {
            this.renderer.stop();
        },
        resize: function(a, b) {
            this.renderer.resize(a, b);
        },
        setStroke: function(a, b) {
            this.renderer.hasOwnProperty("stroke") ? this.renderer.setStroke(a, b) : alert("Sorry this renderer do not suppest stroke method!");
        },
        createImageData: function(a) {
            this.renderer instanceof c.PixelRender && this.renderer.createImageData(a);
        },
        setMaxRadius: function(a) {
            this.renderer instanceof c.WebGLRender && this.renderer.setMaxRadius(a);
        },
        blendEquation: function(a) {
            this.renderer instanceof c.WebGLRender && this.renderer.blendEquation(a);
        },
        blendFunc: function(a, b) {
            this.renderer instanceof c.WebGLRender && this.renderer.blendFunc(a, b);
        },
        setType: function(a) {
            this.type = a, this.renderer = this.getRenderer();
        },
        getRenderer: function() {
            switch (this.type) {
              case "dom":
                return new c.DomRender(this.proton, this.element);

              case "canvas":
                return new c.CanvasRender(this.proton, this.element);

              case "webgl":
                return new c.WebGLRender(this.proton, this.element);

              case "easel":
                return new c.EaselRender(this.proton, this.element);

              case "easeljs":
                return new c.EaselRender(this.proton, this.element);

              case "pixel":
                return new c.PixelRender(this.proton, this.element);

              default:
                return new c.BaseRender(this.proton, this.element);
            }
        },
        render: function(a) {
            this.renderer.render(a);
        },
        addEventHandler: function() {
            this.onProtonUpdate && (this.renderer.onProtonUpdate = this.onProtonUpdate), this.onParticleCreated && (this.renderer.onParticleCreated = this.onParticleCreated), 
            this.onParticleUpdate && (this.renderer.onParticleUpdate = this.onParticleUpdate), 
            this.onParticleDead && (this.renderer.onParticleDead = this.onParticleDead);
        }
    }, c.Renderer = V, W.prototype = {
        start: function() {
            var a = this;
            this.proton.addEventListener(c.PROTON_UPDATE, function(b) {
                a.onProtonUpdate.call(a);
            }), this.proton.addEventListener(c.PROTON_UPDATE_AFTER, function(b) {
                a.onProtonUpdateAfter.call(a);
            }), this.proton.addEventListener(c.EMITTER_ADDED, function(b) {
                a.onEmitterAdded.call(a, b.emitter);
            }), this.proton.addEventListener(c.EMITTER_REMOVED, function(b) {
                a.onEmitterRemoved.call(a, b.emitter);
            });
            var b = this.proton.emitters.length, d;
            for (d = 0; d < b; d++) {
                var e = this.proton.emitters[d];
                this.addEmitterListener(e);
            }
        },
        resize: function(a, b) {},
        addEmitterListener: function(a) {
            var b = this;
            a.addEventListener(c.PARTICLE_CREATED, function(a) {
                b.onParticleCreated.call(b, a.particle);
            }), a.addEventListener(c.PARTICLE_UPDATE, function(a) {
                b.onParticleUpdate.call(b, a.particle);
            }), a.addEventListener(c.PARTICLE_DEAD, function(a) {
                b.onParticleDead.call(b, a.particle);
            });
        },
        stop: function() {
            var a = this.proton.emitters.length, b;
            this.proton.removeAllEventListeners();
            for (b = 0; b < a; b++) {
                var c = this.proton.emitters[b];
                c.removeAllEventListeners();
            }
        },
        onEmitterAdded: function(a) {
            this.addEmitterListener(a);
        },
        onEmitterRemoved: function(a) {
            a.removeAllEventListeners();
        },
        onProtonUpdate: function() {},
        onProtonUpdateAfter: function() {},
        onParticleCreated: function(a) {},
        onParticleUpdate: function(a) {},
        onParticleDead: function(a) {}
    }, c.BaseRender = W, c.Util.inherits(X, c.BaseRender), X.prototype.start = function() {
        X._super_.prototype.start.call(this);
    }, X.prototype.setStroke = function(a, b) {
        a = c.Util.initValue(a, "#000000"), b = c.Util.initValue(b, 1), this.stroke = {
            color: a,
            thinkness: b
        };
    }, X.prototype.onProtonUpdate = function() {}, X.prototype.onParticleCreated = function(a) {
        if (a.target) {
            var b = this;
            c.Util.getImage(a.target, a, !1, function(a) {
                b.setImgInDIV.call(b, a);
            });
        } else a.transform.canvas = c.DomUtil.createCanvas(a.id + "_canvas", a.radius + 1, a.radius + 1, "absolute"), 
        a.transform.bakOldRadius = a.radius, this.stroke ? (a.transform.canvas.width = 2 * a.radius + this.stroke.thinkness * 2, 
        a.transform.canvas.height = 2 * a.radius + this.stroke.thinkness * 2) : (a.transform.canvas.width = 2 * a.radius + 1, 
        a.transform.canvas.height = 2 * a.radius + 1), a.transform.context = a.transform.canvas.getContext("2d"), 
        a.transform.context.fillStyle = a.color, a.transform.context.beginPath(), a.transform.context.arc(a.radius, a.radius, a.radius, 0, Math.PI * 2, !0), 
        this.stroke && (a.transform.context.strokeStyle = this.stroke.color, a.transform.context.lineWidth = this.stroke.thinkness, 
        a.transform.context.stroke()), a.transform.context.closePath(), a.transform.context.fill(), 
        this.element.appendChild(a.transform.canvas);
    }, X.prototype.onParticleUpdate = function(a) {
        a.target ? a.target instanceof Image && (a.transform.canvas.style.opacity = a.alpha, 
        c.DomUtil.transformDom(a.transform.canvas, a.p.x - a.target.width / 2, a.p.y - a.target.height / 2, a.scale, a.rotation)) : (a.transform.canvas.style.opacity = a.alpha, 
        a.transform.oldRadius ? c.DomUtil.transformDom(a.transform.canvas, a.p.x - a.transform.oldRadius, a.p.y - a.transform.oldRadius, a.scale, a.rotation) : c.DomUtil.transformDom(a.transform.canvas, a.p.x - a.transform.bakOldRadius, a.p.y - a.transform.bakOldRadius, a.scale, a.rotation));
    }, X.prototype.onParticleDead = function(a) {
        a.transform.canvas && this.element.removeChild(a.transform.canvas);
    }, X.prototype.setImgInDIV = function(a) {
        a.transform.canvas = c.DomUtil.createCanvas(a.id + "_canvas", a.target.width + 1, a.target.height + 1, "absolute", a.p.x - a.radius, a.p.y - a.radius), 
        a.transform.context = a.transform.canvas.getContext("2d"), a.transform.context.drawImage(a.target, 0, 0, a.target.width, a.target.height), 
        this.element.appendChild(a.transform.canvas);
    }, c.DomRender = X, c.Util.inherits(Y, c.BaseRender), Y.prototype.resize = function(a, b) {}, 
    Y.prototype.start = function() {
        Y._super_.prototype.start.call(this);
    }, Y.prototype.onProtonUpdate = function() {}, Y.prototype.onParticleCreated = function(a) {
        if (a.target) a.target = a.target.clone(), a.target.parent || (!a.target.image || (a.target.regX = a.target.image.width / 2, 
        a.target.regY = a.target.image.height / 2), this.element.addChild(a.target)); else {
            var b = new createjs.Graphics();
            this.stroke && (this.stroke == !0 ? b.beginStroke("#000000") : this.stroke instanceof String && b.beginStroke(this.stroke)), 
            b.beginFill(a.color).drawCircle(0, 0, a.radius);
            var c = new createjs.Shape(b);
            a.target = c, this.element.addChild(a.target);
        }
    }, Y.prototype.onParticleUpdate = function(a) {
        a.target && (a.target.x = a.p.x, a.target.y = a.p.y, a.target.alpha = a.alpha, a.target.scaleX = a.target.scaleY = a.scale, 
        a.target.rotation = a.rotation);
    }, Y.prototype.onParticleDead = function(a) {
        a.target && a.target.parent && a.target.parent.removeChild(a.target);
    }, c.EaselRender = Y, c.Util.inherits(Z, c.BaseRender), Z.prototype.resize = function(a, b) {
        this.element.width = a, this.element.height = b;
    }, Z.prototype.start = function() {
        Z._super_.prototype.start.call(this);
    }, Z.prototype.setStroke = function(a, b) {
        a = c.Util.initValue(a, "#000000"), b = c.Util.initValue(b, 1), this.stroke = {
            color: a,
            thinkness: b
        };
    }, Z.prototype.onProtonUpdate = function() {
        this.context.clearRect(0, 0, this.element.width, this.element.height);
    }, Z.prototype.onParticleCreated = function(a) {
        a.target ? c.Util.getImage(a.target, a, !1) : a.color = a.color ? a.color : "#ff0000";
    }, Z.prototype.onParticleUpdate = function(a) {
        if (a.target) {
            if (a.target instanceof Image) {
                var b = a.target.width * a.scale | 0, d = a.target.height * a.scale | 0, e = a.p.x - b / 2, f = a.p.y - d / 2;
                if (!a.color) this.context.save(), this.context.globalAlpha = a.alpha, this.context.translate(a.p.x, a.p.y), 
                this.context.rotate(c.MathUtils.degreeTransform(a.rotation)), this.context.translate(-a.p.x, -a.p.y), 
                this.context.drawImage(a.target, 0, 0, a.target.width, a.target.height, e, f, b, d), 
                this.context.globalAlpha = 1, this.context.restore(); else {
                    a.transform.buffer || (a.transform.buffer = this.getBuffer(a.target));
                    var g = a.transform.buffer.getContext("2d");
                    g.clearRect(0, 0, a.transform.buffer.width, a.transform.buffer.height), g.globalAlpha = a.alpha, 
                    g.drawImage(a.target, 0, 0), g.globalCompositeOperation = "source-atop", g.fillStyle = c.Util.rgbToHex(a.transform.rgb), 
                    g.fillRect(0, 0, a.transform.buffer.width, a.transform.buffer.height), g.globalCompositeOperation = "source-over", 
                    g.globalAlpha = 1, this.context.drawImage(a.transform.buffer, 0, 0, a.transform.buffer.width, a.transform.buffer.height, e, f, b, d);
                }
            }
        } else a.transform.rgb ? this.context.fillStyle = "rgba(" + a.transform.rgb.r + "," + a.transform.rgb.g + "," + a.transform.rgb.b + "," + a.alpha + ")" : this.context.fillStyle = a.color, 
        this.context.beginPath(), this.context.arc(a.p.x, a.p.y, a.radius, 0, Math.PI * 2, !0), 
        this.stroke && (this.context.strokeStyle = this.stroke.color, this.context.lineWidth = this.stroke.thinkness, 
        this.context.stroke()), this.context.closePath(), this.context.fill();
    }, Z.prototype.onParticleDead = function(a) {}, Z.prototype.getBuffer = function(a) {
        if (a instanceof Image) {
            var b = a.width + "_" + a.height, c = this.bufferCache[b];
            c || (c = document.createElement("canvas"), c.width = a.width, c.height = a.height, 
            this.bufferCache[b] = c);
            return c;
        }
    }, c.CanvasRender = Z, c.Util.inherits($, c.BaseRender), $.prototype.resize = function(a, b) {
        this.element.width = a, this.element.height = b;
    }, $.prototype.createImageData = function(a) {
        a ? this.rectangle = a : this.rectangle = new c.Rectangle(0, 0, this.element.width, this.element.height), 
        this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height), 
        this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);
    }, $.prototype.start = function() {
        $._super_.prototype.start.call(this);
    }, $.prototype.onProtonUpdate = function() {
        this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height), 
        this.imageData = this.context.getImageData(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);
    }, $.prototype.onProtonUpdateAfter = function() {
        this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);
    }, $.prototype.onParticleCreated = function(a) {}, $.prototype.onParticleUpdate = function(a) {
        this.imageData && this.setPixel(this.imageData, Math.floor(a.p.x - this.rectangle.x), Math.floor(a.p.y - this.rectangle.y), a);
    }, $.prototype.setPixel = function(a, b, c, d) {
        var e = d.transform.rgb;
        if (!(b < 0 || b > this.element.width || c < 0 || c > this.elementwidth)) {
            var f = ((c >> 0) * a.width + (b >> 0)) * 4;
            a.data[f] = e.r, a.data[f + 1] = e.g, a.data[f + 2] = e.b, a.data[f + 3] = d.alpha * 255;
        }
    }, $.prototype.onParticleDead = function(a) {}, c.PixelRender = $, c.Util.inherits(_, c.BaseRender), 
    _.prototype.resize = function(a, b) {
        this.umat[4] = -2, this.umat[7] = 1, this.smat[0] = 1 / a, this.smat[4] = 1 / b, 
        this.mstack.set(this.umat, 0), this.mstack.set(this.smat, 1), this.gl.viewport(0, 0, a, b), 
        this.element.width = a, this.element.height = b;
    }, _.prototype.setMaxRadius = function(a) {
        this.circleCanvasURL = this.createCircle(a);
    }, _.prototype.getVertexShader = function() {
        var a = [ "uniform vec2 viewport;", "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "uniform mat3 tMat;", "varying vec2 vTextureCoord;", "varying float alpha;", "void main() {", "vec3 v = tMat * vec3(aVertexPosition, 1.0);", "gl_Position = vec4(v.x, v.y, 0, 1);", "vTextureCoord = aTextureCoord;", "alpha = tMat[0][2];", "}" ].join("\n");
        return a;
    }, _.prototype.getFragmentShader = function() {
        var a = [ "precision mediump float;", "varying vec2 vTextureCoord;", "varying float alpha;", "uniform sampler2D uSampler;", "uniform vec4 color;", "uniform bool useTexture;", "uniform vec3 uColor;", "void main() {", "vec4 textureColor = texture2D(uSampler, vTextureCoord);", "gl_FragColor = textureColor * vec4(uColor, 1.0);", "gl_FragColor.w *= alpha;", "}" ].join("\n");
        return a;
    }, _.prototype.initVar = function() {
        this.mstack = new c.MStack(), this.umat = c.Mat3.create([ 2, 0, 1, 0, -2, 0, -1, 1, 1 ]), 
        this.smat = c.Mat3.create([ .01, 0, 1, 0, .01, 0, 0, 0, 1 ]), this.texturebuffers = {};
    }, _.prototype.start = function() {
        _._super_.prototype.start.call(this), this.resize(this.element.width, this.element.height);
    }, _.prototype.blendEquation = function(a) {
        this.gl.blendEquation(this.gl[a]);
    }, _.prototype.blendFunc = function(a, b) {
        this.gl.blendFunc(this.gl[a], this.gl[b]);
    }, _.prototype.getShader = function(a, b, c) {
        var d;
        c ? d = a.createShader(a.FRAGMENT_SHADER) : d = a.createShader(a.VERTEX_SHADER), 
        a.shaderSource(d, b), a.compileShader(d);
        if (!a.getShaderParameter(d, a.COMPILE_STATUS)) {
            alert(a.getShaderInfoLog(d));
            return null;
        }
        return d;
    }, _.prototype.initShaders = function() {
        var a = this.getShader(this.gl, this.getFragmentShader(), !0), b = this.getShader(this.gl, this.getVertexShader(), !1);
        this.sprogram = this.gl.createProgram(), this.gl.attachShader(this.sprogram, b), 
        this.gl.attachShader(this.sprogram, a), this.gl.linkProgram(this.sprogram), this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS) || alert("Could not initialise shaders"), 
        this.gl.useProgram(this.sprogram), this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, "aVertexPosition"), 
        this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, "aTextureCoord"), this.gl.enableVertexAttribArray(this.sprogram.tca), 
        this.gl.enableVertexAttribArray(this.sprogram.vpa), this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, "tMat"), 
        this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, "uSampler"), 
        this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, "useTexture"), 
        this.sprogram.color = this.gl.getUniformLocation(this.sprogram, "uColor"), this.gl.uniform1i(this.sprogram.useTex, 1);
    }, _.prototype.initBuffers = function() {
        this.unitIBuffer = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);
        var a = [ 0, 3, 1, 0, 2, 3 ];
        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(a), this.gl.STATIC_DRAW);
        var b = [];
        for (var c = 0; c < 100; c++) b.push(c);
        idx = new Uint16Array(b), this.unitI33 = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33), 
        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW), b = [];
        for (c = 0; c < 100; c++) b.push(c, c + 1, c + 2);
        idx = new Uint16Array(b), this.stripBuffer = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer), 
        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);
    }, _.prototype.createCircle = function(a) {
        this.circleCanvasRadius = c.WebGLUtil.nhpot(c.Util.initValue(a, 32));
        var b = c.DomUtil.createCanvas("circle_canvas", this.circleCanvasRadius * 2, this.circleCanvasRadius * 2), d = b.getContext("2d");
        d.beginPath(), d.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, !0), 
        d.closePath(), d.fillStyle = "#FFF", d.fill();
        return b.toDataURL();
    }, _.prototype.setImgInCanvas = function(a) {
        var b = a.target.width, d = a.target.height, e = c.WebGLUtil.nhpot(a.target.width), f = c.WebGLUtil.nhpot(a.target.height), g = a.target.width / e, h = a.target.height / f;
        this.texturebuffers[a.transform.src] || (this.texturebuffers[a.transform.src] = [ this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer() ]), 
        a.transform.texture = this.texturebuffers[a.transform.src][0], a.transform.vcBuffer = this.texturebuffers[a.transform.src][1], 
        a.transform.tcBuffer = this.texturebuffers[a.transform.src][2], this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a.transform.tcBuffer), 
        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([ 0, 0, g, 0, 0, h, h, h ]), this.gl.STATIC_DRAW), 
        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a.transform.vcBuffer), this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([ 0, 0, b, 0, 0, d, b, d ]), this.gl.STATIC_DRAW);
        var i = a.transform.canvas.getContext("2d"), j = i.getImageData(0, 0, e, f);
        this.gl.bindTexture(this.gl.TEXTURE_2D, a.transform.texture), this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, j), 
        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR), 
        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST), 
        this.gl.generateMipmap(this.gl.TEXTURE_2D), a.transform.textureLoaded = !0, a.transform.textureWidth = b, 
        a.transform.textureHeight = d;
    }, _.prototype.setStroke = function(a, b) {}, _.prototype.onProtonUpdate = function() {}, 
    _.prototype.onParticleCreated = function(a) {
        var b = this;
        a.transform.textureLoaded = !1, a.transform.tmat = c.Mat3.create(), a.transform.tmat[8] = 1, 
        a.transform.imat = c.Mat3.create(), a.transform.imat[8] = 1, a.target ? c.Util.getImage(a.target, a, !0, function(a) {
            b.setImgInCanvas.call(b, a), a.transform.oldScale = 1;
        }) : c.Util.getImage(this.circleCanvasURL, a, !0, function(a) {
            b.setImgInCanvas.call(b, a), a.transform.oldScale = a.radius / b.circleCanvasRadius;
        });
    }, _.prototype.onParticleUpdate = function(a) {
        a.transform.textureLoaded && (this.updateMatrix(a), this.gl.uniform3f(this.sprogram.color, a.transform.rgb.r / 255, a.transform.rgb.g / 255, a.transform.rgb.b / 255), 
        this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, !1, this.mstack.top()), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a.transform.vcBuffer), 
        this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a.transform.tcBuffer), 
        this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindTexture(this.gl.TEXTURE_2D, a.transform.texture), 
        this.gl.uniform1i(this.sprogram.samplerUniform, 0), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer), 
        this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0), this.mstack.pop());
    }, _.prototype.onParticleDead = function(a) {}, _.prototype.updateMatrix = function(a) {
        var b = c.WebGLUtil.makeTranslation(-a.transform.textureWidth / 2, -a.transform.textureHeight / 2), d = c.WebGLUtil.makeTranslation(a.p.x, a.p.y), e = a.rotation * (Math.PI / 180), f = c.WebGLUtil.makeRotation(e), g = a.scale * a.transform.oldScale, h = c.WebGLUtil.makeScale(g, g), i = c.WebGLUtil.matrixMultiply(b, h);
        i = c.WebGLUtil.matrixMultiply(i, f), i = c.WebGLUtil.matrixMultiply(i, d), c.Mat3.inverse(i, a.transform.imat), 
        i[2] = a.alpha, this.mstack.push(i);
    }, c.WebGLRender = _, ba.prototype = {
        getPosition: function() {},
        crossing: function(a) {}
    }, c.Zone = ba, c.Util.inherits(bb, c.Zone), bb.prototype.getPosition = function() {
        this.random = Math.random(), this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient), 
        this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient);
        return this.vector;
    }, bb.prototype.getDirection = function(a, b) {
        var c = this.dy, d = -this.dx, e = this.dot, f = d == 0 ? 1 : d;
        return (c * a + d * b + e) * f > 0 ? !0 : !1;
    }, bb.prototype.getDistance = function(a, b) {
        var c = this.dy, d = -this.dx, e = this.dot, f = c * a + d * b + e;
        return f / Math.sqrt(this.xxyy);
    }, bb.prototype.getSymmetric = function(a) {
        var b = a.getGradient(), c = this.getGradient(), d = 2 * (c - b), e = a.x, f = a.y;
        a.x = e * Math.cos(d) - f * Math.sin(d), a.y = e * Math.sin(d) + f * Math.cos(d);
        return a;
    }, bb.prototype.getGradient = function() {
        return Math.atan2(this.dy, this.dx);
    }, bb.prototype.getRange = function(a, b) {
        var c = Math.abs(this.getGradient());
        c <= Math.PI / 4 ? a.p.x < this.maxx && a.p.x > this.minx && b() : a.p.y < this.maxy && a.p.y > this.miny && b();
    }, bb.prototype.getLength = function() {
        return Math.sqrt(this.dx * this.dx + this.dy * this.dy);
    }, bb.prototype.crossing = function(a) {
        var b = this;
        this.crossType == "dead" ? this.direction == ">" || this.direction == "R" || this.direction == "right" || this.direction == "down" ? this.getRange(a, function() {
            b.getDirection(a.p.x, a.p.y) && (a.dead = !0);
        }) : this.getRange(a, function() {
            b.getDirection(a.p.x, a.p.y) || (a.dead = !0);
        }) : this.crossType == "bound" ? this.getRange(a, function() {
            b.getDistance(a.p.x, a.p.y) <= a.radius && (b.dx == 0 ? a.v.x *= -1 : b.dy == 0 ? a.v.y *= -1 : b.getSymmetric(a.v));
        }) : this.crossType == "cross" && this.alert && (alert("Sorry lineZone does not support cross method"), 
        this.alert = !1);
    }, c.LineZone = bb, c.Util.inherits(bc, c.Zone), bc.prototype.getPosition = function() {
        this.random = Math.random(), this.angle = Math.PI * 2 * Math.random(), this.vector.x = this.x + this.random * this.radius * Math.cos(this.angle), 
        this.vector.y = this.y + this.random * this.radius * Math.sin(this.angle);
        return this.vector;
    }, bc.prototype.setCenter = function(a, b) {
        this.center.x = a, this.center.y = b;
    }, bc.prototype.crossing = function(a) {
        var b = a.p.distanceTo(this.center);
        this.crossType == "dead" ? b - a.radius > this.radius && (a.dead = !0) : this.crossType == "bound" ? b + a.radius >= this.radius && this.getSymmetric(a) : this.crossType == "cross" && this.alert && (alert("Sorry CircleZone does not support cross method"), 
        this.alert = !1);
    }, bc.prototype.getSymmetric = function(a) {
        var b = a.v.getGradient(), c = this.getGradient(a), d = 2 * (c - b), e = a.v.x, f = a.v.y;
        a.v.x = e * Math.cos(d) - f * Math.sin(d), a.v.y = e * Math.sin(d) + f * Math.cos(d);
    }, bc.prototype.getGradient = function(a) {
        return -Math.PI / 2 + Math.atan2(a.p.y - this.center.y, a.p.x - this.center.x);
    }, c.CircleZone = bc, c.Util.inherits(bd, c.Zone), bd.prototype.getPosition = function() {
        this.vector.x = this.x, this.vector.y = this.y;
        return this.vector;
    }, bd.prototype.crossing = function(a) {
        this.alert && (alert("Sorry PointZone does not support crossing method"), this.alert = !1);
    }, c.PointZone = bd, c.Util.inherits(be, c.Zone), be.prototype.getPosition = function() {
        this.vector.x = this.x + Math.random() * this.width, this.vector.y = this.y + Math.random() * this.height;
        return this.vector;
    }, be.prototype.crossing = function(a) {
        this.crossType == "dead" ? (a.p.x + a.radius < this.x ? a.dead = !0 : a.p.x - a.radius > this.x + this.width && (a.dead = !0), 
        a.p.y + a.radius < this.y ? a.dead = !0 : a.p.y - a.radius > this.y + this.height && (a.dead = !0)) : this.crossType == "bound" ? (a.p.x - a.radius < this.x ? (a.p.x = this.x + a.radius, 
        a.v.x *= -1) : a.p.x + a.radius > this.x + this.width && (a.p.x = this.x + this.width - a.radius, 
        a.v.x *= -1), a.p.y - a.radius < this.y ? (a.p.y = this.y + a.radius, a.v.y *= -1) : a.p.y + a.radius > this.y + this.height && (a.p.y = this.y + this.height - a.radius, 
        a.v.y *= -1)) : this.crossType == "cross" && (a.p.x + a.radius < this.x && a.v.x <= 0 ? a.p.x = this.x + this.width + a.radius : a.p.x - a.radius > this.x + this.width && a.v.x >= 0 && (a.p.x = this.x - a.radius), 
        a.p.y + a.radius < this.y && a.v.y <= 0 ? a.p.y = this.y + this.height + a.radius : a.p.y - a.radius > this.y + this.height && a.v.y >= 0 && (a.p.y = this.y - a.radius));
    }, c.RectZone = be, c.Util.inherits(bf, c.Zone), bf.prototype.reset = function(a, b, d, e) {
        this.imageData = a, this.x = c.Util.initValue(b, 0), this.y = c.Util.initValue(d, 0), 
        this.d = c.Util.initValue(e, 2), this.vectors = [], this.setVectors();
    }, bf.prototype.setVectors = function() {
        var a, b, c = this.imageData.width, d = this.imageData.height;
        for (a = 0; a < c; a += this.d) for (b = 0; b < d; b += this.d) {
            var e = ((b >> 0) * c + (a >> 0)) * 4;
            this.imageData.data[e + 3] > 0 && this.vectors.push({
                x: a + this.x,
                y: b + this.y
            });
        }
        return this.vector;
    }, bf.prototype.getBound = function(a, b) {
        var c = ((b >> 0) * this.imageData.width + (a >> 0)) * 4;
        return this.imageData.data[c + 3] > 0 ? !0 : !1;
    }, bf.prototype.getPosition = function() {
        return this.vector.copy(this.vectors[Math.floor(Math.random() * this.vectors.length)]);
    }, bf.prototype.getColor = function(a, b) {
        a -= this.x, b -= this.y;
        var c = ((b >> 0) * this.imageData.width + (a >> 0)) * 4;
        return {
            r: this.imageData.data[c],
            g: this.imageData.data[c + 1],
            b: this.imageData.data[c + 2],
            a: this.imageData.data[c + 3]
        };
    }, bf.prototype.crossing = function(a) {
        this.crossType == "dead" ? this.getBound(a.p.x - this.x, a.p.y - this.y) ? a.dead = !0 : a.dead = !1 : this.crossType == "bound" && (this.getBound(a.p.x - this.x, a.p.y - this.y) || a.v.negate());
    }, c.ImageZone = bf;
    var bg = function() {
        if (a.console && a.console.log) {
            var b = arguments;
            if (typeof arguments[0] == "string") if (arguments[0].indexOf("+") == 0) {
                var c = parseInt(arguments[0]);
                bg.once < c && (delete b[0], console.log(b), bg.once++);
            } else console.log(b); else console.log(b);
        }
    };
    bg.once = 0, c.log = bg;
    var bh = bh || {
        addEventListener: function(a, b) {
            a.addEventListener(c.PROTON_UPDATE, function(a) {
                b();
            });
        },
        setStyle: function(a) {
            var b = a || "#ff0000", d = c.Util.hexToRGB(b), e = "rgba(" + d.r + "," + d.g + "," + d.b + "," + .5 + ")";
            return e;
        },
        drawZone: function(a, b, d, e) {
            var f = b.getContext("2d"), g = this.setStyle();
            this.addEventListener(a, function() {
                e && f.clearRect(0, 0, b.width, b.height), d instanceof c.PointZone ? (f.beginPath(), 
                f.fillStyle = g, f.arc(d.x, d.y, 10, 0, Math.PI * 2, !0), f.fill(), f.closePath()) : d instanceof c.LineZone ? (f.beginPath(), 
                f.strokeStyle = g, f.moveTo(d.x1, d.y1), f.lineTo(d.x2, d.y2), f.stroke(), f.closePath()) : d instanceof c.RectZone ? (f.beginPath(), 
                f.strokeStyle = g, f.drawRect(d.x, d.y, d.width, d.height), f.stroke(), f.closePath()) : d instanceof c.CircleZone && (f.beginPath(), 
                f.strokeStyle = g, f.arc(d.x, d.y, d.radius, 0, Math.PI * 2, !0), f.stroke(), f.closePath());
            });
        },
        drawEmitter: function(a, b, c, d) {
            var e = b.getContext("2d"), f = this.setStyle();
            this.addEventListener(a, function() {
                d && e.clearRect(0, 0, b.width, b.height), e.beginPath(), e.fillStyle = f, e.arc(c.p.x, c.p.y, 10, 0, Math.PI * 2, !0), 
                e.fill(), e.closePath();
            });
        },
        test: {},
        setTest: function(a, b) {
            this.test[a] = b;
        },
        getTest: function(a) {
            return this.test.hasOwnProperty(a) ? this.test[a] : !1;
        }
    };
    c.Debug = bh;
})(window), function() {
    var a = 0, b = [ "ms", "moz", "webkit", "o" ];
    for (var c = 0; c < b.length && !window.requestAnimationFrame; ++c) window.requestAnimationFrame = window[b[c] + "RequestAnimationFrame"], 
    window.cancelAnimationFrame = window[b[c] + "CancelAnimationFrame"] || window[b[c] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(b, c) {
        var d = new Date().getTime(), e = Math.max(0, 16 - (d - a)), f = window.setTimeout(function() {
            b(d + e);
        }, e);
        a = d + e;
        return f;
    }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(a) {
        clearTimeout(a);
    });
}();

(function() {
    var cache = {};
    var ctx = null, usingWebAudio = true, noAudio = false;
    try {
        if (typeof AudioContext !== "undefined") {
            ctx = new AudioContext();
        } else if (typeof webkitAudioContext !== "undefined") {
            ctx = new webkitAudioContext();
        } else {
            usingWebAudio = false;
        }
    } catch (e) {
        usingWebAudio = false;
    }
    if (!usingWebAudio) {
        if (typeof Audio !== "undefined") {
            try {
                new Audio();
            } catch (e) {
                noAudio = true;
            }
        } else {
            noAudio = true;
        }
    }
    if (usingWebAudio) {
        var masterGain = typeof ctx.createGain === "undefined" ? ctx.createGainNode() : ctx.createGain();
        masterGain.gain.value = 1;
        masterGain.connect(ctx.destination);
    }
    var HowlerGlobal = function(codecs) {
        this._volume = 1;
        this._muted = false;
        this.usingWebAudio = usingWebAudio;
        this.ctx = ctx;
        this.noAudio = noAudio;
        this._howls = [];
        this._codecs = codecs;
        this.iOSAutoEnable = true;
    };
    HowlerGlobal.prototype = {
        volume: function(vol) {
            var self = this;
            vol = parseFloat(vol);
            if (vol >= 0 && vol <= 1) {
                self._volume = vol;
                if (usingWebAudio) {
                    masterGain.gain.value = vol;
                }
                for (var key in self._howls) {
                    if (self._howls.hasOwnProperty(key) && self._howls[key]._webAudio === false) {
                        for (var i = 0; i < self._howls[key]._audioNode.length; i++) {
                            self._howls[key]._audioNode[i].volume = self._howls[key]._volume * self._volume;
                        }
                    }
                }
                return self;
            }
            return usingWebAudio ? masterGain.gain.value : self._volume;
        },
        mute: function() {
            this._setMuted(true);
            return this;
        },
        unmute: function() {
            this._setMuted(false);
            return this;
        },
        _setMuted: function(muted) {
            var self = this;
            self._muted = muted;
            if (usingWebAudio) {
                masterGain.gain.value = muted ? 0 : self._volume;
            }
            for (var key in self._howls) {
                if (self._howls.hasOwnProperty(key) && self._howls[key]._webAudio === false) {
                    for (var i = 0; i < self._howls[key]._audioNode.length; i++) {
                        self._howls[key]._audioNode[i].muted = muted;
                    }
                }
            }
        },
        codecs: function(ext) {
            return this._codecs[ext];
        },
        _enableiOSAudio: function() {
            var self = this;
            if (ctx && (self._iOSEnabled || !/iPhone|iPad|iPod/i.test(navigator.userAgent))) {
                return;
            }
            self._iOSEnabled = false;
            var unlock = function() {
                var buffer = ctx.createBuffer(1, 1, 22050);
                var source = ctx.createBufferSource();
                source.buffer = buffer;
                source.connect(ctx.destination);
                if (typeof source.start === "undefined") {
                    source.noteOn(0);
                } else {
                    source.start(0);
                }
                setTimeout(function() {
                    if (source.playbackState === source.PLAYING_STATE || source.playbackState === source.FINISHED_STATE) {
                        self._iOSEnabled = true;
                        self.iOSAutoEnable = false;
                        window.removeEventListener("touchstart", unlock, false);
                    }
                }, 0);
            };
            window.addEventListener("touchstart", unlock, false);
            return self;
        }
    };
    var audioTest = null;
    var codecs = {};
    if (!noAudio) {
        audioTest = new Audio();
        codecs = {
            mp3: !!audioTest.canPlayType("audio/mpeg;").replace(/^no$/, ""),
            opus: !!audioTest.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
            ogg: !!audioTest.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
            wav: !!audioTest.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
            aac: !!audioTest.canPlayType("audio/aac;").replace(/^no$/, ""),
            m4a: !!(audioTest.canPlayType("audio/x-m4a;") || audioTest.canPlayType("audio/m4a;") || audioTest.canPlayType("audio/aac;")).replace(/^no$/, ""),
            mp4: !!(audioTest.canPlayType("audio/x-mp4;") || audioTest.canPlayType("audio/mp4;") || audioTest.canPlayType("audio/aac;")).replace(/^no$/, ""),
            weba: !!audioTest.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")
        };
    }
    var Howler = new HowlerGlobal(codecs);
    var Howl = function(o) {
        var self = this;
        self._autoplay = o.autoplay || false;
        self._buffer = o.buffer || false;
        self._duration = o.duration || 0;
        self._format = o.format || null;
        self._loop = o.loop || false;
        self._loaded = false;
        self._sprite = o.sprite || {};
        self._src = o.src || "";
        self._pos3d = o.pos3d || [ 0, 0, -.5 ];
        self._volume = o.volume !== undefined ? o.volume : 1;
        self._urls = o.urls || [];
        self._rate = o.rate || 1;
        self._model = o.model || null;
        self._onload = [ o.onload || function() {} ];
        self._onloaderror = [ o.onloaderror || function() {} ];
        self._onend = [ o.onend || function() {} ];
        self._onpause = [ o.onpause || function() {} ];
        self._onplay = [ o.onplay || function() {} ];
        self._onendTimer = [];
        self._webAudio = usingWebAudio && !self._buffer;
        self._audioNode = [];
        if (self._webAudio) {
            self._setupAudioNode();
        }
        if (typeof ctx !== "undefined" && ctx && Howler.iOSAutoEnable) {
            Howler._enableiOSAudio();
        }
        Howler._howls.push(self);
        self.load();
    };
    Howl.prototype = {
        load: function() {
            var self = this, url = null;
            if (noAudio) {
                self.on("loaderror");
                return;
            }
            for (var i = 0; i < self._urls.length; i++) {
                var ext, urlItem;
                if (self._format) {
                    ext = self._format;
                } else {
                    urlItem = self._urls[i];
                    ext = /^data:audio\/([^;,]+);/i.exec(urlItem);
                    if (!ext) {
                        ext = /\.([^.]+)$/.exec(urlItem.split("?", 1)[0]);
                    }
                    if (ext) {
                        ext = ext[1].toLowerCase();
                    } else {
                        self.on("loaderror");
                        return;
                    }
                }
                if (codecs[ext]) {
                    url = self._urls[i];
                    break;
                }
            }
            if (!url) {
                self.on("loaderror");
                return;
            }
            self._src = url;
            if (self._webAudio) {
                loadBuffer(self, url);
            } else {
                var newNode = new Audio();
                newNode.addEventListener("error", function() {
                    if (newNode.error && newNode.error.code === 4) {
                        HowlerGlobal.noAudio = true;
                    }
                    self.on("loaderror", {
                        type: newNode.error ? newNode.error.code : 0
                    });
                }, false);
                self._audioNode.push(newNode);
                newNode.src = url;
                newNode._pos = 0;
                newNode.preload = "auto";
                newNode.volume = Howler._muted ? 0 : self._volume * Howler.volume();
                var listener = function() {
                    self._duration = Math.ceil(newNode.duration * 10) / 10;
                    if (Object.getOwnPropertyNames(self._sprite).length === 0) {
                        self._sprite = {
                            _default: [ 0, self._duration * 1e3 ]
                        };
                    }
                    if (!self._loaded) {
                        self._loaded = true;
                        self.on("load");
                    }
                    if (self._autoplay) {
                        self.play();
                    }
                    newNode.removeEventListener("canplaythrough", listener, false);
                };
                newNode.addEventListener("canplaythrough", listener, false);
                newNode.load();
            }
            return self;
        },
        urls: function(urls) {
            var self = this;
            if (urls) {
                self.stop();
                self._urls = typeof urls === "string" ? [ urls ] : urls;
                self._loaded = false;
                self.load();
                return self;
            } else {
                return self._urls;
            }
        },
        play: function(sprite, callback) {
            var self = this;
            if (typeof sprite === "function") {
                callback = sprite;
            }
            if (!sprite || typeof sprite === "function") {
                sprite = "_default";
            }
            if (!self._loaded) {
                self.on("load", function() {
                    self.play(sprite, callback);
                });
                return self;
            }
            if (!self._sprite[sprite]) {
                if (typeof callback === "function") callback();
                return self;
            }
            self._inactiveNode(function(node) {
                node._sprite = sprite;
                var pos = node._pos > 0 ? node._pos : self._sprite[sprite][0] / 1e3;
                var duration = 0;
                if (self._webAudio) {
                    duration = self._sprite[sprite][1] / 1e3 - node._pos;
                    if (node._pos > 0) {
                        pos = self._sprite[sprite][0] / 1e3 + pos;
                    }
                } else {
                    duration = self._sprite[sprite][1] / 1e3 - (pos - self._sprite[sprite][0] / 1e3);
                }
                var loop = !!(self._loop || self._sprite[sprite][2]);
                var soundId = typeof callback === "string" ? callback : Math.round(Date.now() * Math.random()) + "", timerId;
                (function() {
                    var data = {
                        id: soundId,
                        sprite: sprite,
                        loop: loop
                    };
                    timerId = setTimeout(function() {
                        if (!self._webAudio && loop) {
                            self.stop(data.id).play(sprite, data.id);
                        }
                        if (self._webAudio && !loop) {
                            self._nodeById(data.id).paused = true;
                            self._nodeById(data.id)._pos = 0;
                            self._clearEndTimer(data.id);
                        }
                        if (!self._webAudio && !loop) {
                            self.stop(data.id);
                        }
                        self.on("end", soundId);
                    }, duration * 1e3);
                    self._onendTimer.push({
                        timer: timerId,
                        id: data.id
                    });
                })();
                if (self._webAudio) {
                    var loopStart = self._sprite[sprite][0] / 1e3, loopEnd = self._sprite[sprite][1] / 1e3;
                    node.id = soundId;
                    node.paused = false;
                    refreshBuffer(self, [ loop, loopStart, loopEnd ], soundId);
                    self._playStart = ctx.currentTime;
                    node.gain.value = self._volume;
                    if (typeof node.bufferSource.start === "undefined") {
                        node.bufferSource.noteGrainOn(0, pos, duration);
                    } else {
                        node.bufferSource.start(0, pos, duration);
                    }
                } else {
                    if (node.readyState === 4 || !node.readyState && navigator.isCocoonJS) {
                        node.readyState = 4;
                        node.id = soundId;
                        node.currentTime = pos;
                        node.muted = Howler._muted || node.muted;
                        node.volume = self._volume * Howler.volume();
                        setTimeout(function() {
                            node.play();
                        }, 0);
                    } else {
                        self._clearEndTimer(soundId);
                        (function() {
                            var sound = self, playSprite = sprite, fn = callback, newNode = node;
                            var listener = function() {
                                sound.play(playSprite, fn);
                                newNode.removeEventListener("canplaythrough", listener, false);
                            };
                            newNode.addEventListener("canplaythrough", listener, false);
                        })();
                        return self;
                    }
                }
                self.on("play");
                if (typeof callback === "function") callback(soundId);
                return self;
            });
            return self;
        },
        pause: function(id) {
            var self = this;
            if (!self._loaded) {
                self.on("play", function() {
                    self.pause(id);
                });
                return self;
            }
            self._clearEndTimer(id);
            var activeNode = id ? self._nodeById(id) : self._activeNode();
            if (activeNode) {
                activeNode._pos = self.pos(null, id);
                if (self._webAudio) {
                    if (!activeNode.bufferSource || activeNode.paused) {
                        return self;
                    }
                    activeNode.paused = true;
                    if (typeof activeNode.bufferSource.stop === "undefined") {
                        activeNode.bufferSource.noteOff(0);
                    } else {
                        activeNode.bufferSource.stop(0);
                    }
                } else {
                    activeNode.pause();
                }
            }
            self.on("pause");
            return self;
        },
        stop: function(id) {
            var self = this;
            if (!self._loaded) {
                self.on("play", function() {
                    self.stop(id);
                });
                return self;
            }
            self._clearEndTimer(id);
            var activeNode = id ? self._nodeById(id) : self._activeNode();
            if (activeNode) {
                activeNode._pos = 0;
                if (self._webAudio) {
                    if (!activeNode.bufferSource || activeNode.paused) {
                        return self;
                    }
                    activeNode.paused = true;
                    if (typeof activeNode.bufferSource.stop === "undefined") {
                        activeNode.bufferSource.noteOff(0);
                    } else {
                        activeNode.bufferSource.stop(0);
                    }
                } else if (!isNaN(activeNode.duration)) {
                    activeNode.pause();
                    activeNode.currentTime = 0;
                }
            }
            return self;
        },
        mute: function(id) {
            var self = this;
            if (!self._loaded) {
                self.on("play", function() {
                    self.mute(id);
                });
                return self;
            }
            var activeNode = id ? self._nodeById(id) : self._activeNode();
            if (activeNode) {
                if (self._webAudio) {
                    activeNode.gain.value = 0;
                } else {
                    activeNode.muted = true;
                }
            }
            return self;
        },
        unmute: function(id) {
            var self = this;
            if (!self._loaded) {
                self.on("play", function() {
                    self.unmute(id);
                });
                return self;
            }
            var activeNode = id ? self._nodeById(id) : self._activeNode();
            if (activeNode) {
                if (self._webAudio) {
                    activeNode.gain.value = self._volume;
                } else {
                    activeNode.muted = false;
                }
            }
            return self;
        },
        volume: function(vol, id) {
            var self = this;
            vol = parseFloat(vol);
            if (vol >= 0 && vol <= 1) {
                self._volume = vol;
                if (!self._loaded) {
                    self.on("play", function() {
                        self.volume(vol, id);
                    });
                    return self;
                }
                var activeNode = id ? self._nodeById(id) : self._activeNode();
                if (activeNode) {
                    if (self._webAudio) {
                        activeNode.gain.value = vol;
                    } else {
                        activeNode.volume = vol * Howler.volume();
                    }
                }
                return self;
            } else {
                return self._volume;
            }
        },
        loop: function(loop) {
            var self = this;
            if (typeof loop === "boolean") {
                self._loop = loop;
                return self;
            } else {
                return self._loop;
            }
        },
        sprite: function(sprite) {
            var self = this;
            if (typeof sprite === "object") {
                self._sprite = sprite;
                return self;
            } else {
                return self._sprite;
            }
        },
        pos: function(pos, id) {
            var self = this;
            if (!self._loaded) {
                self.on("load", function() {
                    self.pos(pos);
                });
                return typeof pos === "number" ? self : self._pos || 0;
            }
            pos = parseFloat(pos);
            var activeNode = id ? self._nodeById(id) : self._activeNode();
            if (activeNode) {
                if (pos >= 0) {
                    self.pause(id);
                    activeNode._pos = pos;
                    self.play(activeNode._sprite, id);
                    return self;
                } else {
                    return self._webAudio ? activeNode._pos + (ctx.currentTime - self._playStart) : activeNode.currentTime;
                }
            } else if (pos >= 0) {
                return self;
            } else {
                for (var i = 0; i < self._audioNode.length; i++) {
                    if (self._audioNode[i].paused && self._audioNode[i].readyState === 4) {
                        return self._webAudio ? self._audioNode[i]._pos : self._audioNode[i].currentTime;
                    }
                }
            }
        },
        pos3d: function(x, y, z, id) {
            var self = this;
            y = typeof y === "undefined" || !y ? 0 : y;
            z = typeof z === "undefined" || !z ? -.5 : z;
            if (!self._loaded) {
                self.on("play", function() {
                    self.pos3d(x, y, z, id);
                });
                return self;
            }
            if (x >= 0 || x < 0) {
                if (self._webAudio) {
                    var activeNode = id ? self._nodeById(id) : self._activeNode();
                    if (activeNode) {
                        self._pos3d = [ x, y, z ];
                        activeNode.panner.setPosition(x, y, z);
                        activeNode.panner.panningModel = self._model || "HRTF";
                    }
                }
            } else {
                return self._pos3d;
            }
            return self;
        },
        fade: function(from, to, len, callback, id) {
            var self = this, diff = Math.abs(from - to), dir = from > to ? "down" : "up", steps = diff / .01, stepTime = len / steps;
            if (!self._loaded) {
                self.on("load", function() {
                    self.fade(from, to, len, callback, id);
                });
                return self;
            }
            self.volume(from, id);
            for (var i = 1; i <= steps; i++) {
                (function() {
                    var change = self._volume + (dir === "up" ? .01 : -.01) * i, vol = Math.round(1e3 * change) / 1e3, toVol = to;
                    setTimeout(function() {
                        self.volume(vol, id);
                        if (vol === toVol) {
                            if (callback) callback();
                        }
                    }, stepTime * i);
                })();
            }
        },
        fadeIn: function(to, len, callback) {
            return this.volume(0).play().fade(0, to, len, callback);
        },
        fadeOut: function(to, len, callback, id) {
            var self = this;
            return self.fade(self._volume, to, len, function() {
                if (callback) callback();
                self.pause(id);
                self.on("end");
            }, id);
        },
        _nodeById: function(id) {
            var self = this, node = self._audioNode[0];
            for (var i = 0; i < self._audioNode.length; i++) {
                if (self._audioNode[i].id === id) {
                    node = self._audioNode[i];
                    break;
                }
            }
            return node;
        },
        _activeNode: function() {
            var self = this, node = null;
            for (var i = 0; i < self._audioNode.length; i++) {
                if (!self._audioNode[i].paused) {
                    node = self._audioNode[i];
                    break;
                }
            }
            self._drainPool();
            return node;
        },
        _inactiveNode: function(callback) {
            var self = this, node = null;
            for (var i = 0; i < self._audioNode.length; i++) {
                if (self._audioNode[i].paused && self._audioNode[i].readyState === 4) {
                    callback(self._audioNode[i]);
                    node = true;
                    break;
                }
            }
            self._drainPool();
            if (node) {
                return;
            }
            var newNode;
            if (self._webAudio) {
                newNode = self._setupAudioNode();
                callback(newNode);
            } else {
                self.load();
                newNode = self._audioNode[self._audioNode.length - 1];
                var listenerEvent = navigator.isCocoonJS ? "canplaythrough" : "loadedmetadata";
                var listener = function() {
                    newNode.removeEventListener(listenerEvent, listener, false);
                    callback(newNode);
                };
                newNode.addEventListener(listenerEvent, listener, false);
            }
        },
        _drainPool: function() {
            var self = this, inactive = 0, i;
            for (i = 0; i < self._audioNode.length; i++) {
                if (self._audioNode[i].paused) {
                    inactive++;
                }
            }
            for (i = self._audioNode.length - 1; i >= 0; i--) {
                if (inactive <= 5) {
                    break;
                }
                if (self._audioNode[i].paused) {
                    if (self._webAudio) {
                        self._audioNode[i].disconnect(0);
                    }
                    inactive--;
                    self._audioNode.splice(i, 1);
                }
            }
        },
        _clearEndTimer: function(soundId) {
            var self = this, index = 0;
            for (var i = 0; i < self._onendTimer.length; i++) {
                if (self._onendTimer[i].id === soundId) {
                    index = i;
                    break;
                }
            }
            var timer = self._onendTimer[index];
            if (timer) {
                clearTimeout(timer.timer);
                self._onendTimer.splice(index, 1);
            }
        },
        _setupAudioNode: function() {
            var self = this, node = self._audioNode, index = self._audioNode.length;
            node[index] = typeof ctx.createGain === "undefined" ? ctx.createGainNode() : ctx.createGain();
            node[index].gain.value = self._volume;
            node[index].paused = true;
            node[index]._pos = 0;
            node[index].readyState = 4;
            node[index].connect(masterGain);
            node[index].panner = ctx.createPanner();
            node[index].panner.panningModel = self._model || "equalpower";
            node[index].panner.setPosition(self._pos3d[0], self._pos3d[1], self._pos3d[2]);
            node[index].panner.connect(node[index]);
            return node[index];
        },
        on: function(event, fn) {
            var self = this, events = self["_on" + event];
            if (typeof fn === "function") {
                events.push(fn);
            } else {
                for (var i = 0; i < events.length; i++) {
                    if (fn) {
                        events[i].call(self, fn);
                    } else {
                        events[i].call(self);
                    }
                }
            }
            return self;
        },
        off: function(event, fn) {
            var self = this, events = self["_on" + event], fnString = fn ? fn.toString() : null;
            if (fnString) {
                for (var i = 0; i < events.length; i++) {
                    if (fnString === events[i].toString()) {
                        events.splice(i, 1);
                        break;
                    }
                }
            } else {
                self["_on" + event] = [];
            }
            return self;
        },
        unload: function() {
            var self = this;
            var nodes = self._audioNode;
            for (var i = 0; i < self._audioNode.length; i++) {
                if (!nodes[i].paused) {
                    self.stop(nodes[i].id);
                    self.on("end", nodes[i].id);
                }
                if (!self._webAudio) {
                    nodes[i].src = "";
                } else {
                    nodes[i].disconnect(0);
                }
            }
            for (i = 0; i < self._onendTimer.length; i++) {
                clearTimeout(self._onendTimer[i].timer);
            }
            var index = Howler._howls.indexOf(self);
            if (index !== null && index >= 0) {
                Howler._howls.splice(index, 1);
            }
            delete cache[self._src];
            self = null;
        }
    };
    if (usingWebAudio) {
        var loadBuffer = function(obj, url) {
            if (url in cache) {
                obj._duration = cache[url].duration;
                loadSound(obj);
                return;
            }
            if (/^data:[^;]+;base64,/.test(url)) {
                var data = atob(url.split(",")[1]);
                var dataView = new Uint8Array(data.length);
                for (var i = 0; i < data.length; ++i) {
                    dataView[i] = data.charCodeAt(i);
                }
                decodeAudioData(dataView.buffer, obj, url);
            } else {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", url, true);
                xhr.responseType = "arraybuffer";
                xhr.onload = function() {
                    decodeAudioData(xhr.response, obj, url);
                };
                xhr.onerror = function() {
                    if (obj._webAudio) {
                        obj._buffer = true;
                        obj._webAudio = false;
                        obj._audioNode = [];
                        delete obj._gainNode;
                        delete cache[url];
                        obj.load();
                    }
                };
                try {
                    xhr.send();
                } catch (e) {
                    xhr.onerror();
                }
            }
        };
        var decodeAudioData = function(arraybuffer, obj, url) {
            ctx.decodeAudioData(arraybuffer, function(buffer) {
                if (buffer) {
                    cache[url] = buffer;
                    loadSound(obj, buffer);
                }
            }, function(err) {
                obj.on("loaderror");
            });
        };
        var loadSound = function(obj, buffer) {
            obj._duration = buffer ? buffer.duration : obj._duration;
            if (Object.getOwnPropertyNames(obj._sprite).length === 0) {
                obj._sprite = {
                    _default: [ 0, obj._duration * 1e3 ]
                };
            }
            if (!obj._loaded) {
                obj._loaded = true;
                obj.on("load");
            }
            if (obj._autoplay) {
                obj.play();
            }
        };
        var refreshBuffer = function(obj, loop, id) {
            var node = obj._nodeById(id);
            node.bufferSource = ctx.createBufferSource();
            node.bufferSource.buffer = cache[obj._src];
            node.bufferSource.connect(node.panner);
            node.bufferSource.loop = loop[0];
            if (loop[0]) {
                node.bufferSource.loopStart = loop[1];
                node.bufferSource.loopEnd = loop[1] + loop[2];
            }
            node.bufferSource.playbackRate.value = obj._rate;
        };
    }
    if (typeof define === "function" && define.amd) {
        define(function() {
            return {
                Howler: Howler,
                Howl: Howl
            };
        });
    }
    if (typeof exports !== "undefined") {
        exports.Howler = Howler;
        exports.Howl = Howl;
    }
    if (typeof window !== "undefined") {
        window.Howler = Howler;
        window.Howl = Howl;
    }
})();

var DUST = function(DUST) {
    "use strict";
    return DUST;
}(DUST || {});

DUST.persist = function() {
    "use strict";
    var externalResource = null;
    var memory = {};
    function setExternalResource(resource) {
        externalResource = resource;
    }
    function save(key, value, afterSave) {
        if (window.localStorage) {
            window.localStorage.setItem(key, value);
        } else {
            memory[key] = value;
        }
        if (externalResource) {
            externalResource.save(key, value, afterSave);
        } else {
            afterSave(value);
        }
    }
    function read(key, afterRead) {
        var result = null;
        if (window.localStorage) {
            result = window.localStorage.getItem(key);
        } else {
            result = memory[key];
        }
        if (externalResource) {
            externalResource.read(key, function(value) {
                if (value) {
                    if (window.localStorage) {
                        window.localStorage.setItem(key, value);
                    } else {
                        memory[key] = value;
                    }
                    afterRead(value);
                    return value;
                } else {
                    afterRead(result);
                    return result;
                }
            });
        } else {
            afterRead(result);
            return result;
        }
    }
    return {
        save: save,
        read: read,
        setExternalResource: setExternalResource
    };
}();

DUST.event = function() {
    "use strict";
    var events = {};
    function on(event, action) {
        if (!events[event]) {
            events[event] = [];
        }
        events[event].push(action);
    }
    function broadcast(event, data) {
        if (events[event]) {
            var length = events[event].length;
            while (length--) {
                events[event][length](data);
            }
        }
    }
    return {
        on: on,
        broadcast: broadcast
    };
}();

DUST.scenes = function() {
    "use strict";
    var scenes = {}, previousScene, currentScene, nextScene;
    return {
        add: function(scene) {
            scenes[scene.name] = scene;
        },
        "switch": function(newScene, clear, futureScene) {
            var targetScene = null;
            previousScene = null;
            if (futureScene) {
                nextScene = futureScene;
            }
            for (var scene in scenes) {
                if (scenes.hasOwnProperty(scene)) {
                    if (newScene !== scene && scenes[scene].isActive && (!scenes[scene].authoritative || clear)) {
                        previousScene = scene;
                        currentScene = newScene;
                        scenes[scene].hide(function() {
                            scenes[newScene].show();
                        });
                    }
                    if (newScene !== scene && scenes[scene].isActive && scenes[scene].authoritative) {
                        previousScene = scene;
                        currentScene = newScene;
                        scenes[newScene].show();
                    }
                    if (clear) {
                        scenes[scene].clear();
                    }
                }
            }
        },
        back: function() {
            if (previousScene) {
                this.switch(previousScene, false, currentScene);
            }
        },
        forward: function() {
            if (nextScene) {
                this.switch(nextScene);
            }
        },
        toggle: function(newScene) {
            if (scenes[newScene].isActive) {
                scenes[newScene].hide();
            } else {
                scenes[newScene].show();
            }
        }
    };
}();

DUST.Scene = function(scenes) {
    "use strict";
    var Scene = function(options) {
        this.isLoaded = false;
        this.wasStarted = false;
        this.children = [];
        this.physics = [];
        this.objects = options.objects;
        this.onFinishedLoading = options.onFinishedLoading;
        this.onShow = options.onShow;
        this.onHide = options.onHide;
        this.onClear = options.onClear;
        this.name = options.name;
        this.authoritative = options.authoritative;
        scenes.add(this);
    };
    Scene.prototype = {
        onFinishedLoading: null,
        onHide: null,
        onShow: null,
        onClear: null,
        authoritative: false,
        selfAttach: function(child) {
            if (child && child.selfAttach) {
                child.selfAttach();
            } else if (child && child.container && child.container.selfAttach) {
                child.container.selfAttach();
            }
        },
        selfRemove: function(child) {
            if (child && child.selfRemove) {
                child.selfRemove();
            } else if (child && child.container && child.container.selfRemove) {
                child.container.selfRemove();
            }
        },
        show: function() {
            var self = this;
            if (!self.isLoaded) {
                self.objects.forEach(function(object) {
                    if (object && object.length && object.forEach) {
                        object.forEach(function(objectEntity) {
                            self.children.push(objectEntity());
                        });
                    } else {
                        self.children.push(object());
                    }
                });
            }
            self.children.forEach(function(child) {
                if (child.entity) {
                    child = child.entity;
                }
                if (child && child.length && child.forEach) {
                    child.forEach(function(childEntity) {
                        if (childEntity.entity) {
                            childEntity = childEntity.entity;
                        }
                        self.selfAttach(childEntity);
                    });
                } else {
                    self.selfAttach(child);
                }
            });
            if (self.onFinishedLoading && !self.wasStarted) {
                self.onFinishedLoading();
            }
            self.isLoaded = true;
            self.wasStarted = true;
            self.isActive = true;
            if (self.onShow) {
                self.onShow();
            }
        },
        hide: function(nextScene) {
            var self = this;
            if (self.onHide) {
                self.onHide(function() {
                    self.children.forEach(function(child) {
                        if (child.entity) {
                            child = child.entity;
                        }
                        if (child && child.length && child.forEach) {
                            child.forEach(function(childEntity) {
                                if (childEntity.entity) {
                                    childEntity = childEntity.entity;
                                }
                                self.selfRemove(childEntity);
                            });
                        } else {
                            self.selfRemove(child);
                        }
                    });
                    if (nextScene) {
                        nextScene();
                    }
                });
            }
            self.isActive = false;
        },
        clear: function() {
            var self = this;
            if (self.onClear) {
                self.onClear();
            }
        }
    };
    return Scene;
}(DUST.scenes);

DUST.particle = function() {
    "use strict";
    var engine = {
        update: function() {}
    };
    var renderer = null;
    return function(container) {
        if (!renderer && container) {
            engine = new Proton(30);
            renderer = new Proton.Renderer("other", engine);
            renderer.onParticleCreated = function(particle) {
                particle.sprite = new PIXI.Sprite(particle.target);
                particle.sprite.anchor.x = .5;
                particle.sprite.anchor.y = .5;
                container.addChild(particle.sprite);
            };
            renderer.onParticleUpdate = function(particle) {
                particle.sprite.x = particle.p.x;
                particle.sprite.y = particle.p.y;
                particle.sprite.scale.x = particle.scale;
                particle.sprite.scale.y = particle.scale;
                particle.sprite.alpha = particle.alpha;
                particle.sprite.tint = parseInt("0x" + particle.color, 16);
            };
            renderer.onParticleDead = function(particle) {
                particle.sprite.parent.removeChild(particle.sprite);
                particle.sprite = null;
                particle = null;
            };
            renderer.start();
        }
        return {
            renderer: renderer,
            engine: engine
        };
    };
}();

DUST.ASSETS = {};

DUST.ASSETS.baseUrl = function() {
    "use strict";
    var baseUrl = "";
    var update = function(url) {
        baseUrl = url;
        return baseUrl;
    };
    var current = function() {
        return baseUrl;
    };
    return {
        current: current,
        update: update
    };
}();

DUST.GRAPHIC = {};

DUST.GRAPHIC.clock = function() {
    "use strict";
    var instance = null;
    function Clock() {
        this.startTime = Date.now();
        this.ms = this.startTime;
        this.last = this.startTime;
        this.time = 0;
        this.dt = 0;
        this.delta = 0;
        this.fps = 60;
        this.frameCount = 0;
        this.frameCounter = true;
        var timeToUpdate = 0;
        var framesToUpdate = 0;
        this.tick = function() {
            if (this.frameCounter) this.frameCount++;
            this.ms = Date.now();
            this.dt = this.ms - this.last;
            this.last = this.ms;
            this.delta = .001 * this.dt;
            this.time += this.delta;
            if (this.frameCounter) {
                timeToUpdate += this.dt;
                framesToUpdate++;
                if (timeToUpdate > 1e3) {
                    this.fps = Math.round(framesToUpdate * 1e3 / timeToUpdate);
                    framesToUpdate = 0;
                    timeToUpdate = 0;
                }
            }
        };
    }
    return function() {
        if (!instance) {
            instance = new Clock();
        }
        return instance;
    };
}();

DUST.GRAPHIC.renderer = function(PIXI) {
    "use strict";
    var scale = 1;
    if (!window.devicePixelRatio) {
        window.devicePixelRatio = 1;
    }
    if (window.devicePixelRatio > 1 && window.devicePixelRatio <= 1.5) {
        scale = 1.25;
    }
    if (window.devicePixelRatio > 1.5) {
        scale = 1.5;
    }
    var canvas = document.getElementById("canvas");
    var options = {
        antialiasing: false,
        transparent: false,
        view: canvas,
        resolution: scale,
        clearBeforeRender: false
    };
    var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight, options);
    return {
        renderer: renderer,
        canvas: canvas
    };
}(PIXI);

DUST.GRAPHIC.scene = function(PIXI) {
    "use strict";
    var scene = new PIXI.DisplayObjectContainer();
    scene.scale.x = 1;
    scene.scale.y = 1;
    return scene;
}(PIXI);

DUST.GRAPHIC.resize = function(renderer, scene) {
    "use strict";
    var canvas = renderer.canvas, rendererInstance = renderer.renderer;
    var targetViewPort = {
        width: 1024,
        height: 696,
        scaleLarge: 1,
        scaleSmall: 1,
        tipPoint: 1.2
    };
    var listening = false;
    var rendererResize = function() {
        var width = window.innerWidth, height = window.innerHeight;
        canvas.width = width;
        canvas.height = height;
        canvas.style.width = width + "px";
        canvas.style.height = height + "px";
        rendererInstance.resize(width, height);
        if (width / height < targetViewPort.tipPoint) {
            if (targetViewPort.screenToSmall) {
                targetViewPort.screenToSmall();
            }
            scene.scale.y = height / targetViewPort.height / targetViewPort.scaleLarge;
            scene.scale.x = height / targetViewPort.height / targetViewPort.scaleLarge;
        } else {
            if (targetViewPort.screenOk) {
                targetViewPort.screenOk();
            }
            scene.scale.y = height / targetViewPort.height * targetViewPort.scaleSmall;
            scene.scale.x = height / targetViewPort.height * targetViewPort.scaleSmall;
        }
        scene.pivot.x = -(width * (1 / scene.scale.y) / 2);
        if (window.scrollTo) {
            window.scrollTo(0, 0);
        }
    };
    var resize = function() {
        if (!listening) {
            window.addEventListener("resize", rendererResize);
            window.addEventListener("deviceOrientation", rendererResize);
            listening = true;
        }
    };
    return function(viewPort) {
        if (viewPort) {
            targetViewPort = viewPort;
        }
        resize();
        rendererResize();
    };
}(DUST.GRAPHIC.renderer, DUST.GRAPHIC.scene);

DUST.GRAPHIC.stage = function(renderer, clock, PIXI, requestAnimationFrame) {
    "use strict";
    renderer = renderer.renderer;
    if (DUST.debug) {
        var stats = new Stats();
        stats.domElement.style.position = "absolute";
        stats.domElement.style.left = "0px";
        stats.domElement.style.top = "0px";
        document.body.appendChild(stats.domElement);
    }
    var gameLoops = [];
    var stage = new PIXI.Stage();
    var loop;
    if (DUST.debug) {
        loop = function() {
            requestAnimationFrame(loop);
            stats.begin();
            renderer.render(stage);
            var length = gameLoops.length;
            while (length--) {
                if (gameLoops[length]) {
                    gameLoops[length].loop();
                }
            }
            clock().tick();
            stats.end();
        };
    } else {
        loop = function() {
            requestAnimationFrame(loop);
            renderer.render(stage);
            var length = gameLoops.length;
            while (length--) {
                if (gameLoops[length]) {
                    gameLoops[length].loop();
                }
            }
            clock().tick();
        };
    }
    var addToLoop = function(extraLoop, name) {
        gameLoops.push({
            loop: extraLoop,
            name: name
        });
    };
    var removeFromLoop = function(name) {
        var length = gameLoops.length;
        while (length--) {
            if (gameLoops[length].name === name) {
                gameLoops.splice(length, 1);
            }
        }
    };
    requestAnimationFrame(loop);
    return {
        instance: stage,
        addToLoop: addToLoop,
        removeFromLoop: removeFromLoop
    };
}(DUST.GRAPHIC.renderer, DUST.GRAPHIC.clock, PIXI, requestAnimationFrame);

DUST.GRAPHIC.HELPERS = {};

DUST.GRAPHIC.HELPERS.setPosition = function(scene) {
    "use strict";
    var isFunction = function(item) {
        return typeof item === "function";
    };
    return function(settings) {
        var targetPosition = {}, options = settings.options, item = settings.item, resizeHandler = function() {
            item.x = options.x() / scene.scale.x;
        };
        if (isFunction(options.x)) {
            targetPosition.x = options.x();
        } else {
            targetPosition.x = options.x;
        }
        if (isFunction(options.y)) {
            targetPosition.y = options.y();
        } else {
            targetPosition.y = options.y;
        }
        if (options.pinned) {
            targetPosition.x *= 1 / scene.scale.x;
            window.addEventListener("resize", resizeHandler);
            window.addEventListener("orientationChange", resizeHandler);
        }
        return targetPosition;
    };
}(DUST.GRAPHIC.scene);

DUST.GRAPHIC.HELPERS.addToCanvas = function(scene) {
    "use strict";
    return function(options) {
        var container = options.container, object = options.object, at = options.at;
        if (container) {
            if (!isNaN(at)) {
                container.addChildAt(object, at);
            } else {
                container.addChild(object);
            }
        } else {
            scene.addChild(object);
        }
    };
}(DUST.GRAPHIC.scene);

DUST.GRAPHIC.HELPERS.textureFromFrame = function(PIXI) {
    "use strict";
    return function(texture) {
        return PIXI.Texture.fromFrame(texture);
    };
}(PIXI);

DUST.GRAPHIC.HELPERS.textureFromFile = function(baseUrl, PIXI) {
    "use strict";
    return function(texture) {
        return PIXI.Texture.fromImage(baseUrl.current() + texture);
    };
}(DUST.ASSETS.baseUrl, PIXI);

DUST.GRAPHIC.HELPERS.animatable = function(clock) {
    "use strict";
    var animate = function(object) {
        return {
            zoom: function(zoomLevel, callback) {
                object.queue.push(function() {
                    if (object.type === "container") {
                        object.targetScale = zoomLevel;
                    } else {
                        object.targetScale = zoomLevel;
                    }
                    object.callback = callback;
                });
            },
            move: function(x, y, callback) {
                object.queue.push(function() {
                    object.targetPosition = {
                        x: x,
                        y: y
                    };
                    object.callback = callback;
                });
            },
            fade: function(alpha, callback) {
                object.targetAlpha = alpha;
                object.callback = callback;
            }
        };
    };
    var update = function(object) {
        return function() {
            var speed = 1;
            var acceleration = 1;
            if (object.speed) {
                speed = object.speed;
            }
            if (object.acceleration) {
                object.acceleration += object.acceleration / 10;
                acceleration = 1 + object.acceleration;
            }
            if (object.targetAlpha || object.targetAlpha === 0) {
                if (object.targetAlpha < object.alpha) {
                    object.alpha -= .03 * speed * 60 / clock().fps;
                    if (object.targetAlpha > object.alpha) {
                        object.alpha = object.targetAlpha;
                    }
                }
                if (object.targetAlpha > object.alpha) {
                    object.alpha += .03 * speed * 60 / clock().fps;
                    if (object.targetAlpha < object.alpha) {
                        object.alpha = object.targetAlpha;
                    }
                }
                if (object.targetAlpha === object.alpha) {
                    if (object.callback) {
                        object.callback();
                    }
                    object.targetAlpha = null;
                }
            }
            if (object.queue && object.queue.length) {
                if (!object.queueRunning) {
                    object.queueRunning = true;
                    object.queue[0]();
                }
                if (object.targetScale && object.targetScale !== object.scale.x) {
                    if (object.targetScale < object.scale.x) {
                        object.scale.x -= .04 * scale * speed * acceleration * 60 / clock().fps;
                        object.scale.y = object.scale.x;
                        if (object.targetScale >= object.scale.x) {
                            object.scale.x = object.targetScale;
                            object.queueRunning = false;
                            object.queue.shift();
                            if (object.callback) {
                                object.callback();
                                object.callback = null;
                                object.targetScale = null;
                            }
                        }
                    } else {
                        object.scale.x += .04 * speed * acceleration * scale * 60 / clock().fps;
                        object.scale.y = object.scale.x;
                        if (object.targetScale <= object.scale.x) {
                            object.scale.x = object.targetScale;
                            object.queueRunning = false;
                            object.queue.shift();
                            if (object.callback) {
                                object.callback();
                                object.callback = null;
                                object.targetScale = null;
                            }
                        }
                    }
                }
                if (object.targetPosition) {
                    if (object.targetPosition.x && object.targetPosition.y) {
                        if (object.targetPosition.x < object.x) {
                            if (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y) <= .5) {
                                object.x -= 5 * speed * acceleration * 60 / clock().fps * (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y));
                            } else {
                                object.x -= 5 * speed * acceleration * 60 / clock().fps;
                            }
                            if (object.targetPosition.x > object.x) {
                                object.x = object.targetPosition.x;
                            }
                        } else if (object.targetPosition.x > object.x) {
                            if (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y) <= .5) {
                                object.x += 5 * speed * acceleration * 60 / clock().fps * (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y));
                            } else {
                                object.x += 5 * speed * acceleration * 60 / clock().fps;
                            }
                            if (object.targetPosition.x < object.x) {
                                object.x = object.targetPosition.x;
                            }
                        }
                        if (object.targetPosition.y < object.y) {
                            if (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y) > .5) {
                                object.y -= 5 * speed * acceleration * 60 / clock().fps / (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y));
                            } else {
                                object.y -= 5 * speed * acceleration * 60 / clock().fps;
                            }
                            if (object.targetPosition.y > object.y) {
                                object.y = object.targetPosition.y;
                            }
                        } else if (object.targetPosition.y > object.y) {
                            if (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y) > .5) {
                                object.y += 5 * speed * acceleration * 60 / clock().fps / (Math.abs(object.x - object.targetPosition.x) / Math.abs(object.y - object.targetPosition.y));
                            } else {
                                object.y += 5 * speed * acceleration * 60 / clock().fps;
                            }
                            if (object.targetPosition.y < object.y) {
                                object.y = object.targetPosition.y;
                            }
                        }
                        if (object.targetPosition.x === object.x && object.targetPosition.y === object.y) {
                            object.queueRunning = false;
                            object.queue.shift();
                            if (object.callback) {
                                object.callback();
                                object.callback = null;
                                object.targetPosition = null;
                            }
                        }
                    } else if (object.targetPosition.x) {
                        if (object.targetPosition.x < object.x) {
                            object.x -= 5 * speed * acceleration * 60 / clock().fps;
                            if (object.targetPosition.x >= object.x) {
                                object.x = object.targetPosition.x;
                                object.queueRunning = false;
                                object.queue.shift();
                                if (object.callback) {
                                    object.callback();
                                    object.callback = null;
                                    object.targetPosition = null;
                                }
                            }
                        } else {
                            object.x += 5 * speed * acceleration * 60 / clock().fps;
                            if (object.targetPosition.x <= object.x) {
                                object.x = object.targetPosition.x;
                                object.queueRunning = false;
                                object.queue.shift();
                                if (object.callback) {
                                    object.callback();
                                    object.callback = null;
                                    object.targetPosition = null;
                                }
                            }
                        }
                    } else if (object.targetPosition.y) {
                        if (object.targetPosition.y !== object.y) {
                            if (object.targetPosition.y < object.y) {
                                object.y -= 5 * speed * acceleration * 60 / clock().fps;
                                if (object.targetPosition.y >= object.y) {
                                    object.y = object.targetPosition.y;
                                    object.queueRunning = false;
                                    object.queue.shift();
                                    if (object.callback) {
                                        object.callback();
                                        object.callback = null;
                                        object.targetPosition = null;
                                    }
                                }
                            } else {
                                object.y += 5 * speed * acceleration * 60 / clock().fps;
                                if (object.targetPosition.y <= object.y) {
                                    object.y = object.targetPosition.y;
                                    object.queueRunning = false;
                                    object.queue.shift();
                                    if (object.callback) {
                                        object.callback();
                                        object.callback = null;
                                        object.targetPosition = null;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        };
    };
    return function(object) {
        object.animate = animate(object);
        object.update = update(object);
        object.queue = [];
        return object;
    };
}(DUST.GRAPHIC.clock);

DUST.GRAPHIC.init = function(stage, resize, scene) {
    "use strict";
    var isGraphicOn = false;
    return function(viewPort) {
        if (!isGraphicOn) {
            isGraphicOn = true;
            stage.instance.addChild(scene);
            resize(viewPort);
        }
        return isGraphicOn;
    };
}(DUST.GRAPHIC.stage, DUST.GRAPHIC.resize, DUST.GRAPHIC.scene);

DUST.PHYSICS = {};

DUST.PHYSICS.world = function() {
    "use strict";
    var world = new p2.World({
        doProfiling: false,
        solveConstraints: false,
        gravity: [ 0, 0 ]
    });
    world.solver.frictionIterations = 1;
    world.solver.tolerance = 10;
    world.solver.iterations = 1;
    return world;
}();

DUST.PHYSICS.simulation = function() {
    "use strict";
    var simulation = new p2.World({
        doProfiling: false,
        solveConstraints: false,
        gravity: [ 0, 0 ]
    });
    simulation.solver.frictionIterations = 1;
    simulation.solver.tolerance = 10;
    simulation.solver.iterations = 1;
    return simulation;
}();

DUST.PHYSICS.bodies = function() {
    "use strict";
    var bodies = [];
    var scale = 128;
    var add = function(body) {
        bodies.push(body);
    };
    var remove = function(body) {
        var index = bodies.indexOf(body);
        if (index >= 0) {
            bodies.splice(index, 1);
        }
    };
    var update = function() {
        bodies.forEach(function(body) {
            if (body.update) {
                body.update(scale);
            }
        });
    };
    return {
        add: add,
        remove: remove,
        update: update
    };
}();

DUST.PHYSICS.circle = function(bodies, world, simulation) {
    "use strict";
    return function(settings) {
        var circleBody = new p2.Body({
            mass: settings.mass,
            position: [ settings.sprite.x / 128, settings.sprite.y / 128 ],
            fixedRotation: settings.fixedRotation
        }), radius = settings.radius / 128 / 2, circleShape;
        if (settings.kinematic) {
            circleShape.type = p2.Body.KINEMATIC;
        }
        circleShape = new p2.Circle(radius);
        circleShape.collisionGroup = settings.collisionGroup || Math.pow(2, 0);
        circleShape.collisionMask = settings.collisionMask || Math.pow(2, 0);
        circleBody.simulation = settings.simulation;
        circleBody.addShape(circleShape);
        circleBody.sprite = settings.sprite;
        circleBody.enable = function() {
            if (!circleBody.physicsEnabled) {
                if (circleBody.simulation) {
                    simulation.addBody(circleBody);
                } else {
                    world.addBody(circleBody);
                    if (settings.mass || settings.kinematic) {
                        bodies.add(circleBody);
                    }
                }
                circleBody.physicsEnabled = true;
            }
        };
        circleBody.disable = function() {
            if (circleBody.physicsEnabled) {
                if (circleBody.simulation) {
                    simulation.removeBody(circleBody);
                } else {
                    world.removeBody(circleBody);
                    if (settings.mass || settings.kinematic) {
                        bodies.remove(circleBody);
                    }
                }
                circleBody.physicsEnabled = false;
            }
        };
        if (settings.enable) {
            circleBody.enable();
        }
        return circleBody;
    };
}(DUST.PHYSICS.bodies, DUST.PHYSICS.world, DUST.PHYSICS.simulation);

DUST.PHYSICS.rectangle = function(bodies, world) {
    "use strict";
    return function(settings) {
        var rectangleBody = new p2.Body({
            mass: settings.mass,
            position: [ settings.x / 128, settings.y / 128 ],
            fixedRotation: settings.fixedRotation
        }), rectangleShape;
        if (settings.kinematic) {
            rectangleBody.type = p2.Body.KINEMATIC;
        }
        rectangleShape = new p2.Rectangle(settings.width / 128, settings.height / 128);
        rectangleShape.collisionGroup = settings.collisionGroup || Math.pow(2, 0);
        rectangleShape.collisionMask = settings.collisionMask || Math.pow(2, 0);
        rectangleBody.addShape(rectangleShape);
        rectangleBody.sprite = settings.sprite;
        rectangleBody.enable = function() {
            if (!rectangleBody.physicsEnabled) {
                world.addBody(rectangleBody);
                rectangleBody.physicsEnabled = true;
                if (settings.mass || settings.kinematic) {
                    bodies.add(rectangleBody);
                }
            }
        };
        rectangleBody.disable = function() {
            if (rectangleBody.physicsEnabled) {
                world.removeBody(rectangleBody);
                rectangleBody.physicsEnabled = false;
                if (settings.mass || settings.kinematic) {
                    bodies.remove(rectangleBody);
                }
            }
        };
        if (settings.enable) {
            rectangleBody.enable();
        }
        return rectangleBody;
    };
}(DUST.PHYSICS.bodies, DUST.PHYSICS.world);

DUST.PHYSICS.plane = function(bodies, world) {
    "use strict";
    return function(settings) {
        var planeBody = new p2.Body({
            mass: settings.mass,
            position: [ settings.x / 128, settings.y / 128 ]
        }), planeShape;
        if (settings.kinematic) {
            planeBody.type = p2.Body.KINEMATIC;
        }
        planeShape = new p2.Plane();
        planeShape.collisionGroup = settings.collisionGroup || Math.pow(2, 0);
        planeShape.collisionMask = settings.collisionMask || Math.pow(2, 0);
        planeBody.addShape(planeShape);
        planeBody.enable = function() {
            if (!planeBody.physicsEnabled) {
                world.addBody(planeBody);
                planeBody.physicsEnabled = true;
                if (settings.mass || settings.kinematic) {
                    bodies.add(planeBody);
                }
            }
        };
        planeBody.disable = function() {
            if (planeBody.physicsEnabled) {
                world.removeBody(planeBody);
                planeBody.physicsEnabled = false;
                if (settings.mass || settings.kinematic) {
                    bodies.remove(planeBody);
                }
            }
        };
        planeBody.collisionGroup = 2;
        if (settings.enable) {
            planeBody.enable();
        }
        return planeBody;
    };
}(DUST.PHYSICS.bodies, DUST.PHYSICS.world);

(function(GRAPHIC, circle, rectangle, plane) {
    "use strict";
    var Entity = function(properties) {
        var self = this;
        if (properties.name) {
            this.name = properties.name;
        } else {
            throw "Entities must have unique names";
        }
        if (!properties.invisible) {
            if (this.types[properties.type]) {
                this.properties = properties;
                this.sprite = this.types[properties.type](properties);
                this.sprite.type = properties.type;
            } else {
                throw "Not a valid entity type: " + properties.type;
            }
        }
        if (properties.physics) {
            if (properties.physics.radius) {
                this.physics = circle({
                    sprite: this.sprite,
                    mass: properties.physics.mass,
                    collisionGroup: properties.physics.collisionGroup,
                    collisionMask: properties.physics.collisionMask,
                    kinematic: properties.physics.kinematic,
                    radius: properties.physics.radius,
                    enable: properties.physics.enable,
                    fixedRotation: properties.physics.fixedRotation
                });
            } else if (properties.physics.isPlane) {
                this.physics = plane({
                    mass: properties.physics.mass,
                    collisionGroup: properties.physics.collisionGroup,
                    collisionMask: properties.physics.collisionMask,
                    kinematic: properties.physics.kinematic,
                    enable: properties.physics.enable,
                    x: properties.x,
                    y: properties.y
                });
            } else {
                this.physics = rectangle({
                    sprite: this.sprite,
                    collisionGroup: properties.physics.collisionGroup,
                    collisionMask: properties.physics.collisionMask,
                    kinematic: properties.physics.kinematic,
                    mass: properties.physics.mass,
                    enable: properties.physics.enable,
                    width: properties.physics.width,
                    height: properties.physics.height,
                    x: properties.x,
                    y: properties.y,
                    fixedRotation: properties.physics.fixedRotation
                });
            }
            if (!properties.invisible) {
                this.physics.update = function() {
                    self.sprite.y = self.physics.position[1] * 128;
                    self.sprite.x = self.physics.position[0] * 128;
                    if (!self.physics.fixedRotation) {
                        self.sprite.rotation = self.physics.angle;
                    }
                };
                this.updateBody = function() {
                    self.physics.position[0] = self.sprite.x / 128;
                    self.physics.position[1] = self.sprite.y / 128;
                    self.physics.updateAABB();
                };
            }
        }
    };
    Entity.prototype = {
        onBeforeAttach: function() {},
        onAfterAttach: function() {},
        onBeforeRemove: function() {},
        onAfterRemove: function() {}
    };
    GRAPHIC.Entity = Entity;
    return GRAPHIC;
})(DUST.GRAPHIC, DUST.PHYSICS.circle, DUST.PHYSICS.rectangle, DUST.PHYSICS.plane);

(function(Entity) {
    "use strict";
    function selfAttach() {
        if (!this.sprite.parent) {
            this.onBeforeAttach();
            if (this.sprite.container.sprite) {
                this.sprite.container.sprite.addChild(this.sprite);
            } else {
                this.sprite.container.addChild(this.sprite);
            }
            this.onAfterAttach();
        }
        if (this.physics) {
            this.physics.enable();
        }
    }
    Entity.prototype.selfAttach = selfAttach;
    return Entity;
})(DUST.GRAPHIC.Entity);

(function(Entity) {
    "use strict";
    function selfRemove() {
        if (this.sprite.parent) {
            this.onBeforeRemove();
            this.sprite.parent.removeChild(this.sprite);
            this.onAfterRemove();
        }
        if (this.physics) {
            this.physics.disable();
        }
    }
    Entity.prototype.selfRemove = selfRemove;
    return Entity;
})(DUST.GRAPHIC.Entity);

(function(Entity, animatable, stage) {
    "use strict";
    function enable() {
        this.sprite = animatable(this.sprite);
        stage.addToLoop(this.sprite.update, this.name);
    }
    function disable() {
        stage.removeFromLoop(this.name);
        this.sprite.animationIndex = null;
        this.sprite.update = null;
        this.sprite.animate = null;
        this.sprite.queue = null;
        this.sprite.speed = null;
        this.sprite.acceleration = null;
        this.sprite.targetPosition = null;
        this.sprite.targetScale = null;
        this.sprite.targetAlpha = null;
    }
    Entity.prototype.animationEnable = enable;
    Entity.prototype.animationDisable = disable;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.animatable, DUST.GRAPHIC.stage);

DUST.GRAPHIC.Entity.prototype.types = {};

(function(Entity, addToCanvas, setPosition, PIXI) {
    "use strict";
    function bitmapText(options) {
        var textOptions = {
            font: options.font.size + "px" + " " + options.font.family,
            align: options.align
        };
        if (options.wordWrap) {
            textOptions.wordWrap = true;
            textOptions.wordWrapWidth = options.wordWrap;
        }
        var object = new PIXI.BitmapText(options.text, textOptions), bitmapTextCall = function() {
            addToCanvas({
                object: object,
                container: options.container.sprite || options.container,
                at: options.at
            });
        };
        object.position = setPosition({
            options: options,
            item: object
        });
        object.container = options.container;
        if (!options.disabled) {
            bitmapTextCall();
        } else {
            object.render = bitmapTextCall;
        }
        return object;
    }
    Entity.prototype.types.bitmapText = bitmapText;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.addToCanvas, DUST.GRAPHIC.HELPERS.setPosition, PIXI);

(function(Entity, addToCanvas, setPosition, PIXI) {
    "use strict";
    function container(options) {
        var object;
        if (options.batch) {
            object = new PIXI.SpriteBatch();
        } else {
            object = new PIXI.DisplayObjectContainer();
        }
        object.container = options.container;
        object.position = setPosition({
            options: options,
            item: object
        });
        addToCanvas({
            object: object,
            container: options.container.sprite || options.container,
            at: options.at
        });
        return object;
    }
    Entity.prototype.types.container = container;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.addToCanvas, DUST.GRAPHIC.HELPERS.setPosition, PIXI);

(function(Entity, addToCanvas, setPosition, PIXI) {
    "use strict";
    function movieClip(options) {
        var object, textures = [], objectCall;
        options.asset.forEach(function(asset) {
            textures.push(PIXI.Texture.fromFrame(asset));
        });
        object = new PIXI.MovieClip(textures);
        objectCall = function() {
            addToCanvas({
                object: object,
                container: options.container.sprite || options.container,
                at: options.at
            });
        };
        object.loop = options.loop;
        if (options.onComplete) {
            object.onComplete = options.onComplete;
        } else {
            object.onComplete = function() {
                if (!object.loop) {
                    window.setTimeout(function() {
                        object.gotoAndStop(0);
                    }, 0);
                }
            };
        }
        object.animationSpeed = options.speed || 1;
        object.container = options.container;
        object.position = setPosition({
            options: options,
            item: object
        });
        if (options.anchor) {
            object.anchor.x = options.anchor.x;
            object.anchor.y = options.anchor.y;
        } else {
            object.anchor.x = .5;
            object.anchor.y = .5;
        }
        if (options.scale) {
            object.scale.x = options.scale.x;
            object.scale.y = options.scale.y;
        }
        object.rotation = options.rotation;
        if (!options.disabled) {
            objectCall();
        } else {
            object.render = objectCall;
        }
        object.play();
        return object;
    }
    Entity.prototype.types.movieClip = movieClip;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.addToCanvas, DUST.GRAPHIC.HELPERS.setPosition, PIXI);

(function(Entity, addToCanvas, setPosition, baseUrl, PIXI) {
    "use strict";
    function spine(options) {
        var object = new PIXI.Spine(baseUrl.current() + options.asset);
        addToCanvas({
            object: object,
            container: options.container.sprite || options.container,
            at: options.at
        });
        if (options.scale) {
            object.scale.x = options.scale.x;
            object.scale.y = options.scale.y;
        }
        if (options.skin) {
            object.skeleton.setSkinByName(options.skin);
            object.type = options.skin;
            object.skeleton.setSlotsToSetupPose();
        }
        object.container = options.container;
        object.position = setPosition({
            options: options,
            item: object
        });
        object.rotation = options.rotation;
        object.pivot.x = .5;
        object.pivot.y = .5;
        if (options.animation) {
            options.animation(object);
        }
        return object;
    }
    Entity.prototype.types.spine = spine;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.addToCanvas, DUST.GRAPHIC.HELPERS.setPosition, DUST.ASSETS.baseUrl, PIXI);

(function(Entity, addToCanvas, setPosition, textureFromFile, PIXI) {
    "use strict";
    function spriteFromFile(options) {
        var texture, object, objectCall;
        texture = textureFromFile(options.asset);
        object = new PIXI.Sprite(texture);
        objectCall = function() {
            addToCanvas({
                object: object,
                container: options.container.sprite || options.container,
                at: options.at
            });
        };
        object.position = setPosition({
            options: options,
            item: object
        });
        object.container = options.container;
        if (options.anchor) {
            object.anchor.x = options.anchor.x;
            object.anchor.y = options.anchor.y;
        } else {
            object.anchor.x = .5;
            object.anchor.y = .5;
        }
        if (options.scale) {
            object.scale.x = options.scale.x;
            object.scale.y = options.scale.y;
        }
        object.rotation = options.rotation;
        if (!options.disabled) {
            objectCall();
        } else {
            object.render = objectCall;
        }
        return object;
    }
    Entity.prototype.types.spriteFromFile = spriteFromFile;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.addToCanvas, DUST.GRAPHIC.HELPERS.setPosition, DUST.GRAPHIC.HELPERS.textureFromFile, PIXI);

(function(Entity, addToCanvas, setPosition, PIXI, requestAnimationFrame) {
    "use strict";
    function spriteFromFrame(options) {
        var object, objectCall;
        object = new PIXI.Sprite.fromFrame(options.asset);
        objectCall = function(extra) {
            addToCanvas({
                object: object,
                container: options.container.sprite || options.container,
                at: options.at
            });
            if (object.delayed) {
                requestAnimationFrame(function() {
                    if (extra) {
                        extra();
                    }
                    object.visible = true;
                    object.renderable = true;
                });
            } else {
                if (extra) {
                    extra();
                }
                object.visible = true;
                object.renderable = true;
            }
        };
        object.position = setPosition({
            options: options,
            item: object
        });
        object.delayed = options.delayed;
        object.container = options.container;
        if (options.anchor) {
            object.anchor.x = options.anchor.x;
            object.anchor.y = options.anchor.y;
        } else {
            object.anchor.x = .5;
            object.anchor.y = .5;
        }
        if (options.scale) {
            object.scale.x = options.scale.x;
            object.scale.y = options.scale.y;
        }
        object.rotation = options.rotation;
        if (!options.disabled) {
            objectCall();
        } else {
            object.renderable = false;
            object.visible = false;
            object.render = objectCall;
        }
        return object;
    }
    Entity.prototype.types.spriteFromFrame = spriteFromFrame;
    return Entity;
})(DUST.GRAPHIC.Entity, DUST.GRAPHIC.HELPERS.addToCanvas, DUST.GRAPHIC.HELPERS.setPosition, PIXI, requestAnimationFrame);

DUST.ASSETS.PROGRESS = {};

DUST.ASSETS.PROGRESS.completed = function() {
    "use strict";
    var handler = function() {
        console.log("All assets loaded");
    };
    var setHandler = function(loadHandler) {
        handler = loadHandler;
    };
    var runHandler = function() {
        handler();
    };
    return {
        runHandler: runHandler,
        setHandler: setHandler
    };
}();

DUST.ASSETS.PROGRESS.counter = function() {
    "use strict";
    var total = 0;
    var completed = 0;
    var onCounterChange = function(completed, total) {};
    var setTotal = function(list) {
        total = list.graphic.length + list.audio.length + list.audioSprite.length;
    };
    var complete = function() {
        completed += 1;
        onCounterChange(completed, total);
    };
    var allDone = function() {
        if (total === completed) {
            return true;
        }
    };
    var setCounterChange = function(counterChange) {
        onCounterChange = counterChange;
    };
    return {
        complete: complete,
        allDone: allDone,
        setTotal: setTotal,
        setCounterChange: setCounterChange
    };
}();

DUST.ASSETS.PROGRESS.next = function(counter, completed) {
    "use strict";
    return function() {
        counter.complete();
        if (counter.allDone()) {
            completed.runHandler();
        }
    };
}(DUST.ASSETS.PROGRESS.counter, DUST.ASSETS.PROGRESS.completed);

DUST.ASSETS.AUDIO = {};

DUST.ASSETS.AUDIO.load = function(next) {
    "use strict";
    return function(asset) {
        var sfx, supported = [];
        supported.push(asset);
        sfx = new Howl({
            urls: supported,
            onload: function() {
                next();
            }
        });
        sfx._muted = false;
        return {
            play: function(loop) {
                sfx.volume(1);
                sfx.loop(loop);
                sfx.play();
            },
            stop: function() {
                sfx.volume(0);
            }
        };
    };
}(DUST.ASSETS.PROGRESS.next);

DUST.ASSETS.AUDIO.loadSprite = function(next, Howl) {
    "use strict";
    return function(sprite) {
        var sfx;
        sprite.onload = function() {
            next();
        };
        sfx = new Howl(sprite);
        return {
            play: function(name) {
                sfx.play(name);
            },
            stop: function() {
                sfx.stop();
            },
            sprite: sfx._sprite
        };
    };
}(DUST.ASSETS.PROGRESS.next, Howl);

DUST.ASSETS.AUDIO.init = function(loadAudio, loadAudioSprite, baseUrl, Howler) {
    "use strict";
    var cachedSounds = {};
    var cachedSprites = [];
    var getName = function(asset) {
        return asset.split(".")[0].match(".*/(.*)")[1];
    };
    var load = function(sounds) {
        sounds.forEach(function(sound) {
            var name = getName(sound);
            cachedSounds[name] = loadAudio(baseUrl.current() + sound);
        });
    };
    var loadSprite = function(sprites) {
        sprites.forEach(function(sprite) {
            sprite.urls.forEach(function(url, key) {
                sprite.urls[key] = baseUrl.current() + url;
            });
            cachedSprites.push(loadAudioSprite(sprite));
        });
    };
    var play = function(name, loop) {
        if (cachedSounds[name]) {
            cachedSounds[name].play(loop);
        } else {
            cachedSprites.forEach(function(cachedSprite) {
                if (cachedSprite.sprite[name]) {
                    cachedSprite.play(name);
                }
            });
        }
    };
    var stop = function(name) {
        if (cachedSounds[name]) {
            cachedSounds[name].stop();
        } else {
            cachedSprites.forEach(function(cachedSprite) {
                if (cachedSprite.sprite[name]) {
                    cachedSprite.stop();
                }
            });
        }
    };
    var toggle = function() {
        var HowlerLocal = Howler || {};
        if (HowlerLocal._muted) {
            HowlerLocal.unmute();
        } else {
            HowlerLocal.mute();
        }
    };
    var mute = function() {
        var HowlerLocal = Howler || {
            mute: function() {},
            unmute: function() {}
        };
        HowlerLocal.mute();
    };
    var unmute = function() {
        var HowlerLocal = Howler || {
            mute: function() {},
            unmute: function() {}
        };
        HowlerLocal.unmute();
    };
    return {
        load: load,
        loadSprite: loadSprite,
        play: play,
        toggle: toggle,
        stop: stop,
        mute: mute,
        unmute: unmute
    };
}(DUST.ASSETS.AUDIO.load, DUST.ASSETS.AUDIO.loadSprite, DUST.ASSETS.baseUrl, Howler);

DUST.ASSETS.graphic = function(next, baseUrl, PIXI) {
    "use strict";
    return function(graphics) {
        var loader;
        graphics.forEach(function(graphic, key) {
            graphics[key] = baseUrl.current() + graphic;
        });
        loader = new PIXI.AssetLoader(graphics, true);
        loader.onProgress = next;
        loader.load();
    };
}(DUST.ASSETS.PROGRESS.next, DUST.ASSETS.baseUrl, PIXI);

DUST.ASSETS.init = function(graphic, audio, counter, baseUrl) {
    "use strict";
    var setCounter = function(list) {
        counter.setTotal(list);
    };
    var loadGraphic = function(list) {
        graphic(list);
    };
    var loadAudio = function(list) {
        audio.load(list);
    };
    var loadAudioSprite = function(list) {
        audio.loadSprite(list);
    };
    return function(settings) {
        var assetList = settings.assetList, url = settings.baseUrl;
        baseUrl.update(url);
        setCounter(assetList);
        loadAudio(assetList.audio);
        loadAudioSprite(assetList.audioSprite);
        loadGraphic(assetList.graphic);
    };
}(DUST.ASSETS.graphic, DUST.ASSETS.AUDIO.init, DUST.ASSETS.PROGRESS.counter, DUST.ASSETS.baseUrl);

DUST.init = function(graphic, resize, assets, completed) {
    "use strict";
    var gameStarted = false;
    return function(settings) {
        var viewPort = settings.viewPort, rotate = settings.rotate, game = settings.game, baseUrl = settings.baseUrl || "", assetList = settings.assetList;
        viewPort.screenToSmall = function() {
            if (gameStarted) {
                rotate.show();
            }
        };
        viewPort.screenOk = function() {
            if (gameStarted) {
                rotate.hide();
            }
        };
        var startGame = function() {
            gameStarted = true;
            game();
            resize(viewPort);
        };
        var initializeStage = function() {
            return graphic(viewPort);
        };
        var loadAssets = function() {
            assets({
                assetList: assetList,
                baseUrl: baseUrl
            });
        };
        initializeStage();
        loadAssets();
        completed.setHandler(startGame);
    };
}(DUST.GRAPHIC.init, DUST.GRAPHIC.resize, DUST.ASSETS.init, DUST.ASSETS.PROGRESS.completed);

function NStorage() {}

function GetInvitationsResponse() {}

function InvitationRefusedNotification() {}

function ConsumeItemRequest() {}

function GetPlayerWalletResponse() {}

function NFriendDemand() {}

function UnjoinGameRequest() {}

function T5536() {}

function NAchievementBoard() {}

function NMatchAndJoinGameExpiredNotification() {}

function NScore() {}

function AskForFriendStatus() {}

function SubmitScoreRequest() {}

function GetInvitationsRequest() {}

function GetStorablesResponse() {}

function NRawMessage() {}

function SaveGameRequest() {}

function LoadGameResponse() {}

function CreateGameRequest() {}

function ThirdPartyLoginResponse() {}

function GetPlayersRequest() {}

function ConnectionStop() {}

function AcceptFriendDemandRequest() {}

function FriendConnectedNotification() {}

function OpenConnection() {}

function T5516() {}

function AcceptFriendDemandStatus() {}

function InvitationExpiredNotification() {}

function NMatchMakingConditions() {}

function GetGamesResponse() {}

function T5526() {}

function GetPlayerWalletStatus() {}

function GameMessage() {}

function StartGameStatus() {}

function SetPlayerNameRequest() {}

function DnsRequest() {}

function ThirdPartyMethodType() {}

function ErrorCode() {}

function MyTurnNotification() {}

function NGame() {}

function SendGameChatToPlayerListRequest() {}

function StartGameResponse() {}

function GetPlayerProfileStatus() {}

function ConsumeItemResponse() {}

function T5537() {}

function SendGameChatToPlayerRequest() {}

function MemoryManagement() {}

function Message() {}

function ResumeSessionMonitoringRequest() {}

function Net() {}

function DnsStatus() {}

function NMatrix2() {}

function SendGameChatRequest() {}

function IncreasePlayerWalletStatus() {}

function GetPlayerProfileByPlayerIdStatus() {}

function ConnectionFail() {}

function SaveStorableResponse() {}

function AchieveWithProgressResponse() {}

function ByteUtil() {}

function AcceptFriendDemandResponse() {}

function NuggetaCoreDomain() {}

function GetPlayerWalletRequest() {}

function GetAchievementsResponse() {}

function BinaryOutputStream() {}

function BuyItemResponse() {}

function SendGameChatToPlayerStatus() {}

function LoadGameStatus() {}

function SendGameChatToPlayerResponse() {}

function StopPlugConnectionRequest() {}

function T5517() {}

function AbstractRoom() {}

function AchieveResponse() {}

function AcceptInvitationStatus() {}

function CreatePlayerRequest() {}

function T5528() {}

function StringOutputStream() {}

function HeartBeatResponse() {}

function GetPlayerProfileRequest() {}

function SwitchPlayerRequest() {}

function AskForFriendRequest() {}

function NError() {}

function T5531() {}

function IncreasePlayerWalletRequest() {}

function NuggetaGameCoreDispatcher() {}

function SetPlayerNameResponse() {}

function DnsResponse() {}

function ThirdPartyLoginStatus() {}

function NuggetaQuery() {}

function NLeaderboard() {}

function InvitePlayerRequest() {}

function Byte2DArray() {}

function CreateGameResponse() {}

function GetItemsStatus() {}

function RemoveStorableRequest() {}

function HandshakeState() {}

function PlayerEnterGame() {}

function ExecutionStatus() {}

function NLeaderboardEntry() {}

function LeaderboardPeriod() {}

function GetPlayerProfileResponse() {}

function SetPlayerNameStatus() {}

function ClientApplication() {}

function PlayerUnjoinGame() {}

function RefuseInvitationResponse() {}

function GetFriendsRequest() {}

function NGameCharacteristics() {}

function StopGameStatus() {}

function NextPlayerTurnResponse() {}

function NSystem() {}

function NRawGameMessage() {}

function T5522() {}

function NDomainList() {}

function SavePlayerProfileStatus() {}

function LoadGhostRequest() {}

function AchieveWithProgressStatus() {}

function LoginResponse() {}

function SaveAsGhostRequest() {}

function SessionExpired() {}

function NPlayer() {}

function StringUtil() {}

function StartGameRequest() {}

function SecurityUtils() {}

function T5515() {}

function Utils() {}

function SendGameChatResponse() {}

function InvitationRequestNotification() {}

function NextPlayerTurnRequest() {}

function NFriendDemandStatus() {}

function GetPlayerProfileByPlayerIdResponse() {}

function PlayerMessage() {}

function PauseSessionMonitoringRequest() {}

function AchieveWithProgressRequest() {}

function PauseSessionMonitoringResponse() {}

function StartStatus() {}

function IncreasePlayerWalletResponse() {}

function NuggetaCoreApi() {}

function SendGameChatToPlayerListStatus() {}

function StartRequest() {}

function ConnectionLost() {}

function SaveStorableStatus() {}

function SwitchToServerInformation() {}

function NConnectionConf() {}

function UpdateStorableStatus() {}

function T5529() {}

function JSONArray() {}

function Handshake() {}

function BasicNuggetaPlug() {}

function LogoutRequest() {}

function ThirdPartySource() {}

function BinaryInputStream() {}

function ForgotPasswordRequest() {}

function RefuseFriendDemandRequest() {}

function ConsumeItemStatus() {}

function GameRunningStateChange() {}

function RemoveStorableResponse() {}

function AES() {}

function GetGhostsStatus() {}

function InvitePlayerResponse() {}

function JoinGameResponse() {}

function OpenUrlData() {}

function JSONObject() {}

function RefuseInvitationRequest() {}

function SaveAsGhostStatus() {}

function GetGamesRequest() {}

function StrBuilder() {}

function GetGhostsResponse() {}

function CompositeNDomainList() {}

function SaveGameStatus() {}

function NextPlayerTurnStatus() {}

function NPlayerProfile() {}

function ForgotPasswordResponse() {}

function AdApiImpl() {}

function JsonOutputStream() {}

function CreatePlayerStatus() {}

function FriendshipNotification() {}

function PauseSessionMonitoringStatus() {}

function SerializationTypes() {}

function GetFriendDemandsStatus() {}

function T5534() {}

function DomainMessageListener() {}

function GetGhostsRequest() {}

function PlayerSessionType() {}

function DisconnectedContext() {}

function NUrlEncoder() {}

function UpdateStorableRequest() {}

function GetGamesStatus() {}

function LogoutResponse() {}

function GetItemsRequest() {}

function Platform() {}

function GetStorablesRequest() {}

function T5525() {}

function NGameInvitation() {}

function SendGameChatToPlayerListResponse() {}

function LoginStatus() {}

function GetStorablesStatus() {}

function LoginRequest() {}

function InvalidVersion() {}

function AchieveRequest() {}

function LoadGhostStatus() {}

function LoadGhostResponse() {}

function NInvitationStatus() {}

function SlaveConnectionNotification() {}

function NItem() {}

function AbstractNuggetaApi() {}

function GetScoresResponse() {}

function GetFriendDemandsRequest() {}

function MatchAndJoinGameResponse() {}

function NWorldUpdate() {}

function T5530() {}

function StopPlugConnectionResponse() {}

function GetInvitationsStatus() {}

function NLoggerFactory() {}

function ResumeSessionMonitoringResponse() {}

function BuyItemRequest() {}

function RemoveStorableStatus() {}

function GetScoresRequest() {}

function OpenUrl() {}

function SaveStorableRequest() {}

function T5520() {}

function NRoom() {}

function NLoggerImpl() {}

function BinaryStream() {}

function NInvitation() {}

function StringInputStream() {}

function NAchievement() {}

function CreateGameStatus() {}

function NSocketImpl() {}

function GetScoresStatus() {}

function JoinGameRequest() {}

function SavePlayerProfileRequest() {}

function GetPlayersStatus() {}

function Notifications() {}

function T5511() {}

function SaveGameResponse() {}

function InvitationAcceptedNotification() {}

function InvitePlayerStatus() {}

function ForgotPasswordStatus() {}

function SavePlayerProfileResponse() {}

function ByteBuffer() {}

function NPlayerWallet() {}

function LoadGameRequest() {}

function SendGameChatStatus() {}

function AchieveStatus() {}

function StartResponse() {}

function NuggetaGameCoreApi() {}

function UpdateStorableResponse() {}

function T5524() {}

function ConnectionReady() {}

function AcceptInvitationRequest() {}

function StartDetails() {}

function GameRunningState() {}

function T5518() {}

function GetPlayerProfileByPlayerIdRequest() {}

function Pump() {}

function T5519() {}

function RefuseFriendDemandResponse() {}

function HeartBeatRequest() {}

function GetAchievementsStatus() {}

function AskForFriendResponse() {}

function PlayerTurnNotification() {}

function RefuseFriendDemandStatus() {}

function NuggetaExceptionMessage() {}

function NGameState() {}

function StopGameResponse() {}

function NArrays() {}

function TurnBasedContext() {}

function NuggetaGameApi() {}

function NuggetaGamePlug() {}

function ThirdPartyLoginRequest() {}

function GetPlayersResponse() {}

function UnjoinGameStatus() {}

function PlayerState() {}

function T5523() {}

function FriendDisconnectedNotification() {}

function NAlert() {}

function GetFriendsResponse() {}

function StopGameRequest() {}

function MatchAndJoinGameRequest() {}

function NStore() {}

function UnjoinGameResponse() {}

function T5532() {}

function GetAchievementsRequest() {}

function CreatePlayerResponse() {}

function LeaderboardOrder() {}

function LogoutStatus() {}

function NuggetaGameCoreDomain() {}

function ResumeSessionMonitoringStatus() {}

function GetItemsResponse() {}

function NHttpRequestImpl() {}

function GetFriendsStatus() {}

function JsonInputStream() {}

function SubmitScoreStatus() {}

function AcceptInvitationResponse() {}

function HandshakeResponse() {}

function BuyItemStatus() {}

function T5527() {}

function NDomain() {}

function GameMessageError() {}

function NuggetaException() {}

function RefuseInvitationStatus() {}

function SubmitScoreResponse() {}

function Storable() {}

function T5512() {}

function MatchMakingType() {}

function JoinGameStatus() {}

function T5535() {}

function GameChatNotification() {}

function NuggetaCoreDispatcher() {}

function NAchievementType() {}

function SerializerFactoryType() {}

function StringStream() {}

function SaveAsGhostResponse() {}

function MatchAndJoinGameStatus() {}

function GetFriendDemandsResponse() {}

function FriendDemandNotification() {}

Storable.prototype.init = function() {
    this._StoreIdSet = !1;
    return this;
};

Storable.prototype.getStoreId = function() {
    return this._StoreId;
};

Storable.prototype.setStoreId = function(c) {
    this._StoreId = c;
    this._StoreIdSet = !0;
};

Storable.prototype.isStoreIdSet = function() {
    return this._StoreIdSet;
};

Storable.prototype.unSetStoreId = function() {
    this._StoreIdSet = !1;
};

Storable.prototype.clone = function() {
    return null;
};

Storable.prototype.getDomainID = function() {
    return -1;
};

Storable.prototype.getSerializerID = function() {
    return -1;
};

Storable.prototype.toString = function() {
    return "";
};

Message.prototype = new Storable();

Message.prototype.constructor = Message;

Message.prototype.init = function() {
    this._RequestIdSet = this._MessageIdSet = this._SenderIdSet = !1;
    return this;
};

Message.prototype.getSenderId = function() {
    return this._SenderId;
};

Message.prototype.setSenderId = function(c) {
    this._SenderId = c;
    this._SenderIdSet = !0;
};

Message.prototype.isSenderIdSet = function() {
    return this._SenderIdSet;
};

Message.prototype.unSetSenderId = function() {
    this._SenderIdSet = !1;
};

Message.prototype.getMessageId = function() {
    return this._MessageId;
};

Message.prototype.setMessageId = function(c) {
    this._MessageId = c;
    this._MessageIdSet = !0;
};

Message.prototype.isMessageIdSet = function() {
    return this._MessageIdSet;
};

Message.prototype.unSetMessageId = function() {
    this._MessageIdSet = !1;
};

Message.prototype.getRequestId = function() {
    return this._RequestId;
};

Message.prototype.setRequestId = function(c) {
    this._RequestId = c;
    this._RequestIdSet = !0;
};

Message.prototype.isRequestIdSet = function() {
    return this._RequestIdSet;
};

Message.prototype.unSetRequestId = function() {
    this._RequestIdSet = !1;
};

Message.prototype.clone = function() {
    return null;
};

Message.prototype.getDomainID = function() {
    return -1;
};

Message.prototype.getSerializerID = function() {
    return -1;
};

Message.prototype.toString = function() {
    return "";
};

GetInvitationsResponse.prototype = new Message();

GetInvitationsResponse.prototype.constructor = GetInvitationsResponse;

GetInvitationsResponse.prototype.init = function() {
    this._GetInvitationsStatusSet = !1;
    this._invitations = [];
    this._invitationsSet = !1;
    return this;
};

GetInvitationsResponse.prototype.getGetInvitationsStatus = function() {
    return this._GetInvitationsStatus;
};

GetInvitationsResponse.prototype.setGetInvitationsStatus = function(c) {
    this._GetInvitationsStatus = c;
    this._GetInvitationsStatusSet = !0;
};

GetInvitationsResponse.prototype.isGetInvitationsStatusSet = function() {
    return this._GetInvitationsStatusSet;
};

GetInvitationsResponse.prototype.unSetGetInvitationsStatus = function() {
    this._GetInvitationsStatusSet = !1;
};

GetInvitationsResponse.prototype.getInvitations = function() {
    this._invitationsSet = !0;
    return this._invitations;
};

GetInvitationsResponse.prototype.setInvitations = function(c) {
    this._invitations = c;
    this._invitationsSet = !0;
};

GetInvitationsResponse.prototype.isinvitationsSet = function() {
    return this._invitationsSet;
};

GetInvitationsResponse.prototype.unSetinvitations = function() {
    this._invitationsSet = !1;
};

GetInvitationsResponse.prototype.getDomainID = function() {
    return GetInvitationsResponse.domainID;
};

GetInvitationsResponse.prototype.getSerializerID = function() {
    return GetInvitationsResponse.serializerID;
};

GetInvitationsResponse.prototype.toString = function() {
    var c;
    c = "[GetInvitationsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetInvitationsStatusSet && 0 == Utils.isNull(this._GetInvitationsStatus) && (c += "_GetInvitationsStatus=" + this._GetInvitationsStatus + "| ");
    1 == this._invitationsSet && 0 == Utils.isNull(this._invitations) && (c += "_invitations=" + this._invitations + "| ");
    return c + "]";
};

GetInvitationsResponse.prototype.clone = function() {
    var c = new GetInvitationsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetInvitationsStatusSet && 0 == Utils.isNull(this._GetInvitationsStatus) && c.setGetInvitationsStatus(this._GetInvitationsStatus);
    if (1 == this._invitationsSet && 0 == Utils.isNull(this._invitations)) {
        for (var a = [], b = 0; b < this._invitations.length; ++b) {
            var e = this._invitations[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setInvitations(a);
    }
    return c;
};

GetInvitationsResponse.domainID = 100;

GetInvitationsResponse.serializerID = 10172;

InvitationRefusedNotification.prototype = new Message();

InvitationRefusedNotification.prototype.constructor = InvitationRefusedNotification;

InvitationRefusedNotification.prototype.init = function() {
    this._InvitationSet = !1;
    return this;
};

InvitationRefusedNotification.prototype.getInvitation = function() {
    return this._Invitation;
};

InvitationRefusedNotification.prototype.setInvitation = function(c) {
    this._Invitation = c;
    this._InvitationSet = !0;
};

InvitationRefusedNotification.prototype.isInvitationSet = function() {
    return this._InvitationSet;
};

InvitationRefusedNotification.prototype.unSetInvitation = function() {
    this._InvitationSet = !1;
};

InvitationRefusedNotification.prototype.getDomainID = function() {
    return InvitationRefusedNotification.domainID;
};

InvitationRefusedNotification.prototype.getSerializerID = function() {
    return InvitationRefusedNotification.serializerID;
};

InvitationRefusedNotification.prototype.toString = function() {
    var c;
    c = "[InvitationRefusedNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && (c += "_Invitation=" + this._Invitation + "| ");
    return c + "]";
};

InvitationRefusedNotification.prototype.clone = function() {
    var c = new InvitationRefusedNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && c.setInvitation(this._Invitation.clone());
    return c;
};

InvitationRefusedNotification.domainID = 100;

InvitationRefusedNotification.serializerID = 3051;

ConsumeItemRequest.prototype = new Message();

ConsumeItemRequest.prototype.constructor = ConsumeItemRequest;

ConsumeItemRequest.prototype.init = function() {
    this._quantitySet = this._itemIdSet = !1;
    return this;
};

ConsumeItemRequest.prototype.getItemId = function() {
    return this._itemId;
};

ConsumeItemRequest.prototype.setItemId = function(c) {
    this._itemId = c;
    this._itemIdSet = !0;
};

ConsumeItemRequest.prototype.isitemIdSet = function() {
    return this._itemIdSet;
};

ConsumeItemRequest.prototype.unSetitemId = function() {
    this._itemIdSet = !1;
};

ConsumeItemRequest.prototype.getQuantity = function() {
    return this._quantity;
};

ConsumeItemRequest.prototype.setQuantity = function(c) {
    this._quantity = c;
    this._quantitySet = !0;
};

ConsumeItemRequest.prototype.isquantitySet = function() {
    return this._quantitySet;
};

ConsumeItemRequest.prototype.unSetquantity = function() {
    this._quantitySet = !1;
};

ConsumeItemRequest.prototype.getDomainID = function() {
    return ConsumeItemRequest.domainID;
};

ConsumeItemRequest.prototype.getSerializerID = function() {
    return ConsumeItemRequest.serializerID;
};

ConsumeItemRequest.prototype.toString = function() {
    var c;
    c = "[ConsumeItemRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._itemIdSet && 0 == Utils.isNull(this._itemId) && (c += "_itemId=" + this._itemId + "| ");
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && (c += "_quantity=" + this._quantity + "| ");
    return c + "]";
};

ConsumeItemRequest.prototype.clone = function() {
    var c = new ConsumeItemRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._itemIdSet && 0 == Utils.isNull(this._itemId) && c.setItemId(this._itemId);
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && c.setQuantity(this._quantity);
    return c;
};

ConsumeItemRequest.domainID = 100;

ConsumeItemRequest.serializerID = 10054;

GetPlayerWalletResponse.prototype = new Message();

GetPlayerWalletResponse.prototype.constructor = GetPlayerWalletResponse;

GetPlayerWalletResponse.prototype.init = function() {
    this._walletSet = this._GetPlayerWalletStatusSet = !1;
    return this;
};

GetPlayerWalletResponse.prototype.getGetPlayerWalletStatus = function() {
    return this._GetPlayerWalletStatus;
};

GetPlayerWalletResponse.prototype.setGetPlayerWalletStatus = function(c) {
    this._GetPlayerWalletStatus = c;
    this._GetPlayerWalletStatusSet = !0;
};

GetPlayerWalletResponse.prototype.isGetPlayerWalletStatusSet = function() {
    return this._GetPlayerWalletStatusSet;
};

GetPlayerWalletResponse.prototype.unSetGetPlayerWalletStatus = function() {
    this._GetPlayerWalletStatusSet = !1;
};

GetPlayerWalletResponse.prototype.getWallet = function() {
    return this._wallet;
};

GetPlayerWalletResponse.prototype.setWallet = function(c) {
    this._wallet = c;
    this._walletSet = !0;
};

GetPlayerWalletResponse.prototype.iswalletSet = function() {
    return this._walletSet;
};

GetPlayerWalletResponse.prototype.unSetwallet = function() {
    this._walletSet = !1;
};

GetPlayerWalletResponse.prototype.getDomainID = function() {
    return GetPlayerWalletResponse.domainID;
};

GetPlayerWalletResponse.prototype.getSerializerID = function() {
    return GetPlayerWalletResponse.serializerID;
};

GetPlayerWalletResponse.prototype.toString = function() {
    var c;
    c = "[GetPlayerWalletResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetPlayerWalletStatusSet && 0 == Utils.isNull(this._GetPlayerWalletStatus) && (c += "_GetPlayerWalletStatus=" + this._GetPlayerWalletStatus + "| ");
    1 == this._walletSet && 0 == Utils.isNull(this._wallet) && (c += "_wallet=" + this._wallet + "| ");
    return c + "]";
};

GetPlayerWalletResponse.prototype.clone = function() {
    var c = new GetPlayerWalletResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetPlayerWalletStatusSet && 0 == Utils.isNull(this._GetPlayerWalletStatus) && c.setGetPlayerWalletStatus(this._GetPlayerWalletStatus);
    1 == this._walletSet && 0 == Utils.isNull(this._wallet) && c.setWallet(this._wallet.clone());
    return c;
};

GetPlayerWalletResponse.domainID = 100;

GetPlayerWalletResponse.serializerID = 10061;

NFriendDemand.prototype = new Storable();

NFriendDemand.prototype.constructor = NFriendDemand;

NFriendDemand.prototype.init = function() {
    this._IdSet = this._FriendDemandStatusSet = this._CustomMessageSet = this._ReceiverIdSet = this._EmitterSet = !1;
    return this;
};

NFriendDemand.prototype.getEmitter = function() {
    return this._Emitter;
};

NFriendDemand.prototype.setEmitter = function(c) {
    this._Emitter = c;
    this._EmitterSet = !0;
};

NFriendDemand.prototype.isEmitterSet = function() {
    return this._EmitterSet;
};

NFriendDemand.prototype.unSetEmitter = function() {
    this._EmitterSet = !1;
};

NFriendDemand.prototype.getReceiverId = function() {
    return this._ReceiverId;
};

NFriendDemand.prototype.setReceiverId = function(c) {
    this._ReceiverId = c;
    this._ReceiverIdSet = !0;
};

NFriendDemand.prototype.isReceiverIdSet = function() {
    return this._ReceiverIdSet;
};

NFriendDemand.prototype.unSetReceiverId = function() {
    this._ReceiverIdSet = !1;
};

NFriendDemand.prototype.getCustomMessage = function() {
    return this._CustomMessage;
};

NFriendDemand.prototype.setCustomMessage = function(c) {
    this._CustomMessage = c;
    this._CustomMessageSet = !0;
};

NFriendDemand.prototype.isCustomMessageSet = function() {
    return this._CustomMessageSet;
};

NFriendDemand.prototype.unSetCustomMessage = function() {
    this._CustomMessageSet = !1;
};

NFriendDemand.prototype.getFriendDemandStatus = function() {
    return this._FriendDemandStatus;
};

NFriendDemand.prototype.setFriendDemandStatus = function(c) {
    this._FriendDemandStatus = c;
    this._FriendDemandStatusSet = !0;
};

NFriendDemand.prototype.isFriendDemandStatusSet = function() {
    return this._FriendDemandStatusSet;
};

NFriendDemand.prototype.unSetFriendDemandStatus = function() {
    this._FriendDemandStatusSet = !1;
};

NFriendDemand.prototype.getId = function() {
    return this._Id;
};

NFriendDemand.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NFriendDemand.prototype.isIdSet = function() {
    return this._IdSet;
};

NFriendDemand.prototype.unSetId = function() {
    this._IdSet = !1;
};

NFriendDemand.prototype.getDomainID = function() {
    return NFriendDemand.domainID;
};

NFriendDemand.prototype.getSerializerID = function() {
    return NFriendDemand.serializerID;
};

NFriendDemand.prototype.toString = function() {
    var c;
    c = "[NFriendDemand --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._EmitterSet && 0 == Utils.isNull(this._Emitter) && (c += "_Emitter=" + this._Emitter + "| ");
    1 == this._ReceiverIdSet && 0 == Utils.isNull(this._ReceiverId) && (c += "_ReceiverId=" + this._ReceiverId + "| ");
    1 == this._CustomMessageSet && 0 == Utils.isNull(this._CustomMessage) && (c += "_CustomMessage=" + this._CustomMessage + "| ");
    1 == this._FriendDemandStatusSet && 0 == Utils.isNull(this._FriendDemandStatus) && (c += "_FriendDemandStatus=" + this._FriendDemandStatus + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    return c + "]";
};

NFriendDemand.prototype.clone = function() {
    var c = new NFriendDemand().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._EmitterSet && 0 == Utils.isNull(this._Emitter) && c.setEmitter(this._Emitter.clone());
    1 == this._ReceiverIdSet && 0 == Utils.isNull(this._ReceiverId) && c.setReceiverId(this._ReceiverId);
    1 == this._CustomMessageSet && 0 == Utils.isNull(this._CustomMessage) && c.setCustomMessage(this._CustomMessage);
    1 == this._FriendDemandStatusSet && 0 == Utils.isNull(this._FriendDemandStatus) && c.setFriendDemandStatus(this._FriendDemandStatus);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    return c;
};

NFriendDemand.domainID = 100;

NFriendDemand.serializerID = 3006;

UnjoinGameRequest.prototype = new Message();

UnjoinGameRequest.prototype.constructor = UnjoinGameRequest;

UnjoinGameRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

UnjoinGameRequest.prototype.getGameId = function() {
    return this._gameId;
};

UnjoinGameRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

UnjoinGameRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

UnjoinGameRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

UnjoinGameRequest.prototype.getDomainID = function() {
    return UnjoinGameRequest.domainID;
};

UnjoinGameRequest.prototype.getSerializerID = function() {
    return UnjoinGameRequest.serializerID;
};

UnjoinGameRequest.prototype.toString = function() {
    var c;
    c = "[UnjoinGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

UnjoinGameRequest.prototype.clone = function() {
    var c = new UnjoinGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

UnjoinGameRequest.domainID = 100;

UnjoinGameRequest.serializerID = 10075;

T5536.prototype.init = function() {
    return this;
};

T5536.prototype.write = function(c, a, b) {
    0 == a.getSerializerID() ? this._m26401(c, a, b) : 1 == a.getSerializerID() ? this._m26402(c, a, b) : 3002 == a.getSerializerID() ? this._m26403(c, a, b) : 3003 == a.getSerializerID() ? this._m26404(c, a, b) : 3004 == a.getSerializerID() ? this._m26405(c, a, b) : 3005 == a.getSerializerID() ? this._m26406(c, a, b) : 3006 == a.getSerializerID() ? this._m26407(c, a, b) : 3007 == a.getSerializerID() ? this._m26408(c, a, b) : 3008 == a.getSerializerID() ? this._m26409(c, a, b) : 3009 == a.getSerializerID() ? this._m26410(c, a, b) : 3010 == a.getSerializerID() ? this._m26411(c, a, b) : 3011 == a.getSerializerID() && this._m26412(c, a, b);
};

T5536.prototype._m26401 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5536.prototype._m26402 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5536.prototype._m26403 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isCounterSet() && JsonOutputStream.writeIntegerProperty(a.getCounter(), "Counter", b);
};

T5536.prototype._m26404 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isCounterSet() && JsonOutputStream.writeIntegerProperty(a.getCounter(), "Counter", b);
};

T5536.prototype._m26405 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
    1 == a.isGameVersionSet() && JsonOutputStream.writeIntegerProperty(a.getGameVersion(), "GameVersion", b);
    1 == a.isGameDeployedVersionSet() && JsonOutputStream.writeIntegerProperty(a.getGameDeployedVersion(), "GameDeployedVersion", b);
    1 == a.isPlatformSet() && JsonOutputStream.writeStringProperty(a.getPlatform(), "Platform", b);
};

T5536.prototype._m26406 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isIpAddressSet() && JsonOutputStream.writeStringProperty(a.getIpAddress(), "IpAddress", b);
    1 == a.isTcpPortSet() && JsonOutputStream.writeIntegerProperty(a.getTcpPort(), "TcpPort", b);
    1 == a.isDnsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getDnsStatus(), "DnsStatus", b);
    1 == a.isStartDetailsSet() && JsonOutputStream.writeObjectProperty(c, a.getStartDetails(), "StartDetails", b);
};

T5536.prototype._m26407 = function(c, a, b) {
    1 == a.isUseDefaultImplSet() && JsonOutputStream.writeBooleanProperty(a.isUseDefaultImpl(), "UseDefaultImpl", b);
    1 == a.isCurrentVersionSet() && JsonOutputStream.writeIntegerProperty(a.getCurrentVersion(), "CurrentVersion", b);
    1 == a.isNextVersionSet() && JsonOutputStream.writeIntegerProperty(a.getNextVersion(), "NextVersion", b);
    1 == a.isTitleSet() && JsonOutputStream.writeStringProperty(a.getTitle(), "Title", b);
    1 == a.isTextSet() && JsonOutputStream.writeStringProperty(a.getText(), "Text", b);
    1 == a.isUrlSet() && JsonOutputStream.writeStringProperty(a.getUrl(), "Url", b);
};

T5536.prototype._m26408 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5536.prototype._m26409 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5536.prototype._m26410 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isErrorCodeSet() && JsonOutputStream.writeObjectProperty(c, a.getErrorCode(), "ErrorCode", b);
    1 == a.isReasonSet() && JsonOutputStream.writeStringProperty(a.getReason(), "Reason", b);
};

T5536.prototype._m26411 = function(c, a, b) {
    1 == a.isdomainSet() && JsonOutputStream.writeStringProperty(a.getDomain(), "domain", b);
    1 == a.isstartSet() && JsonOutputStream.writeIntegerProperty(a.getStart(), "start", b);
    1 == a.islimitSet() && JsonOutputStream.writeIntegerProperty(a.getLimit(), "limit", b);
    1 == a.isquerySet() && JsonOutputStream.writeStringProperty(a.getQuery(), "query", b);
};

T5536.prototype._m26412 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.iscontentSet() && JsonOutputStream.writeStringProperty(a.getContent(), "content", b);
};

T5536.prototype.readSerializable = function(c, a, b) {
    if (0 == b) return this._m26413(c, a);
    if (1 == b) return this._m26414(c, a);
    if (3002 == b) return this._m26415(c, a);
    if (3003 == b) return this._m26416(c, a);
    if (3004 == b) return this._m26417(c, a);
    if (3005 == b) return this._m26418(c, a);
    if (3006 == b) return this._m26419(c, a);
    if (3007 == b) return this._m26420(c, a);
    if (3008 == b) return this._m26421(c, a);
    if (3009 == b) return this._m26422(c, a);
    if (3010 == b) return this._m26423(c, a);
    if (3011 == b) return this._m26424(c, a);
    throw new NError().init("No serializer found for type " + b, null);
};

T5536.prototype._m26413 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return DnsStatus.fromValue(b);
};

T5536.prototype._m26414 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ErrorCode.fromValue(b);
};

T5536.prototype._m26415 = function(c, a) {
    var b = new HeartBeatRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setCounter(JsonInputStream.readInteger(a, "Counter"));
    return b;
};

T5536.prototype._m26416 = function(c, a) {
    var b = new HeartBeatResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setCounter(JsonInputStream.readInteger(a, "Counter"));
    return b;
};

T5536.prototype._m26417 = function(c, a) {
    var b = new DnsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    b.setGameVersion(JsonInputStream.readInteger(a, "GameVersion"));
    b.setGameDeployedVersion(JsonInputStream.readInteger(a, "GameDeployedVersion"));
    e = JsonInputStream.readString(a, "Platform");
    b.setPlatform(e);
    MemoryManagement.free(e);
    return b;
};

T5536.prototype._m26418 = function(c, a) {
    var b = new DnsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "IpAddress");
    b.setIpAddress(e);
    MemoryManagement.free(e);
    b.setTcpPort(JsonInputStream.readInteger(a, "TcpPort"));
    b.setDnsStatus(JsonInputStream.readObject(c, a, "DnsStatus"));
    b.setStartDetails(JsonInputStream.readObject(c, a, "StartDetails"));
    return b;
};

T5536.prototype._m26419 = function(c, a) {
    var b = new StartDetails().init();
    b.setUseDefaultImpl(JsonInputStream.readBoolean(a, "UseDefaultImpl"));
    b.setCurrentVersion(JsonInputStream.readInteger(a, "CurrentVersion"));
    b.setNextVersion(JsonInputStream.readInteger(a, "NextVersion"));
    var e = JsonInputStream.readString(a, "Title");
    b.setTitle(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Text");
    b.setText(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Url");
    b.setUrl(e);
    MemoryManagement.free(e);
    return b;
};

T5536.prototype._m26420 = function(c, a) {
    var b = new StopPlugConnectionRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5536.prototype._m26421 = function(c, a) {
    var b = new StopPlugConnectionResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5536.prototype._m26422 = function(c, a) {
    var b = new NuggetaExceptionMessage().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setErrorCode(JsonInputStream.readObject(c, a, "ErrorCode"));
    e = JsonInputStream.readString(a, "Reason");
    b.setReason(e);
    MemoryManagement.free(e);
    return b;
};

T5536.prototype._m26423 = function(c, a) {
    var b = new NuggetaQuery().init(), e = JsonInputStream.readString(a, "domain");
    b.setDomain(e);
    MemoryManagement.free(e);
    b.setStart(JsonInputStream.readInteger(a, "start"));
    b.setLimit(JsonInputStream.readInteger(a, "limit"));
    e = JsonInputStream.readString(a, "query");
    b.setQuery(e);
    MemoryManagement.free(e);
    return b;
};

T5536.prototype._m26424 = function(c, a) {
    var b = new NRawMessage().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "content");
    b.setContent(e);
    MemoryManagement.free(e);
    return b;
};

NAchievementBoard.prototype.init = function() {
    this._achievements = [];
    this._achievementsSet = !1;
    return this;
};

NAchievementBoard.prototype.getAchievements = function() {
    this._achievementsSet = !0;
    return this._achievements;
};

NAchievementBoard.prototype.setAchievements = function(c) {
    this._achievements = c;
    this._achievementsSet = !0;
};

NAchievementBoard.prototype.isachievementsSet = function() {
    return this._achievementsSet;
};

NAchievementBoard.prototype.unSetachievements = function() {
    this._achievementsSet = !1;
};

NAchievementBoard.prototype.getDomainID = function() {
    return NAchievementBoard.domainID;
};

NAchievementBoard.prototype.getSerializerID = function() {
    return NAchievementBoard.serializerID;
};

NAchievementBoard.prototype.toString = function() {
    var c;
    c = "[NAchievementBoard --> ";
    1 == this._achievementsSet && 0 == Utils.isNull(this._achievements) && (c += "_achievements=" + this._achievements + "| ");
    return c + "]";
};

NAchievementBoard.prototype.clone = function() {
    var c = new NAchievementBoard().init();
    if (1 == this._achievementsSet && 0 == Utils.isNull(this._achievements)) {
        for (var a = [], b = 0; b < this._achievements.length; ++b) {
            var e = this._achievements[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setAchievements(a);
    }
    return c;
};

NAchievementBoard.domainID = 100;

NAchievementBoard.serializerID = 3037;

NMatchAndJoinGameExpiredNotification.prototype = new Message();

NMatchAndJoinGameExpiredNotification.prototype.constructor = NMatchAndJoinGameExpiredNotification;

NMatchAndJoinGameExpiredNotification.prototype.init = function() {
    this._GameIdSet = !1;
    return this;
};

NMatchAndJoinGameExpiredNotification.prototype.getGameId = function() {
    return this._GameId;
};

NMatchAndJoinGameExpiredNotification.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

NMatchAndJoinGameExpiredNotification.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

NMatchAndJoinGameExpiredNotification.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

NMatchAndJoinGameExpiredNotification.prototype.getDomainID = function() {
    return NMatchAndJoinGameExpiredNotification.domainID;
};

NMatchAndJoinGameExpiredNotification.prototype.getSerializerID = function() {
    return NMatchAndJoinGameExpiredNotification.serializerID;
};

NMatchAndJoinGameExpiredNotification.prototype.toString = function() {
    var c;
    c = "[NMatchAndJoinGameExpiredNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    return c + "]";
};

NMatchAndJoinGameExpiredNotification.prototype.clone = function() {
    var c = new NMatchAndJoinGameExpiredNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    return c;
};

NMatchAndJoinGameExpiredNotification.domainID = 100;

NMatchAndJoinGameExpiredNotification.serializerID = 3053;

NScore.prototype = new Storable();

NScore.prototype.constructor = NScore;

NScore.prototype.init = function() {
    this._CustomDataSet = this._PlayerAvatarPathSet = this._PlayerNameSet = this._PlayerIdSet = this._TimestampSet = this._ValueSet = !1;
    return this;
};

NScore.prototype.getValue = function() {
    return this._Value;
};

NScore.prototype.setValue = function(c) {
    this._Value = c;
    this._ValueSet = !0;
};

NScore.prototype.isValueSet = function() {
    return this._ValueSet;
};

NScore.prototype.unSetValue = function() {
    this._ValueSet = !1;
};

NScore.prototype.getTimestamp = function() {
    return this._Timestamp;
};

NScore.prototype.setTimestamp = function(c) {
    this._Timestamp = c;
    this._TimestampSet = !0;
};

NScore.prototype.isTimestampSet = function() {
    return this._TimestampSet;
};

NScore.prototype.unSetTimestamp = function() {
    this._TimestampSet = !1;
};

NScore.prototype.getPlayerId = function() {
    return this._PlayerId;
};

NScore.prototype.setPlayerId = function(c) {
    this._PlayerId = c;
    this._PlayerIdSet = !0;
};

NScore.prototype.isPlayerIdSet = function() {
    return this._PlayerIdSet;
};

NScore.prototype.unSetPlayerId = function() {
    this._PlayerIdSet = !1;
};

NScore.prototype.getPlayerName = function() {
    return this._PlayerName;
};

NScore.prototype.setPlayerName = function(c) {
    this._PlayerName = c;
    this._PlayerNameSet = !0;
};

NScore.prototype.isPlayerNameSet = function() {
    return this._PlayerNameSet;
};

NScore.prototype.unSetPlayerName = function() {
    this._PlayerNameSet = !1;
};

NScore.prototype.getPlayerAvatarPath = function() {
    return this._PlayerAvatarPath;
};

NScore.prototype.setPlayerAvatarPath = function(c) {
    this._PlayerAvatarPath = c;
    this._PlayerAvatarPathSet = !0;
};

NScore.prototype.isPlayerAvatarPathSet = function() {
    return this._PlayerAvatarPathSet;
};

NScore.prototype.unSetPlayerAvatarPath = function() {
    this._PlayerAvatarPathSet = !1;
};

NScore.prototype.getCustomData = function() {
    return this._CustomData;
};

NScore.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NScore.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NScore.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NScore.prototype.getDomainID = function() {
    return NScore.domainID;
};

NScore.prototype.getSerializerID = function() {
    return NScore.serializerID;
};

NScore.prototype.toString = function() {
    var c;
    c = "[NScore --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._ValueSet && 0 == Utils.isNullDouble(this._Value) && (c += "_Value=" + this._Value + "| ");
    1 == this._TimestampSet && 0 == Utils.isNullDouble(this._Timestamp) && (c += "_Timestamp=" + this._Timestamp + "| ");
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && (c += "_PlayerId=" + this._PlayerId + "| ");
    1 == this._PlayerNameSet && 0 == Utils.isNull(this._PlayerName) && (c += "_PlayerName=" + this._PlayerName + "| ");
    1 == this._PlayerAvatarPathSet && 0 == Utils.isNull(this._PlayerAvatarPath) && (c += "_PlayerAvatarPath=" + this._PlayerAvatarPath + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NScore.prototype.clone = function() {
    var c = new NScore().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._ValueSet && 0 == Utils.isNullDouble(this._Value) && c.setValue(this._Value);
    1 == this._TimestampSet && 0 == Utils.isNullDouble(this._Timestamp) && c.setTimestamp(this._Timestamp);
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && c.setPlayerId(this._PlayerId);
    1 == this._PlayerNameSet && 0 == Utils.isNull(this._PlayerName) && c.setPlayerName(this._PlayerName);
    1 == this._PlayerAvatarPathSet && 0 == Utils.isNull(this._PlayerAvatarPath) && c.setPlayerAvatarPath(this._PlayerAvatarPath);
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NScore.domainID = 100;

NScore.serializerID = 3007;

AskForFriendStatus.values = function() {
    return AskForFriendStatus._values;
};

AskForFriendStatus.prototype.getValue = function() {
    return this._value;
};

AskForFriendStatus.prototype.name = function() {
    return this._name;
};

AskForFriendStatus.prototype.ordinal = function() {
    return this._value;
};

AskForFriendStatus.prototype.init = function(c, a) {
    void 0 == AskForFriendStatus._values && (AskForFriendStatus._values = []);
    this._value = a;
    this._name = c;
    AskForFriendStatus._values.push(this);
    return this;
};

AskForFriendStatus.fromValue = function(c) {
    for (var a = 0; a < AskForFriendStatus._values.length; a++) {
        var b = AskForFriendStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

AskForFriendStatus.valueOf = function(c) {
    for (var a = 0; a < AskForFriendStatus._values.length; a++) {
        var b = AskForFriendStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

AskForFriendStatus.prototype.getDomainID = function() {
    return 100;
};

AskForFriendStatus.prototype.getSerializerID = function() {
    return 12e3;
};

AskForFriendStatus.prototype.toString = function() {
    return "AskForFriendStatus." + this._name;
};

AskForFriendStatus.prototype.clone = function() {
    return this;
};

AskForFriendStatus.INVALID_PARAMETERS = new AskForFriendStatus().init("INVALID_PARAMETERS", -2);

AskForFriendStatus.INTERNAL_ERROR = new AskForFriendStatus().init("INTERNAL_ERROR", -1);

AskForFriendStatus.AUTHENTICATION_REQUIRED = new AskForFriendStatus().init("AUTHENTICATION_REQUIRED", 0);

AskForFriendStatus.ALREADY_FRIENDS = new AskForFriendStatus().init("ALREADY_FRIENDS", 1);

AskForFriendStatus.PLAYER_NOT_EXISTS = new AskForFriendStatus().init("PLAYER_NOT_EXISTS", 2);

AskForFriendStatus.HAVE_PENDING_INVITATION = new AskForFriendStatus().init("HAVE_PENDING_INVITATION", 3);

AskForFriendStatus.PENDING = new AskForFriendStatus().init("PENDING", 5);

AskForFriendStatus.CANT_INVITE_YOURSELF = new AskForFriendStatus().init("CANT_INVITE_YOURSELF", 6);

SubmitScoreRequest.prototype = new Message();

SubmitScoreRequest.prototype.constructor = SubmitScoreRequest;

SubmitScoreRequest.prototype.init = function() {
    this._leaderboardIdSet = this._scoreSet = !1;
    return this;
};

SubmitScoreRequest.prototype.getScore = function() {
    return this._score;
};

SubmitScoreRequest.prototype.setScore = function(c) {
    this._score = c;
    this._scoreSet = !0;
};

SubmitScoreRequest.prototype.isscoreSet = function() {
    return this._scoreSet;
};

SubmitScoreRequest.prototype.unSetscore = function() {
    this._scoreSet = !1;
};

SubmitScoreRequest.prototype.getLeaderboardId = function() {
    return this._leaderboardId;
};

SubmitScoreRequest.prototype.setLeaderboardId = function(c) {
    this._leaderboardId = c;
    this._leaderboardIdSet = !0;
};

SubmitScoreRequest.prototype.isleaderboardIdSet = function() {
    return this._leaderboardIdSet;
};

SubmitScoreRequest.prototype.unSetleaderboardId = function() {
    this._leaderboardIdSet = !1;
};

SubmitScoreRequest.prototype.getDomainID = function() {
    return SubmitScoreRequest.domainID;
};

SubmitScoreRequest.prototype.getSerializerID = function() {
    return SubmitScoreRequest.serializerID;
};

SubmitScoreRequest.prototype.toString = function() {
    var c;
    c = "[SubmitScoreRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._scoreSet && 0 == Utils.isNull(this._score) && (c += "_score=" + this._score + "| ");
    1 == this._leaderboardIdSet && 0 == Utils.isNull(this._leaderboardId) && (c += "_leaderboardId=" + this._leaderboardId + "| ");
    return c + "]";
};

SubmitScoreRequest.prototype.clone = function() {
    var c = new SubmitScoreRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._scoreSet && 0 == Utils.isNull(this._score) && c.setScore(this._score.clone());
    1 == this._leaderboardIdSet && 0 == Utils.isNull(this._leaderboardId) && c.setLeaderboardId(this._leaderboardId);
    return c;
};

SubmitScoreRequest.domainID = 100;

SubmitScoreRequest.serializerID = 10042;

GetInvitationsRequest.prototype = new Message();

GetInvitationsRequest.prototype.constructor = GetInvitationsRequest;

GetInvitationsRequest.prototype.init = function() {
    this._nuggetaQuerySet = !1;
    return this;
};

GetInvitationsRequest.prototype.getNuggetaQuery = function() {
    return this._nuggetaQuery;
};

GetInvitationsRequest.prototype.setNuggetaQuery = function(c) {
    this._nuggetaQuery = c;
    this._nuggetaQuerySet = !0;
};

GetInvitationsRequest.prototype.isnuggetaQuerySet = function() {
    return this._nuggetaQuerySet;
};

GetInvitationsRequest.prototype.unSetnuggetaQuery = function() {
    this._nuggetaQuerySet = !1;
};

GetInvitationsRequest.prototype.getDomainID = function() {
    return GetInvitationsRequest.domainID;
};

GetInvitationsRequest.prototype.getSerializerID = function() {
    return GetInvitationsRequest.serializerID;
};

GetInvitationsRequest.prototype.toString = function() {
    var c;
    c = "[GetInvitationsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._nuggetaQuerySet && 0 == Utils.isNull(this._nuggetaQuery) && (c += "_nuggetaQuery=" + this._nuggetaQuery + "| ");
    return c + "]";
};

GetInvitationsRequest.prototype.clone = function() {
    var c = new GetInvitationsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._nuggetaQuerySet && 0 == Utils.isNull(this._nuggetaQuery) && c.setNuggetaQuery(this._nuggetaQuery.clone());
    return c;
};

GetInvitationsRequest.domainID = 100;

GetInvitationsRequest.serializerID = 10171;

GetStorablesResponse.prototype = new Message();

GetStorablesResponse.prototype.constructor = GetStorablesResponse;

GetStorablesResponse.prototype.init = function() {
    this._GetStorablesStatusSet = !1;
    this._storables = [];
    this._storablesSet = !1;
    return this;
};

GetStorablesResponse.prototype.getGetStorablesStatus = function() {
    return this._GetStorablesStatus;
};

GetStorablesResponse.prototype.setGetStorablesStatus = function(c) {
    this._GetStorablesStatus = c;
    this._GetStorablesStatusSet = !0;
};

GetStorablesResponse.prototype.isGetStorablesStatusSet = function() {
    return this._GetStorablesStatusSet;
};

GetStorablesResponse.prototype.unSetGetStorablesStatus = function() {
    this._GetStorablesStatusSet = !1;
};

GetStorablesResponse.prototype.getStorables = function() {
    this._storablesSet = !0;
    return this._storables;
};

GetStorablesResponse.prototype.setStorables = function(c) {
    this._storables = c;
    this._storablesSet = !0;
};

GetStorablesResponse.prototype.isstorablesSet = function() {
    return this._storablesSet;
};

GetStorablesResponse.prototype.unSetstorables = function() {
    this._storablesSet = !1;
};

GetStorablesResponse.prototype.getDomainID = function() {
    return GetStorablesResponse.domainID;
};

GetStorablesResponse.prototype.getSerializerID = function() {
    return GetStorablesResponse.serializerID;
};

GetStorablesResponse.prototype.toString = function() {
    var c;
    c = "[GetStorablesResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetStorablesStatusSet && 0 == Utils.isNull(this._GetStorablesStatus) && (c += "_GetStorablesStatus=" + this._GetStorablesStatus + "| ");
    1 == this._storablesSet && 0 == Utils.isNull(this._storables) && (c += "_storables=" + this._storables + "| ");
    return c + "]";
};

GetStorablesResponse.prototype.clone = function() {
    var c = new GetStorablesResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetStorablesStatusSet && 0 == Utils.isNull(this._GetStorablesStatus) && c.setGetStorablesStatus(this._GetStorablesStatus);
    if (1 == this._storablesSet && 0 == Utils.isNull(this._storables)) {
        for (var a = [], b = 0; b < this._storables.length; ++b) {
            var e = this._storables[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setStorables(a);
    }
    return c;
};

GetStorablesResponse.domainID = 100;

GetStorablesResponse.serializerID = 10115;

NRawMessage.prototype = new Message();

NRawMessage.prototype.constructor = NRawMessage;

NRawMessage.prototype.init = function() {
    this._contentSet = !1;
    return this;
};

NRawMessage.prototype.getContent = function() {
    return this._content;
};

NRawMessage.prototype.setContent = function(c) {
    this._content = c;
    this._contentSet = !0;
};

NRawMessage.prototype.iscontentSet = function() {
    return this._contentSet;
};

NRawMessage.prototype.unSetcontent = function() {
    this._contentSet = !1;
};

NRawMessage.prototype.getDomainID = function() {
    return NRawMessage.domainID;
};

NRawMessage.prototype.getSerializerID = function() {
    return NRawMessage.serializerID;
};

NRawMessage.prototype.toString = function() {
    var c;
    c = "[NRawMessage --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._contentSet && 0 == Utils.isNull(this._content) && (c += "_content=" + this._content + "| ");
    return c + "]";
};

NRawMessage.prototype.clone = function() {
    var c = new NRawMessage().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._contentSet && 0 == Utils.isNull(this._content) && c.setContent(this._content);
    return c;
};

NRawMessage.domainID = 0;

NRawMessage.serializerID = 3011;

SaveGameRequest.prototype = new Message();

SaveGameRequest.prototype.constructor = SaveGameRequest;

SaveGameRequest.prototype.init = function() {
    this._gameSet = !1;
    return this;
};

SaveGameRequest.prototype.getGame = function() {
    return this._game;
};

SaveGameRequest.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

SaveGameRequest.prototype.isgameSet = function() {
    return this._gameSet;
};

SaveGameRequest.prototype.unSetgame = function() {
    this._gameSet = !1;
};

SaveGameRequest.prototype.getDomainID = function() {
    return SaveGameRequest.domainID;
};

SaveGameRequest.prototype.getSerializerID = function() {
    return SaveGameRequest.serializerID;
};

SaveGameRequest.prototype.toString = function() {
    var c;
    c = "[SaveGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

SaveGameRequest.prototype.clone = function() {
    var c = new SaveGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

SaveGameRequest.domainID = 100;

SaveGameRequest.serializerID = 10141;

LoadGameResponse.prototype = new Message();

LoadGameResponse.prototype.constructor = LoadGameResponse;

LoadGameResponse.prototype.init = function() {
    this._gameSet = this._LoadGameStatusSet = !1;
    return this;
};

LoadGameResponse.prototype.getLoadGameStatus = function() {
    return this._LoadGameStatus;
};

LoadGameResponse.prototype.setLoadGameStatus = function(c) {
    this._LoadGameStatus = c;
    this._LoadGameStatusSet = !0;
};

LoadGameResponse.prototype.isLoadGameStatusSet = function() {
    return this._LoadGameStatusSet;
};

LoadGameResponse.prototype.unSetLoadGameStatus = function() {
    this._LoadGameStatusSet = !1;
};

LoadGameResponse.prototype.getGame = function() {
    return this._game;
};

LoadGameResponse.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

LoadGameResponse.prototype.isgameSet = function() {
    return this._gameSet;
};

LoadGameResponse.prototype.unSetgame = function() {
    this._gameSet = !1;
};

LoadGameResponse.prototype.getDomainID = function() {
    return LoadGameResponse.domainID;
};

LoadGameResponse.prototype.getSerializerID = function() {
    return LoadGameResponse.serializerID;
};

LoadGameResponse.prototype.toString = function() {
    var c;
    c = "[LoadGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._LoadGameStatusSet && 0 == Utils.isNull(this._LoadGameStatus) && (c += "_LoadGameStatus=" + this._LoadGameStatus + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

LoadGameResponse.prototype.clone = function() {
    var c = new LoadGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._LoadGameStatusSet && 0 == Utils.isNull(this._LoadGameStatus) && c.setLoadGameStatus(this._LoadGameStatus);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

LoadGameResponse.domainID = 100;

LoadGameResponse.serializerID = 10145;

CreateGameRequest.prototype = new Message();

CreateGameRequest.prototype.constructor = CreateGameRequest;

CreateGameRequest.prototype.init = function() {
    this._gameSet = !1;
    return this;
};

CreateGameRequest.prototype.getGame = function() {
    return this._game;
};

CreateGameRequest.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

CreateGameRequest.prototype.isgameSet = function() {
    return this._gameSet;
};

CreateGameRequest.prototype.unSetgame = function() {
    this._gameSet = !1;
};

CreateGameRequest.prototype.getDomainID = function() {
    return CreateGameRequest.domainID;
};

CreateGameRequest.prototype.getSerializerID = function() {
    return CreateGameRequest.serializerID;
};

CreateGameRequest.prototype.toString = function() {
    var c;
    c = "[CreateGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

CreateGameRequest.prototype.clone = function() {
    var c = new CreateGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

CreateGameRequest.domainID = 100;

CreateGameRequest.serializerID = 10096;

ThirdPartyLoginResponse.prototype = new Message();

ThirdPartyLoginResponse.prototype.constructor = ThirdPartyLoginResponse;

ThirdPartyLoginResponse.prototype.init = function() {
    this._playerSet = this._ThirdPartyLoginStatusSet = !1;
    return this;
};

ThirdPartyLoginResponse.prototype.getThirdPartyLoginStatus = function() {
    return this._ThirdPartyLoginStatus;
};

ThirdPartyLoginResponse.prototype.setThirdPartyLoginStatus = function(c) {
    this._ThirdPartyLoginStatus = c;
    this._ThirdPartyLoginStatusSet = !0;
};

ThirdPartyLoginResponse.prototype.isThirdPartyLoginStatusSet = function() {
    return this._ThirdPartyLoginStatusSet;
};

ThirdPartyLoginResponse.prototype.unSetThirdPartyLoginStatus = function() {
    this._ThirdPartyLoginStatusSet = !1;
};

ThirdPartyLoginResponse.prototype.getPlayer = function() {
    return this._player;
};

ThirdPartyLoginResponse.prototype.setPlayer = function(c) {
    this._player = c;
    this._playerSet = !0;
};

ThirdPartyLoginResponse.prototype.isplayerSet = function() {
    return this._playerSet;
};

ThirdPartyLoginResponse.prototype.unSetplayer = function() {
    this._playerSet = !1;
};

ThirdPartyLoginResponse.prototype.getDomainID = function() {
    return ThirdPartyLoginResponse.domainID;
};

ThirdPartyLoginResponse.prototype.getSerializerID = function() {
    return ThirdPartyLoginResponse.serializerID;
};

ThirdPartyLoginResponse.prototype.toString = function() {
    var c;
    c = "[ThirdPartyLoginResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ThirdPartyLoginStatusSet && 0 == Utils.isNull(this._ThirdPartyLoginStatus) && (c += "_ThirdPartyLoginStatus=" + this._ThirdPartyLoginStatus + "| ");
    1 == this._playerSet && 0 == Utils.isNull(this._player) && (c += "_player=" + this._player + "| ");
    return c + "]";
};

ThirdPartyLoginResponse.prototype.clone = function() {
    var c = new ThirdPartyLoginResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ThirdPartyLoginStatusSet && 0 == Utils.isNull(this._ThirdPartyLoginStatus) && c.setThirdPartyLoginStatus(this._ThirdPartyLoginStatus);
    1 == this._playerSet && 0 == Utils.isNull(this._player) && c.setPlayer(this._player.clone());
    return c;
};

ThirdPartyLoginResponse.domainID = 100;

ThirdPartyLoginResponse.serializerID = 10139;

GetPlayersRequest.prototype = new Message();

GetPlayersRequest.prototype.constructor = GetPlayersRequest;

GetPlayersRequest.prototype.init = function() {
    this._playersQuerySet = !1;
    return this;
};

GetPlayersRequest.prototype.getPlayersQuery = function() {
    return this._playersQuery;
};

GetPlayersRequest.prototype.setPlayersQuery = function(c) {
    this._playersQuery = c;
    this._playersQuerySet = !0;
};

GetPlayersRequest.prototype.isplayersQuerySet = function() {
    return this._playersQuerySet;
};

GetPlayersRequest.prototype.unSetplayersQuery = function() {
    this._playersQuerySet = !1;
};

GetPlayersRequest.prototype.getDomainID = function() {
    return GetPlayersRequest.domainID;
};

GetPlayersRequest.prototype.getSerializerID = function() {
    return GetPlayersRequest.serializerID;
};

GetPlayersRequest.prototype.toString = function() {
    var c;
    c = "[GetPlayersRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._playersQuerySet && 0 == Utils.isNull(this._playersQuery) && (c += "_playersQuery=" + this._playersQuery + "| ");
    return c + "]";
};

GetPlayersRequest.prototype.clone = function() {
    var c = new GetPlayersRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._playersQuerySet && 0 == Utils.isNull(this._playersQuery) && c.setPlayersQuery(this._playersQuery.clone());
    return c;
};

GetPlayersRequest.domainID = 100;

GetPlayersRequest.serializerID = 10180;

ConnectionStop.prototype = new Message();

ConnectionStop.prototype.constructor = ConnectionStop;

ConnectionStop.prototype.init = function() {
    return this;
};

ConnectionStop.prototype.getSerializerID = function() {
    return 0;
};

ConnectionStop.prototype.clone = function() {
    return new ConnectionStop().init();
};

ConnectionStop.prototype.toString = function() {
    return "";
};

ConnectionStop.prototype.equals = function(c) {
    return !1;
};

ConnectionStop.prototype.getDomainID = function() {
    return 0;
};

AcceptFriendDemandRequest.prototype = new Message();

AcceptFriendDemandRequest.prototype.constructor = AcceptFriendDemandRequest;

AcceptFriendDemandRequest.prototype.init = function() {
    this._friendDemandIdSet = !1;
    return this;
};

AcceptFriendDemandRequest.prototype.getFriendDemandId = function() {
    return this._friendDemandId;
};

AcceptFriendDemandRequest.prototype.setFriendDemandId = function(c) {
    this._friendDemandId = c;
    this._friendDemandIdSet = !0;
};

AcceptFriendDemandRequest.prototype.isfriendDemandIdSet = function() {
    return this._friendDemandIdSet;
};

AcceptFriendDemandRequest.prototype.unSetfriendDemandId = function() {
    this._friendDemandIdSet = !1;
};

AcceptFriendDemandRequest.prototype.getDomainID = function() {
    return AcceptFriendDemandRequest.domainID;
};

AcceptFriendDemandRequest.prototype.getSerializerID = function() {
    return AcceptFriendDemandRequest.serializerID;
};

AcceptFriendDemandRequest.prototype.toString = function() {
    var c;
    c = "[AcceptFriendDemandRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && (c += "_friendDemandId=" + this._friendDemandId + "| ");
    return c + "]";
};

AcceptFriendDemandRequest.prototype.clone = function() {
    var c = new AcceptFriendDemandRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && c.setFriendDemandId(this._friendDemandId);
    return c;
};

AcceptFriendDemandRequest.domainID = 100;

AcceptFriendDemandRequest.serializerID = 10036;

FriendConnectedNotification.prototype = new Message();

FriendConnectedNotification.prototype.constructor = FriendConnectedNotification;

FriendConnectedNotification.prototype.init = function() {
    this._friendSet = !1;
    return this;
};

FriendConnectedNotification.prototype.getFriend = function() {
    return this._friend;
};

FriendConnectedNotification.prototype.setFriend = function(c) {
    this._friend = c;
    this._friendSet = !0;
};

FriendConnectedNotification.prototype.isfriendSet = function() {
    return this._friendSet;
};

FriendConnectedNotification.prototype.unSetfriend = function() {
    this._friendSet = !1;
};

FriendConnectedNotification.prototype.getDomainID = function() {
    return FriendConnectedNotification.domainID;
};

FriendConnectedNotification.prototype.getSerializerID = function() {
    return FriendConnectedNotification.serializerID;
};

FriendConnectedNotification.prototype.toString = function() {
    var c;
    c = "[FriendConnectedNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._friendSet && 0 == Utils.isNull(this._friend) && (c += "_friend=" + this._friend + "| ");
    return c + "]";
};

FriendConnectedNotification.prototype.clone = function() {
    var c = new FriendConnectedNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._friendSet && 0 == Utils.isNull(this._friend) && c.setFriend(this._friend.clone());
    return c;
};

FriendConnectedNotification.domainID = 100;

FriendConnectedNotification.serializerID = 3016;

OpenConnection.prototype = new Message();

OpenConnection.prototype.constructor = OpenConnection;

OpenConnection.prototype.init = function() {
    this._TcpPortSet = this._IpAddressSet = !1;
    return this;
};

OpenConnection.prototype.getIpAddress = function() {
    return this._IpAddress;
};

OpenConnection.prototype.setIpAddress = function(c) {
    this._IpAddress = c;
    this._IpAddressSet = !0;
};

OpenConnection.prototype.isIpAddressSet = function() {
    return this._IpAddressSet;
};

OpenConnection.prototype.unSetIpAddress = function() {
    this._IpAddressSet = !1;
};

OpenConnection.prototype.getTcpPort = function() {
    return this._TcpPort;
};

OpenConnection.prototype.setTcpPort = function(c) {
    this._TcpPort = c;
    this._TcpPortSet = !0;
};

OpenConnection.prototype.isTcpPortSet = function() {
    return this._TcpPortSet;
};

OpenConnection.prototype.unSetTcpPort = function() {
    this._TcpPortSet = !1;
};

OpenConnection.prototype.getDomainID = function() {
    return OpenConnection.domainID;
};

OpenConnection.prototype.getSerializerID = function() {
    return OpenConnection.serializerID;
};

OpenConnection.prototype.toString = function() {
    var c;
    c = "[OpenConnection --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._IpAddressSet && 0 == Utils.isNull(this._IpAddress) && (c += "_IpAddress=" + this._IpAddress + "| ");
    1 == this._TcpPortSet && 0 == Utils.isNullInteger(this._TcpPort) && (c += "_TcpPort=" + this._TcpPort + "| ");
    return c + "]";
};

OpenConnection.prototype.clone = function() {
    var c = new OpenConnection().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._IpAddressSet && 0 == Utils.isNull(this._IpAddress) && c.setIpAddress(this._IpAddress);
    1 == this._TcpPortSet && 0 == Utils.isNullInteger(this._TcpPort) && c.setTcpPort(this._TcpPort);
    return c;
};

OpenConnection.domainID = 100;

OpenConnection.serializerID = 3022;

T5516.prototype.init = function() {
    return this;
};

T5516.prototype.write = function(c, a, b) {
    0 == a.getSerializerID() ? this._m25062(c, a, b) : 1 == a.getSerializerID() ? this._m25063(c, a, b) : 2 == a.getSerializerID() ? this._m25064(c, a, b) : 3 == a.getSerializerID() ? this._m25065(c, a, b) : 4 == a.getSerializerID() ? this._m25066(c, a, b) : 5 == a.getSerializerID() ? this._m25067(c, a, b) : 6 == a.getSerializerID() ? this._m25068(c, a, b) : 7 == a.getSerializerID() ? this._m25069(c, a, b) : 8 == a.getSerializerID() ? this._m25070(c, a, b) : 9 == a.getSerializerID() ? this._m25071(c, a, b) : 10 == a.getSerializerID() ? this._m25072(c, a, b) : 11 == a.getSerializerID() ? this._m25073(c, a, b) : 12 == a.getSerializerID() ? this._m25074(c, a, b) : 13 == a.getSerializerID() ? this._m25075(c, a, b) : 14 == a.getSerializerID() ? this._m25076(c, a, b) : 10002 == a.getSerializerID() ? this._m25077(c, a, b) : 10011 == a.getSerializerID() ? this._m25078(c, a, b) : 10140 == a.getSerializerID() ? this._m25079(c, a, b) : 10020 == a.getSerializerID() ? this._m25080(c, a, b) : 10008 == a.getSerializerID() ? this._m25081(c, a, b) : 10125 == a.getSerializerID() ? this._m25082(c, a, b) : 10029 == a.getSerializerID() ? this._m25083(c, a, b) : 12e3 == a.getSerializerID() ? this._m25084(c, a, b) : 10035 == a.getSerializerID() ? this._m25085(c, a, b) : 10038 == a.getSerializerID() ? this._m25086(c, a, b) : 10041 == a.getSerializerID() ? this._m25087(c, a, b) : 10044 == a.getSerializerID() ? this._m25088(c, a, b) : 10047 == a.getSerializerID() ? this._m25089(c, a, b) : 10065 == a.getSerializerID() ? this._m25090(c, a, b) : 10068 == a.getSerializerID() ? this._m25091(c, a, b) : 10071 == a.getSerializerID() ? this._m25092(c, a, b) : 10017 == a.getSerializerID() ? this._m25093(c, a, b) : 11832 == a.getSerializerID() ? this._m25094(c, a, b) : 10014 == a.getSerializerID() ? this._m25095(c, a, b) : 10116 == a.getSerializerID() ? this._m25096(c, a, b) : 10119 == a.getSerializerID() ? this._m25097(c, a, b) : 10128 == a.getSerializerID() ? this._m25098(c, a, b) : 10131 == a.getSerializerID() ? this._m25099(c, a, b) : 10053 == a.getSerializerID() ? this._m25100(c, a, b) : 10050 == a.getSerializerID() ? this._m25101(c, a, b) : 10056 == a.getSerializerID() ? this._m25102(c, a, b) : 10059 == a.getSerializerID() ? this._m25103(c, a, b) : 10062 == a.getSerializerID() ? this._m25104(c, a, b) : 10074 == a.getSerializerID() ? this._m25105(c, a, b) : 10077 == a.getSerializerID() ? this._m25106(c, a, b) : 10092 == a.getSerializerID() ? this._m25107(c, a, b) : 10095 == a.getSerializerID() ? this._m25108(c, a, b) : 10098 == a.getSerializerID() ? this._m25109(c, a, b) : 10101 == a.getSerializerID() ? this._m25110(c, a, b) : 10104 == a.getSerializerID() ? this._m25111(c, a, b) : 10107 == a.getSerializerID() ? this._m25112(c, a, b) : 10110 == a.getSerializerID() ? this._m25113(c, a, b) : 10122 == a.getSerializerID() ? this._m25114(c, a, b) : 10143 == a.getSerializerID() ? this._m25115(c, a, b) : 10146 == a.getSerializerID() ? this._m25116(c, a, b) : 10113 == a.getSerializerID() ? this._m25117(c, a, b) : 10926 == a.getSerializerID() ? this._m25118(c, a, b) : 10929 == a.getSerializerID() ? this._m25119(c, a, b) : 10170 == a.getSerializerID() ? this._m25120(c, a, b) : 10173 == a.getSerializerID() ? this._m25121(c, a, b) : 10176 == a.getSerializerID() ? this._m25122(c, a, b) : 10179 == a.getSerializerID() ? this._m25123(c, a, b) : 10161 == a.getSerializerID() ? this._m25124(c, a, b) : 10164 == a.getSerializerID() ? this._m25125(c, a, b) : 10167 == a.getSerializerID() ? this._m25126(c, a, b) : 10182 == a.getSerializerID() ? this._m25127(c, a, b) : 3001 == a.getSerializerID() ? this._m25128(c, a, b) : 3002 == a.getSerializerID() ? this._m25129(c, a, b) : 3003 == a.getSerializerID() ? this._m25130(c, a, b) : 3004 == a.getSerializerID() ? this._m25131(c, a, b) : 3005 == a.getSerializerID() ? this._m25132(c, a, b) : 3006 == a.getSerializerID() ? this._m25133(c, a, b) : 3007 == a.getSerializerID() ? this._m25134(c, a, b) : 3008 == a.getSerializerID() ? this._m25135(c, a, b) : 3009 == a.getSerializerID() ? this._m25136(c, a, b) : 3010 == a.getSerializerID() ? this._m25137(c, a, b) : 3011 == a.getSerializerID() ? this._m25138(c, a, b) : 3012 == a.getSerializerID() ? this._m25139(c, a, b) : 3013 == a.getSerializerID() ? this._m25140(c, a, b) : 3014 == a.getSerializerID() ? this._m25141(c, a, b) : 3015 == a.getSerializerID() ? this._m25142(c, a, b) : 3016 == a.getSerializerID() ? this._m25143(c, a, b) : 3017 == a.getSerializerID() ? this._m25144(c, a, b) : 3018 == a.getSerializerID() ? this._m25145(c, a, b) : 3019 == a.getSerializerID() ? this._m25146(c, a, b) : 3020 == a.getSerializerID() ? this._m25147(c, a, b) : 3021 == a.getSerializerID() ? this._m25148(c, a, b) : 3022 == a.getSerializerID() ? this._m25149(c, a, b) : 3023 == a.getSerializerID() ? this._m25150(c, a, b) : 3024 == a.getSerializerID() ? this._m25151(c, a, b) : 3025 == a.getSerializerID() ? this._m25152(c, a, b) : 3026 == a.getSerializerID() ? this._m25153(c, a, b) : 3027 == a.getSerializerID() ? this._m25154(c, a, b) : 3028 == a.getSerializerID() ? this._m25155(c, a, b) : 3029 == a.getSerializerID() ? this._m25156(c, a, b) : 3030 == a.getSerializerID() ? this._m25157(c, a, b) : 3032 == a.getSerializerID() ? this._m25158(c, a, b) : 3033 == a.getSerializerID() ? this._m25159(c, a, b) : 3034 == a.getSerializerID() ? this._m25160(c, a, b) : 3035 == a.getSerializerID() ? this._m25161(c, a, b) : 3036 == a.getSerializerID() ? this._m25162(c, a, b) : 3037 == a.getSerializerID() ? this._m25163(c, a, b) : 3038 == a.getSerializerID() ? this._m25164(c, a, b) : 3039 == a.getSerializerID() ? this._m25165(c, a, b) : 3040 == a.getSerializerID() ? this._m25166(c, a, b) : 3041 == a.getSerializerID() ? this._m25167(c, a, b) : 3042 == a.getSerializerID() ? this._m25168(c, a, b) : 3043 == a.getSerializerID() ? this._m25169(c, a, b) : 3044 == a.getSerializerID() ? this._m25170(c, a, b) : 3045 == a.getSerializerID() ? this._m25171(c, a, b) : 3047 == a.getSerializerID() ? this._m25172(c, a, b) : 3048 == a.getSerializerID() ? this._m25173(c, a, b) : 3049 == a.getSerializerID() ? this._m25174(c, a, b) : 3050 == a.getSerializerID() ? this._m25175(c, a, b) : 3051 == a.getSerializerID() ? this._m25176(c, a, b) : 3052 == a.getSerializerID() ? this._m25177(c, a, b) : 3053 == a.getSerializerID() ? this._m25178(c, a, b) : 1e4 == a.getSerializerID() ? this._m25179(c, a, b) : 10001 == a.getSerializerID() ? this._m25180(c, a, b) : 10009 == a.getSerializerID() ? this._m25181(c, a, b) : 10010 == a.getSerializerID() ? this._m25182(c, a, b) : 10138 == a.getSerializerID() ? this._m25183(c, a, b) : 10139 == a.getSerializerID() ? this._m25184(c, a, b) : 10018 == a.getSerializerID() ? this._m25185(c, a, b) : 10019 == a.getSerializerID() ? this._m25186(c, a, b) : 10006 == a.getSerializerID() ? this._m25187(c, a, b) : 10007 == a.getSerializerID() ? this._m25188(c, a, b) : 10123 == a.getSerializerID() ? this._m25189(c, a, b) : 10124 == a.getSerializerID() ? this._m25190(c, a, b) : 10027 == a.getSerializerID() ? this._m25191(c, a, b) : 10028 == a.getSerializerID() ? this._m25192(c, a, b) : 11998 == a.getSerializerID() ? this._m25193(c, a, b) : 11999 == a.getSerializerID() ? this._m25194(c, a, b) : 10033 == a.getSerializerID() ? this._m25195(c, a, b) : 10034 == a.getSerializerID() ? this._m25196(c, a, b) : 10036 == a.getSerializerID() ? this._m25197(c, a, b) : 10037 == a.getSerializerID() ? this._m25198(c, a, b) : 10039 == a.getSerializerID() ? this._m25199(c, a, b) : 10040 == a.getSerializerID() ? this._m25200(c, a, b) : 10042 == a.getSerializerID() ? this._m25201(c, a, b) : 10043 == a.getSerializerID() ? this._m25202(c, a, b) : 10045 == a.getSerializerID() ? this._m25203(c, a, b) : 10046 == a.getSerializerID() ? this._m25204(c, a, b) : 10063 == a.getSerializerID() ? this._m25205(c, a, b) : 10064 == a.getSerializerID() ? this._m25206(c, a, b) : 10066 == a.getSerializerID() ? this._m25207(c, a, b) : 10067 == a.getSerializerID() ? this._m25208(c, a, b) : 10069 == a.getSerializerID() ? this._m25209(c, a, b) : 10070 == a.getSerializerID() ? this._m25210(c, a, b) : 10015 == a.getSerializerID() ? this._m25211(c, a, b) : 10016 == a.getSerializerID() ? this._m25212(c, a, b) : 11830 == a.getSerializerID() ? this._m25213(c, a, b) : 11831 == a.getSerializerID() ? this._m25214(c, a, b) : 10012 == a.getSerializerID() ? this._m25215(c, a, b) : 10013 == a.getSerializerID() ? this._m25216(c, a, b) : 10114 == a.getSerializerID() ? this._m25217(c, a, b) : 10115 == a.getSerializerID() ? this._m25218(c, a, b) : 10117 == a.getSerializerID() ? this._m25219(c, a, b) : 10118 == a.getSerializerID() ? this._m25220(c, a, b) : 10126 == a.getSerializerID() ? this._m25221(c, a, b) : 10127 == a.getSerializerID() ? this._m25222(c, a, b) : 10129 == a.getSerializerID() ? this._m25223(c, a, b) : 10130 == a.getSerializerID() ? this._m25224(c, a, b) : 10051 == a.getSerializerID() ? this._m25225(c, a, b) : 10052 == a.getSerializerID() ? this._m25226(c, a, b) : 10048 == a.getSerializerID() ? this._m25227(c, a, b) : 10049 == a.getSerializerID() ? this._m25228(c, a, b) : 10054 == a.getSerializerID() ? this._m25229(c, a, b) : 10055 == a.getSerializerID() ? this._m25230(c, a, b) : 10057 == a.getSerializerID() ? this._m25231(c, a, b) : 10058 == a.getSerializerID() ? this._m25232(c, a, b) : 10060 == a.getSerializerID() ? this._m25233(c, a, b) : 10061 == a.getSerializerID() ? this._m25234(c, a, b) : 10072 == a.getSerializerID() ? this._m25235(c, a, b) : 10073 == a.getSerializerID() ? this._m25236(c, a, b) : 10075 == a.getSerializerID() ? this._m25237(c, a, b) : 10076 == a.getSerializerID() ? this._m25238(c, a, b) : 10090 == a.getSerializerID() ? this._m25239(c, a, b) : 10091 == a.getSerializerID() ? this._m25240(c, a, b) : 10093 == a.getSerializerID() ? this._m25241(c, a, b) : 10094 == a.getSerializerID() ? this._m25242(c, a, b) : 10096 == a.getSerializerID() ? this._m25243(c, a, b) : 10097 == a.getSerializerID() ? this._m25244(c, a, b) : 10099 == a.getSerializerID() ? this._m25245(c, a, b) : 10100 == a.getSerializerID() ? this._m25246(c, a, b) : 10102 == a.getSerializerID() ? this._m25247(c, a, b) : 10103 == a.getSerializerID() ? this._m25248(c, a, b) : 10105 == a.getSerializerID() ? this._m25249(c, a, b) : 10106 == a.getSerializerID() ? this._m25250(c, a, b) : 10108 == a.getSerializerID() ? this._m25251(c, a, b) : 10109 == a.getSerializerID() ? this._m25252(c, a, b) : 10120 == a.getSerializerID() ? this._m25253(c, a, b) : 10121 == a.getSerializerID() ? this._m25254(c, a, b) : 10141 == a.getSerializerID() ? this._m25255(c, a, b) : 10142 == a.getSerializerID() ? this._m25256(c, a, b) : 10144 == a.getSerializerID() ? this._m25257(c, a, b) : 10145 == a.getSerializerID() ? this._m25258(c, a, b) : 10111 == a.getSerializerID() ? this._m25259(c, a, b) : 10112 == a.getSerializerID() ? this._m25260(c, a, b) : 10924 == a.getSerializerID() ? this._m25261(c, a, b) : 10925 == a.getSerializerID() ? this._m25262(c, a, b) : 10927 == a.getSerializerID() ? this._m25263(c, a, b) : 10928 == a.getSerializerID() ? this._m25264(c, a, b) : 10168 == a.getSerializerID() ? this._m25265(c, a, b) : 10169 == a.getSerializerID() ? this._m25266(c, a, b) : 10171 == a.getSerializerID() ? this._m25267(c, a, b) : 10172 == a.getSerializerID() ? this._m25268(c, a, b) : 10174 == a.getSerializerID() ? this._m25269(c, a, b) : 10175 == a.getSerializerID() ? this._m25270(c, a, b) : 10177 == a.getSerializerID() ? this._m25271(c, a, b) : 10178 == a.getSerializerID() ? this._m25272(c, a, b) : 10159 == a.getSerializerID() ? this._m25273(c, a, b) : 10160 == a.getSerializerID() ? this._m25274(c, a, b) : 10162 == a.getSerializerID() ? this._m25275(c, a, b) : 10163 == a.getSerializerID() ? this._m25276(c, a, b) : 10165 == a.getSerializerID() ? this._m25277(c, a, b) : 10166 == a.getSerializerID() ? this._m25278(c, a, b) : 10180 == a.getSerializerID() ? this._m25279(c, a, b) : 10181 == a.getSerializerID() && this._m25280(c, a, b);
};

T5516.prototype._m25062 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25063 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25064 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25065 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25066 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25067 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25068 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25069 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25070 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25071 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25072 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25073 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25074 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25075 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25076 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25077 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25078 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25079 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25080 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25081 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25082 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25083 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25084 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25085 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25086 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25087 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25088 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25089 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25090 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25091 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25092 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25093 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25094 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25095 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25096 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25097 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25098 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25099 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25100 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25101 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25102 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25103 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25104 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25105 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25106 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25107 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25108 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25109 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25110 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25111 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25112 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25113 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25114 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25115 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25116 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25117 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25118 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25119 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25120 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25121 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25122 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25123 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25124 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25125 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25126 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25127 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5516.prototype._m25128 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isLoginSet() && (d = BinaryOutputStream.writeStringProperty(a.getLogin(), 1001, b)) && f++;
    1 == a.isPasswordSet() && (d = BinaryOutputStream.writeStringProperty(a.getPassword(), 1002, b)) && f++;
    1 == a.isAccessTokenSet() && (d = BinaryOutputStream.writeStringProperty(a.getAccessToken(), 1003, b)) && f++;
    1 == a.isNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getName(), 1004, b)) && f++;
    1 == a.isConnectedSet() && (d = BinaryOutputStream.writeBooleanProperty(a.isConnected(), 1005, b)) && f++;
    1 == a.isLoginSourceSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getLoginSource(), 1006, b)) && f++;
    1 == a.isThirdPartyIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getThirdPartyId(), 1007, b)) && f++;
    1 == a.isCreationDateSet() && (d = BinaryOutputStream.writeDoubleProperty(a.getCreationDate(), 1008, b)) && f++;
    1 == a.isActiveSet() && (d = BinaryOutputStream.writeBooleanProperty(a.isActive(), 1009, b)) && f++;
    1 == a.isLangSet() && (d = BinaryOutputStream.writeStringProperty(a.getLang(), 1010, b)) && f++;
    1 == a.isAnonymousSet() && (d = BinaryOutputStream.writeBooleanProperty(a.isAnonymous(), 1011, b)) && f++;
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1012, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25129 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    1 == a.isAchievedSet() && (d = BinaryOutputStream.writeBooleanProperty(a.isAchieved(), 1002, b)) && f++;
    1 == a.isFeaturedSet() && (d = BinaryOutputStream.writeBooleanProperty(a.isFeatured(), 1003, b)) && f++;
    1 == a.isDescriptionSet() && (d = BinaryOutputStream.writeStringProperty(a.getDescription(), 1004, b)) && f++;
    1 == a.isNXPSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getNXP(), 1005, b)) && f++;
    1 == a.isNEnergySet() && (d = BinaryOutputStream.writeIntegerProperty(a.getNEnergy(), 1006, b)) && f++;
    1 == a.isTypeSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getType(), 1007, b)) && f++;
    1 == a.isGoalSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getGoal(), 1008, b)) && f++;
    1 == a.isProgressSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getProgress(), 1009, b)) && f++;
    1 == a.isOrderSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getOrder(), 1010, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25130 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isVersionSet() && (d = BinaryOutputStream.writeStringProperty(a.getVersion(), 2e3, b)) && f++;
    1 == a.isReasonSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getReason(), 2001, b)) && f++;
    1 == a.isplayerIdsStoredSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerIdsStored(), 2002, b)) && f++;
    1 == a.issessionIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSessionId(), 2003, b)) && f++;
    1 == a.isplatformSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlatform(), 2004, b)) && f++;
    1 == a.isspIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSpId(), 2005, b)) && f++;
    1 == a.isdebugSpIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getDebugSpId(), 2006, b)) && f++;
    1 == a.isGameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2007, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25131 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isExecutionStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getExecutionStatus(), 2e3, b)) && f++;
    1 == a.isReasonSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getReason(), 2001, b)) && f++;
    1 == a.isplayerIdsStoredSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerIdsStored(), 2002, b)) && f++;
    1 == a.issessionIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSessionId(), 2003, b)) && f++;
    1 == a.isPlayerSessionTypeSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayerSessionType(), 2004, b)) && f++;
    1 == a.isPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2005, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25132 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    1 == a.isGameRunningStateSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGameRunningState(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25133 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isEmitterSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getEmitter(), 1e3, b)) && f++;
    1 == a.isReceiverIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getReceiverId(), 1001, b)) && f++;
    1 == a.isCustomMessageSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomMessage(), 1002, b)) && f++;
    1 == a.isFriendDemandStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getFriendDemandStatus(), 1003, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1004, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25134 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isValueSet() && (f = BinaryOutputStream.writeDoubleProperty(a.getValue(), 1e3, b)) && e++;
    1 == a.isTimestampSet() && (f = BinaryOutputStream.writeDoubleProperty(a.getTimestamp(), 1001, b)) && e++;
    1 == a.isPlayerIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 1002, b)) && e++;
    1 == a.isPlayerNameSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerName(), 1003, b)) && e++;
    1 == a.isPlayerAvatarPathSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerAvatarPath(), 1004, b)) && e++;
    1 == a.isCustomDataSet() && (f = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1005, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25135 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    if (1 == a.isPlayersSet()) {
        d = a.getPlayers();
        if (null == d) d = !1; else {
            b.putShort(1002);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1003, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25136 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    if (1 == a.isPlayersSet()) {
        d = a.getPlayers();
        if (null == d) d = !1; else {
            b.putShort(1002);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1003, b)) && f++;
    1 == a.isDefaultRoomSet() && (d = BinaryOutputStream.writeBooleanProperty(a.isDefaultRoom(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25137 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    if (1 == a.isPlayersSet()) {
        d = a.getPlayers();
        if (null == d) d = !1; else {
            b.putShort(1002);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1003, b)) && f++;
    1 == a.isGameRunningStateSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGameRunningState(), 2e3, b)) && f++;
    1 == a.isGameCharacteristicsSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGameCharacteristics(), 2001, b)) && f++;
    1 == a.isGameStateSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGameState(), 2002, b)) && f++;
    1 == a.isMatchMakingConditionsSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getMatchMakingConditions(), 2003, b)) && f++;
    1 == a.isTurnBasedContextSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getTurnBasedContext(), 2004, b)) && f++;
    1 == a.isOwnerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getOwner(), 2006, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25138 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isMinPlayerSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getMinPlayer(), 0, b)) && e++;
    1 == a.isMaxPlayerSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getMaxPlayer(), 1, b)) && e++;
    1 == a.isAutoStopSet() && (f = BinaryOutputStream.writeBooleanProperty(a.isAutoStop(), 2, b)) && e++;
    1 == a.isAutoStartSet() && (f = BinaryOutputStream.writeBooleanProperty(a.isAutoStart(), 3, b)) && e++;
    1 == a.isCustomDataSet() && (f = BinaryOutputStream.writeStringProperty(a.getCustomData(), 4, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25139 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    1 == a.isPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25140 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isFriendSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getFriend(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25141 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    1 == a.isPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25142 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isUpdateSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getUpdate(), 1e3, b)) && f++;
    if (1 == a.isValuesSet()) {
        a = a.getValues();
        if (null == a) d = !1; else {
            b.putShort(1001);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25143 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isfriendSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getFriend(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25144 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isfriendSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getFriend(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25145 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isPlayerIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 1e3, b)) && e++;
    1 == a.isNbCoinsSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getNbCoins(), 1001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25146 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && e++;
    1 == a.isNameSet() && (f = BinaryOutputStream.writeStringProperty(a.getName(), 1001, b)) && e++;
    1 == a.isPriceSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getPrice(), 1002, b)) && e++;
    1 == a.isBoughtSet() && (f = BinaryOutputStream.writeBooleanProperty(a.isBought(), 1003, b)) && e++;
    1 == a.isCountSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getCount(), 1004, b)) && e++;
    1 == a.isOrderSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getOrder(), 1005, b)) && e++;
    1 == a.isCustomDataSet() && (f = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1006, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25147 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    if (1 == a.isUpdatesSet()) {
        d = a.getUpdates();
        if (null == d) d = !1; else {
            b.putShort(0);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25148 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 0, b)) && f++;
    1 == a.isCustomObjectSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getCustomObject(), 1, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25149 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isIpAddressSet() && (f = BinaryOutputStream.writeStringProperty(a.getIpAddress(), 2e3, b)) && e++;
    1 == a.isTcpPortSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getTcpPort(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25150 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.issessionIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25151 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.issystemIDSet() && (d = BinaryOutputStream.writeStringProperty(a.getSystemID(), 2e3, b)) && f++;
    1 == a.istargetIDSet() && (d = BinaryOutputStream.writeStringProperty(a.getTargetID(), 2001, b)) && f++;
    1 == a.isOwnerIDSet() && (d = BinaryOutputStream.writeStringProperty(a.getOwnerID(), 2002, b)) && f++;
    1 == a.isApplicationIDSet() && (d = BinaryOutputStream.writeStringProperty(a.getApplicationID(), 2003, b)) && f++;
    1 == a.isplayerIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 2004, b)) && f++;
    1 == a.ismessageSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getMessage(), 2005, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25152 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.iscontentSet() && (f = BinaryOutputStream.writeStringProperty(a.getContent(), 3e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25153 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.issessionIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25154 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isReasonSet() && (f = BinaryOutputStream.writeStringProperty(a.getReason(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25155 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isAvatarSet() && (d = BinaryOutputStream.writeStringProperty(a.getAvatar(), 1e3, b)) && f++;
    1 == a.isPlayerIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 1001, b)) && f++;
    1 == a.isEmailSet() && (d = BinaryOutputStream.writeStringProperty(a.getEmail(), 1002, b)) && f++;
    1 == a.isCountrySet() && (d = BinaryOutputStream.writeStringProperty(a.getCountry(), 1003, b)) && f++;
    if (1 == a.isFriendsSet()) {
        d = a.getFriends();
        if (null == d) d = !1; else {
            b.putShort(1004);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1005, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25156 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isFriendDemandSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getFriendDemand(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25157 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isplayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    1 == a.ismessageSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessage(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25158 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isAddressSet() && (f = BinaryOutputStream.writeStringProperty(a.getAddress(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25159 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isSessionIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && e++;
    1 == a.isPlayerIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 2001, b)) && e++;
    1 == a.isplayerIdsStoredSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerIdsStored(), 2002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25160 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25161 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCurrentPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getCurrentPlayer(), 2e3, b)) && f++;
    1 == a.isGameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25162 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    if (1 == a.isItemsSet()) {
        a = a.getItems();
        if (null == a) d = !1; else {
            b.putShort(0);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25163 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    if (1 == a.isachievementsSet()) {
        a = a.getAchievements();
        if (null == a) d = !1; else {
            b.putShort(0);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25164 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 0, b)) && f++;
    1 == a.isNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getName(), 1, b)) && f++;
    if (1 == a.isleaderboardEntriesSet()) {
        d = a.getLeaderboardEntries();
        if (null == d) d = !1; else {
            b.putShort(2);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25165 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isurlSet() && (f = BinaryOutputStream.writeStringProperty(a.getUrl(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25166 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCurrentPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getCurrentPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25167 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    if (1 == a.isParticipantsSet()) {
        a = a.getParticipants();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25168 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSessionIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && f++;
    1 == a.isCallbackIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getCallbackId(), 2001, b)) && f++;
    1 == a.isCallbackUrlSet() && (d = BinaryOutputStream.writeStringProperty(a.getCallbackUrl(), 2002, b)) && f++;
    1 == a.isThirdPartySourceSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getThirdPartySource(), 2003, b)) && f++;
    1 == a.isThirdPartyIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getThirdPartyId(), 2004, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25169 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isTimestampSet() && (d = BinaryOutputStream.writeDoubleProperty(a.getTimestamp(), 1001, b)) && f++;
    1 == a.isPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 1002, b)) && f++;
    1 == a.isScoreSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getScore(), 1003, b)) && f++;
    1 == a.isPlayerIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 1004, b)) && f++;
    1 == a.isPlayerNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerName(), 1005, b)) && f++;
    1 == a.isPlayerAvatarPathSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerAvatarPath(), 1006, b)) && f++;
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1007, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25170 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25171 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isStartStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStartStatus(), 2e3, b)) && f++;
    1 == a.isStartDetailsSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStartDetails(), 2001, b)) && f++;
    1 == a.isPlayerSessionTypeSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayerSessionType(), 2002, b)) && f++;
    1 == a.isPlayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2003, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25172 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isInviterSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInviter(), 1001, b)) && f++;
    1 == a.isInviteeSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitee(), 1002, b)) && f++;
    1 == a.isContentSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getContent(), 1003, b)) && f++;
    1 == a.isCreationTimeStampSet() && (d = BinaryOutputStream.writeDoubleProperty(a.getCreationTimeStamp(), 1004, b)) && f++;
    1 == a.isExpirationDelaySet() && (d = BinaryOutputStream.writeDoubleProperty(a.getExpirationDelay(), 1005, b)) && f++;
    1 == a.isStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStatus(), 1006, b)) && f++;
    1 == a.isCustomDataSet() && (d = BinaryOutputStream.writeStringProperty(a.getCustomData(), 1007, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25173 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25174 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25175 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25176 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25177 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25178 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25179 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isloginSet() && (d = BinaryOutputStream.writeStringProperty(a.getLogin(), 2e3, b)) && f++;
    1 == a.ispasswordSet() && (d = BinaryOutputStream.writeStringProperty(a.getPassword(), 2001, b)) && f++;
    1 == a.isplayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2002, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25180 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCreatePlayerStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getCreatePlayerStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25181 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isloginSet() && (f = BinaryOutputStream.writeStringProperty(a.getLogin(), 2e3, b)) && e++;
    1 == a.ispasswordSet() && (f = BinaryOutputStream.writeStringProperty(a.getPassword(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25182 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLoginStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getLoginStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25183 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isthirdPartySourceSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getThirdPartySource(), 2e3, b)) && f++;
    1 == a.isaccessTokenSet() && (d = BinaryOutputStream.writeStringProperty(a.getAccessToken(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25184 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isThirdPartyLoginStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getThirdPartyLoginStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25185 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25186 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLogoutStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getLogoutStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25187 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isloginSet() && (f = BinaryOutputStream.writeStringProperty(a.getLogin(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25188 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isForgotPasswordStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getForgotPasswordStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25189 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isnameSet() && (f = BinaryOutputStream.writeStringProperty(a.getName(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25190 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSetPlayerNameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSetPlayerNameStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25191 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25192 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetFriendsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetFriendsStatus(), 1999, b)) && f++;
    if (1 == a.isfriendsSet()) {
        a = a.getFriends();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25193 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isidSet() && (f = BinaryOutputStream.writeStringProperty(a.getId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25194 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAskForFriendStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getAskForFriendStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25195 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25196 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetFriendDemandsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetFriendDemandsStatus(), 1999, b)) && f++;
    if (1 == a.isfriendDemandsSet()) {
        a = a.getFriendDemands();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25197 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isfriendDemandIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25198 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAcceptFriendDemandStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getAcceptFriendDemandStatus(), 1999, b)) && f++;
    1 == a.isfriendDemandIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25199 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isfriendDemandIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25200 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isRefuseFriendDemandStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getRefuseFriendDemandStatus(), 1999, b)) && f++;
    1 == a.isfriendDemandIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25201 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isscoreSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getScore(), 2e3, b)) && f++;
    1 == a.isleaderboardIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getLeaderboardId(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25202 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSubmitScoreStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSubmitScoreStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25203 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isleaderboardIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getLeaderboardId(), 2e3, b)) && f++;
    1 == a.isperiodSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPeriod(), 2001, b)) && f++;
    1 == a.isstartSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getStart(), 2002, b)) && f++;
    1 == a.islimitSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getLimit(), 2003, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25204 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetScoresStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetScoresStatus(), 1999, b)) && f++;
    1 == a.isleaderboardIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getLeaderboardId(), 2e3, b)) && f++;
    1 == a.isleaderboardNameSet() && (d = BinaryOutputStream.writeStringProperty(a.getLeaderboardName(), 2001, b)) && f++;
    if (1 == a.isscoresSet()) {
        a = a.getScores();
        if (null == a) d = !1; else {
            b.putShort(2002);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25205 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25206 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetAchievementsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetAchievementsStatus(), 1999, b)) && f++;
    if (1 == a.isachievementsSet()) {
        a = a.getAchievements();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25207 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isachivementIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25208 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAchieveStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getAchieveStatus(), 1999, b)) && f++;
    1 == a.isachivementIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25209 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isachivementIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && e++;
    1 == a.isvalueSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getValue(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25210 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAchieveWithProgressStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getAchieveWithProgressStatus(), 1999, b)) && f++;
    1 == a.isachivementIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && f++;
    1 == a.isprogressSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getProgress(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25211 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25212 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayerProfileStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetPlayerProfileStatus(), 1999, b)) && f++;
    1 == a.isprofileSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getProfile(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25213 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isplayerIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25214 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayerProfileByPlayerIdStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetPlayerProfileByPlayerIdStatus(), 1999, b)) && f++;
    1 == a.isprofileSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getProfile(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25215 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isprofileSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getProfile(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25216 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSavePlayerProfileStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSavePlayerProfileStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25217 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isdbQuerySet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getDbQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25218 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetStorablesStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetStorablesStatus(), 1999, b)) && f++;
    if (1 == a.isstorablesSet()) {
        a = a.getStorables();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25219 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isstorableSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStorable(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25220 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSaveStorableStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSaveStorableStatus(), 1999, b)) && f++;
    1 == a.isstorableIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStorableId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25221 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isstorableSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStorable(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25222 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isUpdateStorableStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getUpdateStorableStatus(), 1999, b)) && f++;
    1 == a.isstorableIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStorableId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25223 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isstorableSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStorable(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25224 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isRemoveStorableStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getRemoveStorableStatus(), 1999, b)) && f++;
    1 == a.isstorableIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStorableId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25225 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25226 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetItemsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetItemsStatus(), 1999, b)) && f++;
    if (1 == a.isitemsSet()) {
        a = a.getItems();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25227 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isitemIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getItemId(), 2e3, b)) && e++;
    1 == a.isquantitySet() && (f = BinaryOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25228 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isBuyItemStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getBuyItemStatus(), 1999, b)) && f++;
    1 == a.isboughtItemSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getBoughtItem(), 2e3, b)) && f++;
    1 == a.isquantitySet() && (d = BinaryOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25229 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isitemIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getItemId(), 2e3, b)) && e++;
    1 == a.isquantitySet() && (f = BinaryOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25230 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isConsumeItemStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getConsumeItemStatus(), 1999, b)) && f++;
    1 == a.isconsumedItemSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getConsumedItem(), 2e3, b)) && f++;
    1 == a.isquantitySet() && (d = BinaryOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25231 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isvalueSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getValue(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25232 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isIncreasePlayerWalletStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getIncreasePlayerWalletStatus(), 1999, b)) && f++;
    1 == a.isvalueSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getValue(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25233 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25234 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayerWalletStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetPlayerWalletStatus(), 1999, b)) && f++;
    1 == a.iswalletSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getWallet(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25235 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25236 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isJoinGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getJoinGameStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25237 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25238 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isUnjoinGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getUnjoinGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25239 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25240 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isStartGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStartGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25241 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25242 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isStopGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStopGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25243 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25244 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCreateGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getCreateGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25245 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isdbQuerySet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getDbQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25246 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetGamesStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetGamesStatus(), 1999, b)) && f++;
    if (1 == a.isgamesSet()) {
        a = a.getGames();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25247 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25248 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSaveAsGhostStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSaveAsGhostStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25249 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isdbQuerySet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getDbQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25250 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetGhostsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetGhostsStatus(), 1999, b)) && f++;
    if (1 == a.isghostsSet()) {
        a = a.getGhosts();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25251 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25252 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLoadGhostStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getLoadGhostStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25253 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25254 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isNextPlayerTurnStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getNextPlayerTurnStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25255 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25256 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSaveGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSaveGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25257 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25258 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLoadGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getLoadGameStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25259 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.ismessageSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessage(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25260 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSendGameChatStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSendGameChatStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25261 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.isplayerIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 2001, b)) && e++;
    1 == a.ismessageSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessage(), 2002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25262 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSendGameChatToPlayerStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSendGameChatToPlayerStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25263 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.ismessageSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessage(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25264 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSendGameChatToPlayerListStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getSendGameChatToPlayerListStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25265 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isplayerIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getPlayerId(), 2e3, b)) && f++;
    1 == a.isinvitationSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitation(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25266 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitePlayerStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getInvitePlayerStatus(), 1999, b)) && f++;
    1 == a.isinvitationIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25267 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isnuggetaQuerySet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getNuggetaQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25268 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetInvitationsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetInvitationsStatus(), 1999, b)) && f++;
    if (1 == a.isinvitationsSet()) {
        a = a.getInvitations();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype._m25269 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isinvitationIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25270 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAcceptInvitationStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getAcceptInvitationStatus(), 1999, b)) && f++;
    1 == a.isinvitationIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25271 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isinvitationIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25272 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isRefuseInvitationStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getRefuseInvitationStatus(), 1999, b)) && f++;
    1 == a.isinvitationIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25273 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25274 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isPauseSessionMonitoringStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPauseSessionMonitoringStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25275 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5516.prototype._m25276 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isResumeSessionMonitoringStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getResumeSessionMonitoringStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25277 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgamesQuerySet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGamesQuery(), 2e3, b)) && f++;
    1 == a.ismatchMakingConditionsSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getMatchMakingConditions(), 2001, b)) && f++;
    1 == a.istimeoutDelayMinPlayersSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getTimeoutDelayMinPlayers(), 2002, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25278 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isMatchAndJoinGameStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getMatchAndJoinGameStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25279 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isplayersQuerySet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getPlayersQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5516.prototype._m25280 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayersStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getGetPlayersStatus(), 1999, b)) && f++;
    if (1 == a.isplayersSet()) {
        a = a.getPlayers();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5516.prototype.readSerializable = function(c, a, b) {
    if (0 == b) return this._m25281(c, a);
    if (1 == b) return this._m25282(c, a);
    if (2 == b) return this._m25283(c, a);
    if (3 == b) return this._m25284(c, a);
    if (4 == b) return this._m25285(c, a);
    if (5 == b) return this._m25286(c, a);
    if (6 == b) return this._m25287(c, a);
    if (7 == b) return this._m25288(c, a);
    if (8 == b) return this._m25289(c, a);
    if (9 == b) return this._m25290(c, a);
    if (10 == b) return this._m25291(c, a);
    if (11 == b) return this._m25292(c, a);
    if (12 == b) return this._m25293(c, a);
    if (13 == b) return this._m25294(c, a);
    if (14 == b) return this._m25295(c, a);
    if (10002 == b) return this._m25296(c, a);
    if (10011 == b) return this._m25297(c, a);
    if (10140 == b) return this._m25298(c, a);
    if (10020 == b) return this._m25299(c, a);
    if (10008 == b) return this._m25300(c, a);
    if (10125 == b) return this._m25301(c, a);
    if (10029 == b) return this._m25302(c, a);
    if (12e3 == b) return this._m25303(c, a);
    if (10035 == b) return this._m25304(c, a);
    if (10038 == b) return this._m25305(c, a);
    if (10041 == b) return this._m25306(c, a);
    if (10044 == b) return this._m25307(c, a);
    if (10047 == b) return this._m25308(c, a);
    if (10065 == b) return this._m25309(c, a);
    if (10068 == b) return this._m25310(c, a);
    if (10071 == b) return this._m25311(c, a);
    if (10017 == b) return this._m25312(c, a);
    if (11832 == b) return this._m25313(c, a);
    if (10014 == b) return this._m25314(c, a);
    if (10116 == b) return this._m25315(c, a);
    if (10119 == b) return this._m25316(c, a);
    if (10128 == b) return this._m25317(c, a);
    if (10131 == b) return this._m25318(c, a);
    if (10053 == b) return this._m25319(c, a);
    if (10050 == b) return this._m25320(c, a);
    if (10056 == b) return this._m25321(c, a);
    if (10059 == b) return this._m25322(c, a);
    if (10062 == b) return this._m25323(c, a);
    if (10074 == b) return this._m25324(c, a);
    if (10077 == b) return this._m25325(c, a);
    if (10092 == b) return this._m25326(c, a);
    if (10095 == b) return this._m25327(c, a);
    if (10098 == b) return this._m25328(c, a);
    if (10101 == b) return this._m25329(c, a);
    if (10104 == b) return this._m25330(c, a);
    if (10107 == b) return this._m25331(c, a);
    if (10110 == b) return this._m25332(c, a);
    if (10122 == b) return this._m25333(c, a);
    if (10143 == b) return this._m25334(c, a);
    if (10146 == b) return this._m25335(c, a);
    if (10113 == b) return this._m25336(c, a);
    if (10926 == b) return this._m25337(c, a);
    if (10929 == b) return this._m25338(c, a);
    if (10170 == b) return this._m25339(c, a);
    if (10173 == b) return this._m25340(c, a);
    if (10176 == b) return this._m25341(c, a);
    if (10179 == b) return this._m25342(c, a);
    if (10161 == b) return this._m25343(c, a);
    if (10164 == b) return this._m25344(c, a);
    if (10167 == b) return this._m25345(c, a);
    if (10182 == b) return this._m25346(c, a);
    if (3001 == b) return this._m25347(c, a);
    if (3002 == b) return this._m25348(c, a);
    if (3003 == b) return this._m25349(c, a);
    if (3004 == b) return this._m25350(c, a);
    if (3005 == b) return this._m25351(c, a);
    if (3006 == b) return this._m25352(c, a);
    if (3007 == b) return this._m25353(c, a);
    if (3008 == b) return this._m25354(c, a);
    if (3009 == b) return this._m25355(c, a);
    if (3010 == b) return this._m25356(c, a);
    if (3011 == b) return this._m25357(c, a);
    if (3012 == b) return this._m25358(c, a);
    if (3013 == b) return this._m25359(c, a);
    if (3014 == b) return this._m25360(c, a);
    if (3015 == b) return this._m25361(c, a);
    if (3016 == b) return this._m25362(c, a);
    if (3017 == b) return this._m25363(c, a);
    if (3018 == b) return this._m25364(c, a);
    if (3019 == b) return this._m25365(c, a);
    if (3020 == b) return this._m25366(c, a);
    if (3021 == b) return this._m25367(c, a);
    if (3022 == b) return this._m25368(c, a);
    if (3023 == b) return this._m25369(c, a);
    if (3024 == b) return this._m25370(c, a);
    if (3025 == b) return this._m25371(c, a);
    if (3026 == b) return this._m25372(c, a);
    if (3027 == b) return this._m25373(c, a);
    if (3028 == b) return this._m25374(c, a);
    if (3029 == b) return this._m25375(c, a);
    if (3030 == b) return this._m25376(c, a);
    if (3032 == b) return this._m25377(c, a);
    if (3033 == b) return this._m25378(c, a);
    if (3034 == b) return this._m25379(c, a);
    if (3035 == b) return this._m25380(c, a);
    if (3036 == b) return this._m25381(c, a);
    if (3037 == b) return this._m25382(c, a);
    if (3038 == b) return this._m25383(c, a);
    if (3039 == b) return this._m25384(c, a);
    if (3040 == b) return this._m25385(c, a);
    if (3041 == b) return this._m25386(c, a);
    if (3042 == b) return this._m25387(c, a);
    if (3043 == b) return this._m25388(c, a);
    if (3044 == b) return this._m25389(c, a);
    if (3045 == b) return this._m25390(c, a);
    if (3047 == b) return this._m25391(c, a);
    if (3048 == b) return this._m25392(c, a);
    if (3049 == b) return this._m25393(c, a);
    if (3050 == b) return this._m25394(c, a);
    if (3051 == b) return this._m25395(c, a);
    if (3052 == b) return this._m25396(c, a);
    if (3053 == b) return this._m25397(c, a);
    if (1e4 == b) return this._m25398(c, a);
    if (10001 == b) return this._m25399(c, a);
    if (10009 == b) return this._m25400(c, a);
    if (10010 == b) return this._m25401(c, a);
    if (10138 == b) return this._m25402(c, a);
    if (10139 == b) return this._m25403(c, a);
    if (10018 == b) return this._m25404(c, a);
    if (10019 == b) return this._m25405(c, a);
    if (10006 == b) return this._m25406(c, a);
    if (10007 == b) return this._m25407(c, a);
    if (10123 == b) return this._m25408(c, a);
    if (10124 == b) return this._m25409(c, a);
    if (10027 == b) return this._m25410(c, a);
    if (10028 == b) return this._m25411(c, a);
    if (11998 == b) return this._m25412(c, a);
    if (11999 == b) return this._m25413(c, a);
    if (10033 == b) return this._m25414(c, a);
    if (10034 == b) return this._m25415(c, a);
    if (10036 == b) return this._m25416(c, a);
    if (10037 == b) return this._m25417(c, a);
    if (10039 == b) return this._m25418(c, a);
    if (10040 == b) return this._m25419(c, a);
    if (10042 == b) return this._m25420(c, a);
    if (10043 == b) return this._m25421(c, a);
    if (10045 == b) return this._m25422(c, a);
    if (10046 == b) return this._m25423(c, a);
    if (10063 == b) return this._m25424(c, a);
    if (10064 == b) return this._m25425(c, a);
    if (10066 == b) return this._m25426(c, a);
    if (10067 == b) return this._m25427(c, a);
    if (10069 == b) return this._m25428(c, a);
    if (10070 == b) return this._m25429(c, a);
    if (10015 == b) return this._m25430(c, a);
    if (10016 == b) return this._m25431(c, a);
    if (11830 == b) return this._m25432(c, a);
    if (11831 == b) return this._m25433(c, a);
    if (10012 == b) return this._m25434(c, a);
    if (10013 == b) return this._m25435(c, a);
    if (10114 == b) return this._m25436(c, a);
    if (10115 == b) return this._m25437(c, a);
    if (10117 == b) return this._m25438(c, a);
    if (10118 == b) return this._m25439(c, a);
    if (10126 == b) return this._m25440(c, a);
    if (10127 == b) return this._m25441(c, a);
    if (10129 == b) return this._m25442(c, a);
    if (10130 == b) return this._m25443(c, a);
    if (10051 == b) return this._m25444(c, a);
    if (10052 == b) return this._m25445(c, a);
    if (10048 == b) return this._m25446(c, a);
    if (10049 == b) return this._m25447(c, a);
    if (10054 == b) return this._m25448(c, a);
    if (10055 == b) return this._m25449(c, a);
    if (10057 == b) return this._m25450(c, a);
    if (10058 == b) return this._m25451(c, a);
    if (10060 == b) return this._m25452(c, a);
    if (10061 == b) return this._m25453(c, a);
    if (10072 == b) return this._m25454(c, a);
    if (10073 == b) return this._m25455(c, a);
    if (10075 == b) return this._m25456(c, a);
    if (10076 == b) return this._m25457(c, a);
    if (10090 == b) return this._m25458(c, a);
    if (10091 == b) return this._m25459(c, a);
    if (10093 == b) return this._m25460(c, a);
    if (10094 == b) return this._m25461(c, a);
    if (10096 == b) return this._m25462(c, a);
    if (10097 == b) return this._m25463(c, a);
    if (10099 == b) return this._m25464(c, a);
    if (10100 == b) return this._m25465(c, a);
    if (10102 == b) return this._m25466(c, a);
    if (10103 == b) return this._m25467(c, a);
    if (10105 == b) return this._m25468(c, a);
    if (10106 == b) return this._m25469(c, a);
    if (10108 == b) return this._m25470(c, a);
    if (10109 == b) return this._m25471(c, a);
    if (10120 == b) return this._m25472(c, a);
    if (10121 == b) return this._m25473(c, a);
    if (10141 == b) return this._m25474(c, a);
    if (10142 == b) return this._m25475(c, a);
    if (10144 == b) return this._m25476(c, a);
    if (10145 == b) return this._m25477(c, a);
    if (10111 == b) return this._m25478(c, a);
    if (10112 == b) return this._m25479(c, a);
    if (10924 == b) return this._m25480(c, a);
    if (10925 == b) return this._m25481(c, a);
    if (10927 == b) return this._m25482(c, a);
    if (10928 == b) return this._m25483(c, a);
    if (10168 == b) return this._m25484(c, a);
    if (10169 == b) return this._m25485(c, a);
    if (10171 == b) return this._m25486(c, a);
    if (10172 == b) return this._m25487(c, a);
    if (10174 == b) return this._m25488(c, a);
    if (10175 == b) return this._m25489(c, a);
    if (10177 == b) return this._m25490(c, a);
    if (10178 == b) return this._m25491(c, a);
    if (10159 == b) return this._m25492(c, a);
    if (10160 == b) return this._m25493(c, a);
    if (10162 == b) return this._m25494(c, a);
    if (10163 == b) return this._m25495(c, a);
    if (10165 == b) return this._m25496(c, a);
    if (10166 == b) return this._m25497(c, a);
    if (10180 == b) return this._m25498(c, a);
    if (10181 == b) return this._m25499(c, a);
    throw new NError().init("No serializer found for type " + b, null);
};

T5516.prototype._m25281 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ThirdPartySource.fromValue(b);
};

T5516.prototype._m25282 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return MatchMakingType.fromValue(b);
};

T5516.prototype._m25283 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return LeaderboardOrder.fromValue(b);
};

T5516.prototype._m25284 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return LeaderboardPeriod.fromValue(b);
};

T5516.prototype._m25285 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return HandshakeState.fromValue(b);
};

T5516.prototype._m25286 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return PlayerState.fromValue(b);
};

T5516.prototype._m25287 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ClientApplication.fromValue(b);
};

T5516.prototype._m25288 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GameRunningState.fromValue(b);
};

T5516.prototype._m25289 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return NFriendDemandStatus.fromValue(b);
};

T5516.prototype._m25290 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ThirdPartyMethodType.fromValue(b);
};

T5516.prototype._m25291 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return StartStatus.fromValue(b);
};

T5516.prototype._m25292 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return PlayerSessionType.fromValue(b);
};

T5516.prototype._m25293 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return NAchievementType.fromValue(b);
};

T5516.prototype._m25294 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return NInvitationStatus.fromValue(b);
};

T5516.prototype._m25295 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ExecutionStatus.fromValue(b);
};

T5516.prototype._m25296 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return CreatePlayerStatus.fromValue(b);
};

T5516.prototype._m25297 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return LoginStatus.fromValue(b);
};

T5516.prototype._m25298 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ThirdPartyLoginStatus.fromValue(b);
};

T5516.prototype._m25299 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return LogoutStatus.fromValue(b);
};

T5516.prototype._m25300 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ForgotPasswordStatus.fromValue(b);
};

T5516.prototype._m25301 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SetPlayerNameStatus.fromValue(b);
};

T5516.prototype._m25302 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetFriendsStatus.fromValue(b);
};

T5516.prototype._m25303 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return AskForFriendStatus.fromValue(b);
};

T5516.prototype._m25304 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetFriendDemandsStatus.fromValue(b);
};

T5516.prototype._m25305 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return AcceptFriendDemandStatus.fromValue(b);
};

T5516.prototype._m25306 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return RefuseFriendDemandStatus.fromValue(b);
};

T5516.prototype._m25307 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SubmitScoreStatus.fromValue(b);
};

T5516.prototype._m25308 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetScoresStatus.fromValue(b);
};

T5516.prototype._m25309 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetAchievementsStatus.fromValue(b);
};

T5516.prototype._m25310 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return AchieveStatus.fromValue(b);
};

T5516.prototype._m25311 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return AchieveWithProgressStatus.fromValue(b);
};

T5516.prototype._m25312 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetPlayerProfileStatus.fromValue(b);
};

T5516.prototype._m25313 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetPlayerProfileByPlayerIdStatus.fromValue(b);
};

T5516.prototype._m25314 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SavePlayerProfileStatus.fromValue(b);
};

T5516.prototype._m25315 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetStorablesStatus.fromValue(b);
};

T5516.prototype._m25316 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SaveStorableStatus.fromValue(b);
};

T5516.prototype._m25317 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return UpdateStorableStatus.fromValue(b);
};

T5516.prototype._m25318 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return RemoveStorableStatus.fromValue(b);
};

T5516.prototype._m25319 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetItemsStatus.fromValue(b);
};

T5516.prototype._m25320 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return BuyItemStatus.fromValue(b);
};

T5516.prototype._m25321 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ConsumeItemStatus.fromValue(b);
};

T5516.prototype._m25322 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return IncreasePlayerWalletStatus.fromValue(b);
};

T5516.prototype._m25323 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetPlayerWalletStatus.fromValue(b);
};

T5516.prototype._m25324 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return JoinGameStatus.fromValue(b);
};

T5516.prototype._m25325 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return UnjoinGameStatus.fromValue(b);
};

T5516.prototype._m25326 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return StartGameStatus.fromValue(b);
};

T5516.prototype._m25327 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return StopGameStatus.fromValue(b);
};

T5516.prototype._m25328 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return CreateGameStatus.fromValue(b);
};

T5516.prototype._m25329 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetGamesStatus.fromValue(b);
};

T5516.prototype._m25330 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SaveAsGhostStatus.fromValue(b);
};

T5516.prototype._m25331 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetGhostsStatus.fromValue(b);
};

T5516.prototype._m25332 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return LoadGhostStatus.fromValue(b);
};

T5516.prototype._m25333 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return NextPlayerTurnStatus.fromValue(b);
};

T5516.prototype._m25334 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SaveGameStatus.fromValue(b);
};

T5516.prototype._m25335 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return LoadGameStatus.fromValue(b);
};

T5516.prototype._m25336 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SendGameChatStatus.fromValue(b);
};

T5516.prototype._m25337 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SendGameChatToPlayerStatus.fromValue(b);
};

T5516.prototype._m25338 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return SendGameChatToPlayerListStatus.fromValue(b);
};

T5516.prototype._m25339 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return InvitePlayerStatus.fromValue(b);
};

T5516.prototype._m25340 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetInvitationsStatus.fromValue(b);
};

T5516.prototype._m25341 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return AcceptInvitationStatus.fromValue(b);
};

T5516.prototype._m25342 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return RefuseInvitationStatus.fromValue(b);
};

T5516.prototype._m25343 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return PauseSessionMonitoringStatus.fromValue(b);
};

T5516.prototype._m25344 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ResumeSessionMonitoringStatus.fromValue(b);
};

T5516.prototype._m25345 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return MatchAndJoinGameStatus.fromValue(b);
};

T5516.prototype._m25346 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return GetPlayersStatus.fromValue(b);
};

T5516.prototype._m25347 = function(c, a) {
    for (var b = new NPlayer().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setPassword(d), MemoryManagement.free(d)) : 1003 == d ? (d = BinaryInputStream.readString(a), 
        b.setAccessToken(d), MemoryManagement.free(d)) : 1004 == d ? (d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : 1005 == d ? b.setConnected(BinaryInputStream.readBoolean(a)) : 1006 == d ? b.setLoginSource(BinaryInputStream.readObject(c, a)) : 1007 == d ? (d = BinaryInputStream.readString(a), 
        b.setThirdPartyId(d), MemoryManagement.free(d)) : 1008 == d ? b.setCreationDate(BinaryInputStream.readDouble(a)) : 1009 == d ? b.setActive(BinaryInputStream.readBoolean(a)) : 1010 == d ? (d = BinaryInputStream.readString(a), 
        b.setLang(d), MemoryManagement.free(d)) : 1011 == d ? b.setAnonymous(BinaryInputStream.readBoolean(a)) : 1012 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25348 = function(c, a) {
    for (var b = new NAchievement().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : 1002 == d ? b.setAchieved(BinaryInputStream.readBoolean(a)) : 1003 == d ? b.setFeatured(BinaryInputStream.readBoolean(a)) : 1004 == d ? (d = BinaryInputStream.readString(a), 
        b.setDescription(d), MemoryManagement.free(d)) : 1005 == d ? b.setNXP(BinaryInputStream.readInteger(a)) : 1006 == d ? b.setNEnergy(BinaryInputStream.readInteger(a)) : 1007 == d ? b.setType(BinaryInputStream.readObject(c, a)) : 1008 == d ? b.setGoal(BinaryInputStream.readInteger(a)) : 1009 == d ? b.setProgress(BinaryInputStream.readInteger(a)) : 1010 == d ? b.setOrder(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25349 = function(c, a) {
    for (var b = new Handshake().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setVersion(d), MemoryManagement.free(d)) : 2001 == d ? b.setReason(BinaryInputStream.readObject(c, a)) : 2002 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerIdsStored(d), MemoryManagement.free(d)) : 2003 == d ? (d = BinaryInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2004 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlatform(d), MemoryManagement.free(d)) : 2005 == d ? (d = BinaryInputStream.readString(a), 
        b.setSpId(d), MemoryManagement.free(d)) : 2006 == d ? (d = BinaryInputStream.readString(a), 
        b.setDebugSpId(d), MemoryManagement.free(d)) : 2007 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25350 = function(c, a) {
    for (var b = new HandshakeResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setExecutionStatus(BinaryInputStream.readObject(c, a)) : 2001 == d ? b.setReason(BinaryInputStream.readObject(c, a)) : 2002 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerIdsStored(d), MemoryManagement.free(d)) : 2003 == d ? (d = BinaryInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2004 == d ? b.setPlayerSessionType(BinaryInputStream.readObject(c, a)) : 2005 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25351 = function(c, a) {
    for (var b = new GameRunningStateChange().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setGameRunningState(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25352 = function(c, a) {
    for (var b = new NFriendDemand().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? b.setEmitter(BinaryInputStream.readObject(c, a)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setReceiverId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomMessage(d), MemoryManagement.free(d)) : 1003 == d ? b.setFriendDemandStatus(BinaryInputStream.readObject(c, a)) : 1004 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25353 = function(c, a) {
    for (var b = new NScore().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? b.setValue(BinaryInputStream.readDouble(a)) : 1001 == d ? b.setTimestamp(BinaryInputStream.readDouble(a)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 1003 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerName(d), MemoryManagement.free(d)) : 1004 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerAvatarPath(d), MemoryManagement.free(d)) : 1005 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25354 = function(c, a) {
    for (var b = new AbstractRoom().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (1002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else 1003 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25355 = function(c, a) {
    for (var b = new NRoom().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (1002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else 1003 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDefaultRoom(BinaryInputStream.readBoolean(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25356 = function(c, a) {
    for (var b = new NGame().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (1002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else 1003 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGameRunningState(BinaryInputStream.readObject(c, a)) : 2001 == d ? b.setGameCharacteristics(BinaryInputStream.readObject(c, a)) : 2002 == d ? b.setGameState(BinaryInputStream.readObject(c, a)) : 2003 == d ? b.setMatchMakingConditions(BinaryInputStream.readObject(c, a)) : 2004 == d ? b.setTurnBasedContext(BinaryInputStream.readObject(c, a)) : 2006 == d ? b.setOwner(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25357 = function(c, a) {
    for (var b = new NGameCharacteristics().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? b.setMinPlayer(BinaryInputStream.readInteger(a)) : 1 == d ? b.setMaxPlayer(BinaryInputStream.readInteger(a)) : 2 == d ? b.setAutoStop(BinaryInputStream.readBoolean(a)) : 3 == d ? b.setAutoStart(BinaryInputStream.readBoolean(a)) : 4 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25358 = function(c, a) {
    for (var b = new PlayerEnterGame().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25359 = function(c, a) {
    for (var b = new FriendshipNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriend(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25360 = function(c, a) {
    for (var b = new PlayerUnjoinGame().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25361 = function(c, a) {
    for (var b = new NWorldUpdate().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) b.setUpdate(BinaryInputStream.readInteger(a)); else if (1001 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setValues(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25362 = function(c, a) {
    for (var b = new FriendConnectedNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriend(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25363 = function(c, a) {
    for (var b = new FriendDisconnectedNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriend(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25364 = function(c, a) {
    for (var b = new NPlayerWallet().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 1001 == d ? b.setNbCoins(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25365 = function(c, a) {
    for (var b = new NItem().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : 1002 == d ? b.setPrice(BinaryInputStream.readInteger(a)) : 1003 == d ? b.setBought(BinaryInputStream.readBoolean(a)) : 1004 == d ? b.setCount(BinaryInputStream.readInteger(a)) : 1005 == d ? b.setOrder(BinaryInputStream.readInteger(a)) : 1006 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25366 = function(c, a) {
    for (var b = new NGameState().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setUpdates(d);
        } else 1 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25367 = function(c, a) {
    for (var b = new NMatchMakingConditions().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : 1 == d ? b.setCustomObject(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25368 = function(c, a) {
    for (var b = new OpenConnection().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setIpAddress(d), MemoryManagement.free(d)) : 2001 == d ? b.setTcpPort(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25369 = function(c, a) {
    for (var b = new SlaveConnectionNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25370 = function(c, a) {
    for (var b = new PlayerMessage().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSystemID(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setTargetID(d), MemoryManagement.free(d)) : 2002 == d ? (d = BinaryInputStream.readString(a), 
        b.setOwnerID(d), MemoryManagement.free(d)) : 2003 == d ? (d = BinaryInputStream.readString(a), 
        b.setApplicationID(d), MemoryManagement.free(d)) : 2004 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2005 == d ? b.setMessage(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25371 = function(c, a) {
    for (var b = new NRawGameMessage().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 3e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setContent(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25372 = function(c, a) {
    for (var b = new SessionExpired().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25373 = function(c, a) {
    for (var b = new GameMessageError().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setReason(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25374 = function(c, a) {
    for (var b = new NPlayerProfile().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setAvatar(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setEmail(d), MemoryManagement.free(d); else if (1003 == d) d = BinaryInputStream.readString(a), 
        b.setCountry(d), MemoryManagement.free(d); else if (1004 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setFriends(d);
        } else 1005 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25375 = function(c, a) {
    for (var b = new FriendDemandNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriendDemand(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25376 = function(c, a) {
    for (var b = new GameChatNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25377 = function(c, a) {
    for (var b = new SwitchToServerInformation().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setAddress(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25378 = function(c, a) {
    for (var b = new SwitchPlayerRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2002 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerIdsStored(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25379 = function(c, a) {
    for (var b = new MyTurnNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25380 = function(c, a) {
    for (var b = new PlayerTurnNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCurrentPlayer(BinaryInputStream.readObject(c, a)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25381 = function(c, a) {
    for (var b = new NStore().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) if (0 == BinaryInputStream.getShort(a)) {
        var d = [];
        if (a.get() != SerializationTypes.NULL_TYPE) {
            a.getInt();
            for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
        }
        b.setItems(d);
    } else BinaryInputStream.skipProperty(a);
    return b;
};

T5516.prototype._m25382 = function(c, a) {
    for (var b = new NAchievementBoard().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) if (0 == BinaryInputStream.getShort(a)) {
        var d = [];
        if (a.get() != SerializationTypes.NULL_TYPE) {
            a.getInt();
            for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
        }
        b.setAchievements(d);
    } else BinaryInputStream.skipProperty(a);
    return b;
};

T5516.prototype._m25383 = function(c, a) {
    for (var b = new NLeaderboard().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setId(d), MemoryManagement.free(d); else if (1 == d) d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (2 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setLeaderboardEntries(d);
        } else 3 == d ? (d = BinaryInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25384 = function(c, a) {
    for (var b = new OpenUrl().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setUrl(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25385 = function(c, a) {
    for (var b = new TurnBasedContext().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCurrentPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25386 = function(c, a) {
    for (var b = new DisconnectedContext().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setParticipants(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25387 = function(c, a) {
    for (var b = new OpenUrlData().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setCallbackId(d), MemoryManagement.free(d)) : 2002 == d ? (d = BinaryInputStream.readString(a), 
        b.setCallbackUrl(d), MemoryManagement.free(d)) : 2003 == d ? b.setThirdPartySource(BinaryInputStream.readObject(c, a)) : 2004 == d ? (d = BinaryInputStream.readString(a), 
        b.setThirdPartyId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25388 = function(c, a) {
    for (var b = new NLeaderboardEntry().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? b.setTimestamp(BinaryInputStream.readDouble(a)) : 1002 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : 1003 == d ? b.setScore(BinaryInputStream.readObject(c, a)) : 1004 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 1005 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerName(d), MemoryManagement.free(d)) : 1006 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerAvatarPath(d), MemoryManagement.free(d)) : 1007 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25389 = function(c, a) {
    for (var b = new StartRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25390 = function(c, a) {
    for (var b = new StartResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStartStatus(BinaryInputStream.readObject(c, a)) : 2001 == d ? b.setStartDetails(BinaryInputStream.readObject(c, a)) : 2002 == d ? b.setPlayerSessionType(BinaryInputStream.readObject(c, a)) : 2003 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25391 = function(c, a) {
    for (var b = new NInvitation().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? b.setInviter(BinaryInputStream.readObject(c, a)) : 1002 == d ? b.setInvitee(BinaryInputStream.readObject(c, a)) : 1003 == d ? b.setContent(BinaryInputStream.readObject(c, a)) : 1004 == d ? b.setCreationTimeStamp(BinaryInputStream.readDouble(a)) : 1005 == d ? b.setExpirationDelay(BinaryInputStream.readDouble(a)) : 1006 == d ? b.setStatus(BinaryInputStream.readObject(c, a)) : 1007 == d ? (d = BinaryInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25392 = function(c, a) {
    for (var b = new NGameInvitation().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25393 = function(c, a) {
    for (var b = new InvitationRequestNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25394 = function(c, a) {
    for (var b = new InvitationAcceptedNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25395 = function(c, a) {
    for (var b = new InvitationRefusedNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25396 = function(c, a) {
    for (var b = new InvitationExpiredNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25397 = function(c, a) {
    for (var b = new NMatchAndJoinGameExpiredNotification().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25398 = function(c, a) {
    for (var b = new CreatePlayerRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setPassword(d), MemoryManagement.free(d)) : 2002 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25399 = function(c, a) {
    for (var b = new CreatePlayerResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setCreatePlayerStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25400 = function(c, a) {
    for (var b = new LoginRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setPassword(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25401 = function(c, a) {
    for (var b = new LoginResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLoginStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25402 = function(c, a) {
    for (var b = new ThirdPartyLoginRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setThirdPartySource(BinaryInputStream.readObject(c, a)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setAccessToken(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25403 = function(c, a) {
    for (var b = new ThirdPartyLoginResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setThirdPartyLoginStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25404 = function(c, a) {
    for (var b = new LogoutRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25405 = function(c, a) {
    for (var b = new LogoutResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLogoutStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25406 = function(c, a) {
    for (var b = new ForgotPasswordRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25407 = function(c, a) {
    for (var b = new ForgotPasswordResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setForgotPasswordStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25408 = function(c, a) {
    for (var b = new SetPlayerNameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25409 = function(c, a) {
    for (var b = new SetPlayerNameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSetPlayerNameStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25410 = function(c, a) {
    for (var b = new GetFriendsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25411 = function(c, a) {
    for (var b = new GetFriendsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetFriendsStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setFriends(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25412 = function(c, a) {
    for (var b = new AskForFriendRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25413 = function(c, a) {
    for (var b = new AskForFriendResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAskForFriendStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25414 = function(c, a) {
    for (var b = new GetFriendDemandsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25415 = function(c, a) {
    for (var b = new GetFriendDemandsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetFriendDemandsStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setFriendDemands(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25416 = function(c, a) {
    for (var b = new AcceptFriendDemandRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25417 = function(c, a) {
    for (var b = new AcceptFriendDemandResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAcceptFriendDemandStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25418 = function(c, a) {
    for (var b = new RefuseFriendDemandRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25419 = function(c, a) {
    for (var b = new RefuseFriendDemandResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setRefuseFriendDemandStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25420 = function(c, a) {
    for (var b = new SubmitScoreRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setScore(BinaryInputStream.readObject(c, a)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setLeaderboardId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25421 = function(c, a) {
    for (var b = new SubmitScoreResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSubmitScoreStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25422 = function(c, a) {
    for (var b = new GetScoresRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setLeaderboardId(d), MemoryManagement.free(d)) : 2001 == d ? b.setPeriod(BinaryInputStream.readObject(c, a)) : 2002 == d ? b.setStart(BinaryInputStream.readInteger(a)) : 2003 == d ? b.setLimit(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25423 = function(c, a) {
    for (var b = new GetScoresResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetScoresStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) d = BinaryInputStream.readString(a), 
        b.setLeaderboardId(d), MemoryManagement.free(d); else if (2001 == d) d = BinaryInputStream.readString(a), 
        b.setLeaderboardName(d), MemoryManagement.free(d); else if (2002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setScores(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25424 = function(c, a) {
    for (var b = new GetAchievementsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25425 = function(c, a) {
    for (var b = new GetAchievementsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetAchievementsStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setAchievements(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25426 = function(c, a) {
    for (var b = new AchieveRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25427 = function(c, a) {
    for (var b = new AchieveResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAchieveStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25428 = function(c, a) {
    for (var b = new AchieveWithProgressRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : 2001 == d ? b.setValue(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25429 = function(c, a) {
    for (var b = new AchieveWithProgressResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAchieveWithProgressStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : 2001 == d ? b.setProgress(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25430 = function(c, a) {
    for (var b = new GetPlayerProfileRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25431 = function(c, a) {
    for (var b = new GetPlayerProfileResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setGetPlayerProfileStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setProfile(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25432 = function(c, a) {
    for (var b = new GetPlayerProfileByPlayerIdRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25433 = function(c, a) {
    for (var b = new GetPlayerProfileByPlayerIdResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setGetPlayerProfileByPlayerIdStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setProfile(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25434 = function(c, a) {
    for (var b = new SavePlayerProfileRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setProfile(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25435 = function(c, a) {
    for (var b = new SavePlayerProfileResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSavePlayerProfileStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25436 = function(c, a) {
    for (var b = new GetStorablesRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDbQuery(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25437 = function(c, a) {
    for (var b = new GetStorablesResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetStorablesStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setStorables(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25438 = function(c, a) {
    for (var b = new SaveStorableRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStorable(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25439 = function(c, a) {
    for (var b = new SaveStorableResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSaveStorableStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setStorableId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25440 = function(c, a) {
    for (var b = new UpdateStorableRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStorable(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25441 = function(c, a) {
    for (var b = new UpdateStorableResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setUpdateStorableStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setStorableId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25442 = function(c, a) {
    for (var b = new RemoveStorableRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStorable(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25443 = function(c, a) {
    for (var b = new RemoveStorableResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setRemoveStorableStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setStorableId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25444 = function(c, a) {
    for (var b = new GetItemsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25445 = function(c, a) {
    for (var b = new GetItemsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetItemsStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setItems(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25446 = function(c, a) {
    for (var b = new BuyItemRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setItemId(d), MemoryManagement.free(d)) : 2001 == d ? b.setQuantity(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25447 = function(c, a) {
    for (var b = new BuyItemResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setBuyItemStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setBoughtItem(BinaryInputStream.readObject(c, a)) : 2001 == d ? b.setQuantity(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25448 = function(c, a) {
    for (var b = new ConsumeItemRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setItemId(d), MemoryManagement.free(d)) : 2001 == d ? b.setQuantity(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25449 = function(c, a) {
    for (var b = new ConsumeItemResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setConsumeItemStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setConsumedItem(BinaryInputStream.readObject(c, a)) : 2001 == d ? b.setQuantity(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25450 = function(c, a) {
    for (var b = new IncreasePlayerWalletRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setValue(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25451 = function(c, a) {
    for (var b = new IncreasePlayerWalletResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setIncreasePlayerWalletStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setValue(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25452 = function(c, a) {
    for (var b = new GetPlayerWalletRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25453 = function(c, a) {
    for (var b = new GetPlayerWalletResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setGetPlayerWalletStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setWallet(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25454 = function(c, a) {
    for (var b = new JoinGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25455 = function(c, a) {
    for (var b = new JoinGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setJoinGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25456 = function(c, a) {
    for (var b = new UnjoinGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25457 = function(c, a) {
    for (var b = new UnjoinGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setUnjoinGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25458 = function(c, a) {
    for (var b = new StartGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25459 = function(c, a) {
    for (var b = new StartGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setStartGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25460 = function(c, a) {
    for (var b = new StopGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25461 = function(c, a) {
    for (var b = new StopGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setStopGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25462 = function(c, a) {
    for (var b = new CreateGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25463 = function(c, a) {
    for (var b = new CreateGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setCreateGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25464 = function(c, a) {
    for (var b = new GetGamesRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDbQuery(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25465 = function(c, a) {
    for (var b = new GetGamesResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetGamesStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setGames(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25466 = function(c, a) {
    for (var b = new SaveAsGhostRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25467 = function(c, a) {
    for (var b = new SaveAsGhostResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSaveAsGhostStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25468 = function(c, a) {
    for (var b = new GetGhostsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDbQuery(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25469 = function(c, a) {
    for (var b = new GetGhostsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetGhostsStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setGhosts(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25470 = function(c, a) {
    for (var b = new LoadGhostRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25471 = function(c, a) {
    for (var b = new LoadGhostResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLoadGhostStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25472 = function(c, a) {
    for (var b = new NextPlayerTurnRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25473 = function(c, a) {
    for (var b = new NextPlayerTurnResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setNextPlayerTurnStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25474 = function(c, a) {
    for (var b = new SaveGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25475 = function(c, a) {
    for (var b = new SaveGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSaveGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25476 = function(c, a) {
    for (var b = new LoadGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25477 = function(c, a) {
    for (var b = new LoadGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLoadGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25478 = function(c, a) {
    for (var b = new SendGameChatRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25479 = function(c, a) {
    for (var b = new SendGameChatResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSendGameChatStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25480 = function(c, a) {
    for (var b = new SendGameChatToPlayerRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2002 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25481 = function(c, a) {
    for (var b = new SendGameChatToPlayerResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSendGameChatToPlayerStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25482 = function(c, a) {
    for (var b = new SendGameChatToPlayerListRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25483 = function(c, a) {
    for (var b = new SendGameChatToPlayerListResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSendGameChatToPlayerListStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25484 = function(c, a) {
    for (var b = new InvitePlayerRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2001 == d ? b.setInvitation(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25485 = function(c, a) {
    for (var b = new InvitePlayerResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setInvitePlayerStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25486 = function(c, a) {
    for (var b = new GetInvitationsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setNuggetaQuery(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25487 = function(c, a) {
    for (var b = new GetInvitationsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetInvitationsStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setInvitations(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25488 = function(c, a) {
    for (var b = new AcceptInvitationRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25489 = function(c, a) {
    for (var b = new AcceptInvitationResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAcceptInvitationStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25490 = function(c, a) {
    for (var b = new RefuseInvitationRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25491 = function(c, a) {
    for (var b = new RefuseInvitationResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setRefuseInvitationStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25492 = function(c, a) {
    for (var b = new PauseSessionMonitoringRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25493 = function(c, a) {
    for (var b = new PauseSessionMonitoringResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setPauseSessionMonitoringStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25494 = function(c, a) {
    for (var b = new ResumeSessionMonitoringRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25495 = function(c, a) {
    for (var b = new ResumeSessionMonitoringResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setResumeSessionMonitoringStatus(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25496 = function(c, a) {
    for (var b = new MatchAndJoinGameRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGamesQuery(BinaryInputStream.readObject(c, a)) : 2001 == d ? b.setMatchMakingConditions(BinaryInputStream.readObject(c, a)) : 2002 == d ? b.setTimeoutDelayMinPlayers(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25497 = function(c, a) {
    for (var b = new MatchAndJoinGameResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setMatchAndJoinGameStatus(BinaryInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25498 = function(c, a) {
    for (var b = new GetPlayersRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setPlayersQuery(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype._m25499 = function(c, a) {
    for (var b = new GetPlayersResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        if (0 == d) d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetPlayersStatus(BinaryInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(BinaryInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5516.prototype.getSerializerFactoryType = function() {
    return SerializerFactoryType.BINARY;
};

AcceptFriendDemandStatus.values = function() {
    return AcceptFriendDemandStatus._values;
};

AcceptFriendDemandStatus.prototype.getValue = function() {
    return this._value;
};

AcceptFriendDemandStatus.prototype.name = function() {
    return this._name;
};

AcceptFriendDemandStatus.prototype.ordinal = function() {
    return this._value;
};

AcceptFriendDemandStatus.prototype.init = function(c, a) {
    void 0 == AcceptFriendDemandStatus._values && (AcceptFriendDemandStatus._values = []);
    this._value = a;
    this._name = c;
    AcceptFriendDemandStatus._values.push(this);
    return this;
};

AcceptFriendDemandStatus.fromValue = function(c) {
    for (var a = 0; a < AcceptFriendDemandStatus._values.length; a++) {
        var b = AcceptFriendDemandStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

AcceptFriendDemandStatus.valueOf = function(c) {
    for (var a = 0; a < AcceptFriendDemandStatus._values.length; a++) {
        var b = AcceptFriendDemandStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

AcceptFriendDemandStatus.prototype.getDomainID = function() {
    return 100;
};

AcceptFriendDemandStatus.prototype.getSerializerID = function() {
    return 10038;
};

AcceptFriendDemandStatus.prototype.toString = function() {
    return "AcceptFriendDemandStatus." + this._name;
};

AcceptFriendDemandStatus.prototype.clone = function() {
    return this;
};

AcceptFriendDemandStatus.INVALID_PARAMETERS = new AcceptFriendDemandStatus().init("INVALID_PARAMETERS", -2);

AcceptFriendDemandStatus.INTERNAL_ERROR = new AcceptFriendDemandStatus().init("INTERNAL_ERROR", -1);

AcceptFriendDemandStatus.AUTHENTICATION_REQUIRED = new AcceptFriendDemandStatus().init("AUTHENTICATION_REQUIRED", 0);

AcceptFriendDemandStatus.UNKNOWN_FRIEND_DEMAND = new AcceptFriendDemandStatus().init("UNKNOWN_FRIEND_DEMAND", 1);

AcceptFriendDemandStatus.SUCCESS = new AcceptFriendDemandStatus().init("SUCCESS", 2);

AcceptFriendDemandStatus.FAILURE = new AcceptFriendDemandStatus().init("FAILURE", 3);

InvitationExpiredNotification.prototype = new Message();

InvitationExpiredNotification.prototype.constructor = InvitationExpiredNotification;

InvitationExpiredNotification.prototype.init = function() {
    this._InvitationSet = !1;
    return this;
};

InvitationExpiredNotification.prototype.getInvitation = function() {
    return this._Invitation;
};

InvitationExpiredNotification.prototype.setInvitation = function(c) {
    this._Invitation = c;
    this._InvitationSet = !0;
};

InvitationExpiredNotification.prototype.isInvitationSet = function() {
    return this._InvitationSet;
};

InvitationExpiredNotification.prototype.unSetInvitation = function() {
    this._InvitationSet = !1;
};

InvitationExpiredNotification.prototype.getDomainID = function() {
    return InvitationExpiredNotification.domainID;
};

InvitationExpiredNotification.prototype.getSerializerID = function() {
    return InvitationExpiredNotification.serializerID;
};

InvitationExpiredNotification.prototype.toString = function() {
    var c;
    c = "[InvitationExpiredNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && (c += "_Invitation=" + this._Invitation + "| ");
    return c + "]";
};

InvitationExpiredNotification.prototype.clone = function() {
    var c = new InvitationExpiredNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && c.setInvitation(this._Invitation.clone());
    return c;
};

InvitationExpiredNotification.domainID = 100;

InvitationExpiredNotification.serializerID = 3052;

NMatchMakingConditions.prototype.init = function() {
    this._CustomObjectSet = this._CustomDataSet = !1;
    return this;
};

NMatchMakingConditions.prototype.getCustomData = function() {
    return this._CustomData;
};

NMatchMakingConditions.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NMatchMakingConditions.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NMatchMakingConditions.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NMatchMakingConditions.prototype.getCustomObject = function() {
    return this._CustomObject;
};

NMatchMakingConditions.prototype.setCustomObject = function(c) {
    this._CustomObject = c;
    this._CustomObjectSet = !0;
};

NMatchMakingConditions.prototype.isCustomObjectSet = function() {
    return this._CustomObjectSet;
};

NMatchMakingConditions.prototype.unSetCustomObject = function() {
    this._CustomObjectSet = !1;
};

NMatchMakingConditions.prototype.getDomainID = function() {
    return NMatchMakingConditions.domainID;
};

NMatchMakingConditions.prototype.getSerializerID = function() {
    return NMatchMakingConditions.serializerID;
};

NMatchMakingConditions.prototype.toString = function() {
    var c;
    c = "[NMatchMakingConditions --> ";
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    1 == this._CustomObjectSet && 0 == Utils.isNull(this._CustomObject) && (c += "_CustomObject=" + this._CustomObject + "| ");
    return c + "]";
};

NMatchMakingConditions.prototype.clone = function() {
    var c = new NMatchMakingConditions().init();
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    1 == this._CustomObjectSet && 0 == Utils.isNull(this._CustomObject) && c.setCustomObject(this._CustomObject.clone());
    return c;
};

NMatchMakingConditions.domainID = 100;

NMatchMakingConditions.serializerID = 3021;

GetGamesResponse.prototype = new Message();

GetGamesResponse.prototype.constructor = GetGamesResponse;

GetGamesResponse.prototype.init = function() {
    this._GetGamesStatusSet = !1;
    this._games = [];
    this._gamesSet = !1;
    return this;
};

GetGamesResponse.prototype.getGetGamesStatus = function() {
    return this._GetGamesStatus;
};

GetGamesResponse.prototype.setGetGamesStatus = function(c) {
    this._GetGamesStatus = c;
    this._GetGamesStatusSet = !0;
};

GetGamesResponse.prototype.isGetGamesStatusSet = function() {
    return this._GetGamesStatusSet;
};

GetGamesResponse.prototype.unSetGetGamesStatus = function() {
    this._GetGamesStatusSet = !1;
};

GetGamesResponse.prototype.getGames = function() {
    this._gamesSet = !0;
    return this._games;
};

GetGamesResponse.prototype.setGames = function(c) {
    this._games = c;
    this._gamesSet = !0;
};

GetGamesResponse.prototype.isgamesSet = function() {
    return this._gamesSet;
};

GetGamesResponse.prototype.unSetgames = function() {
    this._gamesSet = !1;
};

GetGamesResponse.prototype.getDomainID = function() {
    return GetGamesResponse.domainID;
};

GetGamesResponse.prototype.getSerializerID = function() {
    return GetGamesResponse.serializerID;
};

GetGamesResponse.prototype.toString = function() {
    var c;
    c = "[GetGamesResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetGamesStatusSet && 0 == Utils.isNull(this._GetGamesStatus) && (c += "_GetGamesStatus=" + this._GetGamesStatus + "| ");
    1 == this._gamesSet && 0 == Utils.isNull(this._games) && (c += "_games=" + this._games + "| ");
    return c + "]";
};

GetGamesResponse.prototype.clone = function() {
    var c = new GetGamesResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetGamesStatusSet && 0 == Utils.isNull(this._GetGamesStatus) && c.setGetGamesStatus(this._GetGamesStatus);
    if (1 == this._gamesSet && 0 == Utils.isNull(this._games)) {
        for (var a = [], b = 0; b < this._games.length; ++b) {
            var e = this._games[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setGames(a);
    }
    return c;
};

GetGamesResponse.domainID = 100;

GetGamesResponse.serializerID = 10100;

T5526.prototype.init = function() {
    this._m13715 = [];
    return this;
};

T5526.prototype._m25036 = function() {
    for (var c = this._m13715.length, a = 0; a < c; a++) (0, this._m13715[a])();
};

T5526.prototype._m25037 = function() {
    return this._m13715;
};

T5526.prototype._m25038 = function(c) {
    this._m13715.push(c);
};

T5526.prototype._m25039 = function(c) {
    0 < this._m13715.length && (c = this._m13715.indexOf(c), 0 <= c && this._m13715.splice(this._m13715.indexOf(c), 1));
};

GetPlayerWalletStatus.values = function() {
    return GetPlayerWalletStatus._values;
};

GetPlayerWalletStatus.prototype.getValue = function() {
    return this._value;
};

GetPlayerWalletStatus.prototype.name = function() {
    return this._name;
};

GetPlayerWalletStatus.prototype.ordinal = function() {
    return this._value;
};

GetPlayerWalletStatus.prototype.init = function(c, a) {
    void 0 == GetPlayerWalletStatus._values && (GetPlayerWalletStatus._values = []);
    this._value = a;
    this._name = c;
    GetPlayerWalletStatus._values.push(this);
    return this;
};

GetPlayerWalletStatus.fromValue = function(c) {
    for (var a = 0; a < GetPlayerWalletStatus._values.length; a++) {
        var b = GetPlayerWalletStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetPlayerWalletStatus.valueOf = function(c) {
    for (var a = 0; a < GetPlayerWalletStatus._values.length; a++) {
        var b = GetPlayerWalletStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetPlayerWalletStatus.prototype.getDomainID = function() {
    return 100;
};

GetPlayerWalletStatus.prototype.getSerializerID = function() {
    return 10062;
};

GetPlayerWalletStatus.prototype.toString = function() {
    return "GetPlayerWalletStatus." + this._name;
};

GetPlayerWalletStatus.prototype.clone = function() {
    return this;
};

GetPlayerWalletStatus.INVALID_PARAMETERS = new GetPlayerWalletStatus().init("INVALID_PARAMETERS", -2);

GetPlayerWalletStatus.INTERNAL_ERROR = new GetPlayerWalletStatus().init("INTERNAL_ERROR", -1);

GetPlayerWalletStatus.SUCCESS = new GetPlayerWalletStatus().init("SUCCESS", 0);

GetPlayerWalletStatus.FAILURE = new GetPlayerWalletStatus().init("FAILURE", 1);

GameMessage.prototype = new Message();

GameMessage.prototype.constructor = GameMessage;

GameMessage.prototype.init = function() {
    this._GameIdSet = !1;
    return this;
};

GameMessage.prototype.getGameId = function() {
    return this._GameId;
};

GameMessage.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

GameMessage.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

GameMessage.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

GameMessage.prototype.clone = function() {
    return null;
};

GameMessage.prototype.getDomainID = function() {
    return -1;
};

GameMessage.prototype.getSerializerID = function() {
    return -1;
};

GameMessage.prototype.toString = function() {
    return "";
};

StartGameStatus.values = function() {
    return StartGameStatus._values;
};

StartGameStatus.prototype.getValue = function() {
    return this._value;
};

StartGameStatus.prototype.name = function() {
    return this._name;
};

StartGameStatus.prototype.ordinal = function() {
    return this._value;
};

StartGameStatus.prototype.init = function(c, a) {
    void 0 == StartGameStatus._values && (StartGameStatus._values = []);
    this._value = a;
    this._name = c;
    StartGameStatus._values.push(this);
    return this;
};

StartGameStatus.fromValue = function(c) {
    for (var a = 0; a < StartGameStatus._values.length; a++) {
        var b = StartGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

StartGameStatus.valueOf = function(c) {
    for (var a = 0; a < StartGameStatus._values.length; a++) {
        var b = StartGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

StartGameStatus.prototype.getDomainID = function() {
    return 100;
};

StartGameStatus.prototype.getSerializerID = function() {
    return 10092;
};

StartGameStatus.prototype.toString = function() {
    return "StartGameStatus." + this._name;
};

StartGameStatus.prototype.clone = function() {
    return this;
};

StartGameStatus.INVALID_PARAMETERS = new StartGameStatus().init("INVALID_PARAMETERS", -2);

StartGameStatus.INTERNAL_ERROR = new StartGameStatus().init("INTERNAL_ERROR", -1);

StartGameStatus.STARTED = new StartGameStatus().init("STARTED", 0);

StartGameStatus.ALREADY_STARTED = new StartGameStatus().init("ALREADY_STARTED", 1);

StartGameStatus.UNKNOWN_GAME = new StartGameStatus().init("UNKNOWN_GAME", 2);

SetPlayerNameRequest.prototype = new Message();

SetPlayerNameRequest.prototype.constructor = SetPlayerNameRequest;

SetPlayerNameRequest.prototype.init = function() {
    this._nameSet = !1;
    return this;
};

SetPlayerNameRequest.prototype.getName = function() {
    return this._name;
};

SetPlayerNameRequest.prototype.setName = function(c) {
    this._name = c;
    this._nameSet = !0;
};

SetPlayerNameRequest.prototype.isnameSet = function() {
    return this._nameSet;
};

SetPlayerNameRequest.prototype.unSetname = function() {
    this._nameSet = !1;
};

SetPlayerNameRequest.prototype.getDomainID = function() {
    return SetPlayerNameRequest.domainID;
};

SetPlayerNameRequest.prototype.getSerializerID = function() {
    return SetPlayerNameRequest.serializerID;
};

SetPlayerNameRequest.prototype.toString = function() {
    var c;
    c = "[SetPlayerNameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._nameSet && 0 == Utils.isNull(this._name) && (c += "_name=" + this._name + "| ");
    return c + "]";
};

SetPlayerNameRequest.prototype.clone = function() {
    var c = new SetPlayerNameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._nameSet && 0 == Utils.isNull(this._name) && c.setName(this._name);
    return c;
};

SetPlayerNameRequest.domainID = 100;

SetPlayerNameRequest.serializerID = 10123;

DnsRequest.prototype = new Message();

DnsRequest.prototype.constructor = DnsRequest;

DnsRequest.prototype.init = function() {
    this._PlatformSet = this._GameDeployedVersionSet = this._GameVersionSet = this._GameIdSet = !1;
    return this;
};

DnsRequest.prototype.getGameId = function() {
    return this._GameId;
};

DnsRequest.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

DnsRequest.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

DnsRequest.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

DnsRequest.prototype.getGameVersion = function() {
    return this._GameVersion;
};

DnsRequest.prototype.setGameVersion = function(c) {
    this._GameVersion = c;
    this._GameVersionSet = !0;
};

DnsRequest.prototype.isGameVersionSet = function() {
    return this._GameVersionSet;
};

DnsRequest.prototype.unSetGameVersion = function() {
    this._GameVersionSet = !1;
};

DnsRequest.prototype.getGameDeployedVersion = function() {
    return this._GameDeployedVersion;
};

DnsRequest.prototype.setGameDeployedVersion = function(c) {
    this._GameDeployedVersion = c;
    this._GameDeployedVersionSet = !0;
};

DnsRequest.prototype.isGameDeployedVersionSet = function() {
    return this._GameDeployedVersionSet;
};

DnsRequest.prototype.unSetGameDeployedVersion = function() {
    this._GameDeployedVersionSet = !1;
};

DnsRequest.prototype.getPlatform = function() {
    return this._Platform;
};

DnsRequest.prototype.setPlatform = function(c) {
    this._Platform = c;
    this._PlatformSet = !0;
};

DnsRequest.prototype.isPlatformSet = function() {
    return this._PlatformSet;
};

DnsRequest.prototype.unSetPlatform = function() {
    this._PlatformSet = !1;
};

DnsRequest.prototype.getDomainID = function() {
    return DnsRequest.domainID;
};

DnsRequest.prototype.getSerializerID = function() {
    return DnsRequest.serializerID;
};

DnsRequest.prototype.toString = function() {
    var c;
    c = "[DnsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    1 == this._GameVersionSet && 0 == Utils.isNullInteger(this._GameVersion) && (c += "_GameVersion=" + this._GameVersion + "| ");
    1 == this._GameDeployedVersionSet && 0 == Utils.isNullInteger(this._GameDeployedVersion) && (c += "_GameDeployedVersion=" + this._GameDeployedVersion + "| ");
    1 == this._PlatformSet && 0 == Utils.isNull(this._Platform) && (c += "_Platform=" + this._Platform + "| ");
    return c + "]";
};

DnsRequest.prototype.clone = function() {
    var c = new DnsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    1 == this._GameVersionSet && 0 == Utils.isNullInteger(this._GameVersion) && c.setGameVersion(this._GameVersion);
    1 == this._GameDeployedVersionSet && 0 == Utils.isNullInteger(this._GameDeployedVersion) && c.setGameDeployedVersion(this._GameDeployedVersion);
    1 == this._PlatformSet && 0 == Utils.isNull(this._Platform) && c.setPlatform(this._Platform);
    return c;
};

DnsRequest.domainID = 0;

DnsRequest.serializerID = 3004;

ThirdPartyMethodType.values = function() {
    return ThirdPartyMethodType._values;
};

ThirdPartyMethodType.prototype.getValue = function() {
    return this._value;
};

ThirdPartyMethodType.prototype.name = function() {
    return this._name;
};

ThirdPartyMethodType.prototype.ordinal = function() {
    return this._value;
};

ThirdPartyMethodType.prototype.init = function(c, a) {
    void 0 == ThirdPartyMethodType._values && (ThirdPartyMethodType._values = []);
    this._value = a;
    this._name = c;
    ThirdPartyMethodType._values.push(this);
    return this;
};

ThirdPartyMethodType.fromValue = function(c) {
    for (var a = 0; a < ThirdPartyMethodType._values.length; a++) {
        var b = ThirdPartyMethodType._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ThirdPartyMethodType.valueOf = function(c) {
    for (var a = 0; a < ThirdPartyMethodType._values.length; a++) {
        var b = ThirdPartyMethodType._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ThirdPartyMethodType.prototype.getDomainID = function() {
    return 100;
};

ThirdPartyMethodType.prototype.getSerializerID = function() {
    return 9;
};

ThirdPartyMethodType.prototype.toString = function() {
    return "ThirdPartyMethodType." + this._name;
};

ThirdPartyMethodType.prototype.clone = function() {
    return this;
};

ThirdPartyMethodType.GET_FRIENDS = new ThirdPartyMethodType().init("GET_FRIENDS", 0);

ThirdPartyMethodType.PUBLISH_MESSAGE = new ThirdPartyMethodType().init("PUBLISH_MESSAGE", 1);

ErrorCode.values = function() {
    return ErrorCode._values;
};

ErrorCode.prototype.getValue = function() {
    return this._value;
};

ErrorCode.prototype.name = function() {
    return this._name;
};

ErrorCode.prototype.ordinal = function() {
    return this._value;
};

ErrorCode.prototype.init = function(c, a) {
    void 0 == ErrorCode._values && (ErrorCode._values = []);
    this._value = a;
    this._name = c;
    ErrorCode._values.push(this);
    return this;
};

ErrorCode.fromValue = function(c) {
    for (var a = 0; a < ErrorCode._values.length; a++) {
        var b = ErrorCode._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ErrorCode.valueOf = function(c) {
    for (var a = 0; a < ErrorCode._values.length; a++) {
        var b = ErrorCode._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ErrorCode.prototype.getDomainID = function() {
    return 0;
};

ErrorCode.prototype.getSerializerID = function() {
    return 1;
};

ErrorCode.prototype.toString = function() {
    return "ErrorCode." + this._name;
};

ErrorCode.prototype.clone = function() {
    return this;
};

ErrorCode.INVALID_MESSAGE = new ErrorCode().init("INVALID_MESSAGE", 0);

ErrorCode.INTERNAL_ERROR = new ErrorCode().init("INTERNAL_ERROR", 1);

MyTurnNotification.prototype = new Message();

MyTurnNotification.prototype.constructor = MyTurnNotification;

MyTurnNotification.prototype.init = function() {
    this._GameIdSet = !1;
    return this;
};

MyTurnNotification.prototype.getGameId = function() {
    return this._GameId;
};

MyTurnNotification.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

MyTurnNotification.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

MyTurnNotification.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

MyTurnNotification.prototype.getDomainID = function() {
    return MyTurnNotification.domainID;
};

MyTurnNotification.prototype.getSerializerID = function() {
    return MyTurnNotification.serializerID;
};

MyTurnNotification.prototype.toString = function() {
    var c;
    c = "[MyTurnNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    return c + "]";
};

MyTurnNotification.prototype.clone = function() {
    var c = new MyTurnNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    return c;
};

MyTurnNotification.domainID = 100;

MyTurnNotification.serializerID = 3034;

AbstractRoom.prototype = new Storable();

AbstractRoom.prototype.constructor = AbstractRoom;

AbstractRoom.prototype.init = function() {
    this._NameSet = this._IdSet = !1;
    this._Players = [];
    this._CustomDataSet = this._PlayersSet = !1;
    return this;
};

AbstractRoom.prototype.getId = function() {
    return this._Id;
};

AbstractRoom.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

AbstractRoom.prototype.isIdSet = function() {
    return this._IdSet;
};

AbstractRoom.prototype.unSetId = function() {
    this._IdSet = !1;
};

AbstractRoom.prototype.getName = function() {
    return this._Name;
};

AbstractRoom.prototype.setName = function(c) {
    this._Name = c;
    this._NameSet = !0;
};

AbstractRoom.prototype.isNameSet = function() {
    return this._NameSet;
};

AbstractRoom.prototype.unSetName = function() {
    this._NameSet = !1;
};

AbstractRoom.prototype.getPlayers = function() {
    this._PlayersSet = !0;
    return this._Players;
};

AbstractRoom.prototype.setPlayers = function(c) {
    this._Players = c;
    this._PlayersSet = !0;
};

AbstractRoom.prototype.isPlayersSet = function() {
    return this._PlayersSet;
};

AbstractRoom.prototype.unSetPlayers = function() {
    this._PlayersSet = !1;
};

AbstractRoom.prototype.getCustomData = function() {
    return this._CustomData;
};

AbstractRoom.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

AbstractRoom.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

AbstractRoom.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

AbstractRoom.prototype.getDomainID = function() {
    return AbstractRoom.domainID;
};

AbstractRoom.prototype.getSerializerID = function() {
    return AbstractRoom.serializerID;
};

AbstractRoom.prototype.toString = function() {
    var c;
    c = "[AbstractRoom --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._PlayersSet && 0 == Utils.isNull(this._Players) && (c += "_Players=" + this._Players + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

AbstractRoom.prototype.clone = function() {
    var c = new AbstractRoom().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    if (1 == this._PlayersSet && 0 == Utils.isNull(this._Players)) {
        for (var a = [], b = 0; b < this._Players.length; ++b) {
            var e = this._Players[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setPlayers(a);
    }
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

AbstractRoom.domainID = 100;

AbstractRoom.serializerID = 3008;

NGame.prototype = new AbstractRoom();

NGame.prototype.constructor = NGame;

NGame.prototype.init = function() {
    this._OwnerSet = this._TurnBasedContextSet = this._MatchMakingConditionsSet = this._GameStateSet = this._GameCharacteristicsSet = this._GameRunningStateSet = !1;
    return this;
};

NGame.prototype.getGameRunningState = function() {
    return this._GameRunningState;
};

NGame.prototype.setGameRunningState = function(c) {
    this._GameRunningState = c;
    this._GameRunningStateSet = !0;
};

NGame.prototype.isGameRunningStateSet = function() {
    return this._GameRunningStateSet;
};

NGame.prototype.unSetGameRunningState = function() {
    this._GameRunningStateSet = !1;
};

NGame.prototype.getGameCharacteristics = function() {
    return this._GameCharacteristics;
};

NGame.prototype.setGameCharacteristics = function(c) {
    this._GameCharacteristics = c;
    this._GameCharacteristicsSet = !0;
};

NGame.prototype.isGameCharacteristicsSet = function() {
    return this._GameCharacteristicsSet;
};

NGame.prototype.unSetGameCharacteristics = function() {
    this._GameCharacteristicsSet = !1;
};

NGame.prototype.getGameState = function() {
    return this._GameState;
};

NGame.prototype.setGameState = function(c) {
    this._GameState = c;
    this._GameStateSet = !0;
};

NGame.prototype.isGameStateSet = function() {
    return this._GameStateSet;
};

NGame.prototype.unSetGameState = function() {
    this._GameStateSet = !1;
};

NGame.prototype.getMatchMakingConditions = function() {
    return this._MatchMakingConditions;
};

NGame.prototype.setMatchMakingConditions = function(c) {
    this._MatchMakingConditions = c;
    this._MatchMakingConditionsSet = !0;
};

NGame.prototype.isMatchMakingConditionsSet = function() {
    return this._MatchMakingConditionsSet;
};

NGame.prototype.unSetMatchMakingConditions = function() {
    this._MatchMakingConditionsSet = !1;
};

NGame.prototype.getTurnBasedContext = function() {
    return this._TurnBasedContext;
};

NGame.prototype.setTurnBasedContext = function(c) {
    this._TurnBasedContext = c;
    this._TurnBasedContextSet = !0;
};

NGame.prototype.isTurnBasedContextSet = function() {
    return this._TurnBasedContextSet;
};

NGame.prototype.unSetTurnBasedContext = function() {
    this._TurnBasedContextSet = !1;
};

NGame.prototype.getOwner = function() {
    return this._Owner;
};

NGame.prototype.setOwner = function(c) {
    this._Owner = c;
    this._OwnerSet = !0;
};

NGame.prototype.isOwnerSet = function() {
    return this._OwnerSet;
};

NGame.prototype.unSetOwner = function() {
    this._OwnerSet = !1;
};

NGame.prototype.getDomainID = function() {
    return NGame.domainID;
};

NGame.prototype.getSerializerID = function() {
    return NGame.serializerID;
};

NGame.prototype.toString = function() {
    var c;
    c = "[NGame --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._PlayersSet && 0 == Utils.isNull(this._Players) && (c += "_Players=" + this._Players + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    1 == this._GameRunningStateSet && 0 == Utils.isNull(this._GameRunningState) && (c += "_GameRunningState=" + this._GameRunningState + "| ");
    1 == this._GameCharacteristicsSet && 0 == Utils.isNull(this._GameCharacteristics) && (c += "_GameCharacteristics=" + this._GameCharacteristics + "| ");
    1 == this._GameStateSet && 0 == Utils.isNull(this._GameState) && (c += "_GameState=" + this._GameState + "| ");
    1 == this._MatchMakingConditionsSet && 0 == Utils.isNull(this._MatchMakingConditions) && (c += "_MatchMakingConditions=" + this._MatchMakingConditions + "| ");
    1 == this._TurnBasedContextSet && 0 == Utils.isNull(this._TurnBasedContext) && (c += "_TurnBasedContext=" + this._TurnBasedContext + "| ");
    1 == this._OwnerSet && 0 == Utils.isNull(this._Owner) && (c += "_Owner=" + this._Owner + "| ");
    return c + "]";
};

NGame.prototype.clone = function() {
    var c = new NGame().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    if (1 == this._PlayersSet && 0 == Utils.isNull(this._Players)) {
        for (var a = [], b = 0; b < this._Players.length; ++b) {
            var e = this._Players[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setPlayers(a);
    }
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    1 == this._GameRunningStateSet && 0 == Utils.isNull(this._GameRunningState) && c.setGameRunningState(this._GameRunningState);
    1 == this._GameCharacteristicsSet && 0 == Utils.isNull(this._GameCharacteristics) && c.setGameCharacteristics(this._GameCharacteristics.clone());
    1 == this._GameStateSet && 0 == Utils.isNull(this._GameState) && c.setGameState(this._GameState.clone());
    1 == this._MatchMakingConditionsSet && 0 == Utils.isNull(this._MatchMakingConditions) && c.setMatchMakingConditions(this._MatchMakingConditions.clone());
    1 == this._TurnBasedContextSet && 0 == Utils.isNull(this._TurnBasedContext) && c.setTurnBasedContext(this._TurnBasedContext.clone());
    1 == this._OwnerSet && 0 == Utils.isNull(this._Owner) && c.setOwner(this._Owner.clone());
    return c;
};

NGame.domainID = 100;

NGame.serializerID = 3010;

SendGameChatToPlayerListRequest.prototype = new Message();

SendGameChatToPlayerListRequest.prototype.constructor = SendGameChatToPlayerListRequest;

SendGameChatToPlayerListRequest.prototype.init = function() {
    this._messageSet = this._gameIdSet = !1;
    return this;
};

SendGameChatToPlayerListRequest.prototype.getGameId = function() {
    return this._gameId;
};

SendGameChatToPlayerListRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

SendGameChatToPlayerListRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

SendGameChatToPlayerListRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

SendGameChatToPlayerListRequest.prototype.getMessage = function() {
    return this._message;
};

SendGameChatToPlayerListRequest.prototype.setMessage = function(c) {
    this._message = c;
    this._messageSet = !0;
};

SendGameChatToPlayerListRequest.prototype.ismessageSet = function() {
    return this._messageSet;
};

SendGameChatToPlayerListRequest.prototype.unSetmessage = function() {
    this._messageSet = !1;
};

SendGameChatToPlayerListRequest.prototype.getDomainID = function() {
    return SendGameChatToPlayerListRequest.domainID;
};

SendGameChatToPlayerListRequest.prototype.getSerializerID = function() {
    return SendGameChatToPlayerListRequest.serializerID;
};

SendGameChatToPlayerListRequest.prototype.toString = function() {
    var c;
    c = "[SendGameChatToPlayerListRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    1 == this._messageSet && 0 == Utils.isNull(this._message) && (c += "_message=" + this._message + "| ");
    return c + "]";
};

SendGameChatToPlayerListRequest.prototype.clone = function() {
    var c = new SendGameChatToPlayerListRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    1 == this._messageSet && 0 == Utils.isNull(this._message) && c.setMessage(this._message);
    return c;
};

SendGameChatToPlayerListRequest.domainID = 100;

SendGameChatToPlayerListRequest.serializerID = 10927;

StartGameResponse.prototype = new Message();

StartGameResponse.prototype.constructor = StartGameResponse;

StartGameResponse.prototype.init = function() {
    this._gameIdSet = this._StartGameStatusSet = !1;
    return this;
};

StartGameResponse.prototype.getStartGameStatus = function() {
    return this._StartGameStatus;
};

StartGameResponse.prototype.setStartGameStatus = function(c) {
    this._StartGameStatus = c;
    this._StartGameStatusSet = !0;
};

StartGameResponse.prototype.isStartGameStatusSet = function() {
    return this._StartGameStatusSet;
};

StartGameResponse.prototype.unSetStartGameStatus = function() {
    this._StartGameStatusSet = !1;
};

StartGameResponse.prototype.getGameId = function() {
    return this._gameId;
};

StartGameResponse.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

StartGameResponse.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

StartGameResponse.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

StartGameResponse.prototype.getDomainID = function() {
    return StartGameResponse.domainID;
};

StartGameResponse.prototype.getSerializerID = function() {
    return StartGameResponse.serializerID;
};

StartGameResponse.prototype.toString = function() {
    var c;
    c = "[StartGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._StartGameStatusSet && 0 == Utils.isNull(this._StartGameStatus) && (c += "_StartGameStatus=" + this._StartGameStatus + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

StartGameResponse.prototype.clone = function() {
    var c = new StartGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._StartGameStatusSet && 0 == Utils.isNull(this._StartGameStatus) && c.setStartGameStatus(this._StartGameStatus);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

StartGameResponse.domainID = 100;

StartGameResponse.serializerID = 10091;

GetPlayerProfileStatus.values = function() {
    return GetPlayerProfileStatus._values;
};

GetPlayerProfileStatus.prototype.getValue = function() {
    return this._value;
};

GetPlayerProfileStatus.prototype.name = function() {
    return this._name;
};

GetPlayerProfileStatus.prototype.ordinal = function() {
    return this._value;
};

GetPlayerProfileStatus.prototype.init = function(c, a) {
    void 0 == GetPlayerProfileStatus._values && (GetPlayerProfileStatus._values = []);
    this._value = a;
    this._name = c;
    GetPlayerProfileStatus._values.push(this);
    return this;
};

GetPlayerProfileStatus.fromValue = function(c) {
    for (var a = 0; a < GetPlayerProfileStatus._values.length; a++) {
        var b = GetPlayerProfileStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetPlayerProfileStatus.valueOf = function(c) {
    for (var a = 0; a < GetPlayerProfileStatus._values.length; a++) {
        var b = GetPlayerProfileStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetPlayerProfileStatus.prototype.getDomainID = function() {
    return 100;
};

GetPlayerProfileStatus.prototype.getSerializerID = function() {
    return 10017;
};

GetPlayerProfileStatus.prototype.toString = function() {
    return "GetPlayerProfileStatus." + this._name;
};

GetPlayerProfileStatus.prototype.clone = function() {
    return this;
};

GetPlayerProfileStatus.INVALID_PARAMETERS = new GetPlayerProfileStatus().init("INVALID_PARAMETERS", -2);

GetPlayerProfileStatus.INTERNAL_ERROR = new GetPlayerProfileStatus().init("INTERNAL_ERROR", -1);

GetPlayerProfileStatus.SUCCESS = new GetPlayerProfileStatus().init("SUCCESS", 0);

GetPlayerProfileStatus.FAILURE = new GetPlayerProfileStatus().init("FAILURE", 1);

ConsumeItemResponse.prototype = new Message();

ConsumeItemResponse.prototype.constructor = ConsumeItemResponse;

ConsumeItemResponse.prototype.init = function() {
    this._quantitySet = this._consumedItemSet = this._ConsumeItemStatusSet = !1;
    return this;
};

ConsumeItemResponse.prototype.getConsumeItemStatus = function() {
    return this._ConsumeItemStatus;
};

ConsumeItemResponse.prototype.setConsumeItemStatus = function(c) {
    this._ConsumeItemStatus = c;
    this._ConsumeItemStatusSet = !0;
};

ConsumeItemResponse.prototype.isConsumeItemStatusSet = function() {
    return this._ConsumeItemStatusSet;
};

ConsumeItemResponse.prototype.unSetConsumeItemStatus = function() {
    this._ConsumeItemStatusSet = !1;
};

ConsumeItemResponse.prototype.getConsumedItem = function() {
    return this._consumedItem;
};

ConsumeItemResponse.prototype.setConsumedItem = function(c) {
    this._consumedItem = c;
    this._consumedItemSet = !0;
};

ConsumeItemResponse.prototype.isconsumedItemSet = function() {
    return this._consumedItemSet;
};

ConsumeItemResponse.prototype.unSetconsumedItem = function() {
    this._consumedItemSet = !1;
};

ConsumeItemResponse.prototype.getQuantity = function() {
    return this._quantity;
};

ConsumeItemResponse.prototype.setQuantity = function(c) {
    this._quantity = c;
    this._quantitySet = !0;
};

ConsumeItemResponse.prototype.isquantitySet = function() {
    return this._quantitySet;
};

ConsumeItemResponse.prototype.unSetquantity = function() {
    this._quantitySet = !1;
};

ConsumeItemResponse.prototype.getDomainID = function() {
    return ConsumeItemResponse.domainID;
};

ConsumeItemResponse.prototype.getSerializerID = function() {
    return ConsumeItemResponse.serializerID;
};

ConsumeItemResponse.prototype.toString = function() {
    var c;
    c = "[ConsumeItemResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ConsumeItemStatusSet && 0 == Utils.isNull(this._ConsumeItemStatus) && (c += "_ConsumeItemStatus=" + this._ConsumeItemStatus + "| ");
    1 == this._consumedItemSet && 0 == Utils.isNull(this._consumedItem) && (c += "_consumedItem=" + this._consumedItem + "| ");
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && (c += "_quantity=" + this._quantity + "| ");
    return c + "]";
};

ConsumeItemResponse.prototype.clone = function() {
    var c = new ConsumeItemResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ConsumeItemStatusSet && 0 == Utils.isNull(this._ConsumeItemStatus) && c.setConsumeItemStatus(this._ConsumeItemStatus);
    1 == this._consumedItemSet && 0 == Utils.isNull(this._consumedItem) && c.setConsumedItem(this._consumedItem.clone());
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && c.setQuantity(this._quantity);
    return c;
};

ConsumeItemResponse.domainID = 100;

ConsumeItemResponse.serializerID = 10055;

T5537.prototype.init = function() {
    return this;
};

T5537.prototype.write = function(c, a, b) {
    0 == a.getSerializerID() ? this._m26460(c, a, b) : 1 == a.getSerializerID() ? this._m26461(c, a, b) : 3002 == a.getSerializerID() ? this._m26462(c, a, b) : 3003 == a.getSerializerID() ? this._m26463(c, a, b) : 3004 == a.getSerializerID() ? this._m26464(c, a, b) : 3005 == a.getSerializerID() ? this._m26465(c, a, b) : 3006 == a.getSerializerID() ? this._m26466(c, a, b) : 3007 == a.getSerializerID() ? this._m26467(c, a, b) : 3008 == a.getSerializerID() ? this._m26468(c, a, b) : 3009 == a.getSerializerID() ? this._m26469(c, a, b) : 3010 == a.getSerializerID() ? this._m26470(c, a, b) : 3011 == a.getSerializerID() && this._m26471(c, a, b);
};

T5537.prototype._m26460 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5537.prototype._m26461 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5537.prototype._m26462 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isCounterSet() && (f = StringOutputStream.writeIntegerProperty(a.getCounter(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26463 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isCounterSet() && (f = StringOutputStream.writeIntegerProperty(a.getCounter(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26464 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.isGameVersionSet() && (f = StringOutputStream.writeIntegerProperty(a.getGameVersion(), 2001, b)) && e++;
    1 == a.isGameDeployedVersionSet() && (f = StringOutputStream.writeIntegerProperty(a.getGameDeployedVersion(), 2002, b)) && e++;
    1 == a.isPlatformSet() && (f = StringOutputStream.writeStringProperty(a.getPlatform(), 2003, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26465 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isIpAddressSet() && (d = StringOutputStream.writeStringProperty(a.getIpAddress(), 2e3, b)) && f++;
    1 == a.isTcpPortSet() && (d = StringOutputStream.writeIntegerProperty(a.getTcpPort(), 2001, b)) && f++;
    1 == a.isDnsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getDnsStatus(), 2002, b)) && f++;
    1 == a.isStartDetailsSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStartDetails(), 2003, b)) && f++;
    b.putShortAt(e, f);
};

T5537.prototype._m26466 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isUseDefaultImplSet() && (f = StringOutputStream.writeBooleanProperty(a.isUseDefaultImpl(), 0, b)) && e++;
    1 == a.isCurrentVersionSet() && (f = StringOutputStream.writeIntegerProperty(a.getCurrentVersion(), 1, b)) && e++;
    1 == a.isNextVersionSet() && (f = StringOutputStream.writeIntegerProperty(a.getNextVersion(), 2, b)) && e++;
    1 == a.isTitleSet() && (f = StringOutputStream.writeStringProperty(a.getTitle(), 3, b)) && e++;
    1 == a.isTextSet() && (f = StringOutputStream.writeStringProperty(a.getText(), 4, b)) && e++;
    1 == a.isUrlSet() && (f = StringOutputStream.writeStringProperty(a.getUrl(), 5, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26467 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26468 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26469 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isErrorCodeSet() && (d = StringOutputStream.writeObjectProperty(c, a.getErrorCode(), 2e3, b)) && f++;
    1 == a.isReasonSet() && (d = StringOutputStream.writeStringProperty(a.getReason(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5537.prototype._m26470 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isdomainSet() && (f = StringOutputStream.writeStringProperty(a.getDomain(), 0, b)) && e++;
    1 == a.isstartSet() && (f = StringOutputStream.writeIntegerProperty(a.getStart(), 1, b)) && e++;
    1 == a.islimitSet() && (f = StringOutputStream.writeIntegerProperty(a.getLimit(), 2, b)) && e++;
    1 == a.isquerySet() && (f = StringOutputStream.writeStringProperty(a.getQuery(), 3, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype._m26471 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.iscontentSet() && (f = StringOutputStream.writeStringProperty(a.getContent(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5537.prototype.readSerializable = function(c, a, b) {
    if (0 == b) return this._m26472(c, a);
    if (1 == b) return this._m26473(c, a);
    if (3002 == b) return this._m26474(c, a);
    if (3003 == b) return this._m26475(c, a);
    if (3004 == b) return this._m26476(c, a);
    if (3005 == b) return this._m26477(c, a);
    if (3006 == b) return this._m26478(c, a);
    if (3007 == b) return this._m26479(c, a);
    if (3008 == b) return this._m26480(c, a);
    if (3009 == b) return this._m26481(c, a);
    if (3010 == b) return this._m26482(c, a);
    if (3011 == b) return this._m26483(c, a);
    throw new NError().init("No serializer found for type " + b, null);
};

T5537.prototype._m26472 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return DnsStatus.fromValue(b);
};

T5537.prototype._m26473 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ErrorCode.fromValue(b);
};

T5537.prototype._m26474 = function(c, a) {
    for (var b = new HeartBeatRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCounter(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26475 = function(c, a) {
    for (var b = new HeartBeatResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCounter(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26476 = function(c, a) {
    for (var b = new DnsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setGameVersion(StringInputStream.readInteger(a)) : 2002 == d ? b.setGameDeployedVersion(StringInputStream.readInteger(a)) : 2003 == d ? (d = StringInputStream.readString(a), 
        b.setPlatform(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26477 = function(c, a) {
    for (var b = new DnsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setIpAddress(d), MemoryManagement.free(d)) : 2001 == d ? b.setTcpPort(StringInputStream.readInteger(a)) : 2002 == d ? b.setDnsStatus(StringInputStream.readObject(c, a)) : 2003 == d ? b.setStartDetails(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26478 = function(c, a) {
    for (var b = new StartDetails().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? b.setUseDefaultImpl(StringInputStream.readBoolean(a)) : 1 == d ? b.setCurrentVersion(StringInputStream.readInteger(a)) : 2 == d ? b.setNextVersion(StringInputStream.readInteger(a)) : 3 == d ? (d = StringInputStream.readString(a), 
        b.setTitle(d), MemoryManagement.free(d)) : 4 == d ? (d = StringInputStream.readString(a), 
        b.setText(d), MemoryManagement.free(d)) : 5 == d ? (d = StringInputStream.readString(a), 
        b.setUrl(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26479 = function(c, a) {
    for (var b = new StopPlugConnectionRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26480 = function(c, a) {
    for (var b = new StopPlugConnectionResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26481 = function(c, a) {
    for (var b = new NuggetaExceptionMessage().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setErrorCode(StringInputStream.readObject(c, a)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setReason(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26482 = function(c, a) {
    for (var b = new NuggetaQuery().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setDomain(d), MemoryManagement.free(d)) : 1 == d ? b.setStart(StringInputStream.readInteger(a)) : 2 == d ? b.setLimit(StringInputStream.readInteger(a)) : 3 == d ? (d = StringInputStream.readString(a), 
        b.setQuery(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype._m26483 = function(c, a) {
    for (var b = new NRawMessage().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setContent(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5537.prototype.getSerializerFactoryType = function() {
    return SerializerFactoryType.STRING;
};

SendGameChatToPlayerRequest.prototype = new Message();

SendGameChatToPlayerRequest.prototype.constructor = SendGameChatToPlayerRequest;

SendGameChatToPlayerRequest.prototype.init = function() {
    this._messageSet = this._playerIdSet = this._gameIdSet = !1;
    return this;
};

SendGameChatToPlayerRequest.prototype.getGameId = function() {
    return this._gameId;
};

SendGameChatToPlayerRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

SendGameChatToPlayerRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

SendGameChatToPlayerRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

SendGameChatToPlayerRequest.prototype.getPlayerId = function() {
    return this._playerId;
};

SendGameChatToPlayerRequest.prototype.setPlayerId = function(c) {
    this._playerId = c;
    this._playerIdSet = !0;
};

SendGameChatToPlayerRequest.prototype.isplayerIdSet = function() {
    return this._playerIdSet;
};

SendGameChatToPlayerRequest.prototype.unSetplayerId = function() {
    this._playerIdSet = !1;
};

SendGameChatToPlayerRequest.prototype.getMessage = function() {
    return this._message;
};

SendGameChatToPlayerRequest.prototype.setMessage = function(c) {
    this._message = c;
    this._messageSet = !0;
};

SendGameChatToPlayerRequest.prototype.ismessageSet = function() {
    return this._messageSet;
};

SendGameChatToPlayerRequest.prototype.unSetmessage = function() {
    this._messageSet = !1;
};

SendGameChatToPlayerRequest.prototype.getDomainID = function() {
    return SendGameChatToPlayerRequest.domainID;
};

SendGameChatToPlayerRequest.prototype.getSerializerID = function() {
    return SendGameChatToPlayerRequest.serializerID;
};

SendGameChatToPlayerRequest.prototype.toString = function() {
    var c;
    c = "[SendGameChatToPlayerRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && (c += "_playerId=" + this._playerId + "| ");
    1 == this._messageSet && 0 == Utils.isNull(this._message) && (c += "_message=" + this._message + "| ");
    return c + "]";
};

SendGameChatToPlayerRequest.prototype.clone = function() {
    var c = new SendGameChatToPlayerRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && c.setPlayerId(this._playerId);
    1 == this._messageSet && 0 == Utils.isNull(this._message) && c.setMessage(this._message);
    return c;
};

SendGameChatToPlayerRequest.domainID = 100;

SendGameChatToPlayerRequest.serializerID = 10924;

ResumeSessionMonitoringRequest.prototype = new Message();

ResumeSessionMonitoringRequest.prototype.constructor = ResumeSessionMonitoringRequest;

ResumeSessionMonitoringRequest.prototype.init = function() {
    return this;
};

ResumeSessionMonitoringRequest.prototype.getDomainID = function() {
    return ResumeSessionMonitoringRequest.domainID;
};

ResumeSessionMonitoringRequest.prototype.getSerializerID = function() {
    return ResumeSessionMonitoringRequest.serializerID;
};

ResumeSessionMonitoringRequest.prototype.toString = function() {
    var c;
    c = "[ResumeSessionMonitoringRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

ResumeSessionMonitoringRequest.prototype.clone = function() {
    var c = new ResumeSessionMonitoringRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

ResumeSessionMonitoringRequest.domainID = 100;

ResumeSessionMonitoringRequest.serializerID = 10162;

DnsStatus.values = function() {
    return DnsStatus._values;
};

DnsStatus.prototype.getValue = function() {
    return this._value;
};

DnsStatus.prototype.name = function() {
    return this._name;
};

DnsStatus.prototype.ordinal = function() {
    return this._value;
};

DnsStatus.prototype.init = function(c, a) {
    void 0 == DnsStatus._values && (DnsStatus._values = []);
    this._value = a;
    this._name = c;
    DnsStatus._values.push(this);
    return this;
};

DnsStatus.fromValue = function(c) {
    for (var a = 0; a < DnsStatus._values.length; a++) {
        var b = DnsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

DnsStatus.valueOf = function(c) {
    for (var a = 0; a < DnsStatus._values.length; a++) {
        var b = DnsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

DnsStatus.prototype.getDomainID = function() {
    return 0;
};

DnsStatus.prototype.getSerializerID = function() {
    return 0;
};

DnsStatus.prototype.toString = function() {
    return "DnsStatus." + this._name;
};

DnsStatus.prototype.clone = function() {
    return this;
};

DnsStatus.SUCCESS = new DnsStatus().init("SUCCESS", 0);

DnsStatus.WARNED = new DnsStatus().init("WARNED", 1);

DnsStatus.REFUSED = new DnsStatus().init("REFUSED", 2);

DnsStatus.FAILED = new DnsStatus().init("FAILED", 3);

DnsStatus.FAILED_TRY_LATER = new DnsStatus().init("FAILED_TRY_LATER", 4);

NMatrix2.prototype.init = function(c, a) {
    this.rowCount = c;
    this.columnCount = a;
    this.serializableList = [];
    for (var b = 0; b < c * a; b++) this.serializableList.push(null);
    return this;
};

NMatrix2.prototype.addItem = function(c) {
    this.serializableList.push(c);
};

NMatrix2.prototype.setItem = function(c, a, b) {
    this.serializableList[a * this.columnCount + b] = c;
};

NMatrix2.prototype.getItem = function(c, a) {
    return this.serializableList[c * this.columnCount + a];
};

NMatrix2.prototype.getRowCount = function() {
    return this.rowCount;
};

NMatrix2.prototype.getColumnCount = function() {
    return this.columnCount;
};

NMatrix2.prototype.clone = function() {
    return new NMatrix2().init(this.rowCount, this.columnCount);
};

SendGameChatRequest.prototype = new Message();

SendGameChatRequest.prototype.constructor = SendGameChatRequest;

SendGameChatRequest.prototype.init = function() {
    this._messageSet = this._gameIdSet = !1;
    return this;
};

SendGameChatRequest.prototype.getGameId = function() {
    return this._gameId;
};

SendGameChatRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

SendGameChatRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

SendGameChatRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

SendGameChatRequest.prototype.getMessage = function() {
    return this._message;
};

SendGameChatRequest.prototype.setMessage = function(c) {
    this._message = c;
    this._messageSet = !0;
};

SendGameChatRequest.prototype.ismessageSet = function() {
    return this._messageSet;
};

SendGameChatRequest.prototype.unSetmessage = function() {
    this._messageSet = !1;
};

SendGameChatRequest.prototype.getDomainID = function() {
    return SendGameChatRequest.domainID;
};

SendGameChatRequest.prototype.getSerializerID = function() {
    return SendGameChatRequest.serializerID;
};

SendGameChatRequest.prototype.toString = function() {
    var c;
    c = "[SendGameChatRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    1 == this._messageSet && 0 == Utils.isNull(this._message) && (c += "_message=" + this._message + "| ");
    return c + "]";
};

SendGameChatRequest.prototype.clone = function() {
    var c = new SendGameChatRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    1 == this._messageSet && 0 == Utils.isNull(this._message) && c.setMessage(this._message);
    return c;
};

SendGameChatRequest.domainID = 100;

SendGameChatRequest.serializerID = 10111;

IncreasePlayerWalletStatus.values = function() {
    return IncreasePlayerWalletStatus._values;
};

IncreasePlayerWalletStatus.prototype.getValue = function() {
    return this._value;
};

IncreasePlayerWalletStatus.prototype.name = function() {
    return this._name;
};

IncreasePlayerWalletStatus.prototype.ordinal = function() {
    return this._value;
};

IncreasePlayerWalletStatus.prototype.init = function(c, a) {
    void 0 == IncreasePlayerWalletStatus._values && (IncreasePlayerWalletStatus._values = []);
    this._value = a;
    this._name = c;
    IncreasePlayerWalletStatus._values.push(this);
    return this;
};

IncreasePlayerWalletStatus.fromValue = function(c) {
    for (var a = 0; a < IncreasePlayerWalletStatus._values.length; a++) {
        var b = IncreasePlayerWalletStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

IncreasePlayerWalletStatus.valueOf = function(c) {
    for (var a = 0; a < IncreasePlayerWalletStatus._values.length; a++) {
        var b = IncreasePlayerWalletStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

IncreasePlayerWalletStatus.prototype.getDomainID = function() {
    return 100;
};

IncreasePlayerWalletStatus.prototype.getSerializerID = function() {
    return 10059;
};

IncreasePlayerWalletStatus.prototype.toString = function() {
    return "IncreasePlayerWalletStatus." + this._name;
};

IncreasePlayerWalletStatus.prototype.clone = function() {
    return this;
};

IncreasePlayerWalletStatus.INVALID_PARAMETERS = new IncreasePlayerWalletStatus().init("INVALID_PARAMETERS", -2);

IncreasePlayerWalletStatus.INTERNAL_ERROR = new IncreasePlayerWalletStatus().init("INTERNAL_ERROR", -1);

IncreasePlayerWalletStatus.SUCCESS = new IncreasePlayerWalletStatus().init("SUCCESS", 0);

IncreasePlayerWalletStatus.FAILURE = new IncreasePlayerWalletStatus().init("FAILURE", 1);

GetPlayerProfileByPlayerIdStatus.values = function() {
    return GetPlayerProfileByPlayerIdStatus._values;
};

GetPlayerProfileByPlayerIdStatus.prototype.getValue = function() {
    return this._value;
};

GetPlayerProfileByPlayerIdStatus.prototype.name = function() {
    return this._name;
};

GetPlayerProfileByPlayerIdStatus.prototype.ordinal = function() {
    return this._value;
};

GetPlayerProfileByPlayerIdStatus.prototype.init = function(c, a) {
    void 0 == GetPlayerProfileByPlayerIdStatus._values && (GetPlayerProfileByPlayerIdStatus._values = []);
    this._value = a;
    this._name = c;
    GetPlayerProfileByPlayerIdStatus._values.push(this);
    return this;
};

GetPlayerProfileByPlayerIdStatus.fromValue = function(c) {
    for (var a = 0; a < GetPlayerProfileByPlayerIdStatus._values.length; a++) {
        var b = GetPlayerProfileByPlayerIdStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetPlayerProfileByPlayerIdStatus.valueOf = function(c) {
    for (var a = 0; a < GetPlayerProfileByPlayerIdStatus._values.length; a++) {
        var b = GetPlayerProfileByPlayerIdStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetPlayerProfileByPlayerIdStatus.prototype.getDomainID = function() {
    return 100;
};

GetPlayerProfileByPlayerIdStatus.prototype.getSerializerID = function() {
    return 11832;
};

GetPlayerProfileByPlayerIdStatus.prototype.toString = function() {
    return "GetPlayerProfileByPlayerIdStatus." + this._name;
};

GetPlayerProfileByPlayerIdStatus.prototype.clone = function() {
    return this;
};

GetPlayerProfileByPlayerIdStatus.INVALID_PARAMETERS = new GetPlayerProfileByPlayerIdStatus().init("INVALID_PARAMETERS", -2);

GetPlayerProfileByPlayerIdStatus.INTERNAL_ERROR = new GetPlayerProfileByPlayerIdStatus().init("INTERNAL_ERROR", -1);

GetPlayerProfileByPlayerIdStatus.SUCCESS = new GetPlayerProfileByPlayerIdStatus().init("SUCCESS", 0);

GetPlayerProfileByPlayerIdStatus.FAILURE = new GetPlayerProfileByPlayerIdStatus().init("FAILURE", 1);

ConnectionFail.prototype = new Message();

ConnectionFail.prototype.constructor = ConnectionFail;

ConnectionFail.prototype.init = function() {
    return this;
};

ConnectionFail.prototype.getSerializerID = function() {
    return 0;
};

ConnectionFail.prototype.getDomainID = function() {
    return 0;
};

ConnectionFail.prototype.clone = function() {
    return null;
};

SaveStorableResponse.prototype = new Message();

SaveStorableResponse.prototype.constructor = SaveStorableResponse;

SaveStorableResponse.prototype.init = function() {
    this._storableIdSet = this._SaveStorableStatusSet = !1;
    return this;
};

SaveStorableResponse.prototype.getSaveStorableStatus = function() {
    return this._SaveStorableStatus;
};

SaveStorableResponse.prototype.setSaveStorableStatus = function(c) {
    this._SaveStorableStatus = c;
    this._SaveStorableStatusSet = !0;
};

SaveStorableResponse.prototype.isSaveStorableStatusSet = function() {
    return this._SaveStorableStatusSet;
};

SaveStorableResponse.prototype.unSetSaveStorableStatus = function() {
    this._SaveStorableStatusSet = !1;
};

SaveStorableResponse.prototype.getStorableId = function() {
    return this._storableId;
};

SaveStorableResponse.prototype.setStorableId = function(c) {
    this._storableId = c;
    this._storableIdSet = !0;
};

SaveStorableResponse.prototype.isstorableIdSet = function() {
    return this._storableIdSet;
};

SaveStorableResponse.prototype.unSetstorableId = function() {
    this._storableIdSet = !1;
};

SaveStorableResponse.prototype.getDomainID = function() {
    return SaveStorableResponse.domainID;
};

SaveStorableResponse.prototype.getSerializerID = function() {
    return SaveStorableResponse.serializerID;
};

SaveStorableResponse.prototype.toString = function() {
    var c;
    c = "[SaveStorableResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SaveStorableStatusSet && 0 == Utils.isNull(this._SaveStorableStatus) && (c += "_SaveStorableStatus=" + this._SaveStorableStatus + "| ");
    1 == this._storableIdSet && 0 == Utils.isNull(this._storableId) && (c += "_storableId=" + this._storableId + "| ");
    return c + "]";
};

SaveStorableResponse.prototype.clone = function() {
    var c = new SaveStorableResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SaveStorableStatusSet && 0 == Utils.isNull(this._SaveStorableStatus) && c.setSaveStorableStatus(this._SaveStorableStatus);
    1 == this._storableIdSet && 0 == Utils.isNull(this._storableId) && c.setStorableId(this._storableId);
    return c;
};

SaveStorableResponse.domainID = 100;

SaveStorableResponse.serializerID = 10118;

AchieveWithProgressResponse.prototype = new Message();

AchieveWithProgressResponse.prototype.constructor = AchieveWithProgressResponse;

AchieveWithProgressResponse.prototype.init = function() {
    this._progressSet = this._achivementIdSet = this._AchieveWithProgressStatusSet = !1;
    return this;
};

AchieveWithProgressResponse.prototype.getAchieveWithProgressStatus = function() {
    return this._AchieveWithProgressStatus;
};

AchieveWithProgressResponse.prototype.setAchieveWithProgressStatus = function(c) {
    this._AchieveWithProgressStatus = c;
    this._AchieveWithProgressStatusSet = !0;
};

AchieveWithProgressResponse.prototype.isAchieveWithProgressStatusSet = function() {
    return this._AchieveWithProgressStatusSet;
};

AchieveWithProgressResponse.prototype.unSetAchieveWithProgressStatus = function() {
    this._AchieveWithProgressStatusSet = !1;
};

AchieveWithProgressResponse.prototype.getAchivementId = function() {
    return this._achivementId;
};

AchieveWithProgressResponse.prototype.setAchivementId = function(c) {
    this._achivementId = c;
    this._achivementIdSet = !0;
};

AchieveWithProgressResponse.prototype.isachivementIdSet = function() {
    return this._achivementIdSet;
};

AchieveWithProgressResponse.prototype.unSetachivementId = function() {
    this._achivementIdSet = !1;
};

AchieveWithProgressResponse.prototype.getProgress = function() {
    return this._progress;
};

AchieveWithProgressResponse.prototype.setProgress = function(c) {
    this._progress = c;
    this._progressSet = !0;
};

AchieveWithProgressResponse.prototype.isprogressSet = function() {
    return this._progressSet;
};

AchieveWithProgressResponse.prototype.unSetprogress = function() {
    this._progressSet = !1;
};

AchieveWithProgressResponse.prototype.getDomainID = function() {
    return AchieveWithProgressResponse.domainID;
};

AchieveWithProgressResponse.prototype.getSerializerID = function() {
    return AchieveWithProgressResponse.serializerID;
};

AchieveWithProgressResponse.prototype.toString = function() {
    var c;
    c = "[AchieveWithProgressResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._AchieveWithProgressStatusSet && 0 == Utils.isNull(this._AchieveWithProgressStatus) && (c += "_AchieveWithProgressStatus=" + this._AchieveWithProgressStatus + "| ");
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && (c += "_achivementId=" + this._achivementId + "| ");
    1 == this._progressSet && 0 == Utils.isNullInteger(this._progress) && (c += "_progress=" + this._progress + "| ");
    return c + "]";
};

AchieveWithProgressResponse.prototype.clone = function() {
    var c = new AchieveWithProgressResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._AchieveWithProgressStatusSet && 0 == Utils.isNull(this._AchieveWithProgressStatus) && c.setAchieveWithProgressStatus(this._AchieveWithProgressStatus);
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && c.setAchivementId(this._achivementId);
    1 == this._progressSet && 0 == Utils.isNullInteger(this._progress) && c.setProgress(this._progress);
    return c;
};

AchieveWithProgressResponse.domainID = 100;

AchieveWithProgressResponse.serializerID = 10070;

AcceptFriendDemandResponse.prototype = new Message();

AcceptFriendDemandResponse.prototype.constructor = AcceptFriendDemandResponse;

AcceptFriendDemandResponse.prototype.init = function() {
    this._friendDemandIdSet = this._AcceptFriendDemandStatusSet = !1;
    return this;
};

AcceptFriendDemandResponse.prototype.getAcceptFriendDemandStatus = function() {
    return this._AcceptFriendDemandStatus;
};

AcceptFriendDemandResponse.prototype.setAcceptFriendDemandStatus = function(c) {
    this._AcceptFriendDemandStatus = c;
    this._AcceptFriendDemandStatusSet = !0;
};

AcceptFriendDemandResponse.prototype.isAcceptFriendDemandStatusSet = function() {
    return this._AcceptFriendDemandStatusSet;
};

AcceptFriendDemandResponse.prototype.unSetAcceptFriendDemandStatus = function() {
    this._AcceptFriendDemandStatusSet = !1;
};

AcceptFriendDemandResponse.prototype.getFriendDemandId = function() {
    return this._friendDemandId;
};

AcceptFriendDemandResponse.prototype.setFriendDemandId = function(c) {
    this._friendDemandId = c;
    this._friendDemandIdSet = !0;
};

AcceptFriendDemandResponse.prototype.isfriendDemandIdSet = function() {
    return this._friendDemandIdSet;
};

AcceptFriendDemandResponse.prototype.unSetfriendDemandId = function() {
    this._friendDemandIdSet = !1;
};

AcceptFriendDemandResponse.prototype.getDomainID = function() {
    return AcceptFriendDemandResponse.domainID;
};

AcceptFriendDemandResponse.prototype.getSerializerID = function() {
    return AcceptFriendDemandResponse.serializerID;
};

AcceptFriendDemandResponse.prototype.toString = function() {
    var c;
    c = "[AcceptFriendDemandResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._AcceptFriendDemandStatusSet && 0 == Utils.isNull(this._AcceptFriendDemandStatus) && (c += "_AcceptFriendDemandStatus=" + this._AcceptFriendDemandStatus + "| ");
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && (c += "_friendDemandId=" + this._friendDemandId + "| ");
    return c + "]";
};

AcceptFriendDemandResponse.prototype.clone = function() {
    var c = new AcceptFriendDemandResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._AcceptFriendDemandStatusSet && 0 == Utils.isNull(this._AcceptFriendDemandStatus) && c.setAcceptFriendDemandStatus(this._AcceptFriendDemandStatus);
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && c.setFriendDemandId(this._friendDemandId);
    return c;
};

AcceptFriendDemandResponse.domainID = 100;

AcceptFriendDemandResponse.serializerID = 10037;

NDomain.prototype.init = function() {
    return this;
};

NDomain.prototype.getDomainId = function() {
    return this.domainId;
};

NDomain.prototype.setDomainId = function(c) {
    this.domainId = c;
};

NDomain.prototype.getBinarySerializerFactory = function() {
    return this.binarySerializerFactory;
};

NDomain.prototype.setBinarySerializerFactory = function(c) {
    this.binarySerializerFactory = c;
};

NDomain.prototype.getStringSerializerFactory = function() {
    return this.stringSerializerFactory;
};

NDomain.prototype.setStringSerializerFactory = function(c) {
    this.stringSerializerFactory = c;
};

NDomain.prototype.getJsonSerializerFactory = function() {
    return this.jsonSerializerFactory;
};

NDomain.prototype.setJsonSerializerFactory = function(c) {
    this.jsonSerializerFactory = c;
};

NuggetaCoreDomain.prototype = new NDomain();

NuggetaCoreDomain.prototype.constructor = NuggetaCoreDomain;

NuggetaCoreDomain.prototype.init = function() {
    NDomain.prototype.init.call(this);
    this.setDomainId(0);
    this.setBinarySerializerFactory(new T5535().init());
    this.setStringSerializerFactory(new T5537().init());
    this.setJsonSerializerFactory(new T5536().init());
    return this;
};

GetPlayerWalletRequest.prototype = new Message();

GetPlayerWalletRequest.prototype.constructor = GetPlayerWalletRequest;

GetPlayerWalletRequest.prototype.init = function() {
    return this;
};

GetPlayerWalletRequest.prototype.getDomainID = function() {
    return GetPlayerWalletRequest.domainID;
};

GetPlayerWalletRequest.prototype.getSerializerID = function() {
    return GetPlayerWalletRequest.serializerID;
};

GetPlayerWalletRequest.prototype.toString = function() {
    var c;
    c = "[GetPlayerWalletRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

GetPlayerWalletRequest.prototype.clone = function() {
    var c = new GetPlayerWalletRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

GetPlayerWalletRequest.domainID = 100;

GetPlayerWalletRequest.serializerID = 10060;

GetAchievementsResponse.prototype = new Message();

GetAchievementsResponse.prototype.constructor = GetAchievementsResponse;

GetAchievementsResponse.prototype.init = function() {
    this._GetAchievementsStatusSet = !1;
    this._achievements = [];
    this._achievementsSet = !1;
    return this;
};

GetAchievementsResponse.prototype.getGetAchievementsStatus = function() {
    return this._GetAchievementsStatus;
};

GetAchievementsResponse.prototype.setGetAchievementsStatus = function(c) {
    this._GetAchievementsStatus = c;
    this._GetAchievementsStatusSet = !0;
};

GetAchievementsResponse.prototype.isGetAchievementsStatusSet = function() {
    return this._GetAchievementsStatusSet;
};

GetAchievementsResponse.prototype.unSetGetAchievementsStatus = function() {
    this._GetAchievementsStatusSet = !1;
};

GetAchievementsResponse.prototype.getAchievements = function() {
    this._achievementsSet = !0;
    return this._achievements;
};

GetAchievementsResponse.prototype.setAchievements = function(c) {
    this._achievements = c;
    this._achievementsSet = !0;
};

GetAchievementsResponse.prototype.isachievementsSet = function() {
    return this._achievementsSet;
};

GetAchievementsResponse.prototype.unSetachievements = function() {
    this._achievementsSet = !1;
};

GetAchievementsResponse.prototype.getDomainID = function() {
    return GetAchievementsResponse.domainID;
};

GetAchievementsResponse.prototype.getSerializerID = function() {
    return GetAchievementsResponse.serializerID;
};

GetAchievementsResponse.prototype.toString = function() {
    var c;
    c = "[GetAchievementsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetAchievementsStatusSet && 0 == Utils.isNull(this._GetAchievementsStatus) && (c += "_GetAchievementsStatus=" + this._GetAchievementsStatus + "| ");
    1 == this._achievementsSet && 0 == Utils.isNull(this._achievements) && (c += "_achievements=" + this._achievements + "| ");
    return c + "]";
};

GetAchievementsResponse.prototype.clone = function() {
    var c = new GetAchievementsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetAchievementsStatusSet && 0 == Utils.isNull(this._GetAchievementsStatus) && c.setGetAchievementsStatus(this._GetAchievementsStatus);
    if (1 == this._achievementsSet && 0 == Utils.isNull(this._achievements)) {
        for (var a = [], b = 0; b < this._achievements.length; ++b) {
            var e = this._achievements[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setAchievements(a);
    }
    return c;
};

GetAchievementsResponse.domainID = 100;

GetAchievementsResponse.serializerID = 10064;

BinaryOutputStream.prototype.init = function() {
    return this;
};

BinaryOutputStream.writeObject = function(c, a, b) {
    var e = a.getDomainID(), f = c.getDomain(e);
    if (null == f) throw Error("No domain available for domain id " + e, null);
    f = f.getBinarySerializerFactory();
    if (null == f) throw Error("No binary factory found in domain " + e, null);
    if (null == a) return !1;
    b.put(SerializationTypes.OBJECT);
    var d = b.position();
    b.skip(4);
    var h = b.position();
    b.putInt(e);
    e = a.getSerializerID();
    b.putShort(e);
    f.write(c, a, b);
    b.putIntAt(d, b.position() - h);
    return !0;
};

BinaryOutputStream.writeObjectProperty = function(c, a, b, e) {
    if (null == a) return !1;
    e.putShort(b);
    BinaryOutputStream.writeObject(c, a, e);
    return !0;
};

BinaryOutputStream.writeIntegerList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullInteger(d) ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeInteger(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeShortList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullShort(d) ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeShort(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeLongList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullLong(d) ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeLong(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeFloatList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullFloat(d) ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeFloat(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeDoubleList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullDouble(d) ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeDouble(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeBooleanList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullBoolean(d) ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeBoolean(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeStringList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        null == d ? b.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeString(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

BinaryOutputStream.writeStringProperty = function(c, a, b) {
    if (Utils.isNull(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeString(c, b);
    return !0;
};

BinaryOutputStream.writeString = function(c, a) {
    if (Utils.isNull(c)) return !1;
    a.put(SerializationTypes.STRING);
    a.putString(c);
    return !0;
};

BinaryOutputStream.writeDoubleProperty = function(c, a, b) {
    if (Utils.isNullDouble(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeDouble(c, b);
    return !0;
};

BinaryOutputStream.writeDouble = function(c, a) {
    if (Utils.isNullDouble(c)) return !1;
    a.put(SerializationTypes.DOUBLE);
    a.putDouble(c);
    return !0;
};

BinaryOutputStream.writeIntegerProperty = function(c, a, b) {
    if (Utils.isNullInteger(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeInteger(c, b);
    return !0;
};

BinaryOutputStream.writeInteger = function(c, a) {
    if (Utils.isNullInteger(c)) return !1;
    a.put(SerializationTypes.INTEGER);
    a.putInt(c);
    return !0;
};

BinaryOutputStream.writeDateProperty = function(c, a, b) {
    if (Utils.isNullDate(c)) return !1;
    BinaryOutputStream.writeLongProperty(c.getTime(), a, b);
    return !0;
};

BinaryOutputStream.writeLongProperty = function(c, a, b) {
    if (Utils.isNullLong(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeLong(c, b);
    return !0;
};

BinaryOutputStream.writeLong = function(c, a) {
    if (Utils.isNullLong(c)) return !1;
    a.put(SerializationTypes.LONG);
    a.putLong(c);
    return !0;
};

BinaryOutputStream.writeByte = function(c, a) {
    if (Utils.isNullByte(c)) return !1;
    a.put(SerializationTypes.BYTE);
    a.put(c);
    return !0;
};

BinaryOutputStream.writeShortProperty = function(c, a, b) {
    if (Utils.isNullShort(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeShort(c, b);
    return !0;
};

BinaryOutputStream.writeShort = function(c, a) {
    if (Utils.isNullShort(c)) return !1;
    a.put(SerializationTypes.SHORT);
    a.putShort(c);
    return !0;
};

BinaryOutputStream.writeFloatProperty = function(c, a, b) {
    if (Utils.isNullFloat(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeFloat(c, b);
    return !0;
};

BinaryOutputStream.writeFloat = function(c, a) {
    if (Utils.isNullFloat(c)) return !1;
    a.put(SerializationTypes.FLOAT);
    a.putFloat(c);
    return !0;
};

BinaryOutputStream.writeBooleanProperty = function(c, a, b) {
    if (Utils.isNullBoolean(c)) return !1;
    b.putShort(a);
    BinaryOutputStream.writeBoolean(c, b);
    return !0;
};

BinaryOutputStream.writeBoolean = function(c, a) {
    if (Utils.isNullBoolean(c)) return !1;
    a.put(SerializationTypes.BOOLEAN);
    1 == c ? a.put(1) : 0 == c && a.put(0);
    return !0;
};

BinaryOutputStream.writeNMatrix2 = function(c, a, b, e) {
    if (Utils.isNull(a)) return !1;
    e.putShort(b);
    e.put(SerializationTypes.NMATRIX2);
    b = e.position();
    e.skip(4);
    var f = a.getRowCount(), d = a.getColumnCount();
    e.putShort(f);
    e.putShort(d);
    for (var h = 0; h < f; h++) for (var g = 0; g < d; g++) {
        var k = a.getItem(h, g);
        Utils.isNull(k) ? e.put(SerializationTypes.NULL_TYPE) : BinaryOutputStream.writeObject(c, k, e);
    }
    e.putIntAt(b, e.position() - b);
    return !0;
};

BuyItemResponse.prototype = new Message();

BuyItemResponse.prototype.constructor = BuyItemResponse;

BuyItemResponse.prototype.init = function() {
    this._quantitySet = this._boughtItemSet = this._BuyItemStatusSet = !1;
    return this;
};

BuyItemResponse.prototype.getBuyItemStatus = function() {
    return this._BuyItemStatus;
};

BuyItemResponse.prototype.setBuyItemStatus = function(c) {
    this._BuyItemStatus = c;
    this._BuyItemStatusSet = !0;
};

BuyItemResponse.prototype.isBuyItemStatusSet = function() {
    return this._BuyItemStatusSet;
};

BuyItemResponse.prototype.unSetBuyItemStatus = function() {
    this._BuyItemStatusSet = !1;
};

BuyItemResponse.prototype.getBoughtItem = function() {
    return this._boughtItem;
};

BuyItemResponse.prototype.setBoughtItem = function(c) {
    this._boughtItem = c;
    this._boughtItemSet = !0;
};

BuyItemResponse.prototype.isboughtItemSet = function() {
    return this._boughtItemSet;
};

BuyItemResponse.prototype.unSetboughtItem = function() {
    this._boughtItemSet = !1;
};

BuyItemResponse.prototype.getQuantity = function() {
    return this._quantity;
};

BuyItemResponse.prototype.setQuantity = function(c) {
    this._quantity = c;
    this._quantitySet = !0;
};

BuyItemResponse.prototype.isquantitySet = function() {
    return this._quantitySet;
};

BuyItemResponse.prototype.unSetquantity = function() {
    this._quantitySet = !1;
};

BuyItemResponse.prototype.getDomainID = function() {
    return BuyItemResponse.domainID;
};

BuyItemResponse.prototype.getSerializerID = function() {
    return BuyItemResponse.serializerID;
};

BuyItemResponse.prototype.toString = function() {
    var c;
    c = "[BuyItemResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._BuyItemStatusSet && 0 == Utils.isNull(this._BuyItemStatus) && (c += "_BuyItemStatus=" + this._BuyItemStatus + "| ");
    1 == this._boughtItemSet && 0 == Utils.isNull(this._boughtItem) && (c += "_boughtItem=" + this._boughtItem + "| ");
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && (c += "_quantity=" + this._quantity + "| ");
    return c + "]";
};

BuyItemResponse.prototype.clone = function() {
    var c = new BuyItemResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._BuyItemStatusSet && 0 == Utils.isNull(this._BuyItemStatus) && c.setBuyItemStatus(this._BuyItemStatus);
    1 == this._boughtItemSet && 0 == Utils.isNull(this._boughtItem) && c.setBoughtItem(this._boughtItem.clone());
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && c.setQuantity(this._quantity);
    return c;
};

BuyItemResponse.domainID = 100;

BuyItemResponse.serializerID = 10049;

SendGameChatToPlayerStatus.values = function() {
    return SendGameChatToPlayerStatus._values;
};

SendGameChatToPlayerStatus.prototype.getValue = function() {
    return this._value;
};

SendGameChatToPlayerStatus.prototype.name = function() {
    return this._name;
};

SendGameChatToPlayerStatus.prototype.ordinal = function() {
    return this._value;
};

SendGameChatToPlayerStatus.prototype.init = function(c, a) {
    void 0 == SendGameChatToPlayerStatus._values && (SendGameChatToPlayerStatus._values = []);
    this._value = a;
    this._name = c;
    SendGameChatToPlayerStatus._values.push(this);
    return this;
};

SendGameChatToPlayerStatus.fromValue = function(c) {
    for (var a = 0; a < SendGameChatToPlayerStatus._values.length; a++) {
        var b = SendGameChatToPlayerStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SendGameChatToPlayerStatus.valueOf = function(c) {
    for (var a = 0; a < SendGameChatToPlayerStatus._values.length; a++) {
        var b = SendGameChatToPlayerStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SendGameChatToPlayerStatus.prototype.getDomainID = function() {
    return 100;
};

SendGameChatToPlayerStatus.prototype.getSerializerID = function() {
    return 10926;
};

SendGameChatToPlayerStatus.prototype.toString = function() {
    return "SendGameChatToPlayerStatus." + this._name;
};

SendGameChatToPlayerStatus.prototype.clone = function() {
    return this;
};

SendGameChatToPlayerStatus.INVALID_PARAMETERS = new SendGameChatToPlayerStatus().init("INVALID_PARAMETERS", -2);

SendGameChatToPlayerStatus.INTERNAL_ERROR = new SendGameChatToPlayerStatus().init("INTERNAL_ERROR", -1);

SendGameChatToPlayerStatus.SENT = new SendGameChatToPlayerStatus().init("SENT", 0);

SendGameChatToPlayerStatus.FAILURE = new SendGameChatToPlayerStatus().init("FAILURE", 1);

LoadGameStatus.values = function() {
    return LoadGameStatus._values;
};

LoadGameStatus.prototype.getValue = function() {
    return this._value;
};

LoadGameStatus.prototype.name = function() {
    return this._name;
};

LoadGameStatus.prototype.ordinal = function() {
    return this._value;
};

LoadGameStatus.prototype.init = function(c, a) {
    void 0 == LoadGameStatus._values && (LoadGameStatus._values = []);
    this._value = a;
    this._name = c;
    LoadGameStatus._values.push(this);
    return this;
};

LoadGameStatus.fromValue = function(c) {
    for (var a = 0; a < LoadGameStatus._values.length; a++) {
        var b = LoadGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

LoadGameStatus.valueOf = function(c) {
    for (var a = 0; a < LoadGameStatus._values.length; a++) {
        var b = LoadGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

LoadGameStatus.prototype.getDomainID = function() {
    return 100;
};

LoadGameStatus.prototype.getSerializerID = function() {
    return 10146;
};

LoadGameStatus.prototype.toString = function() {
    return "LoadGameStatus." + this._name;
};

LoadGameStatus.prototype.clone = function() {
    return this;
};

LoadGameStatus.INVALID_PARAMETERS = new LoadGameStatus().init("INVALID_PARAMETERS", -2);

LoadGameStatus.INTERNAL_ERROR = new LoadGameStatus().init("INTERNAL_ERROR", -1);

LoadGameStatus.SUCCESS = new LoadGameStatus().init("SUCCESS", 0);

LoadGameStatus.UNKNOWN_GAME_ID = new LoadGameStatus().init("UNKNOWN_GAME_ID", 4);

SendGameChatToPlayerResponse.prototype = new Message();

SendGameChatToPlayerResponse.prototype.constructor = SendGameChatToPlayerResponse;

SendGameChatToPlayerResponse.prototype.init = function() {
    this._SendGameChatToPlayerStatusSet = !1;
    return this;
};

SendGameChatToPlayerResponse.prototype.getSendGameChatToPlayerStatus = function() {
    return this._SendGameChatToPlayerStatus;
};

SendGameChatToPlayerResponse.prototype.setSendGameChatToPlayerStatus = function(c) {
    this._SendGameChatToPlayerStatus = c;
    this._SendGameChatToPlayerStatusSet = !0;
};

SendGameChatToPlayerResponse.prototype.isSendGameChatToPlayerStatusSet = function() {
    return this._SendGameChatToPlayerStatusSet;
};

SendGameChatToPlayerResponse.prototype.unSetSendGameChatToPlayerStatus = function() {
    this._SendGameChatToPlayerStatusSet = !1;
};

SendGameChatToPlayerResponse.prototype.getDomainID = function() {
    return SendGameChatToPlayerResponse.domainID;
};

SendGameChatToPlayerResponse.prototype.getSerializerID = function() {
    return SendGameChatToPlayerResponse.serializerID;
};

SendGameChatToPlayerResponse.prototype.toString = function() {
    var c;
    c = "[SendGameChatToPlayerResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SendGameChatToPlayerStatusSet && 0 == Utils.isNull(this._SendGameChatToPlayerStatus) && (c += "_SendGameChatToPlayerStatus=" + this._SendGameChatToPlayerStatus + "| ");
    return c + "]";
};

SendGameChatToPlayerResponse.prototype.clone = function() {
    var c = new SendGameChatToPlayerResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SendGameChatToPlayerStatusSet && 0 == Utils.isNull(this._SendGameChatToPlayerStatus) && c.setSendGameChatToPlayerStatus(this._SendGameChatToPlayerStatus);
    return c;
};

SendGameChatToPlayerResponse.domainID = 100;

SendGameChatToPlayerResponse.serializerID = 10925;

StopPlugConnectionRequest.prototype = new Message();

StopPlugConnectionRequest.prototype.constructor = StopPlugConnectionRequest;

StopPlugConnectionRequest.prototype.init = function() {
    return this;
};

StopPlugConnectionRequest.prototype.getDomainID = function() {
    return StopPlugConnectionRequest.domainID;
};

StopPlugConnectionRequest.prototype.getSerializerID = function() {
    return StopPlugConnectionRequest.serializerID;
};

StopPlugConnectionRequest.prototype.toString = function() {
    var c;
    c = "[StopPlugConnectionRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

StopPlugConnectionRequest.prototype.clone = function() {
    var c = new StopPlugConnectionRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

StopPlugConnectionRequest.domainID = 0;

StopPlugConnectionRequest.serializerID = 3007;

T5517.prototype.init = function() {
    return this;
};

T5517.prototype.write = function(c, a, b) {
    0 == a.getSerializerID() ? this._m25523(c, a, b) : 1 == a.getSerializerID() ? this._m25524(c, a, b) : 2 == a.getSerializerID() ? this._m25525(c, a, b) : 3 == a.getSerializerID() ? this._m25526(c, a, b) : 4 == a.getSerializerID() ? this._m25527(c, a, b) : 5 == a.getSerializerID() ? this._m25528(c, a, b) : 6 == a.getSerializerID() ? this._m25529(c, a, b) : 7 == a.getSerializerID() ? this._m25530(c, a, b) : 8 == a.getSerializerID() ? this._m25531(c, a, b) : 9 == a.getSerializerID() ? this._m25532(c, a, b) : 10 == a.getSerializerID() ? this._m25533(c, a, b) : 11 == a.getSerializerID() ? this._m25534(c, a, b) : 12 == a.getSerializerID() ? this._m25535(c, a, b) : 13 == a.getSerializerID() ? this._m25536(c, a, b) : 14 == a.getSerializerID() ? this._m25537(c, a, b) : 10002 == a.getSerializerID() ? this._m25538(c, a, b) : 10011 == a.getSerializerID() ? this._m25539(c, a, b) : 10140 == a.getSerializerID() ? this._m25540(c, a, b) : 10020 == a.getSerializerID() ? this._m25541(c, a, b) : 10008 == a.getSerializerID() ? this._m25542(c, a, b) : 10125 == a.getSerializerID() ? this._m25543(c, a, b) : 10029 == a.getSerializerID() ? this._m25544(c, a, b) : 12e3 == a.getSerializerID() ? this._m25545(c, a, b) : 10035 == a.getSerializerID() ? this._m25546(c, a, b) : 10038 == a.getSerializerID() ? this._m25547(c, a, b) : 10041 == a.getSerializerID() ? this._m25548(c, a, b) : 10044 == a.getSerializerID() ? this._m25549(c, a, b) : 10047 == a.getSerializerID() ? this._m25550(c, a, b) : 10065 == a.getSerializerID() ? this._m25551(c, a, b) : 10068 == a.getSerializerID() ? this._m25552(c, a, b) : 10071 == a.getSerializerID() ? this._m25553(c, a, b) : 10017 == a.getSerializerID() ? this._m25554(c, a, b) : 11832 == a.getSerializerID() ? this._m25555(c, a, b) : 10014 == a.getSerializerID() ? this._m25556(c, a, b) : 10116 == a.getSerializerID() ? this._m25557(c, a, b) : 10119 == a.getSerializerID() ? this._m25558(c, a, b) : 10128 == a.getSerializerID() ? this._m25559(c, a, b) : 10131 == a.getSerializerID() ? this._m25560(c, a, b) : 10053 == a.getSerializerID() ? this._m25561(c, a, b) : 10050 == a.getSerializerID() ? this._m25562(c, a, b) : 10056 == a.getSerializerID() ? this._m25563(c, a, b) : 10059 == a.getSerializerID() ? this._m25564(c, a, b) : 10062 == a.getSerializerID() ? this._m25565(c, a, b) : 10074 == a.getSerializerID() ? this._m25566(c, a, b) : 10077 == a.getSerializerID() ? this._m25567(c, a, b) : 10092 == a.getSerializerID() ? this._m25568(c, a, b) : 10095 == a.getSerializerID() ? this._m25569(c, a, b) : 10098 == a.getSerializerID() ? this._m25570(c, a, b) : 10101 == a.getSerializerID() ? this._m25571(c, a, b) : 10104 == a.getSerializerID() ? this._m25572(c, a, b) : 10107 == a.getSerializerID() ? this._m25573(c, a, b) : 10110 == a.getSerializerID() ? this._m25574(c, a, b) : 10122 == a.getSerializerID() ? this._m25575(c, a, b) : 10143 == a.getSerializerID() ? this._m25576(c, a, b) : 10146 == a.getSerializerID() ? this._m25577(c, a, b) : 10113 == a.getSerializerID() ? this._m25578(c, a, b) : 10926 == a.getSerializerID() ? this._m25579(c, a, b) : 10929 == a.getSerializerID() ? this._m25580(c, a, b) : 10170 == a.getSerializerID() ? this._m25581(c, a, b) : 10173 == a.getSerializerID() ? this._m25582(c, a, b) : 10176 == a.getSerializerID() ? this._m25583(c, a, b) : 10179 == a.getSerializerID() ? this._m25584(c, a, b) : 10161 == a.getSerializerID() ? this._m25585(c, a, b) : 10164 == a.getSerializerID() ? this._m25586(c, a, b) : 10167 == a.getSerializerID() ? this._m25587(c, a, b) : 10182 == a.getSerializerID() ? this._m25588(c, a, b) : 3001 == a.getSerializerID() ? this._m25589(c, a, b) : 3002 == a.getSerializerID() ? this._m25590(c, a, b) : 3003 == a.getSerializerID() ? this._m25591(c, a, b) : 3004 == a.getSerializerID() ? this._m25592(c, a, b) : 3005 == a.getSerializerID() ? this._m25593(c, a, b) : 3006 == a.getSerializerID() ? this._m25594(c, a, b) : 3007 == a.getSerializerID() ? this._m25595(c, a, b) : 3008 == a.getSerializerID() ? this._m25596(c, a, b) : 3009 == a.getSerializerID() ? this._m25597(c, a, b) : 3010 == a.getSerializerID() ? this._m25598(c, a, b) : 3011 == a.getSerializerID() ? this._m25599(c, a, b) : 3012 == a.getSerializerID() ? this._m25600(c, a, b) : 3013 == a.getSerializerID() ? this._m25601(c, a, b) : 3014 == a.getSerializerID() ? this._m25602(c, a, b) : 3015 == a.getSerializerID() ? this._m25603(c, a, b) : 3016 == a.getSerializerID() ? this._m25604(c, a, b) : 3017 == a.getSerializerID() ? this._m25605(c, a, b) : 3018 == a.getSerializerID() ? this._m25606(c, a, b) : 3019 == a.getSerializerID() ? this._m25607(c, a, b) : 3020 == a.getSerializerID() ? this._m25608(c, a, b) : 3021 == a.getSerializerID() ? this._m25609(c, a, b) : 3022 == a.getSerializerID() ? this._m25610(c, a, b) : 3023 == a.getSerializerID() ? this._m25611(c, a, b) : 3024 == a.getSerializerID() ? this._m25612(c, a, b) : 3025 == a.getSerializerID() ? this._m25613(c, a, b) : 3026 == a.getSerializerID() ? this._m25614(c, a, b) : 3027 == a.getSerializerID() ? this._m25615(c, a, b) : 3028 == a.getSerializerID() ? this._m25616(c, a, b) : 3029 == a.getSerializerID() ? this._m25617(c, a, b) : 3030 == a.getSerializerID() ? this._m25618(c, a, b) : 3032 == a.getSerializerID() ? this._m25619(c, a, b) : 3033 == a.getSerializerID() ? this._m25620(c, a, b) : 3034 == a.getSerializerID() ? this._m25621(c, a, b) : 3035 == a.getSerializerID() ? this._m25622(c, a, b) : 3036 == a.getSerializerID() ? this._m25623(c, a, b) : 3037 == a.getSerializerID() ? this._m25624(c, a, b) : 3038 == a.getSerializerID() ? this._m25625(c, a, b) : 3039 == a.getSerializerID() ? this._m25626(c, a, b) : 3040 == a.getSerializerID() ? this._m25627(c, a, b) : 3041 == a.getSerializerID() ? this._m25628(c, a, b) : 3042 == a.getSerializerID() ? this._m25629(c, a, b) : 3043 == a.getSerializerID() ? this._m25630(c, a, b) : 3044 == a.getSerializerID() ? this._m25631(c, a, b) : 3045 == a.getSerializerID() ? this._m25632(c, a, b) : 3047 == a.getSerializerID() ? this._m25633(c, a, b) : 3048 == a.getSerializerID() ? this._m25634(c, a, b) : 3049 == a.getSerializerID() ? this._m25635(c, a, b) : 3050 == a.getSerializerID() ? this._m25636(c, a, b) : 3051 == a.getSerializerID() ? this._m25637(c, a, b) : 3052 == a.getSerializerID() ? this._m25638(c, a, b) : 3053 == a.getSerializerID() ? this._m25639(c, a, b) : 1e4 == a.getSerializerID() ? this._m25640(c, a, b) : 10001 == a.getSerializerID() ? this._m25641(c, a, b) : 10009 == a.getSerializerID() ? this._m25642(c, a, b) : 10010 == a.getSerializerID() ? this._m25643(c, a, b) : 10138 == a.getSerializerID() ? this._m25644(c, a, b) : 10139 == a.getSerializerID() ? this._m25645(c, a, b) : 10018 == a.getSerializerID() ? this._m25646(c, a, b) : 10019 == a.getSerializerID() ? this._m25647(c, a, b) : 10006 == a.getSerializerID() ? this._m25648(c, a, b) : 10007 == a.getSerializerID() ? this._m25649(c, a, b) : 10123 == a.getSerializerID() ? this._m25650(c, a, b) : 10124 == a.getSerializerID() ? this._m25651(c, a, b) : 10027 == a.getSerializerID() ? this._m25652(c, a, b) : 10028 == a.getSerializerID() ? this._m25653(c, a, b) : 11998 == a.getSerializerID() ? this._m25654(c, a, b) : 11999 == a.getSerializerID() ? this._m25655(c, a, b) : 10033 == a.getSerializerID() ? this._m25656(c, a, b) : 10034 == a.getSerializerID() ? this._m25657(c, a, b) : 10036 == a.getSerializerID() ? this._m25658(c, a, b) : 10037 == a.getSerializerID() ? this._m25659(c, a, b) : 10039 == a.getSerializerID() ? this._m25660(c, a, b) : 10040 == a.getSerializerID() ? this._m25661(c, a, b) : 10042 == a.getSerializerID() ? this._m25662(c, a, b) : 10043 == a.getSerializerID() ? this._m25663(c, a, b) : 10045 == a.getSerializerID() ? this._m25664(c, a, b) : 10046 == a.getSerializerID() ? this._m25665(c, a, b) : 10063 == a.getSerializerID() ? this._m25666(c, a, b) : 10064 == a.getSerializerID() ? this._m25667(c, a, b) : 10066 == a.getSerializerID() ? this._m25668(c, a, b) : 10067 == a.getSerializerID() ? this._m25669(c, a, b) : 10069 == a.getSerializerID() ? this._m25670(c, a, b) : 10070 == a.getSerializerID() ? this._m25671(c, a, b) : 10015 == a.getSerializerID() ? this._m25672(c, a, b) : 10016 == a.getSerializerID() ? this._m25673(c, a, b) : 11830 == a.getSerializerID() ? this._m25674(c, a, b) : 11831 == a.getSerializerID() ? this._m25675(c, a, b) : 10012 == a.getSerializerID() ? this._m25676(c, a, b) : 10013 == a.getSerializerID() ? this._m25677(c, a, b) : 10114 == a.getSerializerID() ? this._m25678(c, a, b) : 10115 == a.getSerializerID() ? this._m25679(c, a, b) : 10117 == a.getSerializerID() ? this._m25680(c, a, b) : 10118 == a.getSerializerID() ? this._m25681(c, a, b) : 10126 == a.getSerializerID() ? this._m25682(c, a, b) : 10127 == a.getSerializerID() ? this._m25683(c, a, b) : 10129 == a.getSerializerID() ? this._m25684(c, a, b) : 10130 == a.getSerializerID() ? this._m25685(c, a, b) : 10051 == a.getSerializerID() ? this._m25686(c, a, b) : 10052 == a.getSerializerID() ? this._m25687(c, a, b) : 10048 == a.getSerializerID() ? this._m25688(c, a, b) : 10049 == a.getSerializerID() ? this._m25689(c, a, b) : 10054 == a.getSerializerID() ? this._m25690(c, a, b) : 10055 == a.getSerializerID() ? this._m25691(c, a, b) : 10057 == a.getSerializerID() ? this._m25692(c, a, b) : 10058 == a.getSerializerID() ? this._m25693(c, a, b) : 10060 == a.getSerializerID() ? this._m25694(c, a, b) : 10061 == a.getSerializerID() ? this._m25695(c, a, b) : 10072 == a.getSerializerID() ? this._m25696(c, a, b) : 10073 == a.getSerializerID() ? this._m25697(c, a, b) : 10075 == a.getSerializerID() ? this._m25698(c, a, b) : 10076 == a.getSerializerID() ? this._m25699(c, a, b) : 10090 == a.getSerializerID() ? this._m25700(c, a, b) : 10091 == a.getSerializerID() ? this._m25701(c, a, b) : 10093 == a.getSerializerID() ? this._m25702(c, a, b) : 10094 == a.getSerializerID() ? this._m25703(c, a, b) : 10096 == a.getSerializerID() ? this._m25704(c, a, b) : 10097 == a.getSerializerID() ? this._m25705(c, a, b) : 10099 == a.getSerializerID() ? this._m25706(c, a, b) : 10100 == a.getSerializerID() ? this._m25707(c, a, b) : 10102 == a.getSerializerID() ? this._m25708(c, a, b) : 10103 == a.getSerializerID() ? this._m25709(c, a, b) : 10105 == a.getSerializerID() ? this._m25710(c, a, b) : 10106 == a.getSerializerID() ? this._m25711(c, a, b) : 10108 == a.getSerializerID() ? this._m25712(c, a, b) : 10109 == a.getSerializerID() ? this._m25713(c, a, b) : 10120 == a.getSerializerID() ? this._m25714(c, a, b) : 10121 == a.getSerializerID() ? this._m25715(c, a, b) : 10141 == a.getSerializerID() ? this._m25716(c, a, b) : 10142 == a.getSerializerID() ? this._m25717(c, a, b) : 10144 == a.getSerializerID() ? this._m25718(c, a, b) : 10145 == a.getSerializerID() ? this._m25719(c, a, b) : 10111 == a.getSerializerID() ? this._m25720(c, a, b) : 10112 == a.getSerializerID() ? this._m25721(c, a, b) : 10924 == a.getSerializerID() ? this._m25722(c, a, b) : 10925 == a.getSerializerID() ? this._m25723(c, a, b) : 10927 == a.getSerializerID() ? this._m25724(c, a, b) : 10928 == a.getSerializerID() ? this._m25725(c, a, b) : 10168 == a.getSerializerID() ? this._m25726(c, a, b) : 10169 == a.getSerializerID() ? this._m25727(c, a, b) : 10171 == a.getSerializerID() ? this._m25728(c, a, b) : 10172 == a.getSerializerID() ? this._m25729(c, a, b) : 10174 == a.getSerializerID() ? this._m25730(c, a, b) : 10175 == a.getSerializerID() ? this._m25731(c, a, b) : 10177 == a.getSerializerID() ? this._m25732(c, a, b) : 10178 == a.getSerializerID() ? this._m25733(c, a, b) : 10159 == a.getSerializerID() ? this._m25734(c, a, b) : 10160 == a.getSerializerID() ? this._m25735(c, a, b) : 10162 == a.getSerializerID() ? this._m25736(c, a, b) : 10163 == a.getSerializerID() ? this._m25737(c, a, b) : 10165 == a.getSerializerID() ? this._m25738(c, a, b) : 10166 == a.getSerializerID() ? this._m25739(c, a, b) : 10180 == a.getSerializerID() ? this._m25740(c, a, b) : 10181 == a.getSerializerID() && this._m25741(c, a, b);
};

T5517.prototype._m25523 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25524 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25525 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25526 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25527 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25528 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25529 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25530 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25531 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25532 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25533 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25534 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25535 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25536 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25537 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25538 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25539 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25540 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25541 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25542 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25543 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25544 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25545 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25546 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25547 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25548 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25549 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25550 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25551 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25552 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25553 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25554 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25555 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25556 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25557 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25558 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25559 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25560 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25561 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25562 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25563 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25564 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25565 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25566 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25567 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25568 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25569 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25570 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25571 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25572 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25573 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25574 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25575 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25576 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25577 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25578 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25579 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25580 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25581 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25582 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25583 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25584 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25585 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25586 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25587 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25588 = function(c, a, b) {
    JsonOutputStream.writeInteger(a.getValue(), "Value", b);
};

T5517.prototype._m25589 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isLoginSet() && JsonOutputStream.writeStringProperty(a.getLogin(), "Login", b);
    1 == a.isPasswordSet() && JsonOutputStream.writeStringProperty(a.getPassword(), "Password", b);
    1 == a.isAccessTokenSet() && JsonOutputStream.writeStringProperty(a.getAccessToken(), "AccessToken", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    1 == a.isConnectedSet() && JsonOutputStream.writeBooleanProperty(a.isConnected(), "Connected", b);
    1 == a.isLoginSourceSet() && JsonOutputStream.writeObjectProperty(c, a.getLoginSource(), "LoginSource", b);
    1 == a.isThirdPartyIdSet() && JsonOutputStream.writeStringProperty(a.getThirdPartyId(), "ThirdPartyId", b);
    1 == a.isCreationDateSet() && JsonOutputStream.writeDoubleProperty(a.getCreationDate(), "CreationDate", b);
    1 == a.isActiveSet() && JsonOutputStream.writeBooleanProperty(a.isActive(), "Active", b);
    1 == a.isLangSet() && JsonOutputStream.writeStringProperty(a.getLang(), "Lang", b);
    1 == a.isAnonymousSet() && JsonOutputStream.writeBooleanProperty(a.isAnonymous(), "Anonymous", b);
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25590 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    1 == a.isAchievedSet() && JsonOutputStream.writeBooleanProperty(a.isAchieved(), "Achieved", b);
    1 == a.isFeaturedSet() && JsonOutputStream.writeBooleanProperty(a.isFeatured(), "Featured", b);
    1 == a.isDescriptionSet() && JsonOutputStream.writeStringProperty(a.getDescription(), "Description", b);
    1 == a.isNXPSet() && JsonOutputStream.writeIntegerProperty(a.getNXP(), "NXP", b);
    1 == a.isNEnergySet() && JsonOutputStream.writeIntegerProperty(a.getNEnergy(), "NEnergy", b);
    1 == a.isTypeSet() && JsonOutputStream.writeObjectProperty(c, a.getType(), "Type", b);
    1 == a.isGoalSet() && JsonOutputStream.writeIntegerProperty(a.getGoal(), "Goal", b);
    1 == a.isProgressSet() && JsonOutputStream.writeIntegerProperty(a.getProgress(), "Progress", b);
    1 == a.isOrderSet() && JsonOutputStream.writeIntegerProperty(a.getOrder(), "Order", b);
};

T5517.prototype._m25591 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isVersionSet() && JsonOutputStream.writeStringProperty(a.getVersion(), "Version", b);
    1 == a.isReasonSet() && JsonOutputStream.writeObjectProperty(c, a.getReason(), "Reason", b);
    1 == a.isplayerIdsStoredSet() && JsonOutputStream.writeStringProperty(a.getPlayerIdsStored(), "playerIdsStored", b);
    1 == a.issessionIdSet() && JsonOutputStream.writeStringProperty(a.getSessionId(), "sessionId", b);
    1 == a.isplatformSet() && JsonOutputStream.writeStringProperty(a.getPlatform(), "platform", b);
    1 == a.isspIdSet() && JsonOutputStream.writeStringProperty(a.getSpId(), "spId", b);
    1 == a.isdebugSpIdSet() && JsonOutputStream.writeStringProperty(a.getDebugSpId(), "debugSpId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
};

T5517.prototype._m25592 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isExecutionStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getExecutionStatus(), "ExecutionStatus", b);
    1 == a.isReasonSet() && JsonOutputStream.writeObjectProperty(c, a.getReason(), "Reason", b);
    1 == a.isplayerIdsStoredSet() && JsonOutputStream.writeStringProperty(a.getPlayerIdsStored(), "playerIdsStored", b);
    1 == a.issessionIdSet() && JsonOutputStream.writeStringProperty(a.getSessionId(), "sessionId", b);
    1 == a.isPlayerSessionTypeSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayerSessionType(), "PlayerSessionType", b);
    1 == a.isPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "Player", b);
};

T5517.prototype._m25593 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
    1 == a.isGameRunningStateSet() && JsonOutputStream.writeObjectProperty(c, a.getGameRunningState(), "GameRunningState", b);
};

T5517.prototype._m25594 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isEmitterSet() && JsonOutputStream.writeObjectProperty(c, a.getEmitter(), "Emitter", b);
    1 == a.isReceiverIdSet() && JsonOutputStream.writeStringProperty(a.getReceiverId(), "ReceiverId", b);
    1 == a.isCustomMessageSet() && JsonOutputStream.writeStringProperty(a.getCustomMessage(), "CustomMessage", b);
    1 == a.isFriendDemandStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getFriendDemandStatus(), "FriendDemandStatus", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
};

T5517.prototype._m25595 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isValueSet() && JsonOutputStream.writeDoubleProperty(a.getValue(), "Value", b);
    1 == a.isTimestampSet() && JsonOutputStream.writeDoubleProperty(a.getTimestamp(), "Timestamp", b);
    1 == a.isPlayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "PlayerId", b);
    1 == a.isPlayerNameSet() && JsonOutputStream.writeStringProperty(a.getPlayerName(), "PlayerName", b);
    1 == a.isPlayerAvatarPathSet() && JsonOutputStream.writeStringProperty(a.getPlayerAvatarPath(), "PlayerAvatarPath", b);
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25596 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    if (1 == a.isPlayersSet()) {
        var e = a.getPlayers();
        if (null == e) return;
        for (var f = new JSONArray().init(), d = e.length, h = 0; h < d; h++) {
            var g = e[h], k = new JSONObject().init();
            JsonOutputStream.writeObject(c, g, k);
            f.putObject(k);
        }
        b.putArray("Players", f);
    }
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25597 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    if (1 == a.isPlayersSet()) {
        var e = a.getPlayers();
        if (null == e) return;
        for (var f = new JSONArray().init(), d = e.length, h = 0; h < d; h++) {
            var g = e[h], k = new JSONObject().init();
            JsonOutputStream.writeObject(c, g, k);
            f.putObject(k);
        }
        b.putArray("Players", f);
    }
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
    1 == a.isDefaultRoomSet() && JsonOutputStream.writeBooleanProperty(a.isDefaultRoom(), "DefaultRoom", b);
};

T5517.prototype._m25598 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    if (1 == a.isPlayersSet()) {
        var e = a.getPlayers();
        if (null == e) return;
        for (var f = new JSONArray().init(), d = e.length, h = 0; h < d; h++) {
            var g = e[h], k = new JSONObject().init();
            JsonOutputStream.writeObject(c, g, k);
            f.putObject(k);
        }
        b.putArray("Players", f);
    }
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
    1 == a.isGameRunningStateSet() && JsonOutputStream.writeObjectProperty(c, a.getGameRunningState(), "GameRunningState", b);
    1 == a.isGameCharacteristicsSet() && JsonOutputStream.writeObjectProperty(c, a.getGameCharacteristics(), "GameCharacteristics", b);
    1 == a.isGameStateSet() && JsonOutputStream.writeObjectProperty(c, a.getGameState(), "GameState", b);
    1 == a.isMatchMakingConditionsSet() && JsonOutputStream.writeObjectProperty(c, a.getMatchMakingConditions(), "MatchMakingConditions", b);
    1 == a.isTurnBasedContextSet() && JsonOutputStream.writeObjectProperty(c, a.getTurnBasedContext(), "TurnBasedContext", b);
    1 == a.isOwnerSet() && JsonOutputStream.writeObjectProperty(c, a.getOwner(), "Owner", b);
};

T5517.prototype._m25599 = function(c, a, b) {
    1 == a.isMinPlayerSet() && JsonOutputStream.writeIntegerProperty(a.getMinPlayer(), "MinPlayer", b);
    1 == a.isMaxPlayerSet() && JsonOutputStream.writeIntegerProperty(a.getMaxPlayer(), "MaxPlayer", b);
    1 == a.isAutoStopSet() && JsonOutputStream.writeBooleanProperty(a.isAutoStop(), "AutoStop", b);
    1 == a.isAutoStartSet() && JsonOutputStream.writeBooleanProperty(a.isAutoStart(), "AutoStart", b);
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25600 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
    1 == a.isPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "Player", b);
};

T5517.prototype._m25601 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isFriendSet() && JsonOutputStream.writeObjectProperty(c, a.getFriend(), "Friend", b);
};

T5517.prototype._m25602 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
    1 == a.isPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "Player", b);
};

T5517.prototype._m25603 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isUpdateSet() && JsonOutputStream.writeIntegerProperty(a.getUpdate(), "Update", b);
    if (1 == a.isValuesSet() && (a = a.getValues(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Values", e);
    }
};

T5517.prototype._m25604 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isfriendSet() && JsonOutputStream.writeObjectProperty(c, a.getFriend(), "friend", b);
};

T5517.prototype._m25605 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isfriendSet() && JsonOutputStream.writeObjectProperty(c, a.getFriend(), "friend", b);
};

T5517.prototype._m25606 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isPlayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "PlayerId", b);
    1 == a.isNbCoinsSet() && JsonOutputStream.writeIntegerProperty(a.getNbCoins(), "NbCoins", b);
};

T5517.prototype._m25607 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    1 == a.isPriceSet() && JsonOutputStream.writeIntegerProperty(a.getPrice(), "Price", b);
    1 == a.isBoughtSet() && JsonOutputStream.writeBooleanProperty(a.isBought(), "Bought", b);
    1 == a.isCountSet() && JsonOutputStream.writeIntegerProperty(a.getCount(), "Count", b);
    1 == a.isOrderSet() && JsonOutputStream.writeIntegerProperty(a.getOrder(), "Order", b);
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25608 = function(c, a, b) {
    if (1 == a.isUpdatesSet()) {
        var e = a.getUpdates();
        if (null == e) return;
        for (var f = new JSONArray().init(), d = e.length, h = 0; h < d; h++) {
            var g = e[h], k = new JSONObject().init();
            JsonOutputStream.writeObject(c, g, k);
            f.putObject(k);
        }
        b.putArray("Updates", f);
    }
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25609 = function(c, a, b) {
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
    1 == a.isCustomObjectSet() && JsonOutputStream.writeObjectProperty(c, a.getCustomObject(), "CustomObject", b);
};

T5517.prototype._m25610 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isIpAddressSet() && JsonOutputStream.writeStringProperty(a.getIpAddress(), "IpAddress", b);
    1 == a.isTcpPortSet() && JsonOutputStream.writeIntegerProperty(a.getTcpPort(), "TcpPort", b);
};

T5517.prototype._m25611 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.issessionIdSet() && JsonOutputStream.writeStringProperty(a.getSessionId(), "sessionId", b);
};

T5517.prototype._m25612 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.issystemIDSet() && JsonOutputStream.writeStringProperty(a.getSystemID(), "systemID", b);
    1 == a.istargetIDSet() && JsonOutputStream.writeStringProperty(a.getTargetID(), "targetID", b);
    1 == a.isOwnerIDSet() && JsonOutputStream.writeStringProperty(a.getOwnerID(), "OwnerID", b);
    1 == a.isApplicationIDSet() && JsonOutputStream.writeStringProperty(a.getApplicationID(), "ApplicationID", b);
    1 == a.isplayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "playerId", b);
    1 == a.ismessageSet() && JsonOutputStream.writeObjectProperty(c, a.getMessage(), "message", b);
};

T5517.prototype._m25613 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
    1 == a.iscontentSet() && JsonOutputStream.writeStringProperty(a.getContent(), "content", b);
};

T5517.prototype._m25614 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.issessionIdSet() && JsonOutputStream.writeStringProperty(a.getSessionId(), "sessionId", b);
};

T5517.prototype._m25615 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isReasonSet() && JsonOutputStream.writeStringProperty(a.getReason(), "Reason", b);
};

T5517.prototype._m25616 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isAvatarSet() && JsonOutputStream.writeStringProperty(a.getAvatar(), "Avatar", b);
    1 == a.isPlayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "PlayerId", b);
    1 == a.isEmailSet() && JsonOutputStream.writeStringProperty(a.getEmail(), "Email", b);
    1 == a.isCountrySet() && JsonOutputStream.writeStringProperty(a.getCountry(), "Country", b);
    if (1 == a.isFriendsSet()) {
        var e = a.getFriends();
        if (null == e) return;
        for (var f = new JSONArray().init(), d = e.length, h = 0; h < d; h++) {
            var g = e[h], k = new JSONObject().init();
            JsonOutputStream.writeObject(c, g, k);
            f.putObject(k);
        }
        b.putArray("Friends", f);
    }
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25617 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isFriendDemandSet() && JsonOutputStream.writeObjectProperty(c, a.getFriendDemand(), "FriendDemand", b);
};

T5517.prototype._m25618 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isplayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "player", b);
    1 == a.ismessageSet() && JsonOutputStream.writeStringProperty(a.getMessage(), "message", b);
};

T5517.prototype._m25619 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isAddressSet() && JsonOutputStream.writeStringProperty(a.getAddress(), "Address", b);
};

T5517.prototype._m25620 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSessionIdSet() && JsonOutputStream.writeStringProperty(a.getSessionId(), "SessionId", b);
    1 == a.isPlayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "PlayerId", b);
    1 == a.isplayerIdsStoredSet() && JsonOutputStream.writeStringProperty(a.getPlayerIdsStored(), "playerIdsStored", b);
};

T5517.prototype._m25621 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
};

T5517.prototype._m25622 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isCurrentPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getCurrentPlayer(), "CurrentPlayer", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
};

T5517.prototype._m25623 = function(c, a, b) {
    if (1 == a.isItemsSet() && (a = a.getItems(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Items", e);
    }
};

T5517.prototype._m25624 = function(c, a, b) {
    if (1 == a.isachievementsSet() && (a = a.getAchievements(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Achievements", e);
    }
};

T5517.prototype._m25625 = function(c, a, b) {
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isNameSet() && JsonOutputStream.writeStringProperty(a.getName(), "Name", b);
    if (1 == a.isleaderboardEntriesSet()) {
        var e = a.getLeaderboardEntries();
        if (null == e) return;
        for (var f = new JSONArray().init(), d = e.length, h = 0; h < d; h++) {
            var g = e[h], k = new JSONObject().init();
            JsonOutputStream.writeObject(c, g, k);
            f.putObject(k);
        }
        b.putArray("LeaderboardEntries", f);
    }
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25626 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isurlSet() && JsonOutputStream.writeStringProperty(a.getUrl(), "url", b);
};

T5517.prototype._m25627 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isCurrentPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getCurrentPlayer(), "CurrentPlayer", b);
};

T5517.prototype._m25628 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    if (1 == a.isParticipantsSet() && (a = a.getParticipants(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Participants", e);
    }
};

T5517.prototype._m25629 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSessionIdSet() && JsonOutputStream.writeStringProperty(a.getSessionId(), "SessionId", b);
    1 == a.isCallbackIdSet() && JsonOutputStream.writeStringProperty(a.getCallbackId(), "CallbackId", b);
    1 == a.isCallbackUrlSet() && JsonOutputStream.writeStringProperty(a.getCallbackUrl(), "CallbackUrl", b);
    1 == a.isThirdPartySourceSet() && JsonOutputStream.writeObjectProperty(c, a.getThirdPartySource(), "ThirdPartySource", b);
    1 == a.isThirdPartyIdSet() && JsonOutputStream.writeStringProperty(a.getThirdPartyId(), "ThirdPartyId", b);
};

T5517.prototype._m25630 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isTimestampSet() && JsonOutputStream.writeDoubleProperty(a.getTimestamp(), "Timestamp", b);
    1 == a.isPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "Player", b);
    1 == a.isScoreSet() && JsonOutputStream.writeObjectProperty(c, a.getScore(), "Score", b);
    1 == a.isPlayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "PlayerId", b);
    1 == a.isPlayerNameSet() && JsonOutputStream.writeStringProperty(a.getPlayerName(), "PlayerName", b);
    1 == a.isPlayerAvatarPathSet() && JsonOutputStream.writeStringProperty(a.getPlayerAvatarPath(), "PlayerAvatarPath", b);
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25631 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25632 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isStartStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getStartStatus(), "StartStatus", b);
    1 == a.isStartDetailsSet() && JsonOutputStream.writeObjectProperty(c, a.getStartDetails(), "StartDetails", b);
    1 == a.isPlayerSessionTypeSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayerSessionType(), "PlayerSessionType", b);
    1 == a.isPlayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "Player", b);
};

T5517.prototype._m25633 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isIdSet() && JsonOutputStream.writeStringProperty(a.getId(), "Id", b);
    1 == a.isInviterSet() && JsonOutputStream.writeObjectProperty(c, a.getInviter(), "Inviter", b);
    1 == a.isInviteeSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitee(), "Invitee", b);
    1 == a.isContentSet() && JsonOutputStream.writeObjectProperty(c, a.getContent(), "Content", b);
    1 == a.isCreationTimeStampSet() && JsonOutputStream.writeDoubleProperty(a.getCreationTimeStamp(), "CreationTimeStamp", b);
    1 == a.isExpirationDelaySet() && JsonOutputStream.writeDoubleProperty(a.getExpirationDelay(), "ExpirationDelay", b);
    1 == a.isStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getStatus(), "Status", b);
    1 == a.isCustomDataSet() && JsonOutputStream.writeStringProperty(a.getCustomData(), "CustomData", b);
};

T5517.prototype._m25634 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
};

T5517.prototype._m25635 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isInvitationSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitation(), "Invitation", b);
};

T5517.prototype._m25636 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isInvitationSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitation(), "Invitation", b);
};

T5517.prototype._m25637 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isInvitationSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitation(), "Invitation", b);
};

T5517.prototype._m25638 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isInvitationSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitation(), "Invitation", b);
};

T5517.prototype._m25639 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "GameId", b);
};

T5517.prototype._m25640 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isloginSet() && JsonOutputStream.writeStringProperty(a.getLogin(), "login", b);
    1 == a.ispasswordSet() && JsonOutputStream.writeStringProperty(a.getPassword(), "password", b);
    1 == a.isplayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "player", b);
};

T5517.prototype._m25641 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isCreatePlayerStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getCreatePlayerStatus(), "CreatePlayerStatus", b);
    1 == a.isplayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "player", b);
};

T5517.prototype._m25642 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isloginSet() && JsonOutputStream.writeStringProperty(a.getLogin(), "login", b);
    1 == a.ispasswordSet() && JsonOutputStream.writeStringProperty(a.getPassword(), "password", b);
};

T5517.prototype._m25643 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isLoginStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getLoginStatus(), "LoginStatus", b);
    1 == a.isplayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "player", b);
};

T5517.prototype._m25644 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isthirdPartySourceSet() && JsonOutputStream.writeObjectProperty(c, a.getThirdPartySource(), "thirdPartySource", b);
    1 == a.isaccessTokenSet() && JsonOutputStream.writeStringProperty(a.getAccessToken(), "accessToken", b);
};

T5517.prototype._m25645 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isThirdPartyLoginStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getThirdPartyLoginStatus(), "ThirdPartyLoginStatus", b);
    1 == a.isplayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "player", b);
};

T5517.prototype._m25646 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25647 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isLogoutStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getLogoutStatus(), "LogoutStatus", b);
    1 == a.isplayerSet() && JsonOutputStream.writeObjectProperty(c, a.getPlayer(), "player", b);
};

T5517.prototype._m25648 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isloginSet() && JsonOutputStream.writeStringProperty(a.getLogin(), "login", b);
};

T5517.prototype._m25649 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isForgotPasswordStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getForgotPasswordStatus(), "ForgotPasswordStatus", b);
};

T5517.prototype._m25650 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isnameSet() && JsonOutputStream.writeStringProperty(a.getName(), "name", b);
};

T5517.prototype._m25651 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSetPlayerNameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSetPlayerNameStatus(), "SetPlayerNameStatus", b);
};

T5517.prototype._m25652 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25653 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetFriendsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetFriendsStatus(), "GetFriendsStatus", b);
    if (1 == a.isfriendsSet() && (a = a.getFriends(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Friends", e);
    }
};

T5517.prototype._m25654 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isidSet() && JsonOutputStream.writeStringProperty(a.getId(), "id", b);
};

T5517.prototype._m25655 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isAskForFriendStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getAskForFriendStatus(), "AskForFriendStatus", b);
};

T5517.prototype._m25656 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25657 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetFriendDemandsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetFriendDemandsStatus(), "GetFriendDemandsStatus", b);
    if (1 == a.isfriendDemandsSet() && (a = a.getFriendDemands(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("FriendDemands", e);
    }
};

T5517.prototype._m25658 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isfriendDemandIdSet() && JsonOutputStream.writeStringProperty(a.getFriendDemandId(), "friendDemandId", b);
};

T5517.prototype._m25659 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isAcceptFriendDemandStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getAcceptFriendDemandStatus(), "AcceptFriendDemandStatus", b);
    1 == a.isfriendDemandIdSet() && JsonOutputStream.writeStringProperty(a.getFriendDemandId(), "friendDemandId", b);
};

T5517.prototype._m25660 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isfriendDemandIdSet() && JsonOutputStream.writeStringProperty(a.getFriendDemandId(), "friendDemandId", b);
};

T5517.prototype._m25661 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isRefuseFriendDemandStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getRefuseFriendDemandStatus(), "RefuseFriendDemandStatus", b);
    1 == a.isfriendDemandIdSet() && JsonOutputStream.writeStringProperty(a.getFriendDemandId(), "friendDemandId", b);
};

T5517.prototype._m25662 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isscoreSet() && JsonOutputStream.writeObjectProperty(c, a.getScore(), "score", b);
    1 == a.isleaderboardIdSet() && JsonOutputStream.writeStringProperty(a.getLeaderboardId(), "leaderboardId", b);
};

T5517.prototype._m25663 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSubmitScoreStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSubmitScoreStatus(), "SubmitScoreStatus", b);
};

T5517.prototype._m25664 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isleaderboardIdSet() && JsonOutputStream.writeStringProperty(a.getLeaderboardId(), "leaderboardId", b);
    1 == a.isperiodSet() && JsonOutputStream.writeObjectProperty(c, a.getPeriod(), "period", b);
    1 == a.isstartSet() && JsonOutputStream.writeIntegerProperty(a.getStart(), "start", b);
    1 == a.islimitSet() && JsonOutputStream.writeIntegerProperty(a.getLimit(), "limit", b);
};

T5517.prototype._m25665 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetScoresStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetScoresStatus(), "GetScoresStatus", b);
    1 == a.isleaderboardIdSet() && JsonOutputStream.writeStringProperty(a.getLeaderboardId(), "leaderboardId", b);
    1 == a.isleaderboardNameSet() && JsonOutputStream.writeStringProperty(a.getLeaderboardName(), "leaderboardName", b);
    if (1 == a.isscoresSet() && (a = a.getScores(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Scores", e);
    }
};

T5517.prototype._m25666 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25667 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetAchievementsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetAchievementsStatus(), "GetAchievementsStatus", b);
    if (1 == a.isachievementsSet() && (a = a.getAchievements(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Achievements", e);
    }
};

T5517.prototype._m25668 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isachivementIdSet() && JsonOutputStream.writeStringProperty(a.getAchivementId(), "achivementId", b);
};

T5517.prototype._m25669 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isAchieveStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getAchieveStatus(), "AchieveStatus", b);
    1 == a.isachivementIdSet() && JsonOutputStream.writeStringProperty(a.getAchivementId(), "achivementId", b);
};

T5517.prototype._m25670 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isachivementIdSet() && JsonOutputStream.writeStringProperty(a.getAchivementId(), "achivementId", b);
    1 == a.isvalueSet() && JsonOutputStream.writeIntegerProperty(a.getValue(), "value", b);
};

T5517.prototype._m25671 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isAchieveWithProgressStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getAchieveWithProgressStatus(), "AchieveWithProgressStatus", b);
    1 == a.isachivementIdSet() && JsonOutputStream.writeStringProperty(a.getAchivementId(), "achivementId", b);
    1 == a.isprogressSet() && JsonOutputStream.writeIntegerProperty(a.getProgress(), "progress", b);
};

T5517.prototype._m25672 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25673 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetPlayerProfileStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetPlayerProfileStatus(), "GetPlayerProfileStatus", b);
    1 == a.isprofileSet() && JsonOutputStream.writeObjectProperty(c, a.getProfile(), "profile", b);
};

T5517.prototype._m25674 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isplayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "playerId", b);
};

T5517.prototype._m25675 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetPlayerProfileByPlayerIdStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetPlayerProfileByPlayerIdStatus(), "GetPlayerProfileByPlayerIdStatus", b);
    1 == a.isprofileSet() && JsonOutputStream.writeObjectProperty(c, a.getProfile(), "profile", b);
};

T5517.prototype._m25676 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isprofileSet() && JsonOutputStream.writeObjectProperty(c, a.getProfile(), "profile", b);
};

T5517.prototype._m25677 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSavePlayerProfileStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSavePlayerProfileStatus(), "SavePlayerProfileStatus", b);
};

T5517.prototype._m25678 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isdbQuerySet() && JsonOutputStream.writeObjectProperty(c, a.getDbQuery(), "dbQuery", b);
};

T5517.prototype._m25679 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetStorablesStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetStorablesStatus(), "GetStorablesStatus", b);
    if (1 == a.isstorablesSet() && (a = a.getStorables(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Storables", e);
    }
};

T5517.prototype._m25680 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isstorableSet() && JsonOutputStream.writeObjectProperty(c, a.getStorable(), "storable", b);
};

T5517.prototype._m25681 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSaveStorableStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSaveStorableStatus(), "SaveStorableStatus", b);
    1 == a.isstorableIdSet() && JsonOutputStream.writeStringProperty(a.getStorableId(), "storableId", b);
};

T5517.prototype._m25682 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isstorableSet() && JsonOutputStream.writeObjectProperty(c, a.getStorable(), "storable", b);
};

T5517.prototype._m25683 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isUpdateStorableStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getUpdateStorableStatus(), "UpdateStorableStatus", b);
    1 == a.isstorableIdSet() && JsonOutputStream.writeStringProperty(a.getStorableId(), "storableId", b);
};

T5517.prototype._m25684 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isstorableSet() && JsonOutputStream.writeObjectProperty(c, a.getStorable(), "storable", b);
};

T5517.prototype._m25685 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isRemoveStorableStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getRemoveStorableStatus(), "RemoveStorableStatus", b);
    1 == a.isstorableIdSet() && JsonOutputStream.writeStringProperty(a.getStorableId(), "storableId", b);
};

T5517.prototype._m25686 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25687 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetItemsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetItemsStatus(), "GetItemsStatus", b);
    if (1 == a.isitemsSet() && (a = a.getItems(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Items", e);
    }
};

T5517.prototype._m25688 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isitemIdSet() && JsonOutputStream.writeStringProperty(a.getItemId(), "itemId", b);
    1 == a.isquantitySet() && JsonOutputStream.writeIntegerProperty(a.getQuantity(), "quantity", b);
};

T5517.prototype._m25689 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isBuyItemStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getBuyItemStatus(), "BuyItemStatus", b);
    1 == a.isboughtItemSet() && JsonOutputStream.writeObjectProperty(c, a.getBoughtItem(), "boughtItem", b);
    1 == a.isquantitySet() && JsonOutputStream.writeIntegerProperty(a.getQuantity(), "quantity", b);
};

T5517.prototype._m25690 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isitemIdSet() && JsonOutputStream.writeStringProperty(a.getItemId(), "itemId", b);
    1 == a.isquantitySet() && JsonOutputStream.writeIntegerProperty(a.getQuantity(), "quantity", b);
};

T5517.prototype._m25691 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isConsumeItemStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getConsumeItemStatus(), "ConsumeItemStatus", b);
    1 == a.isconsumedItemSet() && JsonOutputStream.writeObjectProperty(c, a.getConsumedItem(), "consumedItem", b);
    1 == a.isquantitySet() && JsonOutputStream.writeIntegerProperty(a.getQuantity(), "quantity", b);
};

T5517.prototype._m25692 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isvalueSet() && JsonOutputStream.writeIntegerProperty(a.getValue(), "value", b);
};

T5517.prototype._m25693 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isIncreasePlayerWalletStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getIncreasePlayerWalletStatus(), "IncreasePlayerWalletStatus", b);
    1 == a.isvalueSet() && JsonOutputStream.writeIntegerProperty(a.getValue(), "value", b);
};

T5517.prototype._m25694 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25695 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetPlayerWalletStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetPlayerWalletStatus(), "GetPlayerWalletStatus", b);
    1 == a.iswalletSet() && JsonOutputStream.writeObjectProperty(c, a.getWallet(), "wallet", b);
};

T5517.prototype._m25696 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25697 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isJoinGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getJoinGameStatus(), "JoinGameStatus", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25698 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25699 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isUnjoinGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getUnjoinGameStatus(), "UnjoinGameStatus", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25700 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25701 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isStartGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getStartGameStatus(), "StartGameStatus", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25702 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25703 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isStopGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getStopGameStatus(), "StopGameStatus", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25704 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25705 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isCreateGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getCreateGameStatus(), "CreateGameStatus", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25706 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isdbQuerySet() && JsonOutputStream.writeObjectProperty(c, a.getDbQuery(), "dbQuery", b);
};

T5517.prototype._m25707 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetGamesStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetGamesStatus(), "GetGamesStatus", b);
    if (1 == a.isgamesSet() && (a = a.getGames(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Games", e);
    }
};

T5517.prototype._m25708 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25709 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSaveAsGhostStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSaveAsGhostStatus(), "SaveAsGhostStatus", b);
};

T5517.prototype._m25710 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isdbQuerySet() && JsonOutputStream.writeObjectProperty(c, a.getDbQuery(), "dbQuery", b);
};

T5517.prototype._m25711 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetGhostsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetGhostsStatus(), "GetGhostsStatus", b);
    if (1 == a.isghostsSet() && (a = a.getGhosts(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Ghosts", e);
    }
};

T5517.prototype._m25712 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25713 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isLoadGhostStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getLoadGhostStatus(), "LoadGhostStatus", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25714 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25715 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isNextPlayerTurnStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getNextPlayerTurnStatus(), "NextPlayerTurnStatus", b);
};

T5517.prototype._m25716 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25717 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSaveGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSaveGameStatus(), "SaveGameStatus", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25718 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
};

T5517.prototype._m25719 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isLoadGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getLoadGameStatus(), "LoadGameStatus", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25720 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
    1 == a.ismessageSet() && JsonOutputStream.writeStringProperty(a.getMessage(), "message", b);
};

T5517.prototype._m25721 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSendGameChatStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSendGameChatStatus(), "SendGameChatStatus", b);
};

T5517.prototype._m25722 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
    1 == a.isplayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "playerId", b);
    1 == a.ismessageSet() && JsonOutputStream.writeStringProperty(a.getMessage(), "message", b);
};

T5517.prototype._m25723 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSendGameChatToPlayerStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSendGameChatToPlayerStatus(), "SendGameChatToPlayerStatus", b);
};

T5517.prototype._m25724 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgameIdSet() && JsonOutputStream.writeStringProperty(a.getGameId(), "gameId", b);
    1 == a.ismessageSet() && JsonOutputStream.writeStringProperty(a.getMessage(), "message", b);
};

T5517.prototype._m25725 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isSendGameChatToPlayerListStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getSendGameChatToPlayerListStatus(), "SendGameChatToPlayerListStatus", b);
};

T5517.prototype._m25726 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isplayerIdSet() && JsonOutputStream.writeStringProperty(a.getPlayerId(), "playerId", b);
    1 == a.isinvitationSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitation(), "invitation", b);
};

T5517.prototype._m25727 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isInvitePlayerStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getInvitePlayerStatus(), "InvitePlayerStatus", b);
    1 == a.isinvitationIdSet() && JsonOutputStream.writeStringProperty(a.getInvitationId(), "invitationId", b);
};

T5517.prototype._m25728 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isnuggetaQuerySet() && JsonOutputStream.writeObjectProperty(c, a.getNuggetaQuery(), "nuggetaQuery", b);
};

T5517.prototype._m25729 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetInvitationsStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetInvitationsStatus(), "GetInvitationsStatus", b);
    if (1 == a.isinvitationsSet() && (a = a.getInvitations(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Invitations", e);
    }
};

T5517.prototype._m25730 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isinvitationIdSet() && JsonOutputStream.writeStringProperty(a.getInvitationId(), "invitationId", b);
};

T5517.prototype._m25731 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isAcceptInvitationStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getAcceptInvitationStatus(), "AcceptInvitationStatus", b);
    1 == a.isinvitationIdSet() && JsonOutputStream.writeStringProperty(a.getInvitationId(), "invitationId", b);
};

T5517.prototype._m25732 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isinvitationIdSet() && JsonOutputStream.writeStringProperty(a.getInvitationId(), "invitationId", b);
};

T5517.prototype._m25733 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isRefuseInvitationStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getRefuseInvitationStatus(), "RefuseInvitationStatus", b);
    1 == a.isinvitationIdSet() && JsonOutputStream.writeStringProperty(a.getInvitationId(), "invitationId", b);
};

T5517.prototype._m25734 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25735 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isPauseSessionMonitoringStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getPauseSessionMonitoringStatus(), "PauseSessionMonitoringStatus", b);
};

T5517.prototype._m25736 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
};

T5517.prototype._m25737 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isResumeSessionMonitoringStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getResumeSessionMonitoringStatus(), "ResumeSessionMonitoringStatus", b);
};

T5517.prototype._m25738 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isgamesQuerySet() && JsonOutputStream.writeObjectProperty(c, a.getGamesQuery(), "gamesQuery", b);
    1 == a.ismatchMakingConditionsSet() && JsonOutputStream.writeObjectProperty(c, a.getMatchMakingConditions(), "matchMakingConditions", b);
    1 == a.istimeoutDelayMinPlayersSet() && JsonOutputStream.writeIntegerProperty(a.getTimeoutDelayMinPlayers(), "timeoutDelayMinPlayers", b);
};

T5517.prototype._m25739 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isMatchAndJoinGameStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getMatchAndJoinGameStatus(), "MatchAndJoinGameStatus", b);
    1 == a.isgameSet() && JsonOutputStream.writeObjectProperty(c, a.getGame(), "game", b);
};

T5517.prototype._m25740 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isplayersQuerySet() && JsonOutputStream.writeObjectProperty(c, a.getPlayersQuery(), "playersQuery", b);
};

T5517.prototype._m25741 = function(c, a, b) {
    1 == a.isStoreIdSet() && JsonOutputStream.writeStringProperty(a.getStoreId(), "StoreId", b);
    1 == a.isSenderIdSet() && JsonOutputStream.writeStringProperty(a.getSenderId(), "SenderId", b);
    1 == a.isMessageIdSet() && JsonOutputStream.writeStringProperty(a.getMessageId(), "MessageId", b);
    1 == a.isRequestIdSet() && JsonOutputStream.writeStringProperty(a.getRequestId(), "RequestId", b);
    1 == a.isGetPlayersStatusSet() && JsonOutputStream.writeObjectProperty(c, a.getGetPlayersStatus(), "GetPlayersStatus", b);
    if (1 == a.isplayersSet() && (a = a.getPlayers(), null != a)) {
        for (var e = new JSONArray().init(), f = a.length, d = 0; d < f; d++) {
            var h = a[d], g = new JSONObject().init();
            JsonOutputStream.writeObject(c, h, g);
            e.putObject(g);
        }
        b.putArray("Players", e);
    }
};

T5517.prototype.readSerializable = function(c, a, b) {
    if (0 == b) return this._m25742(c, a);
    if (1 == b) return this._m25743(c, a);
    if (2 == b) return this._m25744(c, a);
    if (3 == b) return this._m25745(c, a);
    if (4 == b) return this._m25746(c, a);
    if (5 == b) return this._m25747(c, a);
    if (6 == b) return this._m25748(c, a);
    if (7 == b) return this._m25749(c, a);
    if (8 == b) return this._m25750(c, a);
    if (9 == b) return this._m25751(c, a);
    if (10 == b) return this._m25752(c, a);
    if (11 == b) return this._m25753(c, a);
    if (12 == b) return this._m25754(c, a);
    if (13 == b) return this._m25755(c, a);
    if (14 == b) return this._m25756(c, a);
    if (10002 == b) return this._m25757(c, a);
    if (10011 == b) return this._m25758(c, a);
    if (10140 == b) return this._m25759(c, a);
    if (10020 == b) return this._m25760(c, a);
    if (10008 == b) return this._m25761(c, a);
    if (10125 == b) return this._m25762(c, a);
    if (10029 == b) return this._m25763(c, a);
    if (12e3 == b) return this._m25764(c, a);
    if (10035 == b) return this._m25765(c, a);
    if (10038 == b) return this._m25766(c, a);
    if (10041 == b) return this._m25767(c, a);
    if (10044 == b) return this._m25768(c, a);
    if (10047 == b) return this._m25769(c, a);
    if (10065 == b) return this._m25770(c, a);
    if (10068 == b) return this._m25771(c, a);
    if (10071 == b) return this._m25772(c, a);
    if (10017 == b) return this._m25773(c, a);
    if (11832 == b) return this._m25774(c, a);
    if (10014 == b) return this._m25775(c, a);
    if (10116 == b) return this._m25776(c, a);
    if (10119 == b) return this._m25777(c, a);
    if (10128 == b) return this._m25778(c, a);
    if (10131 == b) return this._m25779(c, a);
    if (10053 == b) return this._m25780(c, a);
    if (10050 == b) return this._m25781(c, a);
    if (10056 == b) return this._m25782(c, a);
    if (10059 == b) return this._m25783(c, a);
    if (10062 == b) return this._m25784(c, a);
    if (10074 == b) return this._m25785(c, a);
    if (10077 == b) return this._m25786(c, a);
    if (10092 == b) return this._m25787(c, a);
    if (10095 == b) return this._m25788(c, a);
    if (10098 == b) return this._m25789(c, a);
    if (10101 == b) return this._m25790(c, a);
    if (10104 == b) return this._m25791(c, a);
    if (10107 == b) return this._m25792(c, a);
    if (10110 == b) return this._m25793(c, a);
    if (10122 == b) return this._m25794(c, a);
    if (10143 == b) return this._m25795(c, a);
    if (10146 == b) return this._m25796(c, a);
    if (10113 == b) return this._m25797(c, a);
    if (10926 == b) return this._m25798(c, a);
    if (10929 == b) return this._m25799(c, a);
    if (10170 == b) return this._m25800(c, a);
    if (10173 == b) return this._m25801(c, a);
    if (10176 == b) return this._m25802(c, a);
    if (10179 == b) return this._m25803(c, a);
    if (10161 == b) return this._m25804(c, a);
    if (10164 == b) return this._m25805(c, a);
    if (10167 == b) return this._m25806(c, a);
    if (10182 == b) return this._m25807(c, a);
    if (3001 == b) return this._m25808(c, a);
    if (3002 == b) return this._m25809(c, a);
    if (3003 == b) return this._m25810(c, a);
    if (3004 == b) return this._m25811(c, a);
    if (3005 == b) return this._m25812(c, a);
    if (3006 == b) return this._m25813(c, a);
    if (3007 == b) return this._m25814(c, a);
    if (3008 == b) return this._m25815(c, a);
    if (3009 == b) return this._m25816(c, a);
    if (3010 == b) return this._m25817(c, a);
    if (3011 == b) return this._m25818(c, a);
    if (3012 == b) return this._m25819(c, a);
    if (3013 == b) return this._m25820(c, a);
    if (3014 == b) return this._m25821(c, a);
    if (3015 == b) return this._m25822(c, a);
    if (3016 == b) return this._m25823(c, a);
    if (3017 == b) return this._m25824(c, a);
    if (3018 == b) return this._m25825(c, a);
    if (3019 == b) return this._m25826(c, a);
    if (3020 == b) return this._m25827(c, a);
    if (3021 == b) return this._m25828(c, a);
    if (3022 == b) return this._m25829(c, a);
    if (3023 == b) return this._m25830(c, a);
    if (3024 == b) return this._m25831(c, a);
    if (3025 == b) return this._m25832(c, a);
    if (3026 == b) return this._m25833(c, a);
    if (3027 == b) return this._m25834(c, a);
    if (3028 == b) return this._m25835(c, a);
    if (3029 == b) return this._m25836(c, a);
    if (3030 == b) return this._m25837(c, a);
    if (3032 == b) return this._m25838(c, a);
    if (3033 == b) return this._m25839(c, a);
    if (3034 == b) return this._m25840(c, a);
    if (3035 == b) return this._m25841(c, a);
    if (3036 == b) return this._m25842(c, a);
    if (3037 == b) return this._m25843(c, a);
    if (3038 == b) return this._m25844(c, a);
    if (3039 == b) return this._m25845(c, a);
    if (3040 == b) return this._m25846(c, a);
    if (3041 == b) return this._m25847(c, a);
    if (3042 == b) return this._m25848(c, a);
    if (3043 == b) return this._m25849(c, a);
    if (3044 == b) return this._m25850(c, a);
    if (3045 == b) return this._m25851(c, a);
    if (3047 == b) return this._m25852(c, a);
    if (3048 == b) return this._m25853(c, a);
    if (3049 == b) return this._m25854(c, a);
    if (3050 == b) return this._m25855(c, a);
    if (3051 == b) return this._m25856(c, a);
    if (3052 == b) return this._m25857(c, a);
    if (3053 == b) return this._m25858(c, a);
    if (1e4 == b) return this._m25859(c, a);
    if (10001 == b) return this._m25860(c, a);
    if (10009 == b) return this._m25861(c, a);
    if (10010 == b) return this._m25862(c, a);
    if (10138 == b) return this._m25863(c, a);
    if (10139 == b) return this._m25864(c, a);
    if (10018 == b) return this._m25865(c, a);
    if (10019 == b) return this._m25866(c, a);
    if (10006 == b) return this._m25867(c, a);
    if (10007 == b) return this._m25868(c, a);
    if (10123 == b) return this._m25869(c, a);
    if (10124 == b) return this._m25870(c, a);
    if (10027 == b) return this._m25871(c, a);
    if (10028 == b) return this._m25872(c, a);
    if (11998 == b) return this._m25873(c, a);
    if (11999 == b) return this._m25874(c, a);
    if (10033 == b) return this._m25875(c, a);
    if (10034 == b) return this._m25876(c, a);
    if (10036 == b) return this._m25877(c, a);
    if (10037 == b) return this._m25878(c, a);
    if (10039 == b) return this._m25879(c, a);
    if (10040 == b) return this._m25880(c, a);
    if (10042 == b) return this._m25881(c, a);
    if (10043 == b) return this._m25882(c, a);
    if (10045 == b) return this._m25883(c, a);
    if (10046 == b) return this._m25884(c, a);
    if (10063 == b) return this._m25885(c, a);
    if (10064 == b) return this._m25886(c, a);
    if (10066 == b) return this._m25887(c, a);
    if (10067 == b) return this._m25888(c, a);
    if (10069 == b) return this._m25889(c, a);
    if (10070 == b) return this._m25890(c, a);
    if (10015 == b) return this._m25891(c, a);
    if (10016 == b) return this._m25892(c, a);
    if (11830 == b) return this._m25893(c, a);
    if (11831 == b) return this._m25894(c, a);
    if (10012 == b) return this._m25895(c, a);
    if (10013 == b) return this._m25896(c, a);
    if (10114 == b) return this._m25897(c, a);
    if (10115 == b) return this._m25898(c, a);
    if (10117 == b) return this._m25899(c, a);
    if (10118 == b) return this._m25900(c, a);
    if (10126 == b) return this._m25901(c, a);
    if (10127 == b) return this._m25902(c, a);
    if (10129 == b) return this._m25903(c, a);
    if (10130 == b) return this._m25904(c, a);
    if (10051 == b) return this._m25905(c, a);
    if (10052 == b) return this._m25906(c, a);
    if (10048 == b) return this._m25907(c, a);
    if (10049 == b) return this._m25908(c, a);
    if (10054 == b) return this._m25909(c, a);
    if (10055 == b) return this._m25910(c, a);
    if (10057 == b) return this._m25911(c, a);
    if (10058 == b) return this._m25912(c, a);
    if (10060 == b) return this._m25913(c, a);
    if (10061 == b) return this._m25914(c, a);
    if (10072 == b) return this._m25915(c, a);
    if (10073 == b) return this._m25916(c, a);
    if (10075 == b) return this._m25917(c, a);
    if (10076 == b) return this._m25918(c, a);
    if (10090 == b) return this._m25919(c, a);
    if (10091 == b) return this._m25920(c, a);
    if (10093 == b) return this._m25921(c, a);
    if (10094 == b) return this._m25922(c, a);
    if (10096 == b) return this._m25923(c, a);
    if (10097 == b) return this._m25924(c, a);
    if (10099 == b) return this._m25925(c, a);
    if (10100 == b) return this._m25926(c, a);
    if (10102 == b) return this._m25927(c, a);
    if (10103 == b) return this._m25928(c, a);
    if (10105 == b) return this._m25929(c, a);
    if (10106 == b) return this._m25930(c, a);
    if (10108 == b) return this._m25931(c, a);
    if (10109 == b) return this._m25932(c, a);
    if (10120 == b) return this._m25933(c, a);
    if (10121 == b) return this._m25934(c, a);
    if (10141 == b) return this._m25935(c, a);
    if (10142 == b) return this._m25936(c, a);
    if (10144 == b) return this._m25937(c, a);
    if (10145 == b) return this._m25938(c, a);
    if (10111 == b) return this._m25939(c, a);
    if (10112 == b) return this._m25940(c, a);
    if (10924 == b) return this._m25941(c, a);
    if (10925 == b) return this._m25942(c, a);
    if (10927 == b) return this._m25943(c, a);
    if (10928 == b) return this._m25944(c, a);
    if (10168 == b) return this._m25945(c, a);
    if (10169 == b) return this._m25946(c, a);
    if (10171 == b) return this._m25947(c, a);
    if (10172 == b) return this._m25948(c, a);
    if (10174 == b) return this._m25949(c, a);
    if (10175 == b) return this._m25950(c, a);
    if (10177 == b) return this._m25951(c, a);
    if (10178 == b) return this._m25952(c, a);
    if (10159 == b) return this._m25953(c, a);
    if (10160 == b) return this._m25954(c, a);
    if (10162 == b) return this._m25955(c, a);
    if (10163 == b) return this._m25956(c, a);
    if (10165 == b) return this._m25957(c, a);
    if (10166 == b) return this._m25958(c, a);
    if (10180 == b) return this._m25959(c, a);
    if (10181 == b) return this._m25960(c, a);
    throw new NError().init("No serializer found for type " + b, null);
};

T5517.prototype._m25742 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ThirdPartySource.fromValue(b);
};

T5517.prototype._m25743 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return MatchMakingType.fromValue(b);
};

T5517.prototype._m25744 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return LeaderboardOrder.fromValue(b);
};

T5517.prototype._m25745 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return LeaderboardPeriod.fromValue(b);
};

T5517.prototype._m25746 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return HandshakeState.fromValue(b);
};

T5517.prototype._m25747 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return PlayerState.fromValue(b);
};

T5517.prototype._m25748 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ClientApplication.fromValue(b);
};

T5517.prototype._m25749 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GameRunningState.fromValue(b);
};

T5517.prototype._m25750 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return NFriendDemandStatus.fromValue(b);
};

T5517.prototype._m25751 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ThirdPartyMethodType.fromValue(b);
};

T5517.prototype._m25752 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return StartStatus.fromValue(b);
};

T5517.prototype._m25753 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return PlayerSessionType.fromValue(b);
};

T5517.prototype._m25754 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return NAchievementType.fromValue(b);
};

T5517.prototype._m25755 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return NInvitationStatus.fromValue(b);
};

T5517.prototype._m25756 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ExecutionStatus.fromValue(b);
};

T5517.prototype._m25757 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return CreatePlayerStatus.fromValue(b);
};

T5517.prototype._m25758 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return LoginStatus.fromValue(b);
};

T5517.prototype._m25759 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ThirdPartyLoginStatus.fromValue(b);
};

T5517.prototype._m25760 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return LogoutStatus.fromValue(b);
};

T5517.prototype._m25761 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ForgotPasswordStatus.fromValue(b);
};

T5517.prototype._m25762 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SetPlayerNameStatus.fromValue(b);
};

T5517.prototype._m25763 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetFriendsStatus.fromValue(b);
};

T5517.prototype._m25764 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return AskForFriendStatus.fromValue(b);
};

T5517.prototype._m25765 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetFriendDemandsStatus.fromValue(b);
};

T5517.prototype._m25766 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return AcceptFriendDemandStatus.fromValue(b);
};

T5517.prototype._m25767 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return RefuseFriendDemandStatus.fromValue(b);
};

T5517.prototype._m25768 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SubmitScoreStatus.fromValue(b);
};

T5517.prototype._m25769 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetScoresStatus.fromValue(b);
};

T5517.prototype._m25770 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetAchievementsStatus.fromValue(b);
};

T5517.prototype._m25771 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return AchieveStatus.fromValue(b);
};

T5517.prototype._m25772 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return AchieveWithProgressStatus.fromValue(b);
};

T5517.prototype._m25773 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetPlayerProfileStatus.fromValue(b);
};

T5517.prototype._m25774 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetPlayerProfileByPlayerIdStatus.fromValue(b);
};

T5517.prototype._m25775 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SavePlayerProfileStatus.fromValue(b);
};

T5517.prototype._m25776 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetStorablesStatus.fromValue(b);
};

T5517.prototype._m25777 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SaveStorableStatus.fromValue(b);
};

T5517.prototype._m25778 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return UpdateStorableStatus.fromValue(b);
};

T5517.prototype._m25779 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return RemoveStorableStatus.fromValue(b);
};

T5517.prototype._m25780 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetItemsStatus.fromValue(b);
};

T5517.prototype._m25781 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return BuyItemStatus.fromValue(b);
};

T5517.prototype._m25782 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ConsumeItemStatus.fromValue(b);
};

T5517.prototype._m25783 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return IncreasePlayerWalletStatus.fromValue(b);
};

T5517.prototype._m25784 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetPlayerWalletStatus.fromValue(b);
};

T5517.prototype._m25785 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return JoinGameStatus.fromValue(b);
};

T5517.prototype._m25786 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return UnjoinGameStatus.fromValue(b);
};

T5517.prototype._m25787 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return StartGameStatus.fromValue(b);
};

T5517.prototype._m25788 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return StopGameStatus.fromValue(b);
};

T5517.prototype._m25789 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return CreateGameStatus.fromValue(b);
};

T5517.prototype._m25790 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetGamesStatus.fromValue(b);
};

T5517.prototype._m25791 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SaveAsGhostStatus.fromValue(b);
};

T5517.prototype._m25792 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetGhostsStatus.fromValue(b);
};

T5517.prototype._m25793 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return LoadGhostStatus.fromValue(b);
};

T5517.prototype._m25794 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return NextPlayerTurnStatus.fromValue(b);
};

T5517.prototype._m25795 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SaveGameStatus.fromValue(b);
};

T5517.prototype._m25796 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return LoadGameStatus.fromValue(b);
};

T5517.prototype._m25797 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SendGameChatStatus.fromValue(b);
};

T5517.prototype._m25798 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SendGameChatToPlayerStatus.fromValue(b);
};

T5517.prototype._m25799 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return SendGameChatToPlayerListStatus.fromValue(b);
};

T5517.prototype._m25800 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return InvitePlayerStatus.fromValue(b);
};

T5517.prototype._m25801 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetInvitationsStatus.fromValue(b);
};

T5517.prototype._m25802 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return AcceptInvitationStatus.fromValue(b);
};

T5517.prototype._m25803 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return RefuseInvitationStatus.fromValue(b);
};

T5517.prototype._m25804 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return PauseSessionMonitoringStatus.fromValue(b);
};

T5517.prototype._m25805 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return ResumeSessionMonitoringStatus.fromValue(b);
};

T5517.prototype._m25806 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return MatchAndJoinGameStatus.fromValue(b);
};

T5517.prototype._m25807 = function(c, a) {
    var b = JsonInputStream.readInteger(a, "Value");
    return GetPlayersStatus.fromValue(b);
};

T5517.prototype._m25808 = function(c, a) {
    var b = new NPlayer().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Login");
    b.setLogin(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Password");
    b.setPassword(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "AccessToken");
    b.setAccessToken(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    b.setConnected(JsonInputStream.readBoolean(a, "Connected"));
    b.setLoginSource(JsonInputStream.readObject(c, a, "LoginSource"));
    e = JsonInputStream.readString(a, "ThirdPartyId");
    b.setThirdPartyId(e);
    MemoryManagement.free(e);
    b.setCreationDate(JsonInputStream.readDouble(a, "CreationDate"));
    b.setActive(JsonInputStream.readBoolean(a, "Active"));
    e = JsonInputStream.readString(a, "Lang");
    b.setLang(e);
    MemoryManagement.free(e);
    b.setAnonymous(JsonInputStream.readBoolean(a, "Anonymous"));
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25809 = function(c, a) {
    var b = new NAchievement().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    b.setAchieved(JsonInputStream.readBoolean(a, "Achieved"));
    b.setFeatured(JsonInputStream.readBoolean(a, "Featured"));
    e = JsonInputStream.readString(a, "Description");
    b.setDescription(e);
    MemoryManagement.free(e);
    b.setNXP(JsonInputStream.readInteger(a, "NXP"));
    b.setNEnergy(JsonInputStream.readInteger(a, "NEnergy"));
    b.setType(JsonInputStream.readObject(c, a, "Type"));
    b.setGoal(JsonInputStream.readInteger(a, "Goal"));
    b.setProgress(JsonInputStream.readInteger(a, "Progress"));
    b.setOrder(JsonInputStream.readInteger(a, "Order"));
    return b;
};

T5517.prototype._m25810 = function(c, a) {
    var b = new Handshake().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Version");
    b.setVersion(e);
    MemoryManagement.free(e);
    b.setReason(JsonInputStream.readObject(c, a, "Reason"));
    e = JsonInputStream.readString(a, "playerIdsStored");
    b.setPlayerIdsStored(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "sessionId");
    b.setSessionId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "platform");
    b.setPlatform(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "spId");
    b.setSpId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "debugSpId");
    b.setDebugSpId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25811 = function(c, a) {
    var b = new HandshakeResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setExecutionStatus(JsonInputStream.readObject(c, a, "ExecutionStatus"));
    b.setReason(JsonInputStream.readObject(c, a, "Reason"));
    e = JsonInputStream.readString(a, "playerIdsStored");
    b.setPlayerIdsStored(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "sessionId");
    b.setSessionId(e);
    MemoryManagement.free(e);
    b.setPlayerSessionType(JsonInputStream.readObject(c, a, "PlayerSessionType"));
    b.setPlayer(JsonInputStream.readObject(c, a, "Player"));
    return b;
};

T5517.prototype._m25812 = function(c, a) {
    var b = new GameRunningStateChange().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    b.setGameRunningState(JsonInputStream.readObject(c, a, "GameRunningState"));
    return b;
};

T5517.prototype._m25813 = function(c, a) {
    var b = new NFriendDemand().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    b.setEmitter(JsonInputStream.readObject(c, a, "Emitter"));
    e = JsonInputStream.readString(a, "ReceiverId");
    b.setReceiverId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "CustomMessage");
    b.setCustomMessage(e);
    MemoryManagement.free(e);
    b.setFriendDemandStatus(JsonInputStream.readObject(c, a, "FriendDemandStatus"));
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25814 = function(c, a) {
    var b = new NScore().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    b.setValue(JsonInputStream.readDouble(a, "Value"));
    b.setTimestamp(JsonInputStream.readDouble(a, "Timestamp"));
    e = JsonInputStream.readString(a, "PlayerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerName");
    b.setPlayerName(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerAvatarPath");
    b.setPlayerAvatarPath(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25815 = function(c, a) {
    var b = new AbstractRoom().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("Players")) for (var f = a.getJSONArray("Players"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setPlayers(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25816 = function(c, a) {
    var b = new NRoom().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("Players")) for (var f = a.getJSONArray("Players"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setPlayers(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    b.setDefaultRoom(JsonInputStream.readBoolean(a, "DefaultRoom"));
    return b;
};

T5517.prototype._m25817 = function(c, a) {
    var b = new NGame().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("Players")) for (var f = a.getJSONArray("Players"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setPlayers(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    b.setGameRunningState(JsonInputStream.readObject(c, a, "GameRunningState"));
    b.setGameCharacteristics(JsonInputStream.readObject(c, a, "GameCharacteristics"));
    b.setGameState(JsonInputStream.readObject(c, a, "GameState"));
    b.setMatchMakingConditions(JsonInputStream.readObject(c, a, "MatchMakingConditions"));
    b.setTurnBasedContext(JsonInputStream.readObject(c, a, "TurnBasedContext"));
    b.setOwner(JsonInputStream.readObject(c, a, "Owner"));
    return b;
};

T5517.prototype._m25818 = function(c, a) {
    var b = new NGameCharacteristics().init();
    b.setMinPlayer(JsonInputStream.readInteger(a, "MinPlayer"));
    b.setMaxPlayer(JsonInputStream.readInteger(a, "MaxPlayer"));
    b.setAutoStop(JsonInputStream.readBoolean(a, "AutoStop"));
    b.setAutoStart(JsonInputStream.readBoolean(a, "AutoStart"));
    var e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25819 = function(c, a) {
    var b = new PlayerEnterGame().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    b.setPlayer(JsonInputStream.readObject(c, a, "Player"));
    return b;
};

T5517.prototype._m25820 = function(c, a) {
    var b = new FriendshipNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setFriend(JsonInputStream.readObject(c, a, "Friend"));
    return b;
};

T5517.prototype._m25821 = function(c, a) {
    var b = new PlayerUnjoinGame().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    b.setPlayer(JsonInputStream.readObject(c, a, "Player"));
    return b;
};

T5517.prototype._m25822 = function(c, a) {
    var b = new NWorldUpdate().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    b.setUpdate(JsonInputStream.readInteger(a, "Update"));
    e = [];
    if (!a.isNull("Values")) for (var f = a.getJSONArray("Values"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setValues(e);
    return b;
};

T5517.prototype._m25823 = function(c, a) {
    var b = new FriendConnectedNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setFriend(JsonInputStream.readObject(c, a, "friend"));
    return b;
};

T5517.prototype._m25824 = function(c, a) {
    var b = new FriendDisconnectedNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setFriend(JsonInputStream.readObject(c, a, "friend"));
    return b;
};

T5517.prototype._m25825 = function(c, a) {
    var b = new NPlayerWallet().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    b.setNbCoins(JsonInputStream.readInteger(a, "NbCoins"));
    return b;
};

T5517.prototype._m25826 = function(c, a) {
    var b = new NItem().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    b.setPrice(JsonInputStream.readInteger(a, "Price"));
    b.setBought(JsonInputStream.readBoolean(a, "Bought"));
    b.setCount(JsonInputStream.readInteger(a, "Count"));
    b.setOrder(JsonInputStream.readInteger(a, "Order"));
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25827 = function(c, a) {
    var b = new NGameState().init(), e = [];
    if (!a.isNull("Updates")) for (var f = a.getJSONArray("Updates"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setUpdates(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25828 = function(c, a) {
    var b = new NMatchMakingConditions().init(), e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    b.setCustomObject(JsonInputStream.readObject(c, a, "CustomObject"));
    return b;
};

T5517.prototype._m25829 = function(c, a) {
    var b = new OpenConnection().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "IpAddress");
    b.setIpAddress(e);
    MemoryManagement.free(e);
    b.setTcpPort(JsonInputStream.readInteger(a, "TcpPort"));
    return b;
};

T5517.prototype._m25830 = function(c, a) {
    var b = new SlaveConnectionNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "sessionId");
    b.setSessionId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25831 = function(c, a) {
    var b = new PlayerMessage().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "systemID");
    b.setSystemID(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "targetID");
    b.setTargetID(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "OwnerID");
    b.setOwnerID(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "ApplicationID");
    b.setApplicationID(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "playerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    b.setMessage(JsonInputStream.readObject(c, a, "message"));
    return b;
};

T5517.prototype._m25832 = function(c, a) {
    var b = new NRawGameMessage().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "content");
    b.setContent(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25833 = function(c, a) {
    var b = new SessionExpired().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "sessionId");
    b.setSessionId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25834 = function(c, a) {
    var b = new GameMessageError().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Reason");
    b.setReason(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25835 = function(c, a) {
    var b = new NPlayerProfile().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Avatar");
    b.setAvatar(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Email");
    b.setEmail(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Country");
    b.setCountry(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("Friends")) for (var f = a.getJSONArray("Friends"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setFriends(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25836 = function(c, a) {
    var b = new FriendDemandNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setFriendDemand(JsonInputStream.readObject(c, a, "FriendDemand"));
    return b;
};

T5517.prototype._m25837 = function(c, a) {
    var b = new GameChatNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setPlayer(JsonInputStream.readObject(c, a, "player"));
    e = JsonInputStream.readString(a, "message");
    b.setMessage(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25838 = function(c, a) {
    var b = new SwitchToServerInformation().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Address");
    b.setAddress(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25839 = function(c, a) {
    var b = new SwitchPlayerRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SessionId");
    b.setSessionId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "playerIdsStored");
    b.setPlayerIdsStored(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25840 = function(c, a) {
    var b = new MyTurnNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25841 = function(c, a) {
    var b = new PlayerTurnNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setCurrentPlayer(JsonInputStream.readObject(c, a, "CurrentPlayer"));
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25842 = function(c, a) {
    var b = new NStore().init(), e = [];
    if (!a.isNull("Items")) for (var f = a.getJSONArray("Items"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setItems(e);
    return b;
};

T5517.prototype._m25843 = function(c, a) {
    var b = new NAchievementBoard().init(), e = [];
    if (!a.isNull("achievements")) for (var f = a.getJSONArray("achievements"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setAchievements(e);
    return b;
};

T5517.prototype._m25844 = function(c, a) {
    var b = new NLeaderboard().init(), e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Name");
    b.setName(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("leaderboardEntries")) for (var f = a.getJSONArray("leaderboardEntries"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setLeaderboardEntries(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25845 = function(c, a) {
    var b = new OpenUrl().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "url");
    b.setUrl(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25846 = function(c, a) {
    var b = new TurnBasedContext().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setCurrentPlayer(JsonInputStream.readObject(c, a, "CurrentPlayer"));
    return b;
};

T5517.prototype._m25847 = function(c, a) {
    var b = new DisconnectedContext().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("Participants")) for (var f = a.getJSONArray("Participants"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setParticipants(e);
    return b;
};

T5517.prototype._m25848 = function(c, a) {
    var b = new OpenUrlData().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SessionId");
    b.setSessionId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "CallbackId");
    b.setCallbackId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "CallbackUrl");
    b.setCallbackUrl(e);
    MemoryManagement.free(e);
    b.setThirdPartySource(JsonInputStream.readObject(c, a, "ThirdPartySource"));
    e = JsonInputStream.readString(a, "ThirdPartyId");
    b.setThirdPartyId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25849 = function(c, a) {
    var b = new NLeaderboardEntry().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    b.setTimestamp(JsonInputStream.readDouble(a, "Timestamp"));
    b.setPlayer(JsonInputStream.readObject(c, a, "Player"));
    b.setScore(JsonInputStream.readObject(c, a, "Score"));
    e = JsonInputStream.readString(a, "PlayerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerName");
    b.setPlayerName(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "PlayerAvatarPath");
    b.setPlayerAvatarPath(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25850 = function(c, a) {
    var b = new StartRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25851 = function(c, a) {
    var b = new StartResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setStartStatus(JsonInputStream.readObject(c, a, "StartStatus"));
    b.setStartDetails(JsonInputStream.readObject(c, a, "StartDetails"));
    b.setPlayerSessionType(JsonInputStream.readObject(c, a, "PlayerSessionType"));
    b.setPlayer(JsonInputStream.readObject(c, a, "Player"));
    return b;
};

T5517.prototype._m25852 = function(c, a) {
    var b = new NInvitation().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "Id");
    b.setId(e);
    MemoryManagement.free(e);
    b.setInviter(JsonInputStream.readObject(c, a, "Inviter"));
    b.setInvitee(JsonInputStream.readObject(c, a, "Invitee"));
    b.setContent(JsonInputStream.readObject(c, a, "Content"));
    b.setCreationTimeStamp(JsonInputStream.readDouble(a, "CreationTimeStamp"));
    b.setExpirationDelay(JsonInputStream.readDouble(a, "ExpirationDelay"));
    b.setStatus(JsonInputStream.readObject(c, a, "Status"));
    e = JsonInputStream.readString(a, "CustomData");
    b.setCustomData(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25853 = function(c, a) {
    var b = new NGameInvitation().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25854 = function(c, a) {
    var b = new InvitationRequestNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setInvitation(JsonInputStream.readObject(c, a, "Invitation"));
    return b;
};

T5517.prototype._m25855 = function(c, a) {
    var b = new InvitationAcceptedNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setInvitation(JsonInputStream.readObject(c, a, "Invitation"));
    return b;
};

T5517.prototype._m25856 = function(c, a) {
    var b = new InvitationRefusedNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setInvitation(JsonInputStream.readObject(c, a, "Invitation"));
    return b;
};

T5517.prototype._m25857 = function(c, a) {
    var b = new InvitationExpiredNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setInvitation(JsonInputStream.readObject(c, a, "Invitation"));
    return b;
};

T5517.prototype._m25858 = function(c, a) {
    var b = new NMatchAndJoinGameExpiredNotification().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "GameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25859 = function(c, a) {
    var b = new CreatePlayerRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "login");
    b.setLogin(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "password");
    b.setPassword(e);
    MemoryManagement.free(e);
    b.setPlayer(JsonInputStream.readObject(c, a, "player"));
    return b;
};

T5517.prototype._m25860 = function(c, a) {
    var b = new CreatePlayerResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setCreatePlayerStatus(JsonInputStream.readObject(c, a, "CreatePlayerStatus"));
    b.setPlayer(JsonInputStream.readObject(c, a, "player"));
    return b;
};

T5517.prototype._m25861 = function(c, a) {
    var b = new LoginRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "login");
    b.setLogin(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "password");
    b.setPassword(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25862 = function(c, a) {
    var b = new LoginResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setLoginStatus(JsonInputStream.readObject(c, a, "LoginStatus"));
    b.setPlayer(JsonInputStream.readObject(c, a, "player"));
    return b;
};

T5517.prototype._m25863 = function(c, a) {
    var b = new ThirdPartyLoginRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setThirdPartySource(JsonInputStream.readObject(c, a, "thirdPartySource"));
    e = JsonInputStream.readString(a, "accessToken");
    b.setAccessToken(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25864 = function(c, a) {
    var b = new ThirdPartyLoginResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setThirdPartyLoginStatus(JsonInputStream.readObject(c, a, "ThirdPartyLoginStatus"));
    b.setPlayer(JsonInputStream.readObject(c, a, "player"));
    return b;
};

T5517.prototype._m25865 = function(c, a) {
    var b = new LogoutRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25866 = function(c, a) {
    var b = new LogoutResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setLogoutStatus(JsonInputStream.readObject(c, a, "LogoutStatus"));
    b.setPlayer(JsonInputStream.readObject(c, a, "player"));
    return b;
};

T5517.prototype._m25867 = function(c, a) {
    var b = new ForgotPasswordRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "login");
    b.setLogin(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25868 = function(c, a) {
    var b = new ForgotPasswordResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setForgotPasswordStatus(JsonInputStream.readObject(c, a, "ForgotPasswordStatus"));
    return b;
};

T5517.prototype._m25869 = function(c, a) {
    var b = new SetPlayerNameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "name");
    b.setName(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25870 = function(c, a) {
    var b = new SetPlayerNameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSetPlayerNameStatus(JsonInputStream.readObject(c, a, "SetPlayerNameStatus"));
    return b;
};

T5517.prototype._m25871 = function(c, a) {
    var b = new GetFriendsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25872 = function(c, a) {
    var b = new GetFriendsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetFriendsStatus(JsonInputStream.readObject(c, a, "GetFriendsStatus"));
    e = [];
    if (!a.isNull("friends")) for (var f = a.getJSONArray("friends"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setFriends(e);
    return b;
};

T5517.prototype._m25873 = function(c, a) {
    var b = new AskForFriendRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "id");
    b.setId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25874 = function(c, a) {
    var b = new AskForFriendResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setAskForFriendStatus(JsonInputStream.readObject(c, a, "AskForFriendStatus"));
    return b;
};

T5517.prototype._m25875 = function(c, a) {
    var b = new GetFriendDemandsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25876 = function(c, a) {
    var b = new GetFriendDemandsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetFriendDemandsStatus(JsonInputStream.readObject(c, a, "GetFriendDemandsStatus"));
    e = [];
    if (!a.isNull("friendDemands")) for (var f = a.getJSONArray("friendDemands"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setFriendDemands(e);
    return b;
};

T5517.prototype._m25877 = function(c, a) {
    var b = new AcceptFriendDemandRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "friendDemandId");
    b.setFriendDemandId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25878 = function(c, a) {
    var b = new AcceptFriendDemandResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setAcceptFriendDemandStatus(JsonInputStream.readObject(c, a, "AcceptFriendDemandStatus"));
    e = JsonInputStream.readString(a, "friendDemandId");
    b.setFriendDemandId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25879 = function(c, a) {
    var b = new RefuseFriendDemandRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "friendDemandId");
    b.setFriendDemandId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25880 = function(c, a) {
    var b = new RefuseFriendDemandResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setRefuseFriendDemandStatus(JsonInputStream.readObject(c, a, "RefuseFriendDemandStatus"));
    e = JsonInputStream.readString(a, "friendDemandId");
    b.setFriendDemandId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25881 = function(c, a) {
    var b = new SubmitScoreRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setScore(JsonInputStream.readObject(c, a, "score"));
    e = JsonInputStream.readString(a, "leaderboardId");
    b.setLeaderboardId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25882 = function(c, a) {
    var b = new SubmitScoreResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSubmitScoreStatus(JsonInputStream.readObject(c, a, "SubmitScoreStatus"));
    return b;
};

T5517.prototype._m25883 = function(c, a) {
    var b = new GetScoresRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "leaderboardId");
    b.setLeaderboardId(e);
    MemoryManagement.free(e);
    b.setPeriod(JsonInputStream.readObject(c, a, "period"));
    b.setStart(JsonInputStream.readInteger(a, "start"));
    b.setLimit(JsonInputStream.readInteger(a, "limit"));
    return b;
};

T5517.prototype._m25884 = function(c, a) {
    var b = new GetScoresResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetScoresStatus(JsonInputStream.readObject(c, a, "GetScoresStatus"));
    e = JsonInputStream.readString(a, "leaderboardId");
    b.setLeaderboardId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "leaderboardName");
    b.setLeaderboardName(e);
    MemoryManagement.free(e);
    e = [];
    if (!a.isNull("scores")) for (var f = a.getJSONArray("scores"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setScores(e);
    return b;
};

T5517.prototype._m25885 = function(c, a) {
    var b = new GetAchievementsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25886 = function(c, a) {
    var b = new GetAchievementsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetAchievementsStatus(JsonInputStream.readObject(c, a, "GetAchievementsStatus"));
    e = [];
    if (!a.isNull("achievements")) for (var f = a.getJSONArray("achievements"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setAchievements(e);
    return b;
};

T5517.prototype._m25887 = function(c, a) {
    var b = new AchieveRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "achivementId");
    b.setAchivementId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25888 = function(c, a) {
    var b = new AchieveResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setAchieveStatus(JsonInputStream.readObject(c, a, "AchieveStatus"));
    e = JsonInputStream.readString(a, "achivementId");
    b.setAchivementId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25889 = function(c, a) {
    var b = new AchieveWithProgressRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "achivementId");
    b.setAchivementId(e);
    MemoryManagement.free(e);
    b.setValue(JsonInputStream.readInteger(a, "value"));
    return b;
};

T5517.prototype._m25890 = function(c, a) {
    var b = new AchieveWithProgressResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setAchieveWithProgressStatus(JsonInputStream.readObject(c, a, "AchieveWithProgressStatus"));
    e = JsonInputStream.readString(a, "achivementId");
    b.setAchivementId(e);
    MemoryManagement.free(e);
    b.setProgress(JsonInputStream.readInteger(a, "progress"));
    return b;
};

T5517.prototype._m25891 = function(c, a) {
    var b = new GetPlayerProfileRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25892 = function(c, a) {
    var b = new GetPlayerProfileResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetPlayerProfileStatus(JsonInputStream.readObject(c, a, "GetPlayerProfileStatus"));
    b.setProfile(JsonInputStream.readObject(c, a, "profile"));
    return b;
};

T5517.prototype._m25893 = function(c, a) {
    var b = new GetPlayerProfileByPlayerIdRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "playerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25894 = function(c, a) {
    var b = new GetPlayerProfileByPlayerIdResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetPlayerProfileByPlayerIdStatus(JsonInputStream.readObject(c, a, "GetPlayerProfileByPlayerIdStatus"));
    b.setProfile(JsonInputStream.readObject(c, a, "profile"));
    return b;
};

T5517.prototype._m25895 = function(c, a) {
    var b = new SavePlayerProfileRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setProfile(JsonInputStream.readObject(c, a, "profile"));
    return b;
};

T5517.prototype._m25896 = function(c, a) {
    var b = new SavePlayerProfileResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSavePlayerProfileStatus(JsonInputStream.readObject(c, a, "SavePlayerProfileStatus"));
    return b;
};

T5517.prototype._m25897 = function(c, a) {
    var b = new GetStorablesRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setDbQuery(JsonInputStream.readObject(c, a, "dbQuery"));
    return b;
};

T5517.prototype._m25898 = function(c, a) {
    var b = new GetStorablesResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetStorablesStatus(JsonInputStream.readObject(c, a, "GetStorablesStatus"));
    e = [];
    if (!a.isNull("storables")) for (var f = a.getJSONArray("storables"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setStorables(e);
    return b;
};

T5517.prototype._m25899 = function(c, a) {
    var b = new SaveStorableRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setStorable(JsonInputStream.readObject(c, a, "storable"));
    return b;
};

T5517.prototype._m25900 = function(c, a) {
    var b = new SaveStorableResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSaveStorableStatus(JsonInputStream.readObject(c, a, "SaveStorableStatus"));
    e = JsonInputStream.readString(a, "storableId");
    b.setStorableId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25901 = function(c, a) {
    var b = new UpdateStorableRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setStorable(JsonInputStream.readObject(c, a, "storable"));
    return b;
};

T5517.prototype._m25902 = function(c, a) {
    var b = new UpdateStorableResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setUpdateStorableStatus(JsonInputStream.readObject(c, a, "UpdateStorableStatus"));
    e = JsonInputStream.readString(a, "storableId");
    b.setStorableId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25903 = function(c, a) {
    var b = new RemoveStorableRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setStorable(JsonInputStream.readObject(c, a, "storable"));
    return b;
};

T5517.prototype._m25904 = function(c, a) {
    var b = new RemoveStorableResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setRemoveStorableStatus(JsonInputStream.readObject(c, a, "RemoveStorableStatus"));
    e = JsonInputStream.readString(a, "storableId");
    b.setStorableId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25905 = function(c, a) {
    var b = new GetItemsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25906 = function(c, a) {
    var b = new GetItemsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetItemsStatus(JsonInputStream.readObject(c, a, "GetItemsStatus"));
    e = [];
    if (!a.isNull("items")) for (var f = a.getJSONArray("items"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setItems(e);
    return b;
};

T5517.prototype._m25907 = function(c, a) {
    var b = new BuyItemRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "itemId");
    b.setItemId(e);
    MemoryManagement.free(e);
    b.setQuantity(JsonInputStream.readInteger(a, "quantity"));
    return b;
};

T5517.prototype._m25908 = function(c, a) {
    var b = new BuyItemResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setBuyItemStatus(JsonInputStream.readObject(c, a, "BuyItemStatus"));
    b.setBoughtItem(JsonInputStream.readObject(c, a, "boughtItem"));
    b.setQuantity(JsonInputStream.readInteger(a, "quantity"));
    return b;
};

T5517.prototype._m25909 = function(c, a) {
    var b = new ConsumeItemRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "itemId");
    b.setItemId(e);
    MemoryManagement.free(e);
    b.setQuantity(JsonInputStream.readInteger(a, "quantity"));
    return b;
};

T5517.prototype._m25910 = function(c, a) {
    var b = new ConsumeItemResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setConsumeItemStatus(JsonInputStream.readObject(c, a, "ConsumeItemStatus"));
    b.setConsumedItem(JsonInputStream.readObject(c, a, "consumedItem"));
    b.setQuantity(JsonInputStream.readInteger(a, "quantity"));
    return b;
};

T5517.prototype._m25911 = function(c, a) {
    var b = new IncreasePlayerWalletRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setValue(JsonInputStream.readInteger(a, "value"));
    return b;
};

T5517.prototype._m25912 = function(c, a) {
    var b = new IncreasePlayerWalletResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setIncreasePlayerWalletStatus(JsonInputStream.readObject(c, a, "IncreasePlayerWalletStatus"));
    b.setValue(JsonInputStream.readInteger(a, "value"));
    return b;
};

T5517.prototype._m25913 = function(c, a) {
    var b = new GetPlayerWalletRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25914 = function(c, a) {
    var b = new GetPlayerWalletResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetPlayerWalletStatus(JsonInputStream.readObject(c, a, "GetPlayerWalletStatus"));
    b.setWallet(JsonInputStream.readObject(c, a, "wallet"));
    return b;
};

T5517.prototype._m25915 = function(c, a) {
    var b = new JoinGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25916 = function(c, a) {
    var b = new JoinGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setJoinGameStatus(JsonInputStream.readObject(c, a, "JoinGameStatus"));
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25917 = function(c, a) {
    var b = new UnjoinGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25918 = function(c, a) {
    var b = new UnjoinGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setUnjoinGameStatus(JsonInputStream.readObject(c, a, "UnjoinGameStatus"));
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25919 = function(c, a) {
    var b = new StartGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25920 = function(c, a) {
    var b = new StartGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setStartGameStatus(JsonInputStream.readObject(c, a, "StartGameStatus"));
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25921 = function(c, a) {
    var b = new StopGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25922 = function(c, a) {
    var b = new StopGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setStopGameStatus(JsonInputStream.readObject(c, a, "StopGameStatus"));
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25923 = function(c, a) {
    var b = new CreateGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25924 = function(c, a) {
    var b = new CreateGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setCreateGameStatus(JsonInputStream.readObject(c, a, "CreateGameStatus"));
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25925 = function(c, a) {
    var b = new GetGamesRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setDbQuery(JsonInputStream.readObject(c, a, "dbQuery"));
    return b;
};

T5517.prototype._m25926 = function(c, a) {
    var b = new GetGamesResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetGamesStatus(JsonInputStream.readObject(c, a, "GetGamesStatus"));
    e = [];
    if (!a.isNull("games")) for (var f = a.getJSONArray("games"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setGames(e);
    return b;
};

T5517.prototype._m25927 = function(c, a) {
    var b = new SaveAsGhostRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25928 = function(c, a) {
    var b = new SaveAsGhostResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSaveAsGhostStatus(JsonInputStream.readObject(c, a, "SaveAsGhostStatus"));
    return b;
};

T5517.prototype._m25929 = function(c, a) {
    var b = new GetGhostsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setDbQuery(JsonInputStream.readObject(c, a, "dbQuery"));
    return b;
};

T5517.prototype._m25930 = function(c, a) {
    var b = new GetGhostsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetGhostsStatus(JsonInputStream.readObject(c, a, "GetGhostsStatus"));
    e = [];
    if (!a.isNull("ghosts")) for (var f = a.getJSONArray("ghosts"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setGhosts(e);
    return b;
};

T5517.prototype._m25931 = function(c, a) {
    var b = new LoadGhostRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25932 = function(c, a) {
    var b = new LoadGhostResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setLoadGhostStatus(JsonInputStream.readObject(c, a, "LoadGhostStatus"));
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25933 = function(c, a) {
    var b = new NextPlayerTurnRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25934 = function(c, a) {
    var b = new NextPlayerTurnResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setNextPlayerTurnStatus(JsonInputStream.readObject(c, a, "NextPlayerTurnStatus"));
    return b;
};

T5517.prototype._m25935 = function(c, a) {
    var b = new SaveGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25936 = function(c, a) {
    var b = new SaveGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSaveGameStatus(JsonInputStream.readObject(c, a, "SaveGameStatus"));
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25937 = function(c, a) {
    var b = new LoadGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25938 = function(c, a) {
    var b = new LoadGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setLoadGameStatus(JsonInputStream.readObject(c, a, "LoadGameStatus"));
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25939 = function(c, a) {
    var b = new SendGameChatRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "message");
    b.setMessage(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25940 = function(c, a) {
    var b = new SendGameChatResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSendGameChatStatus(JsonInputStream.readObject(c, a, "SendGameChatStatus"));
    return b;
};

T5517.prototype._m25941 = function(c, a) {
    var b = new SendGameChatToPlayerRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "playerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "message");
    b.setMessage(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25942 = function(c, a) {
    var b = new SendGameChatToPlayerResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSendGameChatToPlayerStatus(JsonInputStream.readObject(c, a, "SendGameChatToPlayerStatus"));
    return b;
};

T5517.prototype._m25943 = function(c, a) {
    var b = new SendGameChatToPlayerListRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "gameId");
    b.setGameId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "message");
    b.setMessage(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25944 = function(c, a) {
    var b = new SendGameChatToPlayerListResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setSendGameChatToPlayerListStatus(JsonInputStream.readObject(c, a, "SendGameChatToPlayerListStatus"));
    return b;
};

T5517.prototype._m25945 = function(c, a) {
    var b = new InvitePlayerRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "playerId");
    b.setPlayerId(e);
    MemoryManagement.free(e);
    b.setInvitation(JsonInputStream.readObject(c, a, "invitation"));
    return b;
};

T5517.prototype._m25946 = function(c, a) {
    var b = new InvitePlayerResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setInvitePlayerStatus(JsonInputStream.readObject(c, a, "InvitePlayerStatus"));
    e = JsonInputStream.readString(a, "invitationId");
    b.setInvitationId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25947 = function(c, a) {
    var b = new GetInvitationsRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setNuggetaQuery(JsonInputStream.readObject(c, a, "nuggetaQuery"));
    return b;
};

T5517.prototype._m25948 = function(c, a) {
    var b = new GetInvitationsResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetInvitationsStatus(JsonInputStream.readObject(c, a, "GetInvitationsStatus"));
    e = [];
    if (!a.isNull("invitations")) for (var f = a.getJSONArray("invitations"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setInvitations(e);
    return b;
};

T5517.prototype._m25949 = function(c, a) {
    var b = new AcceptInvitationRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "invitationId");
    b.setInvitationId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25950 = function(c, a) {
    var b = new AcceptInvitationResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setAcceptInvitationStatus(JsonInputStream.readObject(c, a, "AcceptInvitationStatus"));
    e = JsonInputStream.readString(a, "invitationId");
    b.setInvitationId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25951 = function(c, a) {
    var b = new RefuseInvitationRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "invitationId");
    b.setInvitationId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25952 = function(c, a) {
    var b = new RefuseInvitationResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setRefuseInvitationStatus(JsonInputStream.readObject(c, a, "RefuseInvitationStatus"));
    e = JsonInputStream.readString(a, "invitationId");
    b.setInvitationId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25953 = function(c, a) {
    var b = new PauseSessionMonitoringRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25954 = function(c, a) {
    var b = new PauseSessionMonitoringResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setPauseSessionMonitoringStatus(JsonInputStream.readObject(c, a, "PauseSessionMonitoringStatus"));
    return b;
};

T5517.prototype._m25955 = function(c, a) {
    var b = new ResumeSessionMonitoringRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    return b;
};

T5517.prototype._m25956 = function(c, a) {
    var b = new ResumeSessionMonitoringResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setResumeSessionMonitoringStatus(JsonInputStream.readObject(c, a, "ResumeSessionMonitoringStatus"));
    return b;
};

T5517.prototype._m25957 = function(c, a) {
    var b = new MatchAndJoinGameRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGamesQuery(JsonInputStream.readObject(c, a, "gamesQuery"));
    b.setMatchMakingConditions(JsonInputStream.readObject(c, a, "matchMakingConditions"));
    b.setTimeoutDelayMinPlayers(JsonInputStream.readInteger(a, "timeoutDelayMinPlayers"));
    return b;
};

T5517.prototype._m25958 = function(c, a) {
    var b = new MatchAndJoinGameResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setMatchAndJoinGameStatus(JsonInputStream.readObject(c, a, "MatchAndJoinGameStatus"));
    b.setGame(JsonInputStream.readObject(c, a, "game"));
    return b;
};

T5517.prototype._m25959 = function(c, a) {
    var b = new GetPlayersRequest().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setPlayersQuery(JsonInputStream.readObject(c, a, "playersQuery"));
    return b;
};

T5517.prototype._m25960 = function(c, a) {
    var b = new GetPlayersResponse().init(), e = JsonInputStream.readString(a, "StoreId");
    b.setStoreId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "SenderId");
    b.setSenderId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "MessageId");
    b.setMessageId(e);
    MemoryManagement.free(e);
    e = JsonInputStream.readString(a, "RequestId");
    b.setRequestId(e);
    MemoryManagement.free(e);
    b.setGetPlayersStatus(JsonInputStream.readObject(c, a, "GetPlayersStatus"));
    e = [];
    if (!a.isNull("players")) for (var f = a.getJSONArray("players"), d = 0; d < f.length(); d++) e.push(JsonInputStream.readObject(c, f.getJSONObject(d), null));
    b.setPlayers(e);
    return b;
};

AchieveResponse.prototype = new Message();

AchieveResponse.prototype.constructor = AchieveResponse;

AchieveResponse.prototype.init = function() {
    this._achivementIdSet = this._AchieveStatusSet = !1;
    return this;
};

AchieveResponse.prototype.getAchieveStatus = function() {
    return this._AchieveStatus;
};

AchieveResponse.prototype.setAchieveStatus = function(c) {
    this._AchieveStatus = c;
    this._AchieveStatusSet = !0;
};

AchieveResponse.prototype.isAchieveStatusSet = function() {
    return this._AchieveStatusSet;
};

AchieveResponse.prototype.unSetAchieveStatus = function() {
    this._AchieveStatusSet = !1;
};

AchieveResponse.prototype.getAchivementId = function() {
    return this._achivementId;
};

AchieveResponse.prototype.setAchivementId = function(c) {
    this._achivementId = c;
    this._achivementIdSet = !0;
};

AchieveResponse.prototype.isachivementIdSet = function() {
    return this._achivementIdSet;
};

AchieveResponse.prototype.unSetachivementId = function() {
    this._achivementIdSet = !1;
};

AchieveResponse.prototype.getDomainID = function() {
    return AchieveResponse.domainID;
};

AchieveResponse.prototype.getSerializerID = function() {
    return AchieveResponse.serializerID;
};

AchieveResponse.prototype.toString = function() {
    var c;
    c = "[AchieveResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._AchieveStatusSet && 0 == Utils.isNull(this._AchieveStatus) && (c += "_AchieveStatus=" + this._AchieveStatus + "| ");
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && (c += "_achivementId=" + this._achivementId + "| ");
    return c + "]";
};

AchieveResponse.prototype.clone = function() {
    var c = new AchieveResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._AchieveStatusSet && 0 == Utils.isNull(this._AchieveStatus) && c.setAchieveStatus(this._AchieveStatus);
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && c.setAchivementId(this._achivementId);
    return c;
};

AchieveResponse.domainID = 100;

AchieveResponse.serializerID = 10067;

AcceptInvitationStatus.values = function() {
    return AcceptInvitationStatus._values;
};

AcceptInvitationStatus.prototype.getValue = function() {
    return this._value;
};

AcceptInvitationStatus.prototype.name = function() {
    return this._name;
};

AcceptInvitationStatus.prototype.ordinal = function() {
    return this._value;
};

AcceptInvitationStatus.prototype.init = function(c, a) {
    void 0 == AcceptInvitationStatus._values && (AcceptInvitationStatus._values = []);
    this._value = a;
    this._name = c;
    AcceptInvitationStatus._values.push(this);
    return this;
};

AcceptInvitationStatus.fromValue = function(c) {
    for (var a = 0; a < AcceptInvitationStatus._values.length; a++) {
        var b = AcceptInvitationStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

AcceptInvitationStatus.valueOf = function(c) {
    for (var a = 0; a < AcceptInvitationStatus._values.length; a++) {
        var b = AcceptInvitationStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

AcceptInvitationStatus.prototype.getDomainID = function() {
    return 100;
};

AcceptInvitationStatus.prototype.getSerializerID = function() {
    return 10176;
};

AcceptInvitationStatus.prototype.toString = function() {
    return "AcceptInvitationStatus." + this._name;
};

AcceptInvitationStatus.prototype.clone = function() {
    return this;
};

AcceptInvitationStatus.INVALID_PARAMETERS = new AcceptInvitationStatus().init("INVALID_PARAMETERS", -2);

AcceptInvitationStatus.INTERNAL_ERROR = new AcceptInvitationStatus().init("INTERNAL_ERROR", -1);

AcceptInvitationStatus.SUCCESS = new AcceptInvitationStatus().init("SUCCESS", 0);

AcceptInvitationStatus.UNKNOWN_INVITATION_ID = new AcceptInvitationStatus().init("UNKNOWN_INVITATION_ID", 2);

AcceptInvitationStatus.ALREADY_ACCEPTED = new AcceptInvitationStatus().init("ALREADY_ACCEPTED", 3);

AcceptInvitationStatus.ALREADY_REFUSED = new AcceptInvitationStatus().init("ALREADY_REFUSED", 4);

AcceptInvitationStatus.NOT_THE_INVITEE = new AcceptInvitationStatus().init("NOT_THE_INVITEE", 5);

CreatePlayerRequest.prototype = new Message();

CreatePlayerRequest.prototype.constructor = CreatePlayerRequest;

CreatePlayerRequest.prototype.init = function() {
    this._playerSet = this._passwordSet = this._loginSet = !1;
    return this;
};

CreatePlayerRequest.prototype.getLogin = function() {
    return this._login;
};

CreatePlayerRequest.prototype.setLogin = function(c) {
    this._login = c;
    this._loginSet = !0;
};

CreatePlayerRequest.prototype.isloginSet = function() {
    return this._loginSet;
};

CreatePlayerRequest.prototype.unSetlogin = function() {
    this._loginSet = !1;
};

CreatePlayerRequest.prototype.getPassword = function() {
    return this._password;
};

CreatePlayerRequest.prototype.setPassword = function(c) {
    this._password = c;
    this._passwordSet = !0;
};

CreatePlayerRequest.prototype.ispasswordSet = function() {
    return this._passwordSet;
};

CreatePlayerRequest.prototype.unSetpassword = function() {
    this._passwordSet = !1;
};

CreatePlayerRequest.prototype.getPlayer = function() {
    return this._player;
};

CreatePlayerRequest.prototype.setPlayer = function(c) {
    this._player = c;
    this._playerSet = !0;
};

CreatePlayerRequest.prototype.isplayerSet = function() {
    return this._playerSet;
};

CreatePlayerRequest.prototype.unSetplayer = function() {
    this._playerSet = !1;
};

CreatePlayerRequest.prototype.getDomainID = function() {
    return CreatePlayerRequest.domainID;
};

CreatePlayerRequest.prototype.getSerializerID = function() {
    return CreatePlayerRequest.serializerID;
};

CreatePlayerRequest.prototype.toString = function() {
    var c;
    c = "[CreatePlayerRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._loginSet && 0 == Utils.isNull(this._login) && (c += "_login=" + this._login + "| ");
    1 == this._passwordSet && 0 == Utils.isNull(this._password) && (c += "_password=" + this._password + "| ");
    1 == this._playerSet && 0 == Utils.isNull(this._player) && (c += "_player=" + this._player + "| ");
    return c + "]";
};

CreatePlayerRequest.prototype.clone = function() {
    var c = new CreatePlayerRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._loginSet && 0 == Utils.isNull(this._login) && c.setLogin(this._login);
    1 == this._passwordSet && 0 == Utils.isNull(this._password) && c.setPassword(this._password);
    1 == this._playerSet && 0 == Utils.isNull(this._player) && c.setPlayer(this._player.clone());
    return c;
};

CreatePlayerRequest.domainID = 100;

CreatePlayerRequest.serializerID = 1e4;

T5528.prototype.init = function() {
    this._p13689 = [];
    return this;
};

T5528.prototype._m25032 = function() {
    for (var c = this._p13689.length, a = 0; a < c; a++) (0, this._p13689[a])();
};

T5528.prototype._m25033 = function() {
    return this._p13689;
};

T5528.prototype._m25034 = function(c) {
    this._p13689.push(c);
};

T5528.prototype._m25035 = function(c) {
    0 < this._p13689.length && (c = this._p13689.indexOf(c), 0 <= c && this._p13689.splice(this._p13689.indexOf(c), 1));
};

StringOutputStream.prototype.init = function() {
    return this;
};

StringOutputStream.writeObject = function(c, a, b) {
    var e = a.getDomainID(), f = c.getDomain(e);
    if (null == f) throw Error("No domain available for domain id " + e, null);
    f = f.getStringSerializerFactory();
    if (null == f) throw Error("No binary factory found in domain " + e, null);
    if (null == a) return !1;
    b.put(SerializationTypes.OBJECT);
    var d = b.position();
    b.skip(4);
    var h = b.position();
    b.putInt(e);
    e = a.getSerializerID();
    b.putShort(e);
    f.write(c, a, b);
    b.putIntAt(d, b.position() - h);
    return !0;
};

StringOutputStream.writeObjectProperty = function(c, a, b, e) {
    if (null == a) return !1;
    e.putShort(b);
    StringOutputStream.writeObject(c, a, e);
    return !0;
};

StringOutputStream.writeIntegerList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullInteger(d) ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeInteger(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeShortList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullShort(d) ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeShort(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeLongList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullLong(d) ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeLong(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeFloatList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullFloat(d) ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeFloat(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeDoubleList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullDouble(d) ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeDouble(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeBooleanList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        Utils.isNullBoolean(d) ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeBoolean(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeStringList = function(c, a, b) {
    if (null == c) return !1;
    b.putShort(a);
    b.put(SerializationTypes.LIST);
    a = b.position();
    b.skip(4);
    var e = c.length;
    b.putShort(e);
    for (var f = 0; f < e; f++) {
        var d = c[f];
        null == d ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeString(d, b);
    }
    b.putIntAt(a, b.position() - a);
    return !0;
};

StringOutputStream.writeStringProperty = function(c, a, b) {
    if (Utils.isNull(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeString(c, b);
    return !0;
};

StringOutputStream.writeString = function(c, a) {
    if (Utils.isNull(c)) return !1;
    a.put(SerializationTypes.STRING);
    a.putString(c);
    return !0;
};

StringOutputStream.writeDoubleProperty = function(c, a, b) {
    if (Utils.isNullDouble(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeDouble(c, b);
    return !0;
};

StringOutputStream.writeDouble = function(c, a) {
    if (Utils.isNullDouble(c)) return !1;
    a.put(SerializationTypes.DOUBLE);
    a.putDouble(c);
    return !0;
};

StringOutputStream.writeIntegerProperty = function(c, a, b) {
    if (Utils.isNullInteger(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeInteger(c, b);
    return !0;
};

StringOutputStream.writeInteger = function(c, a) {
    if (Utils.isNullInteger(c)) return !1;
    a.put(SerializationTypes.INTEGER);
    a.putInt(c);
    return !0;
};

StringOutputStream.writeDateProperty = function(c, a, b) {
    if (Utils.isNullDate(c)) return !1;
    StringOutputStream.writeLongProperty(c.getTime(), a, b);
    return !0;
};

StringOutputStream.writeLongProperty = function(c, a, b) {
    if (Utils.isNullLong(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeLong(c, b);
    return !0;
};

StringOutputStream.writeLong = function(c, a) {
    if (Utils.isNullLong(c)) return !1;
    a.put(SerializationTypes.LONG);
    a.putLong(c);
    return !0;
};

StringOutputStream.writeByte = function(c, a) {
    if (Utils.isNullByte(c)) return !1;
    a.put(SerializationTypes.BYTE);
    a.put(c);
    return !0;
};

StringOutputStream.writeShortProperty = function(c, a, b) {
    if (Utils.isNullShort(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeShort(c, b);
    return !0;
};

StringOutputStream.writeShort = function(c, a) {
    if (Utils.isNullShort(c)) return !1;
    a.put(SerializationTypes.SHORT);
    a.putShort(c);
    return !0;
};

StringOutputStream.writeFloatProperty = function(c, a, b) {
    if (Utils.isNullFloat(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeFloat(c, b);
    return !0;
};

StringOutputStream.writeFloat = function(c, a) {
    if (Utils.isNullFloat(c)) return !1;
    a.put(SerializationTypes.FLOAT);
    a.putFloat(c);
    return !0;
};

StringOutputStream.writeBooleanProperty = function(c, a, b) {
    if (Utils.isNullBoolean(c)) return !1;
    b.putShort(a);
    StringOutputStream.writeBoolean(c, b);
    return !0;
};

StringOutputStream.writeBoolean = function(c, a) {
    if (Utils.isNullBoolean(c)) return !1;
    a.put(SerializationTypes.BOOLEAN);
    1 == c ? a.put(1) : 0 == c && a.put(0);
    return !0;
};

StringOutputStream.writeNMatrix2 = function(c, a, b, e) {
    if (Utils.isNull(a)) return !1;
    e.putShort(b);
    e.put(SerializationTypes.NMATRIX2);
    b = e.position();
    e.skip(4);
    var f = a.getRowCount(), d = a.getColumnCount();
    e.putShort(f);
    e.putShort(d);
    for (var h = 0; h < f; h++) for (var g = 0; g < d; g++) {
        var k = a.getItem(h, g);
        Utils.isNull(k) ? e.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, e);
    }
    e.putIntAt(b, e.position() - b);
    return !0;
};

HeartBeatResponse.prototype = new Message();

HeartBeatResponse.prototype.constructor = HeartBeatResponse;

HeartBeatResponse.prototype.init = function() {
    this._CounterSet = !1;
    return this;
};

HeartBeatResponse.prototype.getCounter = function() {
    return this._Counter;
};

HeartBeatResponse.prototype.setCounter = function(c) {
    this._Counter = c;
    this._CounterSet = !0;
};

HeartBeatResponse.prototype.isCounterSet = function() {
    return this._CounterSet;
};

HeartBeatResponse.prototype.unSetCounter = function() {
    this._CounterSet = !1;
};

HeartBeatResponse.prototype.getDomainID = function() {
    return HeartBeatResponse.domainID;
};

HeartBeatResponse.prototype.getSerializerID = function() {
    return HeartBeatResponse.serializerID;
};

HeartBeatResponse.prototype.toString = function() {
    var c;
    c = "[HeartBeatResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._CounterSet && 0 == Utils.isNullInteger(this._Counter) && (c += "_Counter=" + this._Counter + "| ");
    return c + "]";
};

HeartBeatResponse.prototype.clone = function() {
    var c = new HeartBeatResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._CounterSet && 0 == Utils.isNullInteger(this._Counter) && c.setCounter(this._Counter);
    return c;
};

HeartBeatResponse.domainID = 0;

HeartBeatResponse.serializerID = 3003;

GetPlayerProfileRequest.prototype = new Message();

GetPlayerProfileRequest.prototype.constructor = GetPlayerProfileRequest;

GetPlayerProfileRequest.prototype.init = function() {
    return this;
};

GetPlayerProfileRequest.prototype.getDomainID = function() {
    return GetPlayerProfileRequest.domainID;
};

GetPlayerProfileRequest.prototype.getSerializerID = function() {
    return GetPlayerProfileRequest.serializerID;
};

GetPlayerProfileRequest.prototype.toString = function() {
    var c;
    c = "[GetPlayerProfileRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

GetPlayerProfileRequest.prototype.clone = function() {
    var c = new GetPlayerProfileRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

GetPlayerProfileRequest.domainID = 100;

GetPlayerProfileRequest.serializerID = 10015;

SwitchPlayerRequest.prototype = new Message();

SwitchPlayerRequest.prototype.constructor = SwitchPlayerRequest;

SwitchPlayerRequest.prototype.init = function() {
    this._playerIdsStoredSet = this._PlayerIdSet = this._SessionIdSet = !1;
    return this;
};

SwitchPlayerRequest.prototype.getSessionId = function() {
    return this._SessionId;
};

SwitchPlayerRequest.prototype.setSessionId = function(c) {
    this._SessionId = c;
    this._SessionIdSet = !0;
};

SwitchPlayerRequest.prototype.isSessionIdSet = function() {
    return this._SessionIdSet;
};

SwitchPlayerRequest.prototype.unSetSessionId = function() {
    this._SessionIdSet = !1;
};

SwitchPlayerRequest.prototype.getPlayerId = function() {
    return this._PlayerId;
};

SwitchPlayerRequest.prototype.setPlayerId = function(c) {
    this._PlayerId = c;
    this._PlayerIdSet = !0;
};

SwitchPlayerRequest.prototype.isPlayerIdSet = function() {
    return this._PlayerIdSet;
};

SwitchPlayerRequest.prototype.unSetPlayerId = function() {
    this._PlayerIdSet = !1;
};

SwitchPlayerRequest.prototype.getPlayerIdsStored = function() {
    return this._playerIdsStored;
};

SwitchPlayerRequest.prototype.setPlayerIdsStored = function(c) {
    this._playerIdsStored = c;
    this._playerIdsStoredSet = !0;
};

SwitchPlayerRequest.prototype.isplayerIdsStoredSet = function() {
    return this._playerIdsStoredSet;
};

SwitchPlayerRequest.prototype.unSetplayerIdsStored = function() {
    this._playerIdsStoredSet = !1;
};

SwitchPlayerRequest.prototype.getDomainID = function() {
    return SwitchPlayerRequest.domainID;
};

SwitchPlayerRequest.prototype.getSerializerID = function() {
    return SwitchPlayerRequest.serializerID;
};

SwitchPlayerRequest.prototype.toString = function() {
    var c;
    c = "[SwitchPlayerRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SessionIdSet && 0 == Utils.isNull(this._SessionId) && (c += "_SessionId=" + this._SessionId + "| ");
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && (c += "_PlayerId=" + this._PlayerId + "| ");
    1 == this._playerIdsStoredSet && 0 == Utils.isNull(this._playerIdsStored) && (c += "_playerIdsStored=" + this._playerIdsStored + "| ");
    return c + "]";
};

SwitchPlayerRequest.prototype.clone = function() {
    var c = new SwitchPlayerRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SessionIdSet && 0 == Utils.isNull(this._SessionId) && c.setSessionId(this._SessionId);
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && c.setPlayerId(this._PlayerId);
    1 == this._playerIdsStoredSet && 0 == Utils.isNull(this._playerIdsStored) && c.setPlayerIdsStored(this._playerIdsStored);
    return c;
};

SwitchPlayerRequest.domainID = 100;

SwitchPlayerRequest.serializerID = 3033;

AskForFriendRequest.prototype = new Message();

AskForFriendRequest.prototype.constructor = AskForFriendRequest;

AskForFriendRequest.prototype.init = function() {
    this._idSet = !1;
    return this;
};

AskForFriendRequest.prototype.getId = function() {
    return this._id;
};

AskForFriendRequest.prototype.setId = function(c) {
    this._id = c;
    this._idSet = !0;
};

AskForFriendRequest.prototype.isidSet = function() {
    return this._idSet;
};

AskForFriendRequest.prototype.unSetid = function() {
    this._idSet = !1;
};

AskForFriendRequest.prototype.getDomainID = function() {
    return AskForFriendRequest.domainID;
};

AskForFriendRequest.prototype.getSerializerID = function() {
    return AskForFriendRequest.serializerID;
};

AskForFriendRequest.prototype.toString = function() {
    var c;
    c = "[AskForFriendRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._idSet && 0 == Utils.isNull(this._id) && (c += "_id=" + this._id + "| ");
    return c + "]";
};

AskForFriendRequest.prototype.clone = function() {
    var c = new AskForFriendRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._idSet && 0 == Utils.isNull(this._id) && c.setId(this._id);
    return c;
};

AskForFriendRequest.domainID = 100;

AskForFriendRequest.serializerID = 11998;

NError.prototype.getMessage = function() {
    return this.errorMessage;
};

NError.prototype.getCause = function() {
    return this.cause;
};

NError.prototype.init = function(c, a) {
    this.errorMessage = c;
    this.cause = a;
    return this;
};

NError.prototype.toString = function() {
    var c = "Error Message : " + this.errorMessage;
    null != this.cause && (c += " cause : " + this.cause.toString());
    return c;
};

T5520.prototype.init = function(c, a, b) {
    var e = this;
    this._i18097 = new T5528().init();
    this._g18098 = new T5523().init();
    this._d18099 = new T5526().init();
    this._v18100 = new T5524().init();
    this._s18096 = T5529._s18143;
    this._f9006 = a;
    this._f9007 = b;
    this._j9010 = c;
    this._e18094 = function() {
        e._s18096 == T5529._w18145 && e._d18099._m25036();
        e._s18096 == T5529._f18146 && e._m25051();
    };
    e._t18093 = function() {
        e._s18096 == T5529._w18145 && e._d18099._m25036();
        e._s18096 == T5529._f18146 && e._m25051();
    };
    return this;
};

T5520.prototype._m25051 = function() {};

T5520.prototype._m25512 = function(c) {
    this._i18097._m25034(c);
};

T5520.prototype._m25513 = function(c) {
    this._i18097._m25035(c);
};

T5520.prototype._m25514 = function(c) {
    this._d18099._m25038(c);
};

T5520.prototype._m25515 = function(c) {
    this._d18099._m25039(c);
};

T5520.prototype._m25516 = function(c) {
    this._g18098._m25517(c);
};

T5520.prototype._m25518 = function(c) {
    this._g18098._m25519(c);
};

T5520.prototype._m25520 = function(c) {
    this._v18100._m25042(c);
};

T5520.prototype._m25521 = function(c) {
    this._v18100._m25043(c);
};

T5520.prototype._m25044 = function() {};

T5520.prototype._m25050 = function() {};

T5520.prototype._m25052 = function(c) {};

T5520.prototype._m25054 = function(c, a) {};

T5531.prototype = new T5520();

T5531.prototype.constructor = T5531;

T5531.prototype.init = function(c, a, b, e) {
    void 0 == T5531._f14299 && (T5531._f14299 = "x");
    this._x14295 = NLoggerFactory.getLogger("HttpConnection");
    T5520.prototype.init.call(this, c, a, b);
    this._x14295 = NLoggerFactory.getLogger("HttpConnection");
    this._o6334 = e;
    return this;
};

T5531.prototype._m25044 = function() {
    var c = this;
    if (this._s18096 == T5529._s18143) {
        this._s18096 = T5529._g18144;
        this._g14300 = new T5532().init(this._f9006, this._f9007, this._v18100, this._d18099);
        var a = new NHttpRequestImpl().init(), b = NSystem.currentTimeMillis();
        a.get(c._j9010, c._o6334 + "?init=init&p=" + T5531._f14299 + "&id=" + b, function(a) {
            c._s18096 == T5529._g18144 ? (c._g14297 = a, c._s18096 = T5529._w18145, c._i18097._m25032(), 
            c._m25046()) : c._x14295.error("invalid connection status");
        }, function() {
            c._s18096 == T5529._g18144 ? c._g18098._m25048() : c._x14295.error("invalid connection status");
        });
    }
};

T5531.prototype._m25046 = function() {
    var c = this;
    if (this._s18096 == T5529._w18145) {
        var a = new NHttpRequestImpl().init(), b = NSystem.currentTimeMillis();
        a.get(c._j9010, c._o6334 + "?session_id=" + c._g14297 + "&id=" + b + "&p=" + T5531._f14299 + "&send=p", function(a) {
            try {
                c._s18096 == T5529._w18145 && (null != a && 0 < a.length && "INVALID_SESSION_ID" == a ? c._d18099._m25036() : (c._g14300._m25049(a), 
                c._m25046()));
            } catch (b) {
                c._f14298 || (c._f14298 = !0, c._x14295.debugCause("can't poll: ", b), c._d18099._m25036());
            }
        }, function() {
            c._s18096 == T5529._w18145 && c._d18099._m25036();
        });
    }
};

T5531.prototype._m25050 = function() {
    this._s18096 != T5529._w18145 ? (this._s18096 = T5529._o18147, this._m25051()) : this._s18096 != T5529._g18144 ? (this._s18096 = T5529._o18147, 
    this._m25051()) : this._x14295.error("invalid status " + this._s18096);
};

T5531.prototype._m25051 = function() {};

T5531.prototype._m25052 = function(c) {
    this._s18096 == T5529._w18145 && this._m25053(c);
};

T5531.prototype._m25054 = function(c, a) {
    this._s18096 = T5529._f18146;
    this._m25053(c);
    try {
        this._f9007(a);
    } catch (b) {
        this._x14295.errorCause("Error occured while processing message : ", b);
    }
};

T5531.prototype._m25053 = function(c) {
    var a = this, b = new NHttpRequestImpl().init();
    c = a._g14300._m25055(c);
    var e = NSystem.currentTimeMillis();
    b.post(a._j9010, a._o6334 + "?session_id=" + a._g14297 + "&id=" + e + "&p=" + T5531._f14299 + "&send=send", c, function(a) {}, function() {
        a._s18096 == T5529._w18145 && a._d18099._m25036();
    });
};

IncreasePlayerWalletRequest.prototype = new Message();

IncreasePlayerWalletRequest.prototype.constructor = IncreasePlayerWalletRequest;

IncreasePlayerWalletRequest.prototype.init = function() {
    this._valueSet = !1;
    return this;
};

IncreasePlayerWalletRequest.prototype.getValue = function() {
    return this._value;
};

IncreasePlayerWalletRequest.prototype.setValue = function(c) {
    this._value = c;
    this._valueSet = !0;
};

IncreasePlayerWalletRequest.prototype.isvalueSet = function() {
    return this._valueSet;
};

IncreasePlayerWalletRequest.prototype.unSetvalue = function() {
    this._valueSet = !1;
};

IncreasePlayerWalletRequest.prototype.getDomainID = function() {
    return IncreasePlayerWalletRequest.domainID;
};

IncreasePlayerWalletRequest.prototype.getSerializerID = function() {
    return IncreasePlayerWalletRequest.serializerID;
};

IncreasePlayerWalletRequest.prototype.toString = function() {
    var c;
    c = "[IncreasePlayerWalletRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._valueSet && 0 == Utils.isNullInteger(this._value) && (c += "_value=" + this._value + "| ");
    return c + "]";
};

IncreasePlayerWalletRequest.prototype.clone = function() {
    var c = new IncreasePlayerWalletRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._valueSet && 0 == Utils.isNullInteger(this._value) && c.setValue(this._value);
    return c;
};

IncreasePlayerWalletRequest.domainID = 100;

IncreasePlayerWalletRequest.serializerID = 10057;

NuggetaGameCoreDispatcher.prototype.init = function() {
    this.globalListeners = [];
    this.CreatePlayerResponseHandlers = [];
    this.LoginResponseHandlers = [];
    this.ThirdPartyLoginResponseHandlers = [];
    this.LogoutResponseHandlers = [];
    this.ForgotPasswordResponseHandlers = [];
    this.SetPlayerNameResponseHandlers = [];
    this.GetFriendsResponseHandlers = [];
    this.AskForFriendResponseHandlers = [];
    this.GetFriendDemandsResponseHandlers = [];
    this.AcceptFriendDemandResponseHandlers = [];
    this.RefuseFriendDemandResponseHandlers = [];
    this.SubmitScoreResponseHandlers = [];
    this.GetScoresResponseHandlers = [];
    this.GetAchievementsResponseHandlers = [];
    this.AchieveResponseHandlers = [];
    this.AchieveWithProgressResponseHandlers = [];
    this.GetPlayerProfileResponseHandlers = [];
    this.GetPlayerProfileByPlayerIdResponseHandlers = [];
    this.SavePlayerProfileResponseHandlers = [];
    this.GetStorablesResponseHandlers = [];
    this.SaveStorableResponseHandlers = [];
    this.UpdateStorableResponseHandlers = [];
    this.RemoveStorableResponseHandlers = [];
    this.GetItemsResponseHandlers = [];
    this.BuyItemResponseHandlers = [];
    this.ConsumeItemResponseHandlers = [];
    this.IncreasePlayerWalletResponseHandlers = [];
    this.GetPlayerWalletResponseHandlers = [];
    this.JoinGameResponseHandlers = [];
    this.UnjoinGameResponseHandlers = [];
    this.StartGameResponseHandlers = [];
    this.StopGameResponseHandlers = [];
    this.CreateGameResponseHandlers = [];
    this.GetGamesResponseHandlers = [];
    this.SaveAsGhostResponseHandlers = [];
    this.GetGhostsResponseHandlers = [];
    this.LoadGhostResponseHandlers = [];
    this.NextPlayerTurnResponseHandlers = [];
    this.SaveGameResponseHandlers = [];
    this.LoadGameResponseHandlers = [];
    this.SendGameChatResponseHandlers = [];
    this.SendGameChatToPlayerResponseHandlers = [];
    this.SendGameChatToPlayerListResponseHandlers = [];
    this.InvitePlayerResponseHandlers = [];
    this.GetInvitationsResponseHandlers = [];
    this.AcceptInvitationResponseHandlers = [];
    this.RefuseInvitationResponseHandlers = [];
    this.PauseSessionMonitoringResponseHandlers = [];
    this.ResumeSessionMonitoringResponseHandlers = [];
    this.MatchAndJoinGameResponseHandlers = [];
    this.GetPlayersResponseHandlers = [];
    this.PlayerEnterGameHandlers = [];
    this.PlayerUnjoinGameHandlers = [];
    this.FriendshipNotificationHandlers = [];
    this.FriendConnectedNotificationHandlers = [];
    this.FriendDisconnectedNotificationHandlers = [];
    this.SessionExpiredHandlers = [];
    this.FriendDemandNotificationHandlers = [];
    this.GameChatNotificationHandlers = [];
    this.MyTurnNotificationHandlers = [];
    this.PlayerTurnNotificationHandlers = [];
    this.StartResponseHandlers = [];
    this.InvitationRequestNotificationHandlers = [];
    this.InvitationAcceptedNotificationHandlers = [];
    this.InvitationRefusedNotificationHandlers = [];
    this.InvitationExpiredNotificationHandlers = [];
    this.NRawGameMessageHandlers = [];
    this.GameRunningStateChangeHandlers = [];
    this.NMatchAndJoinGameExpiredNotificationHandlers = [];
    return this;
};

NuggetaGameCoreDispatcher.prototype.fireMessage = function(c) {
    if (c.getSerializerID() == CreatePlayerResponse.serializerID) {
        for (var a = 0; a < this.globalListeners.length; a++) (0, this.globalListeners[a])(MemoryManagement._clone(c));
        for (var b = 0; b < this.CreatePlayerResponseHandlers.length; b++) (0, this.CreatePlayerResponseHandlers[b])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == LoginResponse.serializerID) {
        for (var e = 0; e < this.globalListeners.length; e++) (0, this.globalListeners[e])(MemoryManagement._clone(c));
        for (var f = 0; f < this.LoginResponseHandlers.length; f++) (0, this.LoginResponseHandlers[f])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == ThirdPartyLoginResponse.serializerID) {
        for (var d = 0; d < this.globalListeners.length; d++) (0, this.globalListeners[d])(MemoryManagement._clone(c));
        for (var h = 0; h < this.ThirdPartyLoginResponseHandlers.length; h++) (0, this.ThirdPartyLoginResponseHandlers[h])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == LogoutResponse.serializerID) {
        for (var g = 0; g < this.globalListeners.length; g++) (0, this.globalListeners[g])(MemoryManagement._clone(c));
        for (var k = 0; k < this.LogoutResponseHandlers.length; k++) (0, this.LogoutResponseHandlers[k])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == ForgotPasswordResponse.serializerID) {
        for (var l = 0; l < this.globalListeners.length; l++) (0, this.globalListeners[l])(MemoryManagement._clone(c));
        for (var m = 0; m < this.ForgotPasswordResponseHandlers.length; m++) (0, this.ForgotPasswordResponseHandlers[m])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SetPlayerNameResponse.serializerID) {
        for (var n = 0; n < this.globalListeners.length; n++) (0, this.globalListeners[n])(MemoryManagement._clone(c));
        for (var p = 0; p < this.SetPlayerNameResponseHandlers.length; p++) (0, this.SetPlayerNameResponseHandlers[p])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetFriendsResponse.serializerID) {
        for (var q = 0; q < this.globalListeners.length; q++) (0, this.globalListeners[q])(MemoryManagement._clone(c));
        for (var r = 0; r < this.GetFriendsResponseHandlers.length; r++) (0, this.GetFriendsResponseHandlers[r])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == AskForFriendResponse.serializerID) {
        for (var t = 0; t < this.globalListeners.length; t++) (0, this.globalListeners[t])(MemoryManagement._clone(c));
        for (var u = 0; u < this.AskForFriendResponseHandlers.length; u++) (0, this.AskForFriendResponseHandlers[u])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetFriendDemandsResponse.serializerID) {
        for (var v = 0; v < this.globalListeners.length; v++) (0, this.globalListeners[v])(MemoryManagement._clone(c));
        for (var w = 0; w < this.GetFriendDemandsResponseHandlers.length; w++) (0, this.GetFriendDemandsResponseHandlers[w])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == AcceptFriendDemandResponse.serializerID) {
        for (var x = 0; x < this.globalListeners.length; x++) (0, this.globalListeners[x])(MemoryManagement._clone(c));
        for (var y = 0; y < this.AcceptFriendDemandResponseHandlers.length; y++) (0, this.AcceptFriendDemandResponseHandlers[y])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == RefuseFriendDemandResponse.serializerID) {
        for (var z = 0; z < this.globalListeners.length; z++) (0, this.globalListeners[z])(MemoryManagement._clone(c));
        for (var A = 0; A < this.RefuseFriendDemandResponseHandlers.length; A++) (0, this.RefuseFriendDemandResponseHandlers[A])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SubmitScoreResponse.serializerID) {
        for (var B = 0; B < this.globalListeners.length; B++) (0, this.globalListeners[B])(MemoryManagement._clone(c));
        for (var C = 0; C < this.SubmitScoreResponseHandlers.length; C++) (0, this.SubmitScoreResponseHandlers[C])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetScoresResponse.serializerID) {
        for (var D = 0; D < this.globalListeners.length; D++) (0, this.globalListeners[D])(MemoryManagement._clone(c));
        for (var E = 0; E < this.GetScoresResponseHandlers.length; E++) (0, this.GetScoresResponseHandlers[E])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetAchievementsResponse.serializerID) {
        for (var F = 0; F < this.globalListeners.length; F++) (0, this.globalListeners[F])(MemoryManagement._clone(c));
        for (var G = 0; G < this.GetAchievementsResponseHandlers.length; G++) (0, this.GetAchievementsResponseHandlers[G])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == AchieveResponse.serializerID) {
        for (var H = 0; H < this.globalListeners.length; H++) (0, this.globalListeners[H])(MemoryManagement._clone(c));
        for (var I = 0; I < this.AchieveResponseHandlers.length; I++) (0, this.AchieveResponseHandlers[I])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == AchieveWithProgressResponse.serializerID) {
        for (var J = 0; J < this.globalListeners.length; J++) (0, this.globalListeners[J])(MemoryManagement._clone(c));
        for (var K = 0; K < this.AchieveWithProgressResponseHandlers.length; K++) (0, this.AchieveWithProgressResponseHandlers[K])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetPlayerProfileResponse.serializerID) {
        for (var L = 0; L < this.globalListeners.length; L++) (0, this.globalListeners[L])(MemoryManagement._clone(c));
        for (var M = 0; M < this.GetPlayerProfileResponseHandlers.length; M++) (0, this.GetPlayerProfileResponseHandlers[M])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetPlayerProfileByPlayerIdResponse.serializerID) {
        for (var N = 0; N < this.globalListeners.length; N++) (0, this.globalListeners[N])(MemoryManagement._clone(c));
        for (var O = 0; O < this.GetPlayerProfileByPlayerIdResponseHandlers.length; O++) (0, 
        this.GetPlayerProfileByPlayerIdResponseHandlers[O])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SavePlayerProfileResponse.serializerID) {
        for (var P = 0; P < this.globalListeners.length; P++) (0, this.globalListeners[P])(MemoryManagement._clone(c));
        for (var Q = 0; Q < this.SavePlayerProfileResponseHandlers.length; Q++) (0, this.SavePlayerProfileResponseHandlers[Q])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetStorablesResponse.serializerID) {
        for (var R = 0; R < this.globalListeners.length; R++) (0, this.globalListeners[R])(MemoryManagement._clone(c));
        for (var S = 0; S < this.GetStorablesResponseHandlers.length; S++) (0, this.GetStorablesResponseHandlers[S])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SaveStorableResponse.serializerID) {
        for (var T = 0; T < this.globalListeners.length; T++) (0, this.globalListeners[T])(MemoryManagement._clone(c));
        for (var U = 0; U < this.SaveStorableResponseHandlers.length; U++) (0, this.SaveStorableResponseHandlers[U])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == UpdateStorableResponse.serializerID) {
        for (var V = 0; V < this.globalListeners.length; V++) (0, this.globalListeners[V])(MemoryManagement._clone(c));
        for (var W = 0; W < this.UpdateStorableResponseHandlers.length; W++) (0, this.UpdateStorableResponseHandlers[W])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == RemoveStorableResponse.serializerID) {
        for (var X = 0; X < this.globalListeners.length; X++) (0, this.globalListeners[X])(MemoryManagement._clone(c));
        for (var Y = 0; Y < this.RemoveStorableResponseHandlers.length; Y++) (0, this.RemoveStorableResponseHandlers[Y])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetItemsResponse.serializerID) {
        for (var Z = 0; Z < this.globalListeners.length; Z++) (0, this.globalListeners[Z])(MemoryManagement._clone(c));
        for (var aa = 0; aa < this.GetItemsResponseHandlers.length; aa++) (0, this.GetItemsResponseHandlers[aa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == BuyItemResponse.serializerID) {
        for (var ba = 0; ba < this.globalListeners.length; ba++) (0, this.globalListeners[ba])(MemoryManagement._clone(c));
        for (var ca = 0; ca < this.BuyItemResponseHandlers.length; ca++) (0, this.BuyItemResponseHandlers[ca])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == ConsumeItemResponse.serializerID) {
        for (var da = 0; da < this.globalListeners.length; da++) (0, this.globalListeners[da])(MemoryManagement._clone(c));
        for (var ea = 0; ea < this.ConsumeItemResponseHandlers.length; ea++) (0, this.ConsumeItemResponseHandlers[ea])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == IncreasePlayerWalletResponse.serializerID) {
        for (var fa = 0; fa < this.globalListeners.length; fa++) (0, this.globalListeners[fa])(MemoryManagement._clone(c));
        for (var ga = 0; ga < this.IncreasePlayerWalletResponseHandlers.length; ga++) (0, 
        this.IncreasePlayerWalletResponseHandlers[ga])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetPlayerWalletResponse.serializerID) {
        for (var ha = 0; ha < this.globalListeners.length; ha++) (0, this.globalListeners[ha])(MemoryManagement._clone(c));
        for (var ia = 0; ia < this.GetPlayerWalletResponseHandlers.length; ia++) (0, this.GetPlayerWalletResponseHandlers[ia])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == JoinGameResponse.serializerID) {
        for (var ja = 0; ja < this.globalListeners.length; ja++) (0, this.globalListeners[ja])(MemoryManagement._clone(c));
        for (var ka = 0; ka < this.JoinGameResponseHandlers.length; ka++) (0, this.JoinGameResponseHandlers[ka])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == UnjoinGameResponse.serializerID) {
        for (var la = 0; la < this.globalListeners.length; la++) (0, this.globalListeners[la])(MemoryManagement._clone(c));
        for (var ma = 0; ma < this.UnjoinGameResponseHandlers.length; ma++) (0, this.UnjoinGameResponseHandlers[ma])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == StartGameResponse.serializerID) {
        for (var na = 0; na < this.globalListeners.length; na++) (0, this.globalListeners[na])(MemoryManagement._clone(c));
        for (var oa = 0; oa < this.StartGameResponseHandlers.length; oa++) (0, this.StartGameResponseHandlers[oa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == StopGameResponse.serializerID) {
        for (var pa = 0; pa < this.globalListeners.length; pa++) (0, this.globalListeners[pa])(MemoryManagement._clone(c));
        for (var qa = 0; qa < this.StopGameResponseHandlers.length; qa++) (0, this.StopGameResponseHandlers[qa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == CreateGameResponse.serializerID) {
        for (var ra = 0; ra < this.globalListeners.length; ra++) (0, this.globalListeners[ra])(MemoryManagement._clone(c));
        for (var sa = 0; sa < this.CreateGameResponseHandlers.length; sa++) (0, this.CreateGameResponseHandlers[sa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetGamesResponse.serializerID) {
        for (var ta = 0; ta < this.globalListeners.length; ta++) (0, this.globalListeners[ta])(MemoryManagement._clone(c));
        for (var ua = 0; ua < this.GetGamesResponseHandlers.length; ua++) (0, this.GetGamesResponseHandlers[ua])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SaveAsGhostResponse.serializerID) {
        for (var va = 0; va < this.globalListeners.length; va++) (0, this.globalListeners[va])(MemoryManagement._clone(c));
        for (var wa = 0; wa < this.SaveAsGhostResponseHandlers.length; wa++) (0, this.SaveAsGhostResponseHandlers[wa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetGhostsResponse.serializerID) {
        for (var xa = 0; xa < this.globalListeners.length; xa++) (0, this.globalListeners[xa])(MemoryManagement._clone(c));
        for (var ya = 0; ya < this.GetGhostsResponseHandlers.length; ya++) (0, this.GetGhostsResponseHandlers[ya])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == LoadGhostResponse.serializerID) {
        for (var za = 0; za < this.globalListeners.length; za++) (0, this.globalListeners[za])(MemoryManagement._clone(c));
        for (var Aa = 0; Aa < this.LoadGhostResponseHandlers.length; Aa++) (0, this.LoadGhostResponseHandlers[Aa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == NextPlayerTurnResponse.serializerID) {
        for (var Ba = 0; Ba < this.globalListeners.length; Ba++) (0, this.globalListeners[Ba])(MemoryManagement._clone(c));
        for (var Ca = 0; Ca < this.NextPlayerTurnResponseHandlers.length; Ca++) (0, this.NextPlayerTurnResponseHandlers[Ca])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SaveGameResponse.serializerID) {
        for (var Da = 0; Da < this.globalListeners.length; Da++) (0, this.globalListeners[Da])(MemoryManagement._clone(c));
        for (var Ea = 0; Ea < this.SaveGameResponseHandlers.length; Ea++) (0, this.SaveGameResponseHandlers[Ea])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == LoadGameResponse.serializerID) {
        for (var Fa = 0; Fa < this.globalListeners.length; Fa++) (0, this.globalListeners[Fa])(MemoryManagement._clone(c));
        for (var Ga = 0; Ga < this.LoadGameResponseHandlers.length; Ga++) (0, this.LoadGameResponseHandlers[Ga])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SendGameChatResponse.serializerID) {
        for (var Ha = 0; Ha < this.globalListeners.length; Ha++) (0, this.globalListeners[Ha])(MemoryManagement._clone(c));
        for (var Ia = 0; Ia < this.SendGameChatResponseHandlers.length; Ia++) (0, this.SendGameChatResponseHandlers[Ia])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SendGameChatToPlayerResponse.serializerID) {
        for (var Ja = 0; Ja < this.globalListeners.length; Ja++) (0, this.globalListeners[Ja])(MemoryManagement._clone(c));
        for (var Ka = 0; Ka < this.SendGameChatToPlayerResponseHandlers.length; Ka++) (0, 
        this.SendGameChatToPlayerResponseHandlers[Ka])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SendGameChatToPlayerListResponse.serializerID) {
        for (var La = 0; La < this.globalListeners.length; La++) (0, this.globalListeners[La])(MemoryManagement._clone(c));
        for (var Ma = 0; Ma < this.SendGameChatToPlayerListResponseHandlers.length; Ma++) (0, 
        this.SendGameChatToPlayerListResponseHandlers[Ma])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == InvitePlayerResponse.serializerID) {
        for (var Na = 0; Na < this.globalListeners.length; Na++) (0, this.globalListeners[Na])(MemoryManagement._clone(c));
        for (var Oa = 0; Oa < this.InvitePlayerResponseHandlers.length; Oa++) (0, this.InvitePlayerResponseHandlers[Oa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetInvitationsResponse.serializerID) {
        for (var Pa = 0; Pa < this.globalListeners.length; Pa++) (0, this.globalListeners[Pa])(MemoryManagement._clone(c));
        for (var Qa = 0; Qa < this.GetInvitationsResponseHandlers.length; Qa++) (0, this.GetInvitationsResponseHandlers[Qa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == AcceptInvitationResponse.serializerID) {
        for (var Ra = 0; Ra < this.globalListeners.length; Ra++) (0, this.globalListeners[Ra])(MemoryManagement._clone(c));
        for (var Sa = 0; Sa < this.AcceptInvitationResponseHandlers.length; Sa++) (0, this.AcceptInvitationResponseHandlers[Sa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == RefuseInvitationResponse.serializerID) {
        for (var Ta = 0; Ta < this.globalListeners.length; Ta++) (0, this.globalListeners[Ta])(MemoryManagement._clone(c));
        for (var Ua = 0; Ua < this.RefuseInvitationResponseHandlers.length; Ua++) (0, this.RefuseInvitationResponseHandlers[Ua])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == PauseSessionMonitoringResponse.serializerID) {
        for (var Va = 0; Va < this.globalListeners.length; Va++) (0, this.globalListeners[Va])(MemoryManagement._clone(c));
        for (var Wa = 0; Wa < this.PauseSessionMonitoringResponseHandlers.length; Wa++) (0, 
        this.PauseSessionMonitoringResponseHandlers[Wa])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == ResumeSessionMonitoringResponse.serializerID) {
        for (var Xa = 0; Xa < this.globalListeners.length; Xa++) (0, this.globalListeners[Xa])(MemoryManagement._clone(c));
        for (var Ya = 0; Ya < this.ResumeSessionMonitoringResponseHandlers.length; Ya++) (0, 
        this.ResumeSessionMonitoringResponseHandlers[Ya])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == MatchAndJoinGameResponse.serializerID) {
        for (var Za = 0; Za < this.globalListeners.length; Za++) (0, this.globalListeners[Za])(MemoryManagement._clone(c));
        for (var $a = 0; $a < this.MatchAndJoinGameResponseHandlers.length; $a++) (0, this.MatchAndJoinGameResponseHandlers[$a])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GetPlayersResponse.serializerID) {
        for (var ab = 0; ab < this.globalListeners.length; ab++) (0, this.globalListeners[ab])(MemoryManagement._clone(c));
        for (var bb = 0; bb < this.GetPlayersResponseHandlers.length; bb++) (0, this.GetPlayersResponseHandlers[bb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == PlayerEnterGame.serializerID) {
        for (var cb = 0; cb < this.globalListeners.length; cb++) (0, this.globalListeners[cb])(MemoryManagement._clone(c));
        for (var db = 0; db < this.PlayerEnterGameHandlers.length; db++) (0, this.PlayerEnterGameHandlers[db])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == PlayerUnjoinGame.serializerID) {
        for (var eb = 0; eb < this.globalListeners.length; eb++) (0, this.globalListeners[eb])(MemoryManagement._clone(c));
        for (var fb = 0; fb < this.PlayerUnjoinGameHandlers.length; fb++) (0, this.PlayerUnjoinGameHandlers[fb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == FriendshipNotification.serializerID) {
        for (var gb = 0; gb < this.globalListeners.length; gb++) (0, this.globalListeners[gb])(MemoryManagement._clone(c));
        for (var hb = 0; hb < this.FriendshipNotificationHandlers.length; hb++) (0, this.FriendshipNotificationHandlers[hb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == FriendConnectedNotification.serializerID) {
        for (var ib = 0; ib < this.globalListeners.length; ib++) (0, this.globalListeners[ib])(MemoryManagement._clone(c));
        for (var jb = 0; jb < this.FriendConnectedNotificationHandlers.length; jb++) (0, 
        this.FriendConnectedNotificationHandlers[jb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == FriendDisconnectedNotification.serializerID) {
        for (var kb = 0; kb < this.globalListeners.length; kb++) (0, this.globalListeners[kb])(MemoryManagement._clone(c));
        for (var lb = 0; lb < this.FriendDisconnectedNotificationHandlers.length; lb++) (0, 
        this.FriendDisconnectedNotificationHandlers[lb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == SessionExpired.serializerID) {
        for (var mb = 0; mb < this.globalListeners.length; mb++) (0, this.globalListeners[mb])(MemoryManagement._clone(c));
        for (var nb = 0; nb < this.SessionExpiredHandlers.length; nb++) (0, this.SessionExpiredHandlers[nb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == FriendDemandNotification.serializerID) {
        for (var ob = 0; ob < this.globalListeners.length; ob++) (0, this.globalListeners[ob])(MemoryManagement._clone(c));
        for (var pb = 0; pb < this.FriendDemandNotificationHandlers.length; pb++) (0, this.FriendDemandNotificationHandlers[pb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GameChatNotification.serializerID) {
        for (var qb = 0; qb < this.globalListeners.length; qb++) (0, this.globalListeners[qb])(MemoryManagement._clone(c));
        for (var rb = 0; rb < this.GameChatNotificationHandlers.length; rb++) (0, this.GameChatNotificationHandlers[rb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == MyTurnNotification.serializerID) {
        for (var sb = 0; sb < this.globalListeners.length; sb++) (0, this.globalListeners[sb])(MemoryManagement._clone(c));
        for (var tb = 0; tb < this.MyTurnNotificationHandlers.length; tb++) (0, this.MyTurnNotificationHandlers[tb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == PlayerTurnNotification.serializerID) {
        for (var ub = 0; ub < this.globalListeners.length; ub++) (0, this.globalListeners[ub])(MemoryManagement._clone(c));
        for (var vb = 0; vb < this.PlayerTurnNotificationHandlers.length; vb++) (0, this.PlayerTurnNotificationHandlers[vb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == StartResponse.serializerID) {
        for (var wb = 0; wb < this.globalListeners.length; wb++) (0, this.globalListeners[wb])(MemoryManagement._clone(c));
        for (var xb = 0; xb < this.StartResponseHandlers.length; xb++) (0, this.StartResponseHandlers[xb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == InvitationRequestNotification.serializerID) {
        for (var yb = 0; yb < this.globalListeners.length; yb++) (0, this.globalListeners[yb])(MemoryManagement._clone(c));
        for (var zb = 0; zb < this.InvitationRequestNotificationHandlers.length; zb++) (0, 
        this.InvitationRequestNotificationHandlers[zb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == InvitationAcceptedNotification.serializerID) {
        for (var Ab = 0; Ab < this.globalListeners.length; Ab++) (0, this.globalListeners[Ab])(MemoryManagement._clone(c));
        for (var Bb = 0; Bb < this.InvitationAcceptedNotificationHandlers.length; Bb++) (0, 
        this.InvitationAcceptedNotificationHandlers[Bb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == InvitationRefusedNotification.serializerID) {
        for (var Cb = 0; Cb < this.globalListeners.length; Cb++) (0, this.globalListeners[Cb])(MemoryManagement._clone(c));
        for (var Db = 0; Db < this.InvitationRefusedNotificationHandlers.length; Db++) (0, 
        this.InvitationRefusedNotificationHandlers[Db])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == InvitationExpiredNotification.serializerID) {
        for (var Eb = 0; Eb < this.globalListeners.length; Eb++) (0, this.globalListeners[Eb])(MemoryManagement._clone(c));
        for (var Fb = 0; Fb < this.InvitationExpiredNotificationHandlers.length; Fb++) (0, 
        this.InvitationExpiredNotificationHandlers[Fb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == NRawGameMessage.serializerID) {
        for (var Gb = 0; Gb < this.globalListeners.length; Gb++) (0, this.globalListeners[Gb])(MemoryManagement._clone(c));
        for (var Hb = 0; Hb < this.NRawGameMessageHandlers.length; Hb++) (0, this.NRawGameMessageHandlers[Hb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == GameRunningStateChange.serializerID) {
        for (var Ib = 0; Ib < this.globalListeners.length; Ib++) (0, this.globalListeners[Ib])(MemoryManagement._clone(c));
        for (var Jb = 0; Jb < this.GameRunningStateChangeHandlers.length; Jb++) (0, this.GameRunningStateChangeHandlers[Jb])(MemoryManagement._clone(c));
    } else if (c.getSerializerID() == NMatchAndJoinGameExpiredNotification.serializerID) {
        for (var Kb = 0; Kb < this.globalListeners.length; Kb++) (0, this.globalListeners[Kb])(MemoryManagement._clone(c));
        for (var Lb = 0; Lb < this.NMatchAndJoinGameExpiredNotificationHandlers.length; Lb++) (0, 
        this.NMatchAndJoinGameExpiredNotificationHandlers[Lb])(MemoryManagement._clone(c));
    }
};

NuggetaGameCoreDispatcher.prototype.addNuggetaGameCoreMessageListener = function(c) {
    this.globalListeners.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeNuggetaGameCoreMessageListener = function(c) {
    this.globalListeners.splice(this.globalListeners.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addCreatePlayerResponseHandler = function(c) {
    this.CreatePlayerResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeCreatePlayerResponseHandler = function(c) {
    this.CreatePlayerResponseHandlers.splice(this.CreatePlayerResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addLoginResponseHandler = function(c) {
    this.LoginResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeLoginResponseHandler = function(c) {
    this.LoginResponseHandlers.splice(this.LoginResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addThirdPartyLoginResponseHandler = function(c) {
    this.ThirdPartyLoginResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeThirdPartyLoginResponseHandler = function(c) {
    this.ThirdPartyLoginResponseHandlers.splice(this.ThirdPartyLoginResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addLogoutResponseHandler = function(c) {
    this.LogoutResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeLogoutResponseHandler = function(c) {
    this.LogoutResponseHandlers.splice(this.LogoutResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addForgotPasswordResponseHandler = function(c) {
    this.ForgotPasswordResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeForgotPasswordResponseHandler = function(c) {
    this.ForgotPasswordResponseHandlers.splice(this.ForgotPasswordResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSetPlayerNameResponseHandler = function(c) {
    this.SetPlayerNameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSetPlayerNameResponseHandler = function(c) {
    this.SetPlayerNameResponseHandlers.splice(this.SetPlayerNameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetFriendsResponseHandler = function(c) {
    this.GetFriendsResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetFriendsResponseHandler = function(c) {
    this.GetFriendsResponseHandlers.splice(this.GetFriendsResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addAskForFriendResponseHandler = function(c) {
    this.AskForFriendResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeAskForFriendResponseHandler = function(c) {
    this.AskForFriendResponseHandlers.splice(this.AskForFriendResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetFriendDemandsResponseHandler = function(c) {
    this.GetFriendDemandsResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetFriendDemandsResponseHandler = function(c) {
    this.GetFriendDemandsResponseHandlers.splice(this.GetFriendDemandsResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addAcceptFriendDemandResponseHandler = function(c) {
    this.AcceptFriendDemandResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeAcceptFriendDemandResponseHandler = function(c) {
    this.AcceptFriendDemandResponseHandlers.splice(this.AcceptFriendDemandResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addRefuseFriendDemandResponseHandler = function(c) {
    this.RefuseFriendDemandResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeRefuseFriendDemandResponseHandler = function(c) {
    this.RefuseFriendDemandResponseHandlers.splice(this.RefuseFriendDemandResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSubmitScoreResponseHandler = function(c) {
    this.SubmitScoreResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSubmitScoreResponseHandler = function(c) {
    this.SubmitScoreResponseHandlers.splice(this.SubmitScoreResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetScoresResponseHandler = function(c) {
    this.GetScoresResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetScoresResponseHandler = function(c) {
    this.GetScoresResponseHandlers.splice(this.GetScoresResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetAchievementsResponseHandler = function(c) {
    this.GetAchievementsResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetAchievementsResponseHandler = function(c) {
    this.GetAchievementsResponseHandlers.splice(this.GetAchievementsResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addAchieveResponseHandler = function(c) {
    this.AchieveResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeAchieveResponseHandler = function(c) {
    this.AchieveResponseHandlers.splice(this.AchieveResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addAchieveWithProgressResponseHandler = function(c) {
    this.AchieveWithProgressResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeAchieveWithProgressResponseHandler = function(c) {
    this.AchieveWithProgressResponseHandlers.splice(this.AchieveWithProgressResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetPlayerProfileResponseHandler = function(c) {
    this.GetPlayerProfileResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetPlayerProfileResponseHandler = function(c) {
    this.GetPlayerProfileResponseHandlers.splice(this.GetPlayerProfileResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetPlayerProfileByPlayerIdResponseHandler = function(c) {
    this.GetPlayerProfileByPlayerIdResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetPlayerProfileByPlayerIdResponseHandler = function(c) {
    this.GetPlayerProfileByPlayerIdResponseHandlers.splice(this.GetPlayerProfileByPlayerIdResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSavePlayerProfileResponseHandler = function(c) {
    this.SavePlayerProfileResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSavePlayerProfileResponseHandler = function(c) {
    this.SavePlayerProfileResponseHandlers.splice(this.SavePlayerProfileResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetStorablesResponseHandler = function(c) {
    this.GetStorablesResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetStorablesResponseHandler = function(c) {
    this.GetStorablesResponseHandlers.splice(this.GetStorablesResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSaveStorableResponseHandler = function(c) {
    this.SaveStorableResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSaveStorableResponseHandler = function(c) {
    this.SaveStorableResponseHandlers.splice(this.SaveStorableResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addUpdateStorableResponseHandler = function(c) {
    this.UpdateStorableResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeUpdateStorableResponseHandler = function(c) {
    this.UpdateStorableResponseHandlers.splice(this.UpdateStorableResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addRemoveStorableResponseHandler = function(c) {
    this.RemoveStorableResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeRemoveStorableResponseHandler = function(c) {
    this.RemoveStorableResponseHandlers.splice(this.RemoveStorableResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetItemsResponseHandler = function(c) {
    this.GetItemsResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetItemsResponseHandler = function(c) {
    this.GetItemsResponseHandlers.splice(this.GetItemsResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addBuyItemResponseHandler = function(c) {
    this.BuyItemResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeBuyItemResponseHandler = function(c) {
    this.BuyItemResponseHandlers.splice(this.BuyItemResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addConsumeItemResponseHandler = function(c) {
    this.ConsumeItemResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeConsumeItemResponseHandler = function(c) {
    this.ConsumeItemResponseHandlers.splice(this.ConsumeItemResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addIncreasePlayerWalletResponseHandler = function(c) {
    this.IncreasePlayerWalletResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeIncreasePlayerWalletResponseHandler = function(c) {
    this.IncreasePlayerWalletResponseHandlers.splice(this.IncreasePlayerWalletResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetPlayerWalletResponseHandler = function(c) {
    this.GetPlayerWalletResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetPlayerWalletResponseHandler = function(c) {
    this.GetPlayerWalletResponseHandlers.splice(this.GetPlayerWalletResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addJoinGameResponseHandler = function(c) {
    this.JoinGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeJoinGameResponseHandler = function(c) {
    this.JoinGameResponseHandlers.splice(this.JoinGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addUnjoinGameResponseHandler = function(c) {
    this.UnjoinGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeUnjoinGameResponseHandler = function(c) {
    this.UnjoinGameResponseHandlers.splice(this.UnjoinGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addStartGameResponseHandler = function(c) {
    this.StartGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeStartGameResponseHandler = function(c) {
    this.StartGameResponseHandlers.splice(this.StartGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addStopGameResponseHandler = function(c) {
    this.StopGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeStopGameResponseHandler = function(c) {
    this.StopGameResponseHandlers.splice(this.StopGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addCreateGameResponseHandler = function(c) {
    this.CreateGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeCreateGameResponseHandler = function(c) {
    this.CreateGameResponseHandlers.splice(this.CreateGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetGamesResponseHandler = function(c) {
    this.GetGamesResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetGamesResponseHandler = function(c) {
    this.GetGamesResponseHandlers.splice(this.GetGamesResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSaveAsGhostResponseHandler = function(c) {
    this.SaveAsGhostResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSaveAsGhostResponseHandler = function(c) {
    this.SaveAsGhostResponseHandlers.splice(this.SaveAsGhostResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetGhostsResponseHandler = function(c) {
    this.GetGhostsResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetGhostsResponseHandler = function(c) {
    this.GetGhostsResponseHandlers.splice(this.GetGhostsResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addLoadGhostResponseHandler = function(c) {
    this.LoadGhostResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeLoadGhostResponseHandler = function(c) {
    this.LoadGhostResponseHandlers.splice(this.LoadGhostResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addNextPlayerTurnResponseHandler = function(c) {
    this.NextPlayerTurnResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeNextPlayerTurnResponseHandler = function(c) {
    this.NextPlayerTurnResponseHandlers.splice(this.NextPlayerTurnResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSaveGameResponseHandler = function(c) {
    this.SaveGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSaveGameResponseHandler = function(c) {
    this.SaveGameResponseHandlers.splice(this.SaveGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addLoadGameResponseHandler = function(c) {
    this.LoadGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeLoadGameResponseHandler = function(c) {
    this.LoadGameResponseHandlers.splice(this.LoadGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSendGameChatResponseHandler = function(c) {
    this.SendGameChatResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSendGameChatResponseHandler = function(c) {
    this.SendGameChatResponseHandlers.splice(this.SendGameChatResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSendGameChatToPlayerResponseHandler = function(c) {
    this.SendGameChatToPlayerResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSendGameChatToPlayerResponseHandler = function(c) {
    this.SendGameChatToPlayerResponseHandlers.splice(this.SendGameChatToPlayerResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSendGameChatToPlayerListResponseHandler = function(c) {
    this.SendGameChatToPlayerListResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSendGameChatToPlayerListResponseHandler = function(c) {
    this.SendGameChatToPlayerListResponseHandlers.splice(this.SendGameChatToPlayerListResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addInvitePlayerResponseHandler = function(c) {
    this.InvitePlayerResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeInvitePlayerResponseHandler = function(c) {
    this.InvitePlayerResponseHandlers.splice(this.InvitePlayerResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetInvitationsResponseHandler = function(c) {
    this.GetInvitationsResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetInvitationsResponseHandler = function(c) {
    this.GetInvitationsResponseHandlers.splice(this.GetInvitationsResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addAcceptInvitationResponseHandler = function(c) {
    this.AcceptInvitationResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeAcceptInvitationResponseHandler = function(c) {
    this.AcceptInvitationResponseHandlers.splice(this.AcceptInvitationResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addRefuseInvitationResponseHandler = function(c) {
    this.RefuseInvitationResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeRefuseInvitationResponseHandler = function(c) {
    this.RefuseInvitationResponseHandlers.splice(this.RefuseInvitationResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addPauseSessionMonitoringResponseHandler = function(c) {
    this.PauseSessionMonitoringResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removePauseSessionMonitoringResponseHandler = function(c) {
    this.PauseSessionMonitoringResponseHandlers.splice(this.PauseSessionMonitoringResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addResumeSessionMonitoringResponseHandler = function(c) {
    this.ResumeSessionMonitoringResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeResumeSessionMonitoringResponseHandler = function(c) {
    this.ResumeSessionMonitoringResponseHandlers.splice(this.ResumeSessionMonitoringResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addMatchAndJoinGameResponseHandler = function(c) {
    this.MatchAndJoinGameResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeMatchAndJoinGameResponseHandler = function(c) {
    this.MatchAndJoinGameResponseHandlers.splice(this.MatchAndJoinGameResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGetPlayersResponseHandler = function(c) {
    this.GetPlayersResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGetPlayersResponseHandler = function(c) {
    this.GetPlayersResponseHandlers.splice(this.GetPlayersResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addPlayerEnterGameHandler = function(c) {
    this.PlayerEnterGameHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removePlayerEnterGameHandler = function(c) {
    this.PlayerEnterGameHandlers.splice(this.PlayerEnterGameHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addPlayerUnjoinGameHandler = function(c) {
    this.PlayerUnjoinGameHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removePlayerUnjoinGameHandler = function(c) {
    this.PlayerUnjoinGameHandlers.splice(this.PlayerUnjoinGameHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addFriendshipNotificationHandler = function(c) {
    this.FriendshipNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeFriendshipNotificationHandler = function(c) {
    this.FriendshipNotificationHandlers.splice(this.FriendshipNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addFriendConnectedNotificationHandler = function(c) {
    this.FriendConnectedNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeFriendConnectedNotificationHandler = function(c) {
    this.FriendConnectedNotificationHandlers.splice(this.FriendConnectedNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addFriendDisconnectedNotificationHandler = function(c) {
    this.FriendDisconnectedNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeFriendDisconnectedNotificationHandler = function(c) {
    this.FriendDisconnectedNotificationHandlers.splice(this.FriendDisconnectedNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addSessionExpiredHandler = function(c) {
    this.SessionExpiredHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeSessionExpiredHandler = function(c) {
    this.SessionExpiredHandlers.splice(this.SessionExpiredHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addFriendDemandNotificationHandler = function(c) {
    this.FriendDemandNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeFriendDemandNotificationHandler = function(c) {
    this.FriendDemandNotificationHandlers.splice(this.FriendDemandNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGameChatNotificationHandler = function(c) {
    this.GameChatNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGameChatNotificationHandler = function(c) {
    this.GameChatNotificationHandlers.splice(this.GameChatNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addMyTurnNotificationHandler = function(c) {
    this.MyTurnNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeMyTurnNotificationHandler = function(c) {
    this.MyTurnNotificationHandlers.splice(this.MyTurnNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addPlayerTurnNotificationHandler = function(c) {
    this.PlayerTurnNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removePlayerTurnNotificationHandler = function(c) {
    this.PlayerTurnNotificationHandlers.splice(this.PlayerTurnNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addStartResponseHandler = function(c) {
    this.StartResponseHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeStartResponseHandler = function(c) {
    this.StartResponseHandlers.splice(this.StartResponseHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addInvitationRequestNotificationHandler = function(c) {
    this.InvitationRequestNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeInvitationRequestNotificationHandler = function(c) {
    this.InvitationRequestNotificationHandlers.splice(this.InvitationRequestNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addInvitationAcceptedNotificationHandler = function(c) {
    this.InvitationAcceptedNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeInvitationAcceptedNotificationHandler = function(c) {
    this.InvitationAcceptedNotificationHandlers.splice(this.InvitationAcceptedNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addInvitationRefusedNotificationHandler = function(c) {
    this.InvitationRefusedNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeInvitationRefusedNotificationHandler = function(c) {
    this.InvitationRefusedNotificationHandlers.splice(this.InvitationRefusedNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addInvitationExpiredNotificationHandler = function(c) {
    this.InvitationExpiredNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeInvitationExpiredNotificationHandler = function(c) {
    this.InvitationExpiredNotificationHandlers.splice(this.InvitationExpiredNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addNRawGameMessageHandler = function(c) {
    this.NRawGameMessageHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeNRawGameMessageHandler = function(c) {
    this.NRawGameMessageHandlers.splice(this.NRawGameMessageHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addGameRunningStateChangeHandler = function(c) {
    this.GameRunningStateChangeHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeGameRunningStateChangeHandler = function(c) {
    this.GameRunningStateChangeHandlers.splice(this.GameRunningStateChangeHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.addNMatchAndJoinGameExpiredNotificationHandler = function(c) {
    this.NMatchAndJoinGameExpiredNotificationHandlers.push(c);
};

NuggetaGameCoreDispatcher.prototype.removeNMatchAndJoinGameExpiredNotificationHandler = function(c) {
    this.NMatchAndJoinGameExpiredNotificationHandlers.splice(this.NMatchAndJoinGameExpiredNotificationHandlers.indexOf(c), 1);
};

NuggetaGameCoreDispatcher.prototype.clear = function() {
    this.globalListeners.splice(0, this.globalListeners.length);
    this.CreatePlayerResponseHandlers.splice(0, this.CreatePlayerResponseHandlers.length);
    this.LoginResponseHandlers.splice(0, this.LoginResponseHandlers.length);
    this.ThirdPartyLoginResponseHandlers.splice(0, this.ThirdPartyLoginResponseHandlers.length);
    this.LogoutResponseHandlers.splice(0, this.LogoutResponseHandlers.length);
    this.ForgotPasswordResponseHandlers.splice(0, this.ForgotPasswordResponseHandlers.length);
    this.SetPlayerNameResponseHandlers.splice(0, this.SetPlayerNameResponseHandlers.length);
    this.GetFriendsResponseHandlers.splice(0, this.GetFriendsResponseHandlers.length);
    this.AskForFriendResponseHandlers.splice(0, this.AskForFriendResponseHandlers.length);
    this.GetFriendDemandsResponseHandlers.splice(0, this.GetFriendDemandsResponseHandlers.length);
    this.AcceptFriendDemandResponseHandlers.splice(0, this.AcceptFriendDemandResponseHandlers.length);
    this.RefuseFriendDemandResponseHandlers.splice(0, this.RefuseFriendDemandResponseHandlers.length);
    this.SubmitScoreResponseHandlers.splice(0, this.SubmitScoreResponseHandlers.length);
    this.GetScoresResponseHandlers.splice(0, this.GetScoresResponseHandlers.length);
    this.GetAchievementsResponseHandlers.splice(0, this.GetAchievementsResponseHandlers.length);
    this.AchieveResponseHandlers.splice(0, this.AchieveResponseHandlers.length);
    this.AchieveWithProgressResponseHandlers.splice(0, this.AchieveWithProgressResponseHandlers.length);
    this.GetPlayerProfileResponseHandlers.splice(0, this.GetPlayerProfileResponseHandlers.length);
    this.GetPlayerProfileByPlayerIdResponseHandlers.splice(0, this.GetPlayerProfileByPlayerIdResponseHandlers.length);
    this.SavePlayerProfileResponseHandlers.splice(0, this.SavePlayerProfileResponseHandlers.length);
    this.GetStorablesResponseHandlers.splice(0, this.GetStorablesResponseHandlers.length);
    this.SaveStorableResponseHandlers.splice(0, this.SaveStorableResponseHandlers.length);
    this.UpdateStorableResponseHandlers.splice(0, this.UpdateStorableResponseHandlers.length);
    this.RemoveStorableResponseHandlers.splice(0, this.RemoveStorableResponseHandlers.length);
    this.GetItemsResponseHandlers.splice(0, this.GetItemsResponseHandlers.length);
    this.BuyItemResponseHandlers.splice(0, this.BuyItemResponseHandlers.length);
    this.ConsumeItemResponseHandlers.splice(0, this.ConsumeItemResponseHandlers.length);
    this.IncreasePlayerWalletResponseHandlers.splice(0, this.IncreasePlayerWalletResponseHandlers.length);
    this.GetPlayerWalletResponseHandlers.splice(0, this.GetPlayerWalletResponseHandlers.length);
    this.JoinGameResponseHandlers.splice(0, this.JoinGameResponseHandlers.length);
    this.UnjoinGameResponseHandlers.splice(0, this.UnjoinGameResponseHandlers.length);
    this.StartGameResponseHandlers.splice(0, this.StartGameResponseHandlers.length);
    this.StopGameResponseHandlers.splice(0, this.StopGameResponseHandlers.length);
    this.CreateGameResponseHandlers.splice(0, this.CreateGameResponseHandlers.length);
    this.GetGamesResponseHandlers.splice(0, this.GetGamesResponseHandlers.length);
    this.SaveAsGhostResponseHandlers.splice(0, this.SaveAsGhostResponseHandlers.length);
    this.GetGhostsResponseHandlers.splice(0, this.GetGhostsResponseHandlers.length);
    this.LoadGhostResponseHandlers.splice(0, this.LoadGhostResponseHandlers.length);
    this.NextPlayerTurnResponseHandlers.splice(0, this.NextPlayerTurnResponseHandlers.length);
    this.SaveGameResponseHandlers.splice(0, this.SaveGameResponseHandlers.length);
    this.LoadGameResponseHandlers.splice(0, this.LoadGameResponseHandlers.length);
    this.SendGameChatResponseHandlers.splice(0, this.SendGameChatResponseHandlers.length);
    this.SendGameChatToPlayerResponseHandlers.splice(0, this.SendGameChatToPlayerResponseHandlers.length);
    this.SendGameChatToPlayerListResponseHandlers.splice(0, this.SendGameChatToPlayerListResponseHandlers.length);
    this.InvitePlayerResponseHandlers.splice(0, this.InvitePlayerResponseHandlers.length);
    this.GetInvitationsResponseHandlers.splice(0, this.GetInvitationsResponseHandlers.length);
    this.AcceptInvitationResponseHandlers.splice(0, this.AcceptInvitationResponseHandlers.length);
    this.RefuseInvitationResponseHandlers.splice(0, this.RefuseInvitationResponseHandlers.length);
    this.PauseSessionMonitoringResponseHandlers.splice(0, this.PauseSessionMonitoringResponseHandlers.length);
    this.ResumeSessionMonitoringResponseHandlers.splice(0, this.ResumeSessionMonitoringResponseHandlers.length);
    this.MatchAndJoinGameResponseHandlers.splice(0, this.MatchAndJoinGameResponseHandlers.length);
    this.GetPlayersResponseHandlers.splice(0, this.GetPlayersResponseHandlers.length);
    this.PlayerEnterGameHandlers.splice(0, this.PlayerEnterGameHandlers.length);
    this.PlayerUnjoinGameHandlers.splice(0, this.PlayerUnjoinGameHandlers.length);
    this.FriendshipNotificationHandlers.splice(0, this.FriendshipNotificationHandlers.length);
    this.FriendConnectedNotificationHandlers.splice(0, this.FriendConnectedNotificationHandlers.length);
    this.FriendDisconnectedNotificationHandlers.splice(0, this.FriendDisconnectedNotificationHandlers.length);
    this.SessionExpiredHandlers.splice(0, this.SessionExpiredHandlers.length);
    this.FriendDemandNotificationHandlers.splice(0, this.FriendDemandNotificationHandlers.length);
    this.GameChatNotificationHandlers.splice(0, this.GameChatNotificationHandlers.length);
    this.MyTurnNotificationHandlers.splice(0, this.MyTurnNotificationHandlers.length);
    this.PlayerTurnNotificationHandlers.splice(0, this.PlayerTurnNotificationHandlers.length);
    this.StartResponseHandlers.splice(0, this.StartResponseHandlers.length);
    this.InvitationRequestNotificationHandlers.splice(0, this.InvitationRequestNotificationHandlers.length);
    this.InvitationAcceptedNotificationHandlers.splice(0, this.InvitationAcceptedNotificationHandlers.length);
    this.InvitationRefusedNotificationHandlers.splice(0, this.InvitationRefusedNotificationHandlers.length);
    this.InvitationExpiredNotificationHandlers.splice(0, this.InvitationExpiredNotificationHandlers.length);
    this.NRawGameMessageHandlers.splice(0, this.NRawGameMessageHandlers.length);
    this.GameRunningStateChangeHandlers.splice(0, this.GameRunningStateChangeHandlers.length);
    this.NMatchAndJoinGameExpiredNotificationHandlers.splice(0, this.NMatchAndJoinGameExpiredNotificationHandlers.length);
};

SetPlayerNameResponse.prototype = new Message();

SetPlayerNameResponse.prototype.constructor = SetPlayerNameResponse;

SetPlayerNameResponse.prototype.init = function() {
    this._SetPlayerNameStatusSet = !1;
    return this;
};

SetPlayerNameResponse.prototype.getSetPlayerNameStatus = function() {
    return this._SetPlayerNameStatus;
};

SetPlayerNameResponse.prototype.setSetPlayerNameStatus = function(c) {
    this._SetPlayerNameStatus = c;
    this._SetPlayerNameStatusSet = !0;
};

SetPlayerNameResponse.prototype.isSetPlayerNameStatusSet = function() {
    return this._SetPlayerNameStatusSet;
};

SetPlayerNameResponse.prototype.unSetSetPlayerNameStatus = function() {
    this._SetPlayerNameStatusSet = !1;
};

SetPlayerNameResponse.prototype.getDomainID = function() {
    return SetPlayerNameResponse.domainID;
};

SetPlayerNameResponse.prototype.getSerializerID = function() {
    return SetPlayerNameResponse.serializerID;
};

SetPlayerNameResponse.prototype.toString = function() {
    var c;
    c = "[SetPlayerNameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SetPlayerNameStatusSet && 0 == Utils.isNull(this._SetPlayerNameStatus) && (c += "_SetPlayerNameStatus=" + this._SetPlayerNameStatus + "| ");
    return c + "]";
};

SetPlayerNameResponse.prototype.clone = function() {
    var c = new SetPlayerNameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SetPlayerNameStatusSet && 0 == Utils.isNull(this._SetPlayerNameStatus) && c.setSetPlayerNameStatus(this._SetPlayerNameStatus);
    return c;
};

SetPlayerNameResponse.domainID = 100;

SetPlayerNameResponse.serializerID = 10124;

DnsResponse.prototype = new Message();

DnsResponse.prototype.constructor = DnsResponse;

DnsResponse.prototype.init = function() {
    this._StartDetailsSet = this._DnsStatusSet = this._TcpPortSet = this._IpAddressSet = !1;
    return this;
};

DnsResponse.prototype.getIpAddress = function() {
    return this._IpAddress;
};

DnsResponse.prototype.setIpAddress = function(c) {
    this._IpAddress = c;
    this._IpAddressSet = !0;
};

DnsResponse.prototype.isIpAddressSet = function() {
    return this._IpAddressSet;
};

DnsResponse.prototype.unSetIpAddress = function() {
    this._IpAddressSet = !1;
};

DnsResponse.prototype.getTcpPort = function() {
    return this._TcpPort;
};

DnsResponse.prototype.setTcpPort = function(c) {
    this._TcpPort = c;
    this._TcpPortSet = !0;
};

DnsResponse.prototype.isTcpPortSet = function() {
    return this._TcpPortSet;
};

DnsResponse.prototype.unSetTcpPort = function() {
    this._TcpPortSet = !1;
};

DnsResponse.prototype.getDnsStatus = function() {
    return this._DnsStatus;
};

DnsResponse.prototype.setDnsStatus = function(c) {
    this._DnsStatus = c;
    this._DnsStatusSet = !0;
};

DnsResponse.prototype.isDnsStatusSet = function() {
    return this._DnsStatusSet;
};

DnsResponse.prototype.unSetDnsStatus = function() {
    this._DnsStatusSet = !1;
};

DnsResponse.prototype.getStartDetails = function() {
    return this._StartDetails;
};

DnsResponse.prototype.setStartDetails = function(c) {
    this._StartDetails = c;
    this._StartDetailsSet = !0;
};

DnsResponse.prototype.isStartDetailsSet = function() {
    return this._StartDetailsSet;
};

DnsResponse.prototype.unSetStartDetails = function() {
    this._StartDetailsSet = !1;
};

DnsResponse.prototype.getDomainID = function() {
    return DnsResponse.domainID;
};

DnsResponse.prototype.getSerializerID = function() {
    return DnsResponse.serializerID;
};

DnsResponse.prototype.toString = function() {
    var c;
    c = "[DnsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._IpAddressSet && 0 == Utils.isNull(this._IpAddress) && (c += "_IpAddress=" + this._IpAddress + "| ");
    1 == this._TcpPortSet && 0 == Utils.isNullInteger(this._TcpPort) && (c += "_TcpPort=" + this._TcpPort + "| ");
    1 == this._DnsStatusSet && 0 == Utils.isNull(this._DnsStatus) && (c += "_DnsStatus=" + this._DnsStatus + "| ");
    1 == this._StartDetailsSet && 0 == Utils.isNull(this._StartDetails) && (c += "_StartDetails=" + this._StartDetails + "| ");
    return c + "]";
};

DnsResponse.prototype.clone = function() {
    var c = new DnsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._IpAddressSet && 0 == Utils.isNull(this._IpAddress) && c.setIpAddress(this._IpAddress);
    1 == this._TcpPortSet && 0 == Utils.isNullInteger(this._TcpPort) && c.setTcpPort(this._TcpPort);
    1 == this._DnsStatusSet && 0 == Utils.isNull(this._DnsStatus) && c.setDnsStatus(this._DnsStatus);
    1 == this._StartDetailsSet && 0 == Utils.isNull(this._StartDetails) && c.setStartDetails(this._StartDetails.clone());
    return c;
};

DnsResponse.domainID = 0;

DnsResponse.serializerID = 3005;

ThirdPartyLoginStatus.values = function() {
    return ThirdPartyLoginStatus._values;
};

ThirdPartyLoginStatus.prototype.getValue = function() {
    return this._value;
};

ThirdPartyLoginStatus.prototype.name = function() {
    return this._name;
};

ThirdPartyLoginStatus.prototype.ordinal = function() {
    return this._value;
};

ThirdPartyLoginStatus.prototype.init = function(c, a) {
    void 0 == ThirdPartyLoginStatus._values && (ThirdPartyLoginStatus._values = []);
    this._value = a;
    this._name = c;
    ThirdPartyLoginStatus._values.push(this);
    return this;
};

ThirdPartyLoginStatus.fromValue = function(c) {
    for (var a = 0; a < ThirdPartyLoginStatus._values.length; a++) {
        var b = ThirdPartyLoginStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ThirdPartyLoginStatus.valueOf = function(c) {
    for (var a = 0; a < ThirdPartyLoginStatus._values.length; a++) {
        var b = ThirdPartyLoginStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ThirdPartyLoginStatus.prototype.getDomainID = function() {
    return 100;
};

ThirdPartyLoginStatus.prototype.getSerializerID = function() {
    return 10140;
};

ThirdPartyLoginStatus.prototype.toString = function() {
    return "ThirdPartyLoginStatus." + this._name;
};

ThirdPartyLoginStatus.prototype.clone = function() {
    return this;
};

ThirdPartyLoginStatus.INVALID_PARAMETERS = new ThirdPartyLoginStatus().init("INVALID_PARAMETERS", -2);

ThirdPartyLoginStatus.INTERNAL_ERROR = new ThirdPartyLoginStatus().init("INTERNAL_ERROR", -1);

ThirdPartyLoginStatus.CONNECTED = new ThirdPartyLoginStatus().init("CONNECTED", 0);

ThirdPartyLoginStatus.INVALID_LOGIN = new ThirdPartyLoginStatus().init("INVALID_LOGIN", 1);

ThirdPartyLoginStatus.ALREADY_CONNECTED = new ThirdPartyLoginStatus().init("ALREADY_CONNECTED", 2);

ThirdPartyLoginStatus.INVALID_TOKEN = new ThirdPartyLoginStatus().init("INVALID_TOKEN", 6);

ThirdPartyLoginStatus.TOKEN_EXPIRED = new ThirdPartyLoginStatus().init("TOKEN_EXPIRED", 7);

NuggetaQuery.prototype.init = function() {
    this._querySet = this._limitSet = this._startSet = this._domainSet = !1;
    return this;
};

NuggetaQuery.prototype.getDomain = function() {
    return this._domain;
};

NuggetaQuery.prototype.setDomain = function(c) {
    this._domain = c;
    this._domainSet = !0;
};

NuggetaQuery.prototype.isdomainSet = function() {
    return this._domainSet;
};

NuggetaQuery.prototype.unSetdomain = function() {
    this._domainSet = !1;
};

NuggetaQuery.prototype.getStart = function() {
    return this._start;
};

NuggetaQuery.prototype.setStart = function(c) {
    this._start = c;
    this._startSet = !0;
};

NuggetaQuery.prototype.isstartSet = function() {
    return this._startSet;
};

NuggetaQuery.prototype.unSetstart = function() {
    this._startSet = !1;
};

NuggetaQuery.prototype.getLimit = function() {
    return this._limit;
};

NuggetaQuery.prototype.setLimit = function(c) {
    this._limit = c;
    this._limitSet = !0;
};

NuggetaQuery.prototype.islimitSet = function() {
    return this._limitSet;
};

NuggetaQuery.prototype.unSetlimit = function() {
    this._limitSet = !1;
};

NuggetaQuery.prototype.getQuery = function() {
    return this._query;
};

NuggetaQuery.prototype.setQuery = function(c) {
    this._query = c;
    this._querySet = !0;
};

NuggetaQuery.prototype.isquerySet = function() {
    return this._querySet;
};

NuggetaQuery.prototype.unSetquery = function() {
    this._querySet = !1;
};

NuggetaQuery.prototype.getDomainID = function() {
    return NuggetaQuery.domainID;
};

NuggetaQuery.prototype.getSerializerID = function() {
    return NuggetaQuery.serializerID;
};

NuggetaQuery.prototype.toString = function() {
    var c;
    c = "[NuggetaQuery --> ";
    1 == this._domainSet && 0 == Utils.isNull(this._domain) && (c += "_domain=" + this._domain + "| ");
    1 == this._startSet && 0 == Utils.isNullInteger(this._start) && (c += "_start=" + this._start + "| ");
    1 == this._limitSet && 0 == Utils.isNullInteger(this._limit) && (c += "_limit=" + this._limit + "| ");
    1 == this._querySet && 0 == Utils.isNull(this._query) && (c += "_query=" + this._query + "| ");
    return c + "]";
};

NuggetaQuery.prototype.clone = function() {
    var c = new NuggetaQuery().init();
    1 == this._domainSet && 0 == Utils.isNull(this._domain) && c.setDomain(this._domain);
    1 == this._startSet && 0 == Utils.isNullInteger(this._start) && c.setStart(this._start);
    1 == this._limitSet && 0 == Utils.isNullInteger(this._limit) && c.setLimit(this._limit);
    1 == this._querySet && 0 == Utils.isNull(this._query) && c.setQuery(this._query);
    return c;
};

NuggetaQuery.domainID = 0;

NuggetaQuery.serializerID = 3010;

NLeaderboard.prototype.init = function() {
    this._NameSet = this._IdSet = !1;
    this._leaderboardEntries = [];
    this._CustomDataSet = this._leaderboardEntriesSet = !1;
    return this;
};

NLeaderboard.prototype.getId = function() {
    return this._Id;
};

NLeaderboard.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NLeaderboard.prototype.isIdSet = function() {
    return this._IdSet;
};

NLeaderboard.prototype.unSetId = function() {
    this._IdSet = !1;
};

NLeaderboard.prototype.getName = function() {
    return this._Name;
};

NLeaderboard.prototype.setName = function(c) {
    this._Name = c;
    this._NameSet = !0;
};

NLeaderboard.prototype.isNameSet = function() {
    return this._NameSet;
};

NLeaderboard.prototype.unSetName = function() {
    this._NameSet = !1;
};

NLeaderboard.prototype.getLeaderboardEntries = function() {
    this._leaderboardEntriesSet = !0;
    return this._leaderboardEntries;
};

NLeaderboard.prototype.setLeaderboardEntries = function(c) {
    this._leaderboardEntries = c;
    this._leaderboardEntriesSet = !0;
};

NLeaderboard.prototype.isleaderboardEntriesSet = function() {
    return this._leaderboardEntriesSet;
};

NLeaderboard.prototype.unSetleaderboardEntries = function() {
    this._leaderboardEntriesSet = !1;
};

NLeaderboard.prototype.getCustomData = function() {
    return this._CustomData;
};

NLeaderboard.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NLeaderboard.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NLeaderboard.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NLeaderboard.prototype.getDomainID = function() {
    return NLeaderboard.domainID;
};

NLeaderboard.prototype.getSerializerID = function() {
    return NLeaderboard.serializerID;
};

NLeaderboard.prototype.toString = function() {
    var c;
    c = "[NLeaderboard --> ";
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._leaderboardEntriesSet && 0 == Utils.isNull(this._leaderboardEntries) && (c += "_leaderboardEntries=" + this._leaderboardEntries + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NLeaderboard.prototype.clone = function() {
    var c = new NLeaderboard().init();
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    if (1 == this._leaderboardEntriesSet && 0 == Utils.isNull(this._leaderboardEntries)) {
        for (var a = [], b = 0; b < this._leaderboardEntries.length; ++b) {
            var e = this._leaderboardEntries[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setLeaderboardEntries(a);
    }
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NLeaderboard.domainID = 100;

NLeaderboard.serializerID = 3038;

InvitePlayerRequest.prototype = new Message();

InvitePlayerRequest.prototype.constructor = InvitePlayerRequest;

InvitePlayerRequest.prototype.init = function() {
    this._invitationSet = this._playerIdSet = !1;
    return this;
};

InvitePlayerRequest.prototype.getPlayerId = function() {
    return this._playerId;
};

InvitePlayerRequest.prototype.setPlayerId = function(c) {
    this._playerId = c;
    this._playerIdSet = !0;
};

InvitePlayerRequest.prototype.isplayerIdSet = function() {
    return this._playerIdSet;
};

InvitePlayerRequest.prototype.unSetplayerId = function() {
    this._playerIdSet = !1;
};

InvitePlayerRequest.prototype.getInvitation = function() {
    return this._invitation;
};

InvitePlayerRequest.prototype.setInvitation = function(c) {
    this._invitation = c;
    this._invitationSet = !0;
};

InvitePlayerRequest.prototype.isinvitationSet = function() {
    return this._invitationSet;
};

InvitePlayerRequest.prototype.unSetinvitation = function() {
    this._invitationSet = !1;
};

InvitePlayerRequest.prototype.getDomainID = function() {
    return InvitePlayerRequest.domainID;
};

InvitePlayerRequest.prototype.getSerializerID = function() {
    return InvitePlayerRequest.serializerID;
};

InvitePlayerRequest.prototype.toString = function() {
    var c;
    c = "[InvitePlayerRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && (c += "_playerId=" + this._playerId + "| ");
    1 == this._invitationSet && 0 == Utils.isNull(this._invitation) && (c += "_invitation=" + this._invitation + "| ");
    return c + "]";
};

InvitePlayerRequest.prototype.clone = function() {
    var c = new InvitePlayerRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && c.setPlayerId(this._playerId);
    1 == this._invitationSet && 0 == Utils.isNull(this._invitation) && c.setInvitation(this._invitation.clone());
    return c;
};

InvitePlayerRequest.domainID = 100;

InvitePlayerRequest.serializerID = 10168;

Byte2DArray.prototype.init = function(c, a) {
    this.tab = Array(c * a);
    this.rowCount = c;
    this.colunmSize = a;
    return this;
};

Byte2DArray.prototype.set = function(c, a, b) {
    this.tab[c * this.colunmSize + a] = b;
};

Byte2DArray.prototype.get = function(c, a) {
    return this.tab[c * this.colunmSize + a];
};

Byte2DArray.prototype.getRow = function(c) {
    var a = Array(this.colunmSize);
    c *= this.colunmSize;
    for (var b = 0, e = c; e < c + this.colunmSize; e++) a[b] = this.tab[e], b++;
    return a;
};

Byte2DArray.prototype.setRow = function(c, a) {
    for (var b = a * this.colunmSize, e = 0; e < this.colunmSize; e++) this.tab[b] = c[e], 
    b++;
};

Byte2DArray.prototype.getRowCount = function() {
    return this.rowCount;
};

Byte2DArray.prototype.getColunmSize = function() {
    return this.colunmSize;
};

CreateGameResponse.prototype = new Message();

CreateGameResponse.prototype.constructor = CreateGameResponse;

CreateGameResponse.prototype.init = function() {
    this._gameIdSet = this._CreateGameStatusSet = !1;
    return this;
};

CreateGameResponse.prototype.getCreateGameStatus = function() {
    return this._CreateGameStatus;
};

CreateGameResponse.prototype.setCreateGameStatus = function(c) {
    this._CreateGameStatus = c;
    this._CreateGameStatusSet = !0;
};

CreateGameResponse.prototype.isCreateGameStatusSet = function() {
    return this._CreateGameStatusSet;
};

CreateGameResponse.prototype.unSetCreateGameStatus = function() {
    this._CreateGameStatusSet = !1;
};

CreateGameResponse.prototype.getGameId = function() {
    return this._gameId;
};

CreateGameResponse.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

CreateGameResponse.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

CreateGameResponse.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

CreateGameResponse.prototype.getDomainID = function() {
    return CreateGameResponse.domainID;
};

CreateGameResponse.prototype.getSerializerID = function() {
    return CreateGameResponse.serializerID;
};

CreateGameResponse.prototype.toString = function() {
    var c;
    c = "[CreateGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._CreateGameStatusSet && 0 == Utils.isNull(this._CreateGameStatus) && (c += "_CreateGameStatus=" + this._CreateGameStatus + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

CreateGameResponse.prototype.clone = function() {
    var c = new CreateGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._CreateGameStatusSet && 0 == Utils.isNull(this._CreateGameStatus) && c.setCreateGameStatus(this._CreateGameStatus);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

CreateGameResponse.domainID = 100;

CreateGameResponse.serializerID = 10097;

GetItemsStatus.values = function() {
    return GetItemsStatus._values;
};

GetItemsStatus.prototype.getValue = function() {
    return this._value;
};

GetItemsStatus.prototype.name = function() {
    return this._name;
};

GetItemsStatus.prototype.ordinal = function() {
    return this._value;
};

GetItemsStatus.prototype.init = function(c, a) {
    void 0 == GetItemsStatus._values && (GetItemsStatus._values = []);
    this._value = a;
    this._name = c;
    GetItemsStatus._values.push(this);
    return this;
};

GetItemsStatus.fromValue = function(c) {
    for (var a = 0; a < GetItemsStatus._values.length; a++) {
        var b = GetItemsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetItemsStatus.valueOf = function(c) {
    for (var a = 0; a < GetItemsStatus._values.length; a++) {
        var b = GetItemsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetItemsStatus.prototype.getDomainID = function() {
    return 100;
};

GetItemsStatus.prototype.getSerializerID = function() {
    return 10053;
};

GetItemsStatus.prototype.toString = function() {
    return "GetItemsStatus." + this._name;
};

GetItemsStatus.prototype.clone = function() {
    return this;
};

GetItemsStatus.INVALID_PARAMETERS = new GetItemsStatus().init("INVALID_PARAMETERS", -2);

GetItemsStatus.INTERNAL_ERROR = new GetItemsStatus().init("INTERNAL_ERROR", -1);

GetItemsStatus.SUCCESS = new GetItemsStatus().init("SUCCESS", 0);

GetItemsStatus.FAILURE = new GetItemsStatus().init("FAILURE", 1);

RemoveStorableRequest.prototype = new Message();

RemoveStorableRequest.prototype.constructor = RemoveStorableRequest;

RemoveStorableRequest.prototype.init = function() {
    this._storableSet = !1;
    return this;
};

RemoveStorableRequest.prototype.getStorable = function() {
    return this._storable;
};

RemoveStorableRequest.prototype.setStorable = function(c) {
    this._storable = c;
    this._storableSet = !0;
};

RemoveStorableRequest.prototype.isstorableSet = function() {
    return this._storableSet;
};

RemoveStorableRequest.prototype.unSetstorable = function() {
    this._storableSet = !1;
};

RemoveStorableRequest.prototype.getDomainID = function() {
    return RemoveStorableRequest.domainID;
};

RemoveStorableRequest.prototype.getSerializerID = function() {
    return RemoveStorableRequest.serializerID;
};

RemoveStorableRequest.prototype.toString = function() {
    var c;
    c = "[RemoveStorableRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._storableSet && 0 == Utils.isNull(this._storable) && (c += "_storable=" + this._storable + "| ");
    return c + "]";
};

RemoveStorableRequest.prototype.clone = function() {
    var c = new RemoveStorableRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._storableSet && 0 == Utils.isNull(this._storable) && c.setStorable(this._storable.clone());
    return c;
};

RemoveStorableRequest.domainID = 100;

RemoveStorableRequest.serializerID = 10129;

HandshakeState.values = function() {
    return HandshakeState._values;
};

HandshakeState.prototype.getValue = function() {
    return this._value;
};

HandshakeState.prototype.name = function() {
    return this._name;
};

HandshakeState.prototype.ordinal = function() {
    return this._value;
};

HandshakeState.prototype.init = function(c, a) {
    void 0 == HandshakeState._values && (HandshakeState._values = []);
    this._value = a;
    this._name = c;
    HandshakeState._values.push(this);
    return this;
};

HandshakeState.fromValue = function(c) {
    for (var a = 0; a < HandshakeState._values.length; a++) {
        var b = HandshakeState._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

HandshakeState.valueOf = function(c) {
    for (var a = 0; a < HandshakeState._values.length; a++) {
        var b = HandshakeState._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

HandshakeState.prototype.getDomainID = function() {
    return 100;
};

HandshakeState.prototype.getSerializerID = function() {
    return 4;
};

HandshakeState.prototype.toString = function() {
    return "HandshakeState." + this._name;
};

HandshakeState.prototype.clone = function() {
    return this;
};

HandshakeState.INIT = new HandshakeState().init("INIT", 0);

HandshakeState.BALANCE = new HandshakeState().init("BALANCE", 1);

HandshakeState.OPEN_SLAVE_CONNECTION = new HandshakeState().init("OPEN_SLAVE_CONNECTION", 2);

HandshakeState.SWITCH = new HandshakeState().init("SWITCH", 3);

PlayerEnterGame.prototype = new Message();

PlayerEnterGame.prototype.constructor = PlayerEnterGame;

PlayerEnterGame.prototype.init = function() {
    this._PlayerSet = this._GameIdSet = !1;
    return this;
};

PlayerEnterGame.prototype.getGameId = function() {
    return this._GameId;
};

PlayerEnterGame.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

PlayerEnterGame.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

PlayerEnterGame.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

PlayerEnterGame.prototype.getPlayer = function() {
    return this._Player;
};

PlayerEnterGame.prototype.setPlayer = function(c) {
    this._Player = c;
    this._PlayerSet = !0;
};

PlayerEnterGame.prototype.isPlayerSet = function() {
    return this._PlayerSet;
};

PlayerEnterGame.prototype.unSetPlayer = function() {
    this._PlayerSet = !1;
};

PlayerEnterGame.prototype.getDomainID = function() {
    return PlayerEnterGame.domainID;
};

PlayerEnterGame.prototype.getSerializerID = function() {
    return PlayerEnterGame.serializerID;
};

PlayerEnterGame.prototype.toString = function() {
    var c;
    c = "[PlayerEnterGame --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && (c += "_Player=" + this._Player + "| ");
    return c + "]";
};

PlayerEnterGame.prototype.clone = function() {
    var c = new PlayerEnterGame().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && c.setPlayer(this._Player.clone());
    return c;
};

PlayerEnterGame.domainID = 100;

PlayerEnterGame.serializerID = 3012;

ExecutionStatus.values = function() {
    return ExecutionStatus._values;
};

ExecutionStatus.prototype.getValue = function() {
    return this._value;
};

ExecutionStatus.prototype.name = function() {
    return this._name;
};

ExecutionStatus.prototype.ordinal = function() {
    return this._value;
};

ExecutionStatus.prototype.init = function(c, a) {
    void 0 == ExecutionStatus._values && (ExecutionStatus._values = []);
    this._value = a;
    this._name = c;
    ExecutionStatus._values.push(this);
    return this;
};

ExecutionStatus.fromValue = function(c) {
    for (var a = 0; a < ExecutionStatus._values.length; a++) {
        var b = ExecutionStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ExecutionStatus.valueOf = function(c) {
    for (var a = 0; a < ExecutionStatus._values.length; a++) {
        var b = ExecutionStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ExecutionStatus.prototype.getDomainID = function() {
    return 100;
};

ExecutionStatus.prototype.getSerializerID = function() {
    return 14;
};

ExecutionStatus.prototype.toString = function() {
    return "ExecutionStatus." + this._name;
};

ExecutionStatus.prototype.clone = function() {
    return this;
};

ExecutionStatus.OK = new ExecutionStatus().init("OK", 0);

ExecutionStatus.FAILED = new ExecutionStatus().init("FAILED", 1);

NLeaderboardEntry.prototype = new Storable();

NLeaderboardEntry.prototype.constructor = NLeaderboardEntry;

NLeaderboardEntry.prototype.init = function() {
    this._CustomDataSet = this._PlayerAvatarPathSet = this._PlayerNameSet = this._PlayerIdSet = this._ScoreSet = this._PlayerSet = this._TimestampSet = this._IdSet = !1;
    return this;
};

NLeaderboardEntry.prototype.getId = function() {
    return this._Id;
};

NLeaderboardEntry.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NLeaderboardEntry.prototype.isIdSet = function() {
    return this._IdSet;
};

NLeaderboardEntry.prototype.unSetId = function() {
    this._IdSet = !1;
};

NLeaderboardEntry.prototype.getTimestamp = function() {
    return this._Timestamp;
};

NLeaderboardEntry.prototype.setTimestamp = function(c) {
    this._Timestamp = c;
    this._TimestampSet = !0;
};

NLeaderboardEntry.prototype.isTimestampSet = function() {
    return this._TimestampSet;
};

NLeaderboardEntry.prototype.unSetTimestamp = function() {
    this._TimestampSet = !1;
};

NLeaderboardEntry.prototype.getPlayer = function() {
    return this._Player;
};

NLeaderboardEntry.prototype.setPlayer = function(c) {
    this._Player = c;
    this._PlayerSet = !0;
};

NLeaderboardEntry.prototype.isPlayerSet = function() {
    return this._PlayerSet;
};

NLeaderboardEntry.prototype.unSetPlayer = function() {
    this._PlayerSet = !1;
};

NLeaderboardEntry.prototype.getScore = function() {
    return this._Score;
};

NLeaderboardEntry.prototype.setScore = function(c) {
    this._Score = c;
    this._ScoreSet = !0;
};

NLeaderboardEntry.prototype.isScoreSet = function() {
    return this._ScoreSet;
};

NLeaderboardEntry.prototype.unSetScore = function() {
    this._ScoreSet = !1;
};

NLeaderboardEntry.prototype.getPlayerId = function() {
    return this._PlayerId;
};

NLeaderboardEntry.prototype.setPlayerId = function(c) {
    this._PlayerId = c;
    this._PlayerIdSet = !0;
};

NLeaderboardEntry.prototype.isPlayerIdSet = function() {
    return this._PlayerIdSet;
};

NLeaderboardEntry.prototype.unSetPlayerId = function() {
    this._PlayerIdSet = !1;
};

NLeaderboardEntry.prototype.getPlayerName = function() {
    return this._PlayerName;
};

NLeaderboardEntry.prototype.setPlayerName = function(c) {
    this._PlayerName = c;
    this._PlayerNameSet = !0;
};

NLeaderboardEntry.prototype.isPlayerNameSet = function() {
    return this._PlayerNameSet;
};

NLeaderboardEntry.prototype.unSetPlayerName = function() {
    this._PlayerNameSet = !1;
};

NLeaderboardEntry.prototype.getPlayerAvatarPath = function() {
    return this._PlayerAvatarPath;
};

NLeaderboardEntry.prototype.setPlayerAvatarPath = function(c) {
    this._PlayerAvatarPath = c;
    this._PlayerAvatarPathSet = !0;
};

NLeaderboardEntry.prototype.isPlayerAvatarPathSet = function() {
    return this._PlayerAvatarPathSet;
};

NLeaderboardEntry.prototype.unSetPlayerAvatarPath = function() {
    this._PlayerAvatarPathSet = !1;
};

NLeaderboardEntry.prototype.getCustomData = function() {
    return this._CustomData;
};

NLeaderboardEntry.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NLeaderboardEntry.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NLeaderboardEntry.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NLeaderboardEntry.prototype.getDomainID = function() {
    return NLeaderboardEntry.domainID;
};

NLeaderboardEntry.prototype.getSerializerID = function() {
    return NLeaderboardEntry.serializerID;
};

NLeaderboardEntry.prototype.toString = function() {
    var c;
    c = "[NLeaderboardEntry --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._TimestampSet && 0 == Utils.isNullDouble(this._Timestamp) && (c += "_Timestamp=" + this._Timestamp + "| ");
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && (c += "_Player=" + this._Player + "| ");
    1 == this._ScoreSet && 0 == Utils.isNull(this._Score) && (c += "_Score=" + this._Score + "| ");
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && (c += "_PlayerId=" + this._PlayerId + "| ");
    1 == this._PlayerNameSet && 0 == Utils.isNull(this._PlayerName) && (c += "_PlayerName=" + this._PlayerName + "| ");
    1 == this._PlayerAvatarPathSet && 0 == Utils.isNull(this._PlayerAvatarPath) && (c += "_PlayerAvatarPath=" + this._PlayerAvatarPath + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NLeaderboardEntry.prototype.clone = function() {
    var c = new NLeaderboardEntry().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._TimestampSet && 0 == Utils.isNullDouble(this._Timestamp) && c.setTimestamp(this._Timestamp);
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && c.setPlayer(this._Player.clone());
    1 == this._ScoreSet && 0 == Utils.isNull(this._Score) && c.setScore(this._Score.clone());
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && c.setPlayerId(this._PlayerId);
    1 == this._PlayerNameSet && 0 == Utils.isNull(this._PlayerName) && c.setPlayerName(this._PlayerName);
    1 == this._PlayerAvatarPathSet && 0 == Utils.isNull(this._PlayerAvatarPath) && c.setPlayerAvatarPath(this._PlayerAvatarPath);
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NLeaderboardEntry.domainID = 100;

NLeaderboardEntry.serializerID = 3043;

LeaderboardPeriod.values = function() {
    return LeaderboardPeriod._values;
};

LeaderboardPeriod.prototype.getValue = function() {
    return this._value;
};

LeaderboardPeriod.prototype.name = function() {
    return this._name;
};

LeaderboardPeriod.prototype.ordinal = function() {
    return this._value;
};

LeaderboardPeriod.prototype.init = function(c, a) {
    void 0 == LeaderboardPeriod._values && (LeaderboardPeriod._values = []);
    this._value = a;
    this._name = c;
    LeaderboardPeriod._values.push(this);
    return this;
};

LeaderboardPeriod.fromValue = function(c) {
    for (var a = 0; a < LeaderboardPeriod._values.length; a++) {
        var b = LeaderboardPeriod._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

LeaderboardPeriod.valueOf = function(c) {
    for (var a = 0; a < LeaderboardPeriod._values.length; a++) {
        var b = LeaderboardPeriod._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

LeaderboardPeriod.prototype.getDomainID = function() {
    return 100;
};

LeaderboardPeriod.prototype.getSerializerID = function() {
    return 3;
};

LeaderboardPeriod.prototype.toString = function() {
    return "LeaderboardPeriod." + this._name;
};

LeaderboardPeriod.prototype.clone = function() {
    return this;
};

LeaderboardPeriod.DAY = new LeaderboardPeriod().init("DAY", 0);

LeaderboardPeriod.MONTH = new LeaderboardPeriod().init("MONTH", 1);

LeaderboardPeriod.ALL = new LeaderboardPeriod().init("ALL", 2);

LeaderboardPeriod.WEEK = new LeaderboardPeriod().init("WEEK", 3);

GetPlayerProfileResponse.prototype = new Message();

GetPlayerProfileResponse.prototype.constructor = GetPlayerProfileResponse;

GetPlayerProfileResponse.prototype.init = function() {
    this._profileSet = this._GetPlayerProfileStatusSet = !1;
    return this;
};

GetPlayerProfileResponse.prototype.getGetPlayerProfileStatus = function() {
    return this._GetPlayerProfileStatus;
};

GetPlayerProfileResponse.prototype.setGetPlayerProfileStatus = function(c) {
    this._GetPlayerProfileStatus = c;
    this._GetPlayerProfileStatusSet = !0;
};

GetPlayerProfileResponse.prototype.isGetPlayerProfileStatusSet = function() {
    return this._GetPlayerProfileStatusSet;
};

GetPlayerProfileResponse.prototype.unSetGetPlayerProfileStatus = function() {
    this._GetPlayerProfileStatusSet = !1;
};

GetPlayerProfileResponse.prototype.getProfile = function() {
    return this._profile;
};

GetPlayerProfileResponse.prototype.setProfile = function(c) {
    this._profile = c;
    this._profileSet = !0;
};

GetPlayerProfileResponse.prototype.isprofileSet = function() {
    return this._profileSet;
};

GetPlayerProfileResponse.prototype.unSetprofile = function() {
    this._profileSet = !1;
};

GetPlayerProfileResponse.prototype.getDomainID = function() {
    return GetPlayerProfileResponse.domainID;
};

GetPlayerProfileResponse.prototype.getSerializerID = function() {
    return GetPlayerProfileResponse.serializerID;
};

GetPlayerProfileResponse.prototype.toString = function() {
    var c;
    c = "[GetPlayerProfileResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetPlayerProfileStatusSet && 0 == Utils.isNull(this._GetPlayerProfileStatus) && (c += "_GetPlayerProfileStatus=" + this._GetPlayerProfileStatus + "| ");
    1 == this._profileSet && 0 == Utils.isNull(this._profile) && (c += "_profile=" + this._profile + "| ");
    return c + "]";
};

GetPlayerProfileResponse.prototype.clone = function() {
    var c = new GetPlayerProfileResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetPlayerProfileStatusSet && 0 == Utils.isNull(this._GetPlayerProfileStatus) && c.setGetPlayerProfileStatus(this._GetPlayerProfileStatus);
    1 == this._profileSet && 0 == Utils.isNull(this._profile) && c.setProfile(this._profile.clone());
    return c;
};

GetPlayerProfileResponse.domainID = 100;

GetPlayerProfileResponse.serializerID = 10016;

SetPlayerNameStatus.values = function() {
    return SetPlayerNameStatus._values;
};

SetPlayerNameStatus.prototype.getValue = function() {
    return this._value;
};

SetPlayerNameStatus.prototype.name = function() {
    return this._name;
};

SetPlayerNameStatus.prototype.ordinal = function() {
    return this._value;
};

SetPlayerNameStatus.prototype.init = function(c, a) {
    void 0 == SetPlayerNameStatus._values && (SetPlayerNameStatus._values = []);
    this._value = a;
    this._name = c;
    SetPlayerNameStatus._values.push(this);
    return this;
};

SetPlayerNameStatus.fromValue = function(c) {
    for (var a = 0; a < SetPlayerNameStatus._values.length; a++) {
        var b = SetPlayerNameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SetPlayerNameStatus.valueOf = function(c) {
    for (var a = 0; a < SetPlayerNameStatus._values.length; a++) {
        var b = SetPlayerNameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SetPlayerNameStatus.prototype.getDomainID = function() {
    return 100;
};

SetPlayerNameStatus.prototype.getSerializerID = function() {
    return 10125;
};

SetPlayerNameStatus.prototype.toString = function() {
    return "SetPlayerNameStatus." + this._name;
};

SetPlayerNameStatus.prototype.clone = function() {
    return this;
};

SetPlayerNameStatus.INVALID_PARAMETERS = new SetPlayerNameStatus().init("INVALID_PARAMETERS", -2);

SetPlayerNameStatus.INTERNAL_ERROR = new SetPlayerNameStatus().init("INTERNAL_ERROR", -1);

SetPlayerNameStatus.SUCCESS = new SetPlayerNameStatus().init("SUCCESS", 0);

SetPlayerNameStatus.NOT_ANONYMOUS_PLAYER = new SetPlayerNameStatus().init("NOT_ANONYMOUS_PLAYER", 1);

ClientApplication.values = function() {
    return ClientApplication._values;
};

ClientApplication.prototype.getValue = function() {
    return this._value;
};

ClientApplication.prototype.name = function() {
    return this._name;
};

ClientApplication.prototype.ordinal = function() {
    return this._value;
};

ClientApplication.prototype.init = function(c, a) {
    void 0 == ClientApplication._values && (ClientApplication._values = []);
    this._value = a;
    this._name = c;
    ClientApplication._values.push(this);
    return this;
};

ClientApplication.fromValue = function(c) {
    for (var a = 0; a < ClientApplication._values.length; a++) {
        var b = ClientApplication._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ClientApplication.valueOf = function(c) {
    for (var a = 0; a < ClientApplication._values.length; a++) {
        var b = ClientApplication._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ClientApplication.prototype.getDomainID = function() {
    return 100;
};

ClientApplication.prototype.getSerializerID = function() {
    return 6;
};

ClientApplication.prototype.toString = function() {
    return "ClientApplication." + this._name;
};

ClientApplication.prototype.clone = function() {
    return this;
};

ClientApplication.PC = new ClientApplication().init("PC", 0);

ClientApplication.MOBILE = new ClientApplication().init("MOBILE", 1);

PlayerUnjoinGame.prototype = new Message();

PlayerUnjoinGame.prototype.constructor = PlayerUnjoinGame;

PlayerUnjoinGame.prototype.init = function() {
    this._PlayerSet = this._GameIdSet = !1;
    return this;
};

PlayerUnjoinGame.prototype.getGameId = function() {
    return this._GameId;
};

PlayerUnjoinGame.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

PlayerUnjoinGame.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

PlayerUnjoinGame.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

PlayerUnjoinGame.prototype.getPlayer = function() {
    return this._Player;
};

PlayerUnjoinGame.prototype.setPlayer = function(c) {
    this._Player = c;
    this._PlayerSet = !0;
};

PlayerUnjoinGame.prototype.isPlayerSet = function() {
    return this._PlayerSet;
};

PlayerUnjoinGame.prototype.unSetPlayer = function() {
    this._PlayerSet = !1;
};

PlayerUnjoinGame.prototype.getDomainID = function() {
    return PlayerUnjoinGame.domainID;
};

PlayerUnjoinGame.prototype.getSerializerID = function() {
    return PlayerUnjoinGame.serializerID;
};

PlayerUnjoinGame.prototype.toString = function() {
    var c;
    c = "[PlayerUnjoinGame --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && (c += "_Player=" + this._Player + "| ");
    return c + "]";
};

PlayerUnjoinGame.prototype.clone = function() {
    var c = new PlayerUnjoinGame().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && c.setPlayer(this._Player.clone());
    return c;
};

PlayerUnjoinGame.domainID = 100;

PlayerUnjoinGame.serializerID = 3014;

RefuseInvitationResponse.prototype = new Message();

RefuseInvitationResponse.prototype.constructor = RefuseInvitationResponse;

RefuseInvitationResponse.prototype.init = function() {
    this._invitationIdSet = this._RefuseInvitationStatusSet = !1;
    return this;
};

RefuseInvitationResponse.prototype.getRefuseInvitationStatus = function() {
    return this._RefuseInvitationStatus;
};

RefuseInvitationResponse.prototype.setRefuseInvitationStatus = function(c) {
    this._RefuseInvitationStatus = c;
    this._RefuseInvitationStatusSet = !0;
};

RefuseInvitationResponse.prototype.isRefuseInvitationStatusSet = function() {
    return this._RefuseInvitationStatusSet;
};

RefuseInvitationResponse.prototype.unSetRefuseInvitationStatus = function() {
    this._RefuseInvitationStatusSet = !1;
};

RefuseInvitationResponse.prototype.getInvitationId = function() {
    return this._invitationId;
};

RefuseInvitationResponse.prototype.setInvitationId = function(c) {
    this._invitationId = c;
    this._invitationIdSet = !0;
};

RefuseInvitationResponse.prototype.isinvitationIdSet = function() {
    return this._invitationIdSet;
};

RefuseInvitationResponse.prototype.unSetinvitationId = function() {
    this._invitationIdSet = !1;
};

RefuseInvitationResponse.prototype.getDomainID = function() {
    return RefuseInvitationResponse.domainID;
};

RefuseInvitationResponse.prototype.getSerializerID = function() {
    return RefuseInvitationResponse.serializerID;
};

RefuseInvitationResponse.prototype.toString = function() {
    var c;
    c = "[RefuseInvitationResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._RefuseInvitationStatusSet && 0 == Utils.isNull(this._RefuseInvitationStatus) && (c += "_RefuseInvitationStatus=" + this._RefuseInvitationStatus + "| ");
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && (c += "_invitationId=" + this._invitationId + "| ");
    return c + "]";
};

RefuseInvitationResponse.prototype.clone = function() {
    var c = new RefuseInvitationResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._RefuseInvitationStatusSet && 0 == Utils.isNull(this._RefuseInvitationStatus) && c.setRefuseInvitationStatus(this._RefuseInvitationStatus);
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && c.setInvitationId(this._invitationId);
    return c;
};

RefuseInvitationResponse.domainID = 100;

RefuseInvitationResponse.serializerID = 10178;

GetFriendsRequest.prototype = new Message();

GetFriendsRequest.prototype.constructor = GetFriendsRequest;

GetFriendsRequest.prototype.init = function() {
    return this;
};

GetFriendsRequest.prototype.getDomainID = function() {
    return GetFriendsRequest.domainID;
};

GetFriendsRequest.prototype.getSerializerID = function() {
    return GetFriendsRequest.serializerID;
};

GetFriendsRequest.prototype.toString = function() {
    var c;
    c = "[GetFriendsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

GetFriendsRequest.prototype.clone = function() {
    var c = new GetFriendsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

GetFriendsRequest.domainID = 100;

GetFriendsRequest.serializerID = 10027;

NGameCharacteristics.prototype.init = function() {
    this._CustomDataSet = this._AutoStartSet = this._AutoStopSet = this._MaxPlayerSet = this._MinPlayerSet = !1;
    return this;
};

NGameCharacteristics.prototype.getMinPlayer = function() {
    return this._MinPlayer;
};

NGameCharacteristics.prototype.setMinPlayer = function(c) {
    this._MinPlayer = c;
    this._MinPlayerSet = !0;
};

NGameCharacteristics.prototype.isMinPlayerSet = function() {
    return this._MinPlayerSet;
};

NGameCharacteristics.prototype.unSetMinPlayer = function() {
    this._MinPlayerSet = !1;
};

NGameCharacteristics.prototype.getMaxPlayer = function() {
    return this._MaxPlayer;
};

NGameCharacteristics.prototype.setMaxPlayer = function(c) {
    this._MaxPlayer = c;
    this._MaxPlayerSet = !0;
};

NGameCharacteristics.prototype.isMaxPlayerSet = function() {
    return this._MaxPlayerSet;
};

NGameCharacteristics.prototype.unSetMaxPlayer = function() {
    this._MaxPlayerSet = !1;
};

NGameCharacteristics.prototype.isAutoStop = function() {
    return this._AutoStop;
};

NGameCharacteristics.prototype.setAutoStop = function(c) {
    this._AutoStop = c;
    this._AutoStopSet = !0;
};

NGameCharacteristics.prototype.isAutoStopSet = function() {
    return this._AutoStopSet;
};

NGameCharacteristics.prototype.unSetAutoStop = function() {
    this._AutoStopSet = !1;
};

NGameCharacteristics.prototype.isAutoStart = function() {
    return this._AutoStart;
};

NGameCharacteristics.prototype.setAutoStart = function(c) {
    this._AutoStart = c;
    this._AutoStartSet = !0;
};

NGameCharacteristics.prototype.isAutoStartSet = function() {
    return this._AutoStartSet;
};

NGameCharacteristics.prototype.unSetAutoStart = function() {
    this._AutoStartSet = !1;
};

NGameCharacteristics.prototype.getCustomData = function() {
    return this._CustomData;
};

NGameCharacteristics.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NGameCharacteristics.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NGameCharacteristics.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NGameCharacteristics.prototype.getDomainID = function() {
    return NGameCharacteristics.domainID;
};

NGameCharacteristics.prototype.getSerializerID = function() {
    return NGameCharacteristics.serializerID;
};

NGameCharacteristics.prototype.toString = function() {
    var c;
    c = "[NGameCharacteristics --> ";
    1 == this._MinPlayerSet && 0 == Utils.isNullInteger(this._MinPlayer) && (c += "_MinPlayer=" + this._MinPlayer + "| ");
    1 == this._MaxPlayerSet && 0 == Utils.isNullInteger(this._MaxPlayer) && (c += "_MaxPlayer=" + this._MaxPlayer + "| ");
    1 == this._AutoStopSet && 0 == Utils.isNullBoolean(this._AutoStop) && (c += "_AutoStop=" + this._AutoStop + "| ");
    1 == this._AutoStartSet && 0 == Utils.isNullBoolean(this._AutoStart) && (c += "_AutoStart=" + this._AutoStart + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NGameCharacteristics.prototype.clone = function() {
    var c = new NGameCharacteristics().init();
    1 == this._MinPlayerSet && 0 == Utils.isNullInteger(this._MinPlayer) && c.setMinPlayer(this._MinPlayer);
    1 == this._MaxPlayerSet && 0 == Utils.isNullInteger(this._MaxPlayer) && c.setMaxPlayer(this._MaxPlayer);
    1 == this._AutoStopSet && 0 == Utils.isNullBoolean(this._AutoStop) && c.setAutoStop(this._AutoStop);
    1 == this._AutoStartSet && 0 == Utils.isNullBoolean(this._AutoStart) && c.setAutoStart(this._AutoStart);
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NGameCharacteristics.domainID = 100;

NGameCharacteristics.serializerID = 3011;

StopGameStatus.values = function() {
    return StopGameStatus._values;
};

StopGameStatus.prototype.getValue = function() {
    return this._value;
};

StopGameStatus.prototype.name = function() {
    return this._name;
};

StopGameStatus.prototype.ordinal = function() {
    return this._value;
};

StopGameStatus.prototype.init = function(c, a) {
    void 0 == StopGameStatus._values && (StopGameStatus._values = []);
    this._value = a;
    this._name = c;
    StopGameStatus._values.push(this);
    return this;
};

StopGameStatus.fromValue = function(c) {
    for (var a = 0; a < StopGameStatus._values.length; a++) {
        var b = StopGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

StopGameStatus.valueOf = function(c) {
    for (var a = 0; a < StopGameStatus._values.length; a++) {
        var b = StopGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

StopGameStatus.prototype.getDomainID = function() {
    return 100;
};

StopGameStatus.prototype.getSerializerID = function() {
    return 10095;
};

StopGameStatus.prototype.toString = function() {
    return "StopGameStatus." + this._name;
};

StopGameStatus.prototype.clone = function() {
    return this;
};

StopGameStatus.INVALID_PARAMETERS = new StopGameStatus().init("INVALID_PARAMETERS", -2);

StopGameStatus.INTERNAL_ERROR = new StopGameStatus().init("INTERNAL_ERROR", -1);

StopGameStatus.STOPPED = new StopGameStatus().init("STOPPED", 0);

StopGameStatus.ALREADY_STOPPED = new StopGameStatus().init("ALREADY_STOPPED", 1);

StopGameStatus.UNKNOWN_GAME = new StopGameStatus().init("UNKNOWN_GAME", 2);

NextPlayerTurnResponse.prototype = new Message();

NextPlayerTurnResponse.prototype.constructor = NextPlayerTurnResponse;

NextPlayerTurnResponse.prototype.init = function() {
    this._NextPlayerTurnStatusSet = !1;
    return this;
};

NextPlayerTurnResponse.prototype.getNextPlayerTurnStatus = function() {
    return this._NextPlayerTurnStatus;
};

NextPlayerTurnResponse.prototype.setNextPlayerTurnStatus = function(c) {
    this._NextPlayerTurnStatus = c;
    this._NextPlayerTurnStatusSet = !0;
};

NextPlayerTurnResponse.prototype.isNextPlayerTurnStatusSet = function() {
    return this._NextPlayerTurnStatusSet;
};

NextPlayerTurnResponse.prototype.unSetNextPlayerTurnStatus = function() {
    this._NextPlayerTurnStatusSet = !1;
};

NextPlayerTurnResponse.prototype.getDomainID = function() {
    return NextPlayerTurnResponse.domainID;
};

NextPlayerTurnResponse.prototype.getSerializerID = function() {
    return NextPlayerTurnResponse.serializerID;
};

NextPlayerTurnResponse.prototype.toString = function() {
    var c;
    c = "[NextPlayerTurnResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._NextPlayerTurnStatusSet && 0 == Utils.isNull(this._NextPlayerTurnStatus) && (c += "_NextPlayerTurnStatus=" + this._NextPlayerTurnStatus + "| ");
    return c + "]";
};

NextPlayerTurnResponse.prototype.clone = function() {
    var c = new NextPlayerTurnResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._NextPlayerTurnStatusSet && 0 == Utils.isNull(this._NextPlayerTurnStatus) && c.setNextPlayerTurnStatus(this._NextPlayerTurnStatus);
    return c;
};

NextPlayerTurnResponse.domainID = 100;

NextPlayerTurnResponse.serializerID = 10121;

NSystem.prototype.init = function() {
    return this;
};

NSystem.currentTimeMillis = function() {
    return 0;
};

NRawGameMessage.prototype = new GameMessage();

NRawGameMessage.prototype.constructor = NRawGameMessage;

NRawGameMessage.prototype.init = function() {
    this._contentSet = !1;
    return this;
};

NRawGameMessage.prototype.getContent = function() {
    return this._content;
};

NRawGameMessage.prototype.setContent = function(c) {
    this._content = c;
    this._contentSet = !0;
};

NRawGameMessage.prototype.iscontentSet = function() {
    return this._contentSet;
};

NRawGameMessage.prototype.unSetcontent = function() {
    this._contentSet = !1;
};

NRawGameMessage.prototype.getDomainID = function() {
    return NRawGameMessage.domainID;
};

NRawGameMessage.prototype.getSerializerID = function() {
    return NRawGameMessage.serializerID;
};

NRawGameMessage.prototype.toString = function() {
    var c;
    c = "[NRawGameMessage --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    1 == this._contentSet && 0 == Utils.isNull(this._content) && (c += "_content=" + this._content + "| ");
    return c + "]";
};

NRawGameMessage.prototype.clone = function() {
    var c = new NRawGameMessage().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    1 == this._contentSet && 0 == Utils.isNull(this._content) && c.setContent(this._content);
    return c;
};

NRawGameMessage.domainID = 100;

NRawGameMessage.serializerID = 3025;

T5522.prototype.init = function(c) {
    this._d14326 = NLoggerFactory.getLogger("ConnectionFactoryImpl");
    this._w14329 = new NDomainList().init();
    this._n6358 = c;
    return this;
};

T5522.prototype._m25007 = function(c, a, b) {
    var e = b.split(":");
    b = e[0];
    var e = parseFloat(e[1]), f = e + 1, d = new T5530().init(a);
    if (null != this._n6358) for (var h = this._n6358.split("/"), g = 0; g < h.length; g++) {
        var k = h[g];
        "sock" == k ? d._m25056(new T5534().init(c, this._w14329, a, b, e, null)) : "wsock" == k ? (k = "ws://" + b + ":" + f + "/nuggeta/", 
        d._m25056(new T5534().init(c, this._w14329, a, null, 0, k))) : "http" == k ? d._m25056(new T5531().init(c, this._w14329, a, "http://" + b + ":" + f + "/httpstream/")) : this._d14326.error("Unsupported network " + k);
    } else this._d14326.error("No Layer defined ! using fallback http");
    "a12-plug" == c ? d._m25056(new T5531().init(c, this._w14329, a, "http://" + b + "/httpstream/")) : d._m25056(new T5531().init(c, this._w14329, a, "http://" + b + "/" + f + "/httpstream/"));
    return d;
};

T5522.prototype._m25057 = function(c) {
    this._w14329.addDomain(c);
};

NDomainList.prototype.init = function() {
    this.nDomains = [];
    return this;
};

NDomainList.prototype.addDomain = function(c) {
    this.nDomains.push(c);
};

NDomainList.prototype.getDomain = function(c) {
    for (var a = 0; a < this.nDomains.length; a++) {
        var b = this.nDomains[a];
        if (b.getDomainId() == c) return b;
    }
    return null;
};

NDomainList.prototype.getDomains = function() {
    return this.nDomains;
};

NDomainList.prototype.setDomainList = function(c) {
    for (var a = 0; a < c.length; a++) this.nDomains.push(c[a]);
};

SavePlayerProfileStatus.values = function() {
    return SavePlayerProfileStatus._values;
};

SavePlayerProfileStatus.prototype.getValue = function() {
    return this._value;
};

SavePlayerProfileStatus.prototype.name = function() {
    return this._name;
};

SavePlayerProfileStatus.prototype.ordinal = function() {
    return this._value;
};

SavePlayerProfileStatus.prototype.init = function(c, a) {
    void 0 == SavePlayerProfileStatus._values && (SavePlayerProfileStatus._values = []);
    this._value = a;
    this._name = c;
    SavePlayerProfileStatus._values.push(this);
    return this;
};

SavePlayerProfileStatus.fromValue = function(c) {
    for (var a = 0; a < SavePlayerProfileStatus._values.length; a++) {
        var b = SavePlayerProfileStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SavePlayerProfileStatus.valueOf = function(c) {
    for (var a = 0; a < SavePlayerProfileStatus._values.length; a++) {
        var b = SavePlayerProfileStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SavePlayerProfileStatus.prototype.getDomainID = function() {
    return 100;
};

SavePlayerProfileStatus.prototype.getSerializerID = function() {
    return 10014;
};

SavePlayerProfileStatus.prototype.toString = function() {
    return "SavePlayerProfileStatus." + this._name;
};

SavePlayerProfileStatus.prototype.clone = function() {
    return this;
};

SavePlayerProfileStatus.INVALID_PARAMETERS = new SavePlayerProfileStatus().init("INVALID_PARAMETERS", -2);

SavePlayerProfileStatus.INTERNAL_ERROR = new SavePlayerProfileStatus().init("INTERNAL_ERROR", -1);

SavePlayerProfileStatus.SUCCESS = new SavePlayerProfileStatus().init("SUCCESS", 0);

LoadGhostRequest.prototype = new Message();

LoadGhostRequest.prototype.constructor = LoadGhostRequest;

LoadGhostRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

LoadGhostRequest.prototype.getGameId = function() {
    return this._gameId;
};

LoadGhostRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

LoadGhostRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

LoadGhostRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

LoadGhostRequest.prototype.getDomainID = function() {
    return LoadGhostRequest.domainID;
};

LoadGhostRequest.prototype.getSerializerID = function() {
    return LoadGhostRequest.serializerID;
};

LoadGhostRequest.prototype.toString = function() {
    var c;
    c = "[LoadGhostRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

LoadGhostRequest.prototype.clone = function() {
    var c = new LoadGhostRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

LoadGhostRequest.domainID = 100;

LoadGhostRequest.serializerID = 10108;

AchieveWithProgressStatus.values = function() {
    return AchieveWithProgressStatus._values;
};

AchieveWithProgressStatus.prototype.getValue = function() {
    return this._value;
};

AchieveWithProgressStatus.prototype.name = function() {
    return this._name;
};

AchieveWithProgressStatus.prototype.ordinal = function() {
    return this._value;
};

AchieveWithProgressStatus.prototype.init = function(c, a) {
    void 0 == AchieveWithProgressStatus._values && (AchieveWithProgressStatus._values = []);
    this._value = a;
    this._name = c;
    AchieveWithProgressStatus._values.push(this);
    return this;
};

AchieveWithProgressStatus.fromValue = function(c) {
    for (var a = 0; a < AchieveWithProgressStatus._values.length; a++) {
        var b = AchieveWithProgressStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

AchieveWithProgressStatus.valueOf = function(c) {
    for (var a = 0; a < AchieveWithProgressStatus._values.length; a++) {
        var b = AchieveWithProgressStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

AchieveWithProgressStatus.prototype.getDomainID = function() {
    return 100;
};

AchieveWithProgressStatus.prototype.getSerializerID = function() {
    return 10071;
};

AchieveWithProgressStatus.prototype.toString = function() {
    return "AchieveWithProgressStatus." + this._name;
};

AchieveWithProgressStatus.prototype.clone = function() {
    return this;
};

AchieveWithProgressStatus.INVALID_PARAMETERS = new AchieveWithProgressStatus().init("INVALID_PARAMETERS", -2);

AchieveWithProgressStatus.INTERNAL_ERROR = new AchieveWithProgressStatus().init("INTERNAL_ERROR", -1);

AchieveWithProgressStatus.SUCCESS = new AchieveWithProgressStatus().init("SUCCESS", 0);

AchieveWithProgressStatus.FAILURE = new AchieveWithProgressStatus().init("FAILURE", 1);

AchieveWithProgressStatus.UNKNOWN_ACHIEVEMENT = new AchieveWithProgressStatus().init("UNKNOWN_ACHIEVEMENT", 2);

AchieveWithProgressStatus.ALREADY_ACHIEVED = new AchieveWithProgressStatus().init("ALREADY_ACHIEVED", 3);

AchieveWithProgressStatus.PROGRESS_SAVED = new AchieveWithProgressStatus().init("PROGRESS_SAVED", 6);

LoginResponse.prototype = new Message();

LoginResponse.prototype.constructor = LoginResponse;

LoginResponse.prototype.init = function() {
    this._playerSet = this._LoginStatusSet = !1;
    return this;
};

LoginResponse.prototype.getLoginStatus = function() {
    return this._LoginStatus;
};

LoginResponse.prototype.setLoginStatus = function(c) {
    this._LoginStatus = c;
    this._LoginStatusSet = !0;
};

LoginResponse.prototype.isLoginStatusSet = function() {
    return this._LoginStatusSet;
};

LoginResponse.prototype.unSetLoginStatus = function() {
    this._LoginStatusSet = !1;
};

LoginResponse.prototype.getPlayer = function() {
    return this._player;
};

LoginResponse.prototype.setPlayer = function(c) {
    this._player = c;
    this._playerSet = !0;
};

LoginResponse.prototype.isplayerSet = function() {
    return this._playerSet;
};

LoginResponse.prototype.unSetplayer = function() {
    this._playerSet = !1;
};

LoginResponse.prototype.getDomainID = function() {
    return LoginResponse.domainID;
};

LoginResponse.prototype.getSerializerID = function() {
    return LoginResponse.serializerID;
};

LoginResponse.prototype.toString = function() {
    var c;
    c = "[LoginResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._LoginStatusSet && 0 == Utils.isNull(this._LoginStatus) && (c += "_LoginStatus=" + this._LoginStatus + "| ");
    1 == this._playerSet && 0 == Utils.isNull(this._player) && (c += "_player=" + this._player + "| ");
    return c + "]";
};

LoginResponse.prototype.clone = function() {
    var c = new LoginResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._LoginStatusSet && 0 == Utils.isNull(this._LoginStatus) && c.setLoginStatus(this._LoginStatus);
    1 == this._playerSet && 0 == Utils.isNull(this._player) && c.setPlayer(this._player.clone());
    return c;
};

LoginResponse.domainID = 100;

LoginResponse.serializerID = 10010;

SaveAsGhostRequest.prototype = new Message();

SaveAsGhostRequest.prototype.constructor = SaveAsGhostRequest;

SaveAsGhostRequest.prototype.init = function() {
    this._gameSet = !1;
    return this;
};

SaveAsGhostRequest.prototype.getGame = function() {
    return this._game;
};

SaveAsGhostRequest.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

SaveAsGhostRequest.prototype.isgameSet = function() {
    return this._gameSet;
};

SaveAsGhostRequest.prototype.unSetgame = function() {
    this._gameSet = !1;
};

SaveAsGhostRequest.prototype.getDomainID = function() {
    return SaveAsGhostRequest.domainID;
};

SaveAsGhostRequest.prototype.getSerializerID = function() {
    return SaveAsGhostRequest.serializerID;
};

SaveAsGhostRequest.prototype.toString = function() {
    var c;
    c = "[SaveAsGhostRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

SaveAsGhostRequest.prototype.clone = function() {
    var c = new SaveAsGhostRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

SaveAsGhostRequest.domainID = 100;

SaveAsGhostRequest.serializerID = 10102;

SessionExpired.prototype = new Message();

SessionExpired.prototype.constructor = SessionExpired;

SessionExpired.prototype.init = function() {
    this._sessionIdSet = !1;
    return this;
};

SessionExpired.prototype.getSessionId = function() {
    return this._sessionId;
};

SessionExpired.prototype.setSessionId = function(c) {
    this._sessionId = c;
    this._sessionIdSet = !0;
};

SessionExpired.prototype.issessionIdSet = function() {
    return this._sessionIdSet;
};

SessionExpired.prototype.unSetsessionId = function() {
    this._sessionIdSet = !1;
};

SessionExpired.prototype.getDomainID = function() {
    return SessionExpired.domainID;
};

SessionExpired.prototype.getSerializerID = function() {
    return SessionExpired.serializerID;
};

SessionExpired.prototype.toString = function() {
    var c;
    c = "[SessionExpired --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && (c += "_sessionId=" + this._sessionId + "| ");
    return c + "]";
};

SessionExpired.prototype.clone = function() {
    var c = new SessionExpired().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && c.setSessionId(this._sessionId);
    return c;
};

SessionExpired.domainID = 100;

SessionExpired.serializerID = 3026;

NPlayer.prototype = new Storable();

NPlayer.prototype.constructor = NPlayer;

NPlayer.prototype.init = function() {
    this._CustomDataSet = this._AnonymousSet = this._LangSet = this._ActiveSet = this._CreationDateSet = this._ThirdPartyIdSet = this._LoginSourceSet = this._ConnectedSet = this._NameSet = this._AccessTokenSet = this._PasswordSet = this._LoginSet = this._IdSet = !1;
    return this;
};

NPlayer.prototype.getId = function() {
    return this._Id;
};

NPlayer.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NPlayer.prototype.isIdSet = function() {
    return this._IdSet;
};

NPlayer.prototype.unSetId = function() {
    this._IdSet = !1;
};

NPlayer.prototype.getLogin = function() {
    return this._Login;
};

NPlayer.prototype.setLogin = function(c) {
    this._Login = c;
    this._LoginSet = !0;
};

NPlayer.prototype.isLoginSet = function() {
    return this._LoginSet;
};

NPlayer.prototype.unSetLogin = function() {
    this._LoginSet = !1;
};

NPlayer.prototype.getPassword = function() {
    return this._Password;
};

NPlayer.prototype.setPassword = function(c) {
    this._Password = c;
    this._PasswordSet = !0;
};

NPlayer.prototype.isPasswordSet = function() {
    return this._PasswordSet;
};

NPlayer.prototype.unSetPassword = function() {
    this._PasswordSet = !1;
};

NPlayer.prototype.getAccessToken = function() {
    return this._AccessToken;
};

NPlayer.prototype.setAccessToken = function(c) {
    this._AccessToken = c;
    this._AccessTokenSet = !0;
};

NPlayer.prototype.isAccessTokenSet = function() {
    return this._AccessTokenSet;
};

NPlayer.prototype.unSetAccessToken = function() {
    this._AccessTokenSet = !1;
};

NPlayer.prototype.getName = function() {
    return this._Name;
};

NPlayer.prototype.setName = function(c) {
    this._Name = c;
    this._NameSet = !0;
};

NPlayer.prototype.isNameSet = function() {
    return this._NameSet;
};

NPlayer.prototype.unSetName = function() {
    this._NameSet = !1;
};

NPlayer.prototype.isConnected = function() {
    return this._Connected;
};

NPlayer.prototype.setConnected = function(c) {
    this._Connected = c;
    this._ConnectedSet = !0;
};

NPlayer.prototype.isConnectedSet = function() {
    return this._ConnectedSet;
};

NPlayer.prototype.unSetConnected = function() {
    this._ConnectedSet = !1;
};

NPlayer.prototype.getLoginSource = function() {
    return this._LoginSource;
};

NPlayer.prototype.setLoginSource = function(c) {
    this._LoginSource = c;
    this._LoginSourceSet = !0;
};

NPlayer.prototype.isLoginSourceSet = function() {
    return this._LoginSourceSet;
};

NPlayer.prototype.unSetLoginSource = function() {
    this._LoginSourceSet = !1;
};

NPlayer.prototype.getThirdPartyId = function() {
    return this._ThirdPartyId;
};

NPlayer.prototype.setThirdPartyId = function(c) {
    this._ThirdPartyId = c;
    this._ThirdPartyIdSet = !0;
};

NPlayer.prototype.isThirdPartyIdSet = function() {
    return this._ThirdPartyIdSet;
};

NPlayer.prototype.unSetThirdPartyId = function() {
    this._ThirdPartyIdSet = !1;
};

NPlayer.prototype.getCreationDate = function() {
    return this._CreationDate;
};

NPlayer.prototype.setCreationDate = function(c) {
    this._CreationDate = c;
    this._CreationDateSet = !0;
};

NPlayer.prototype.isCreationDateSet = function() {
    return this._CreationDateSet;
};

NPlayer.prototype.unSetCreationDate = function() {
    this._CreationDateSet = !1;
};

NPlayer.prototype.isActive = function() {
    return this._Active;
};

NPlayer.prototype.setActive = function(c) {
    this._Active = c;
    this._ActiveSet = !0;
};

NPlayer.prototype.isActiveSet = function() {
    return this._ActiveSet;
};

NPlayer.prototype.unSetActive = function() {
    this._ActiveSet = !1;
};

NPlayer.prototype.getLang = function() {
    return this._Lang;
};

NPlayer.prototype.setLang = function(c) {
    this._Lang = c;
    this._LangSet = !0;
};

NPlayer.prototype.isLangSet = function() {
    return this._LangSet;
};

NPlayer.prototype.unSetLang = function() {
    this._LangSet = !1;
};

NPlayer.prototype.isAnonymous = function() {
    return this._Anonymous;
};

NPlayer.prototype.setAnonymous = function(c) {
    this._Anonymous = c;
    this._AnonymousSet = !0;
};

NPlayer.prototype.isAnonymousSet = function() {
    return this._AnonymousSet;
};

NPlayer.prototype.unSetAnonymous = function() {
    this._AnonymousSet = !1;
};

NPlayer.prototype.getCustomData = function() {
    return this._CustomData;
};

NPlayer.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NPlayer.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NPlayer.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NPlayer.prototype.getDomainID = function() {
    return NPlayer.domainID;
};

NPlayer.prototype.getSerializerID = function() {
    return NPlayer.serializerID;
};

NPlayer.prototype.toString = function() {
    var c;
    c = "[NPlayer --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._LoginSet && 0 == Utils.isNull(this._Login) && (c += "_Login=" + this._Login + "| ");
    1 == this._PasswordSet && 0 == Utils.isNull(this._Password) && (c += "_Password=" + this._Password + "| ");
    1 == this._AccessTokenSet && 0 == Utils.isNull(this._AccessToken) && (c += "_AccessToken=" + this._AccessToken + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._ConnectedSet && 0 == Utils.isNullBoolean(this._Connected) && (c += "_Connected=" + this._Connected + "| ");
    1 == this._LoginSourceSet && 0 == Utils.isNull(this._LoginSource) && (c += "_LoginSource=" + this._LoginSource + "| ");
    1 == this._ThirdPartyIdSet && 0 == Utils.isNull(this._ThirdPartyId) && (c += "_ThirdPartyId=" + this._ThirdPartyId + "| ");
    1 == this._CreationDateSet && 0 == Utils.isNullDouble(this._CreationDate) && (c += "_CreationDate=" + this._CreationDate + "| ");
    1 == this._ActiveSet && 0 == Utils.isNullBoolean(this._Active) && (c += "_Active=" + this._Active + "| ");
    1 == this._LangSet && 0 == Utils.isNull(this._Lang) && (c += "_Lang=" + this._Lang + "| ");
    1 == this._AnonymousSet && 0 == Utils.isNullBoolean(this._Anonymous) && (c += "_Anonymous=" + this._Anonymous + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NPlayer.prototype.clone = function() {
    var c = new NPlayer().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._LoginSet && 0 == Utils.isNull(this._Login) && c.setLogin(this._Login);
    1 == this._PasswordSet && 0 == Utils.isNull(this._Password) && c.setPassword(this._Password);
    1 == this._AccessTokenSet && 0 == Utils.isNull(this._AccessToken) && c.setAccessToken(this._AccessToken);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    1 == this._ConnectedSet && 0 == Utils.isNullBoolean(this._Connected) && c.setConnected(this._Connected);
    1 == this._LoginSourceSet && 0 == Utils.isNull(this._LoginSource) && c.setLoginSource(this._LoginSource);
    1 == this._ThirdPartyIdSet && 0 == Utils.isNull(this._ThirdPartyId) && c.setThirdPartyId(this._ThirdPartyId);
    1 == this._CreationDateSet && 0 == Utils.isNullDouble(this._CreationDate) && c.setCreationDate(this._CreationDate);
    1 == this._ActiveSet && 0 == Utils.isNullBoolean(this._Active) && c.setActive(this._Active);
    1 == this._LangSet && 0 == Utils.isNull(this._Lang) && c.setLang(this._Lang);
    1 == this._AnonymousSet && 0 == Utils.isNullBoolean(this._Anonymous) && c.setAnonymous(this._Anonymous);
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NPlayer.domainID = 100;

NPlayer.serializerID = 3001;

StringUtil.prototype.init = function() {
    return this;
};

StringUtil.pad = function(c, a) {
    for (var b = c.length; b < a; b++) c = "0" + c;
    return c;
};

StartGameRequest.prototype = new Message();

StartGameRequest.prototype.constructor = StartGameRequest;

StartGameRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

StartGameRequest.prototype.getGameId = function() {
    return this._gameId;
};

StartGameRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

StartGameRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

StartGameRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

StartGameRequest.prototype.getDomainID = function() {
    return StartGameRequest.domainID;
};

StartGameRequest.prototype.getSerializerID = function() {
    return StartGameRequest.serializerID;
};

StartGameRequest.prototype.toString = function() {
    var c;
    c = "[StartGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

StartGameRequest.prototype.clone = function() {
    var c = new StartGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

StartGameRequest.domainID = 100;

StartGameRequest.serializerID = 10090;

T5515.prototype.init = function() {
    return this;
};

SendGameChatResponse.prototype = new Message();

SendGameChatResponse.prototype.constructor = SendGameChatResponse;

SendGameChatResponse.prototype.init = function() {
    this._SendGameChatStatusSet = !1;
    return this;
};

SendGameChatResponse.prototype.getSendGameChatStatus = function() {
    return this._SendGameChatStatus;
};

SendGameChatResponse.prototype.setSendGameChatStatus = function(c) {
    this._SendGameChatStatus = c;
    this._SendGameChatStatusSet = !0;
};

SendGameChatResponse.prototype.isSendGameChatStatusSet = function() {
    return this._SendGameChatStatusSet;
};

SendGameChatResponse.prototype.unSetSendGameChatStatus = function() {
    this._SendGameChatStatusSet = !1;
};

SendGameChatResponse.prototype.getDomainID = function() {
    return SendGameChatResponse.domainID;
};

SendGameChatResponse.prototype.getSerializerID = function() {
    return SendGameChatResponse.serializerID;
};

SendGameChatResponse.prototype.toString = function() {
    var c;
    c = "[SendGameChatResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SendGameChatStatusSet && 0 == Utils.isNull(this._SendGameChatStatus) && (c += "_SendGameChatStatus=" + this._SendGameChatStatus + "| ");
    return c + "]";
};

SendGameChatResponse.prototype.clone = function() {
    var c = new SendGameChatResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SendGameChatStatusSet && 0 == Utils.isNull(this._SendGameChatStatus) && c.setSendGameChatStatus(this._SendGameChatStatus);
    return c;
};

SendGameChatResponse.domainID = 100;

SendGameChatResponse.serializerID = 10112;

InvitationRequestNotification.prototype = new Message();

InvitationRequestNotification.prototype.constructor = InvitationRequestNotification;

InvitationRequestNotification.prototype.init = function() {
    this._InvitationSet = !1;
    return this;
};

InvitationRequestNotification.prototype.getInvitation = function() {
    return this._Invitation;
};

InvitationRequestNotification.prototype.setInvitation = function(c) {
    this._Invitation = c;
    this._InvitationSet = !0;
};

InvitationRequestNotification.prototype.isInvitationSet = function() {
    return this._InvitationSet;
};

InvitationRequestNotification.prototype.unSetInvitation = function() {
    this._InvitationSet = !1;
};

InvitationRequestNotification.prototype.getDomainID = function() {
    return InvitationRequestNotification.domainID;
};

InvitationRequestNotification.prototype.getSerializerID = function() {
    return InvitationRequestNotification.serializerID;
};

InvitationRequestNotification.prototype.toString = function() {
    var c;
    c = "[InvitationRequestNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && (c += "_Invitation=" + this._Invitation + "| ");
    return c + "]";
};

InvitationRequestNotification.prototype.clone = function() {
    var c = new InvitationRequestNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && c.setInvitation(this._Invitation.clone());
    return c;
};

InvitationRequestNotification.domainID = 100;

InvitationRequestNotification.serializerID = 3049;

NextPlayerTurnRequest.prototype = new Message();

NextPlayerTurnRequest.prototype.constructor = NextPlayerTurnRequest;

NextPlayerTurnRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

NextPlayerTurnRequest.prototype.getGameId = function() {
    return this._gameId;
};

NextPlayerTurnRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

NextPlayerTurnRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

NextPlayerTurnRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

NextPlayerTurnRequest.prototype.getDomainID = function() {
    return NextPlayerTurnRequest.domainID;
};

NextPlayerTurnRequest.prototype.getSerializerID = function() {
    return NextPlayerTurnRequest.serializerID;
};

NextPlayerTurnRequest.prototype.toString = function() {
    var c;
    c = "[NextPlayerTurnRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

NextPlayerTurnRequest.prototype.clone = function() {
    var c = new NextPlayerTurnRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

NextPlayerTurnRequest.domainID = 100;

NextPlayerTurnRequest.serializerID = 10120;

NFriendDemandStatus.values = function() {
    return NFriendDemandStatus._values;
};

NFriendDemandStatus.prototype.getValue = function() {
    return this._value;
};

NFriendDemandStatus.prototype.name = function() {
    return this._name;
};

NFriendDemandStatus.prototype.ordinal = function() {
    return this._value;
};

NFriendDemandStatus.prototype.init = function(c, a) {
    void 0 == NFriendDemandStatus._values && (NFriendDemandStatus._values = []);
    this._value = a;
    this._name = c;
    NFriendDemandStatus._values.push(this);
    return this;
};

NFriendDemandStatus.fromValue = function(c) {
    for (var a = 0; a < NFriendDemandStatus._values.length; a++) {
        var b = NFriendDemandStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

NFriendDemandStatus.valueOf = function(c) {
    for (var a = 0; a < NFriendDemandStatus._values.length; a++) {
        var b = NFriendDemandStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

NFriendDemandStatus.prototype.getDomainID = function() {
    return 100;
};

NFriendDemandStatus.prototype.getSerializerID = function() {
    return 8;
};

NFriendDemandStatus.prototype.toString = function() {
    return "NFriendDemandStatus." + this._name;
};

NFriendDemandStatus.prototype.clone = function() {
    return this;
};

NFriendDemandStatus.PENDING = new NFriendDemandStatus().init("PENDING", 0);

NFriendDemandStatus.ACCEPTED = new NFriendDemandStatus().init("ACCEPTED", 1);

GetPlayerProfileByPlayerIdResponse.prototype = new Message();

GetPlayerProfileByPlayerIdResponse.prototype.constructor = GetPlayerProfileByPlayerIdResponse;

GetPlayerProfileByPlayerIdResponse.prototype.init = function() {
    this._profileSet = this._GetPlayerProfileByPlayerIdStatusSet = !1;
    return this;
};

GetPlayerProfileByPlayerIdResponse.prototype.getGetPlayerProfileByPlayerIdStatus = function() {
    return this._GetPlayerProfileByPlayerIdStatus;
};

GetPlayerProfileByPlayerIdResponse.prototype.setGetPlayerProfileByPlayerIdStatus = function(c) {
    this._GetPlayerProfileByPlayerIdStatus = c;
    this._GetPlayerProfileByPlayerIdStatusSet = !0;
};

GetPlayerProfileByPlayerIdResponse.prototype.isGetPlayerProfileByPlayerIdStatusSet = function() {
    return this._GetPlayerProfileByPlayerIdStatusSet;
};

GetPlayerProfileByPlayerIdResponse.prototype.unSetGetPlayerProfileByPlayerIdStatus = function() {
    this._GetPlayerProfileByPlayerIdStatusSet = !1;
};

GetPlayerProfileByPlayerIdResponse.prototype.getProfile = function() {
    return this._profile;
};

GetPlayerProfileByPlayerIdResponse.prototype.setProfile = function(c) {
    this._profile = c;
    this._profileSet = !0;
};

GetPlayerProfileByPlayerIdResponse.prototype.isprofileSet = function() {
    return this._profileSet;
};

GetPlayerProfileByPlayerIdResponse.prototype.unSetprofile = function() {
    this._profileSet = !1;
};

GetPlayerProfileByPlayerIdResponse.prototype.getDomainID = function() {
    return GetPlayerProfileByPlayerIdResponse.domainID;
};

GetPlayerProfileByPlayerIdResponse.prototype.getSerializerID = function() {
    return GetPlayerProfileByPlayerIdResponse.serializerID;
};

GetPlayerProfileByPlayerIdResponse.prototype.toString = function() {
    var c;
    c = "[GetPlayerProfileByPlayerIdResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetPlayerProfileByPlayerIdStatusSet && 0 == Utils.isNull(this._GetPlayerProfileByPlayerIdStatus) && (c += "_GetPlayerProfileByPlayerIdStatus=" + this._GetPlayerProfileByPlayerIdStatus + "| ");
    1 == this._profileSet && 0 == Utils.isNull(this._profile) && (c += "_profile=" + this._profile + "| ");
    return c + "]";
};

GetPlayerProfileByPlayerIdResponse.prototype.clone = function() {
    var c = new GetPlayerProfileByPlayerIdResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetPlayerProfileByPlayerIdStatusSet && 0 == Utils.isNull(this._GetPlayerProfileByPlayerIdStatus) && c.setGetPlayerProfileByPlayerIdStatus(this._GetPlayerProfileByPlayerIdStatus);
    1 == this._profileSet && 0 == Utils.isNull(this._profile) && c.setProfile(this._profile.clone());
    return c;
};

GetPlayerProfileByPlayerIdResponse.domainID = 100;

GetPlayerProfileByPlayerIdResponse.serializerID = 11831;

PlayerMessage.prototype = new Message();

PlayerMessage.prototype.constructor = PlayerMessage;

PlayerMessage.prototype.init = function() {
    this._messageSet = this._playerIdSet = this._ApplicationIDSet = this._OwnerIDSet = this._targetIDSet = this._systemIDSet = !1;
    return this;
};

PlayerMessage.prototype.getSystemID = function() {
    return this._systemID;
};

PlayerMessage.prototype.setSystemID = function(c) {
    this._systemID = c;
    this._systemIDSet = !0;
};

PlayerMessage.prototype.issystemIDSet = function() {
    return this._systemIDSet;
};

PlayerMessage.prototype.unSetsystemID = function() {
    this._systemIDSet = !1;
};

PlayerMessage.prototype.getTargetID = function() {
    return this._targetID;
};

PlayerMessage.prototype.setTargetID = function(c) {
    this._targetID = c;
    this._targetIDSet = !0;
};

PlayerMessage.prototype.istargetIDSet = function() {
    return this._targetIDSet;
};

PlayerMessage.prototype.unSettargetID = function() {
    this._targetIDSet = !1;
};

PlayerMessage.prototype.getOwnerID = function() {
    return this._OwnerID;
};

PlayerMessage.prototype.setOwnerID = function(c) {
    this._OwnerID = c;
    this._OwnerIDSet = !0;
};

PlayerMessage.prototype.isOwnerIDSet = function() {
    return this._OwnerIDSet;
};

PlayerMessage.prototype.unSetOwnerID = function() {
    this._OwnerIDSet = !1;
};

PlayerMessage.prototype.getApplicationID = function() {
    return this._ApplicationID;
};

PlayerMessage.prototype.setApplicationID = function(c) {
    this._ApplicationID = c;
    this._ApplicationIDSet = !0;
};

PlayerMessage.prototype.isApplicationIDSet = function() {
    return this._ApplicationIDSet;
};

PlayerMessage.prototype.unSetApplicationID = function() {
    this._ApplicationIDSet = !1;
};

PlayerMessage.prototype.getPlayerId = function() {
    return this._playerId;
};

PlayerMessage.prototype.setPlayerId = function(c) {
    this._playerId = c;
    this._playerIdSet = !0;
};

PlayerMessage.prototype.isplayerIdSet = function() {
    return this._playerIdSet;
};

PlayerMessage.prototype.unSetplayerId = function() {
    this._playerIdSet = !1;
};

PlayerMessage.prototype.getMessage = function() {
    return this._message;
};

PlayerMessage.prototype.setMessage = function(c) {
    this._message = c;
    this._messageSet = !0;
};

PlayerMessage.prototype.ismessageSet = function() {
    return this._messageSet;
};

PlayerMessage.prototype.unSetmessage = function() {
    this._messageSet = !1;
};

PlayerMessage.prototype.getDomainID = function() {
    return PlayerMessage.domainID;
};

PlayerMessage.prototype.getSerializerID = function() {
    return PlayerMessage.serializerID;
};

PlayerMessage.prototype.toString = function() {
    var c;
    c = "[PlayerMessage --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._systemIDSet && 0 == Utils.isNull(this._systemID) && (c += "_systemID=" + this._systemID + "| ");
    1 == this._targetIDSet && 0 == Utils.isNull(this._targetID) && (c += "_targetID=" + this._targetID + "| ");
    1 == this._OwnerIDSet && 0 == Utils.isNull(this._OwnerID) && (c += "_OwnerID=" + this._OwnerID + "| ");
    1 == this._ApplicationIDSet && 0 == Utils.isNull(this._ApplicationID) && (c += "_ApplicationID=" + this._ApplicationID + "| ");
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && (c += "_playerId=" + this._playerId + "| ");
    1 == this._messageSet && 0 == Utils.isNull(this._message) && (c += "_message=" + this._message + "| ");
    return c + "]";
};

PlayerMessage.prototype.clone = function() {
    var c = new PlayerMessage().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._systemIDSet && 0 == Utils.isNull(this._systemID) && c.setSystemID(this._systemID);
    1 == this._targetIDSet && 0 == Utils.isNull(this._targetID) && c.setTargetID(this._targetID);
    1 == this._OwnerIDSet && 0 == Utils.isNull(this._OwnerID) && c.setOwnerID(this._OwnerID);
    1 == this._ApplicationIDSet && 0 == Utils.isNull(this._ApplicationID) && c.setApplicationID(this._ApplicationID);
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && c.setPlayerId(this._playerId);
    1 == this._messageSet && 0 == Utils.isNull(this._message) && c.setMessage(this._message.clone());
    return c;
};

PlayerMessage.domainID = 100;

PlayerMessage.serializerID = 3024;

PauseSessionMonitoringRequest.prototype = new Message();

PauseSessionMonitoringRequest.prototype.constructor = PauseSessionMonitoringRequest;

PauseSessionMonitoringRequest.prototype.init = function() {
    return this;
};

PauseSessionMonitoringRequest.prototype.getDomainID = function() {
    return PauseSessionMonitoringRequest.domainID;
};

PauseSessionMonitoringRequest.prototype.getSerializerID = function() {
    return PauseSessionMonitoringRequest.serializerID;
};

PauseSessionMonitoringRequest.prototype.toString = function() {
    var c;
    c = "[PauseSessionMonitoringRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

PauseSessionMonitoringRequest.prototype.clone = function() {
    var c = new PauseSessionMonitoringRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

PauseSessionMonitoringRequest.domainID = 100;

PauseSessionMonitoringRequest.serializerID = 10159;

AchieveWithProgressRequest.prototype = new Message();

AchieveWithProgressRequest.prototype.constructor = AchieveWithProgressRequest;

AchieveWithProgressRequest.prototype.init = function() {
    this._valueSet = this._achivementIdSet = !1;
    return this;
};

AchieveWithProgressRequest.prototype.getAchivementId = function() {
    return this._achivementId;
};

AchieveWithProgressRequest.prototype.setAchivementId = function(c) {
    this._achivementId = c;
    this._achivementIdSet = !0;
};

AchieveWithProgressRequest.prototype.isachivementIdSet = function() {
    return this._achivementIdSet;
};

AchieveWithProgressRequest.prototype.unSetachivementId = function() {
    this._achivementIdSet = !1;
};

AchieveWithProgressRequest.prototype.getValue = function() {
    return this._value;
};

AchieveWithProgressRequest.prototype.setValue = function(c) {
    this._value = c;
    this._valueSet = !0;
};

AchieveWithProgressRequest.prototype.isvalueSet = function() {
    return this._valueSet;
};

AchieveWithProgressRequest.prototype.unSetvalue = function() {
    this._valueSet = !1;
};

AchieveWithProgressRequest.prototype.getDomainID = function() {
    return AchieveWithProgressRequest.domainID;
};

AchieveWithProgressRequest.prototype.getSerializerID = function() {
    return AchieveWithProgressRequest.serializerID;
};

AchieveWithProgressRequest.prototype.toString = function() {
    var c;
    c = "[AchieveWithProgressRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && (c += "_achivementId=" + this._achivementId + "| ");
    1 == this._valueSet && 0 == Utils.isNullInteger(this._value) && (c += "_value=" + this._value + "| ");
    return c + "]";
};

AchieveWithProgressRequest.prototype.clone = function() {
    var c = new AchieveWithProgressRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && c.setAchivementId(this._achivementId);
    1 == this._valueSet && 0 == Utils.isNullInteger(this._value) && c.setValue(this._value);
    return c;
};

AchieveWithProgressRequest.domainID = 100;

AchieveWithProgressRequest.serializerID = 10069;

PauseSessionMonitoringResponse.prototype = new Message();

PauseSessionMonitoringResponse.prototype.constructor = PauseSessionMonitoringResponse;

PauseSessionMonitoringResponse.prototype.init = function() {
    this._PauseSessionMonitoringStatusSet = !1;
    return this;
};

PauseSessionMonitoringResponse.prototype.getPauseSessionMonitoringStatus = function() {
    return this._PauseSessionMonitoringStatus;
};

PauseSessionMonitoringResponse.prototype.setPauseSessionMonitoringStatus = function(c) {
    this._PauseSessionMonitoringStatus = c;
    this._PauseSessionMonitoringStatusSet = !0;
};

PauseSessionMonitoringResponse.prototype.isPauseSessionMonitoringStatusSet = function() {
    return this._PauseSessionMonitoringStatusSet;
};

PauseSessionMonitoringResponse.prototype.unSetPauseSessionMonitoringStatus = function() {
    this._PauseSessionMonitoringStatusSet = !1;
};

PauseSessionMonitoringResponse.prototype.getDomainID = function() {
    return PauseSessionMonitoringResponse.domainID;
};

PauseSessionMonitoringResponse.prototype.getSerializerID = function() {
    return PauseSessionMonitoringResponse.serializerID;
};

PauseSessionMonitoringResponse.prototype.toString = function() {
    var c;
    c = "[PauseSessionMonitoringResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._PauseSessionMonitoringStatusSet && 0 == Utils.isNull(this._PauseSessionMonitoringStatus) && (c += "_PauseSessionMonitoringStatus=" + this._PauseSessionMonitoringStatus + "| ");
    return c + "]";
};

PauseSessionMonitoringResponse.prototype.clone = function() {
    var c = new PauseSessionMonitoringResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._PauseSessionMonitoringStatusSet && 0 == Utils.isNull(this._PauseSessionMonitoringStatus) && c.setPauseSessionMonitoringStatus(this._PauseSessionMonitoringStatus);
    return c;
};

PauseSessionMonitoringResponse.domainID = 100;

PauseSessionMonitoringResponse.serializerID = 10160;

StartStatus.values = function() {
    return StartStatus._values;
};

StartStatus.prototype.getValue = function() {
    return this._value;
};

StartStatus.prototype.name = function() {
    return this._name;
};

StartStatus.prototype.ordinal = function() {
    return this._value;
};

StartStatus.prototype.init = function(c, a) {
    void 0 == StartStatus._values && (StartStatus._values = []);
    this._value = a;
    this._name = c;
    StartStatus._values.push(this);
    return this;
};

StartStatus.fromValue = function(c) {
    for (var a = 0; a < StartStatus._values.length; a++) {
        var b = StartStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

StartStatus.valueOf = function(c) {
    for (var a = 0; a < StartStatus._values.length; a++) {
        var b = StartStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

StartStatus.prototype.getDomainID = function() {
    return 100;
};

StartStatus.prototype.getSerializerID = function() {
    return 10;
};

StartStatus.prototype.toString = function() {
    return "StartStatus." + this._name;
};

StartStatus.prototype.clone = function() {
    return this;
};

StartStatus.READY = new StartStatus().init("READY", 0);

StartStatus.WARNED = new StartStatus().init("WARNED", 1);

StartStatus.FAILED = new StartStatus().init("FAILED", 2);

StartStatus.REFUSED = new StartStatus().init("REFUSED", 3);

IncreasePlayerWalletResponse.prototype = new Message();

IncreasePlayerWalletResponse.prototype.constructor = IncreasePlayerWalletResponse;

IncreasePlayerWalletResponse.prototype.init = function() {
    this._valueSet = this._IncreasePlayerWalletStatusSet = !1;
    return this;
};

IncreasePlayerWalletResponse.prototype.getIncreasePlayerWalletStatus = function() {
    return this._IncreasePlayerWalletStatus;
};

IncreasePlayerWalletResponse.prototype.setIncreasePlayerWalletStatus = function(c) {
    this._IncreasePlayerWalletStatus = c;
    this._IncreasePlayerWalletStatusSet = !0;
};

IncreasePlayerWalletResponse.prototype.isIncreasePlayerWalletStatusSet = function() {
    return this._IncreasePlayerWalletStatusSet;
};

IncreasePlayerWalletResponse.prototype.unSetIncreasePlayerWalletStatus = function() {
    this._IncreasePlayerWalletStatusSet = !1;
};

IncreasePlayerWalletResponse.prototype.getValue = function() {
    return this._value;
};

IncreasePlayerWalletResponse.prototype.setValue = function(c) {
    this._value = c;
    this._valueSet = !0;
};

IncreasePlayerWalletResponse.prototype.isvalueSet = function() {
    return this._valueSet;
};

IncreasePlayerWalletResponse.prototype.unSetvalue = function() {
    this._valueSet = !1;
};

IncreasePlayerWalletResponse.prototype.getDomainID = function() {
    return IncreasePlayerWalletResponse.domainID;
};

IncreasePlayerWalletResponse.prototype.getSerializerID = function() {
    return IncreasePlayerWalletResponse.serializerID;
};

IncreasePlayerWalletResponse.prototype.toString = function() {
    var c;
    c = "[IncreasePlayerWalletResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._IncreasePlayerWalletStatusSet && 0 == Utils.isNull(this._IncreasePlayerWalletStatus) && (c += "_IncreasePlayerWalletStatus=" + this._IncreasePlayerWalletStatus + "| ");
    1 == this._valueSet && 0 == Utils.isNullInteger(this._value) && (c += "_value=" + this._value + "| ");
    return c + "]";
};

IncreasePlayerWalletResponse.prototype.clone = function() {
    var c = new IncreasePlayerWalletResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._IncreasePlayerWalletStatusSet && 0 == Utils.isNull(this._IncreasePlayerWalletStatus) && c.setIncreasePlayerWalletStatus(this._IncreasePlayerWalletStatus);
    1 == this._valueSet && 0 == Utils.isNullInteger(this._value) && c.setValue(this._value);
    return c;
};

IncreasePlayerWalletResponse.domainID = 100;

IncreasePlayerWalletResponse.serializerID = 10058;

AbstractNuggetaApi.prototype.init = function() {
    var c = this;
    this.callbacks = [];
    this.requestCounter = 0;
    this._pump = new Pump().init(1e4);
    this._dispatcher = this.getDispatcher();
    this.messageListener = function(a) {
        a.getDomainID() == c.getDomain().getDomainId() && (c.pumpEnabled ? c._pump.add(a) : c.fireMessage(a));
    };
    return this;
};

AbstractNuggetaApi.prototype.getDomain = function() {
    return null;
};

AbstractNuggetaApi.prototype.getDispatcher = function() {
    return null;
};

AbstractNuggetaApi.prototype._cloneSerializable = function(c) {
    return c;
};

AbstractNuggetaApi.prototype.request = function(c, a) {
    this.stackCallback(c, a);
    return this.basicNuggetaPlug.sendMessage(c);
};

AbstractNuggetaApi.prototype.stackCallback = function(c, a) {
    var b = this.nextRequestId();
    c.setRequestId(b);
    this.callbacks[b] = a;
    return c;
};

AbstractNuggetaApi.prototype.executeCallback = function(c) {
    var a = c.getRequestId();
    if (null != a) {
        var b = this.callbacks[a];
        null != b && (delete this.callbacks[a], this.callHandler(c, b));
    }
    return c;
};

AbstractNuggetaApi.prototype.callHandler = function(c, a) {};

AbstractNuggetaApi.prototype.nextRequestId = function() {
    return "" + this.requestCounter++;
};

AbstractNuggetaApi.prototype.setBasicNuggetaPlug = function(c) {
    this.basicNuggetaPlug = c;
};

AbstractNuggetaApi.prototype.getDomainMessageListener = function() {
    var c = this.getDomain().getDomainId() + "";
    return new DomainMessageListener().init(c, this.messageListener);
};

AbstractNuggetaApi.prototype.enablePump = function(c) {
    this.pumpEnabled = c;
};

AbstractNuggetaApi.prototype.pump = function() {
    for (var c = this.pumpAndGet(), a = 0; a < c.length; a++) MemoryManagement.free(c[a]);
    MemoryManagement.free(c);
};

AbstractNuggetaApi.prototype.pumpAndGet = function() {
    for (var c = this._pump.pump(), a = 0; a < c.length; a++) this.fireMessage(c[a]);
    return c;
};

AbstractNuggetaApi.prototype.fireMessage = function(c) {
    null != c.getRequestId() ? this.executeCallback(c) : this._dispatcher.fireMessage(c);
};

NuggetaCoreApi.prototype = new AbstractNuggetaApi();

NuggetaCoreApi.prototype.constructor = NuggetaCoreApi;

NuggetaCoreApi.prototype.init = function() {
    this.dispatcher = new NuggetaCoreDispatcher().init();
    this.domain = new NuggetaCoreDomain().init();
    AbstractNuggetaApi.prototype.init.call(this);
    return this;
};

NuggetaCoreApi.prototype.getDomain = function() {
    return this.domain;
};

NuggetaCoreApi.prototype.getDispatcher = function() {
    return this.dispatcher;
};

NuggetaCoreApi.prototype.addNRawMessageHandler = function(c) {
    this.dispatcher.addNRawMessageHandler(c);
};

NuggetaCoreApi.prototype.removeNRawMessageHandler = function(c) {
    this.dispatcher.removeNRawMessageHandler(c);
};

NuggetaCoreApi.prototype.callHandler = function(c, a) {
    c instanceof NRawMessage && a(MemoryManagement._clone(c));
};

SendGameChatToPlayerListStatus.values = function() {
    return SendGameChatToPlayerListStatus._values;
};

SendGameChatToPlayerListStatus.prototype.getValue = function() {
    return this._value;
};

SendGameChatToPlayerListStatus.prototype.name = function() {
    return this._name;
};

SendGameChatToPlayerListStatus.prototype.ordinal = function() {
    return this._value;
};

SendGameChatToPlayerListStatus.prototype.init = function(c, a) {
    void 0 == SendGameChatToPlayerListStatus._values && (SendGameChatToPlayerListStatus._values = []);
    this._value = a;
    this._name = c;
    SendGameChatToPlayerListStatus._values.push(this);
    return this;
};

SendGameChatToPlayerListStatus.fromValue = function(c) {
    for (var a = 0; a < SendGameChatToPlayerListStatus._values.length; a++) {
        var b = SendGameChatToPlayerListStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SendGameChatToPlayerListStatus.valueOf = function(c) {
    for (var a = 0; a < SendGameChatToPlayerListStatus._values.length; a++) {
        var b = SendGameChatToPlayerListStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SendGameChatToPlayerListStatus.prototype.getDomainID = function() {
    return 100;
};

SendGameChatToPlayerListStatus.prototype.getSerializerID = function() {
    return 10929;
};

SendGameChatToPlayerListStatus.prototype.toString = function() {
    return "SendGameChatToPlayerListStatus." + this._name;
};

SendGameChatToPlayerListStatus.prototype.clone = function() {
    return this;
};

SendGameChatToPlayerListStatus.INVALID_PARAMETERS = new SendGameChatToPlayerListStatus().init("INVALID_PARAMETERS", -2);

SendGameChatToPlayerListStatus.INTERNAL_ERROR = new SendGameChatToPlayerListStatus().init("INTERNAL_ERROR", -1);

SendGameChatToPlayerListStatus.SENT = new SendGameChatToPlayerListStatus().init("SENT", 0);

SendGameChatToPlayerListStatus.FAILURE = new SendGameChatToPlayerListStatus().init("FAILURE", 1);

StartRequest.prototype = new Message();

StartRequest.prototype.constructor = StartRequest;

StartRequest.prototype.init = function() {
    return this;
};

StartRequest.prototype.getDomainID = function() {
    return StartRequest.domainID;
};

StartRequest.prototype.getSerializerID = function() {
    return StartRequest.serializerID;
};

StartRequest.prototype.toString = function() {
    var c;
    c = "[StartRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

StartRequest.prototype.clone = function() {
    var c = new StartRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

StartRequest.domainID = 100;

StartRequest.serializerID = 3044;

ConnectionLost.prototype = new Message();

ConnectionLost.prototype.constructor = ConnectionLost;

ConnectionLost.prototype.init = function() {
    return this;
};

ConnectionLost.prototype.getSerializerID = function() {
    return 0;
};

ConnectionLost.prototype.clone = function() {
    return new ConnectionLost().init();
};

ConnectionLost.prototype.toString = function() {
    return "";
};

ConnectionLost.prototype.equals = function(c) {
    return !1;
};

ConnectionLost.prototype.getDomainID = function() {
    return 0;
};

SaveStorableStatus.values = function() {
    return SaveStorableStatus._values;
};

SaveStorableStatus.prototype.getValue = function() {
    return this._value;
};

SaveStorableStatus.prototype.name = function() {
    return this._name;
};

SaveStorableStatus.prototype.ordinal = function() {
    return this._value;
};

SaveStorableStatus.prototype.init = function(c, a) {
    void 0 == SaveStorableStatus._values && (SaveStorableStatus._values = []);
    this._value = a;
    this._name = c;
    SaveStorableStatus._values.push(this);
    return this;
};

SaveStorableStatus.fromValue = function(c) {
    for (var a = 0; a < SaveStorableStatus._values.length; a++) {
        var b = SaveStorableStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SaveStorableStatus.valueOf = function(c) {
    for (var a = 0; a < SaveStorableStatus._values.length; a++) {
        var b = SaveStorableStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SaveStorableStatus.prototype.getDomainID = function() {
    return 100;
};

SaveStorableStatus.prototype.getSerializerID = function() {
    return 10119;
};

SaveStorableStatus.prototype.toString = function() {
    return "SaveStorableStatus." + this._name;
};

SaveStorableStatus.prototype.clone = function() {
    return this;
};

SaveStorableStatus.INVALID_PARAMETERS = new SaveStorableStatus().init("INVALID_PARAMETERS", -2);

SaveStorableStatus.INTERNAL_ERROR = new SaveStorableStatus().init("INTERNAL_ERROR", -1);

SaveStorableStatus.SUCCESS = new SaveStorableStatus().init("SUCCESS", 0);

SaveStorableStatus.FAILURE = new SaveStorableStatus().init("FAILURE", 1);

SwitchToServerInformation.prototype = new Message();

SwitchToServerInformation.prototype.constructor = SwitchToServerInformation;

SwitchToServerInformation.prototype.init = function() {
    this._AddressSet = !1;
    return this;
};

SwitchToServerInformation.prototype.getAddress = function() {
    return this._Address;
};

SwitchToServerInformation.prototype.setAddress = function(c) {
    this._Address = c;
    this._AddressSet = !0;
};

SwitchToServerInformation.prototype.isAddressSet = function() {
    return this._AddressSet;
};

SwitchToServerInformation.prototype.unSetAddress = function() {
    this._AddressSet = !1;
};

SwitchToServerInformation.prototype.getDomainID = function() {
    return SwitchToServerInformation.domainID;
};

SwitchToServerInformation.prototype.getSerializerID = function() {
    return SwitchToServerInformation.serializerID;
};

SwitchToServerInformation.prototype.toString = function() {
    var c;
    c = "[SwitchToServerInformation --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._AddressSet && 0 == Utils.isNull(this._Address) && (c += "_Address=" + this._Address + "| ");
    return c + "]";
};

SwitchToServerInformation.prototype.clone = function() {
    var c = new SwitchToServerInformation().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._AddressSet && 0 == Utils.isNull(this._Address) && c.setAddress(this._Address);
    return c;
};

SwitchToServerInformation.domainID = 100;

SwitchToServerInformation.serializerID = 3032;

UpdateStorableStatus.values = function() {
    return UpdateStorableStatus._values;
};

UpdateStorableStatus.prototype.getValue = function() {
    return this._value;
};

UpdateStorableStatus.prototype.name = function() {
    return this._name;
};

UpdateStorableStatus.prototype.ordinal = function() {
    return this._value;
};

UpdateStorableStatus.prototype.init = function(c, a) {
    void 0 == UpdateStorableStatus._values && (UpdateStorableStatus._values = []);
    this._value = a;
    this._name = c;
    UpdateStorableStatus._values.push(this);
    return this;
};

UpdateStorableStatus.fromValue = function(c) {
    for (var a = 0; a < UpdateStorableStatus._values.length; a++) {
        var b = UpdateStorableStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

UpdateStorableStatus.valueOf = function(c) {
    for (var a = 0; a < UpdateStorableStatus._values.length; a++) {
        var b = UpdateStorableStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

UpdateStorableStatus.prototype.getDomainID = function() {
    return 100;
};

UpdateStorableStatus.prototype.getSerializerID = function() {
    return 10128;
};

UpdateStorableStatus.prototype.toString = function() {
    return "UpdateStorableStatus." + this._name;
};

UpdateStorableStatus.prototype.clone = function() {
    return this;
};

UpdateStorableStatus.INVALID_PARAMETERS = new UpdateStorableStatus().init("INVALID_PARAMETERS", -2);

UpdateStorableStatus.INTERNAL_ERROR = new UpdateStorableStatus().init("INTERNAL_ERROR", -1);

UpdateStorableStatus.SUCCESS = new UpdateStorableStatus().init("SUCCESS", 0);

UpdateStorableStatus.FAILURE = new UpdateStorableStatus().init("FAILURE", 1);

T5529.prototype.init = function() {
    return this;
};

T5529._s18143 = 0;

T5529._g18144 = 1;

T5529._w18145 = 2;

T5529._f18146 = 3;

T5529._o18147 = 4;

Handshake.prototype = new Message();

Handshake.prototype.constructor = Handshake;

Handshake.prototype.init = function() {
    this._GameIdSet = this._debugSpIdSet = this._spIdSet = this._platformSet = this._sessionIdSet = this._playerIdsStoredSet = this._ReasonSet = this._VersionSet = !1;
    return this;
};

Handshake.prototype.getVersion = function() {
    return this._Version;
};

Handshake.prototype.setVersion = function(c) {
    this._Version = c;
    this._VersionSet = !0;
};

Handshake.prototype.isVersionSet = function() {
    return this._VersionSet;
};

Handshake.prototype.unSetVersion = function() {
    this._VersionSet = !1;
};

Handshake.prototype.getReason = function() {
    return this._Reason;
};

Handshake.prototype.setReason = function(c) {
    this._Reason = c;
    this._ReasonSet = !0;
};

Handshake.prototype.isReasonSet = function() {
    return this._ReasonSet;
};

Handshake.prototype.unSetReason = function() {
    this._ReasonSet = !1;
};

Handshake.prototype.getPlayerIdsStored = function() {
    return this._playerIdsStored;
};

Handshake.prototype.setPlayerIdsStored = function(c) {
    this._playerIdsStored = c;
    this._playerIdsStoredSet = !0;
};

Handshake.prototype.isplayerIdsStoredSet = function() {
    return this._playerIdsStoredSet;
};

Handshake.prototype.unSetplayerIdsStored = function() {
    this._playerIdsStoredSet = !1;
};

Handshake.prototype.getSessionId = function() {
    return this._sessionId;
};

Handshake.prototype.setSessionId = function(c) {
    this._sessionId = c;
    this._sessionIdSet = !0;
};

Handshake.prototype.issessionIdSet = function() {
    return this._sessionIdSet;
};

Handshake.prototype.unSetsessionId = function() {
    this._sessionIdSet = !1;
};

Handshake.prototype.getPlatform = function() {
    return this._platform;
};

Handshake.prototype.setPlatform = function(c) {
    this._platform = c;
    this._platformSet = !0;
};

Handshake.prototype.isplatformSet = function() {
    return this._platformSet;
};

Handshake.prototype.unSetplatform = function() {
    this._platformSet = !1;
};

Handshake.prototype.getSpId = function() {
    return this._spId;
};

Handshake.prototype.setSpId = function(c) {
    this._spId = c;
    this._spIdSet = !0;
};

Handshake.prototype.isspIdSet = function() {
    return this._spIdSet;
};

Handshake.prototype.unSetspId = function() {
    this._spIdSet = !1;
};

Handshake.prototype.getDebugSpId = function() {
    return this._debugSpId;
};

Handshake.prototype.setDebugSpId = function(c) {
    this._debugSpId = c;
    this._debugSpIdSet = !0;
};

Handshake.prototype.isdebugSpIdSet = function() {
    return this._debugSpIdSet;
};

Handshake.prototype.unSetdebugSpId = function() {
    this._debugSpIdSet = !1;
};

Handshake.prototype.getGameId = function() {
    return this._GameId;
};

Handshake.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

Handshake.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

Handshake.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

Handshake.prototype.getDomainID = function() {
    return Handshake.domainID;
};

Handshake.prototype.getSerializerID = function() {
    return Handshake.serializerID;
};

Handshake.prototype.toString = function() {
    var c;
    c = "[Handshake --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._VersionSet && 0 == Utils.isNull(this._Version) && (c += "_Version=" + this._Version + "| ");
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && (c += "_Reason=" + this._Reason + "| ");
    1 == this._playerIdsStoredSet && 0 == Utils.isNull(this._playerIdsStored) && (c += "_playerIdsStored=" + this._playerIdsStored + "| ");
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && (c += "_sessionId=" + this._sessionId + "| ");
    1 == this._platformSet && 0 == Utils.isNull(this._platform) && (c += "_platform=" + this._platform + "| ");
    1 == this._spIdSet && 0 == Utils.isNull(this._spId) && (c += "_spId=" + this._spId + "| ");
    1 == this._debugSpIdSet && 0 == Utils.isNull(this._debugSpId) && (c += "_debugSpId=" + this._debugSpId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    return c + "]";
};

Handshake.prototype.clone = function() {
    var c = new Handshake().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._VersionSet && 0 == Utils.isNull(this._Version) && c.setVersion(this._Version);
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && c.setReason(this._Reason);
    1 == this._playerIdsStoredSet && 0 == Utils.isNull(this._playerIdsStored) && c.setPlayerIdsStored(this._playerIdsStored);
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && c.setSessionId(this._sessionId);
    1 == this._platformSet && 0 == Utils.isNull(this._platform) && c.setPlatform(this._platform);
    1 == this._spIdSet && 0 == Utils.isNull(this._spId) && c.setSpId(this._spId);
    1 == this._debugSpIdSet && 0 == Utils.isNull(this._debugSpId) && c.setDebugSpId(this._debugSpId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    return c;
};

Handshake.domainID = 100;

Handshake.serializerID = 3003;

BasicNuggetaPlug.prototype.init = function() {
    void 0 == BasicNuggetaPlug.logger && (BasicNuggetaPlug.logger = NLoggerFactory.getLogger("BasicNuggetaPlug"));
    this.connectionManager = new T5527().init("basic-plug");
    this.messagesListeners = [];
    this.domainMessageListeners = [];
    this.messageCounter = 0;
    this.connectionFactory = new T5522().init(NConnectionConf.getLayers());
    return this;
};

BasicNuggetaPlug.prototype.start = function() {
    var c = this;
    this.isStarted() ? BasicNuggetaPlug.logger.error("Error Cannot start ! Plug already started") : c.connectionManager._m25006(c.connectionFactory._m25007("basic-plug", function(a) {
        if (a instanceof HeartBeatRequest) {
            var b = new HeartBeatResponse().init();
            c.connectionManager._m25002(b);
        } else for (b = a.getDomainID() + "", b = c.getDomainMessageListener(b), null != b && b(a), 
        b = 0; b < c.messagesListeners.length; b++) {
            var e = c.messagesListeners[b], f = MemoryManagement._clone(a);
            e(f);
        }
        MemoryManagement.free(a);
    }, c.url));
};

BasicNuggetaPlug.prototype.getDomainMessageListener = function(c) {
    for (var a = 0; a < this.domainMessageListeners.length; a++) {
        var b = this.domainMessageListeners[a];
        if (c == b.getDomainId()) return b.getMessageListener();
    }
    return null;
};

BasicNuggetaPlug.prototype.sendMessage = function(c) {
    var a = this.nextMessageId();
    c.setMessageId(a);
    this.connectionManager._m25002(c);
    return a;
};

BasicNuggetaPlug.prototype.addMessageListener = function(c) {
    this.messagesListeners.push(c);
};

BasicNuggetaPlug.prototype.removeMessageListener = function(c) {
    this.messagesListeners.splice(this.messagesListeners.indexOf(c), 1);
};

BasicNuggetaPlug.prototype.addDomainMessageListener = function(c) {
    this.domainMessageListeners.push(c);
};

BasicNuggetaPlug.prototype.removeDomainMessageListener = function(c) {
    this.domainMessageListeners.splice(this.domainMessageListeners.indexOf(c), 1);
};

BasicNuggetaPlug.prototype.addDomain = function(c) {
    this.connectionFactory._m25057(c);
};

BasicNuggetaPlug.prototype.stop = function() {
    this.connectionManager._m25011();
};

BasicNuggetaPlug.prototype.nextMessageId = function() {
    if (null != this.prefixMessageId) {
        var c = this.prefixMessageId + "_", a = c + this.messageCounter++;
        MemoryManagement.free(c);
        return a;
    }
    return "" + this.messageCounter++;
};

BasicNuggetaPlug.prototype.setConnectionReadyListener = function(c) {
    this.connectionManager._m25001(c);
};

BasicNuggetaPlug.prototype.setConnectionLostListener = function(c) {
    this.connectionManager._m25003(c);
};

BasicNuggetaPlug.prototype.setConnectionFailListener = function(c) {
    this.connectionManager._m25004(c);
};

BasicNuggetaPlug.prototype.setConnectionInvalidVersionDetectedListener = function(c) {
    this.connectionManager._m26426(c);
};

BasicNuggetaPlug.prototype.sendStopMessage = function() {
    this.connectionManager._m26427();
};

BasicNuggetaPlug.prototype.setPrefixMessageId = function(c) {
    this.prefixMessageId = c;
};

BasicNuggetaPlug.prototype.getUrl = function() {
    return this.url;
};

BasicNuggetaPlug.prototype.setUrl = function(c) {
    this.url = c;
};

BasicNuggetaPlug.prototype.isStarted = function() {
    return this.connectionManager._m26428();
};

LogoutRequest.prototype = new Message();

LogoutRequest.prototype.constructor = LogoutRequest;

LogoutRequest.prototype.init = function() {
    return this;
};

LogoutRequest.prototype.getDomainID = function() {
    return LogoutRequest.domainID;
};

LogoutRequest.prototype.getSerializerID = function() {
    return LogoutRequest.serializerID;
};

LogoutRequest.prototype.toString = function() {
    var c;
    c = "[LogoutRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

LogoutRequest.prototype.clone = function() {
    var c = new LogoutRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

LogoutRequest.domainID = 100;

LogoutRequest.serializerID = 10018;

ThirdPartySource.values = function() {
    return ThirdPartySource._values;
};

ThirdPartySource.prototype.getValue = function() {
    return this._value;
};

ThirdPartySource.prototype.name = function() {
    return this._name;
};

ThirdPartySource.prototype.ordinal = function() {
    return this._value;
};

ThirdPartySource.prototype.init = function(c, a) {
    void 0 == ThirdPartySource._values && (ThirdPartySource._values = []);
    this._value = a;
    this._name = c;
    ThirdPartySource._values.push(this);
    return this;
};

ThirdPartySource.fromValue = function(c) {
    for (var a = 0; a < ThirdPartySource._values.length; a++) {
        var b = ThirdPartySource._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ThirdPartySource.valueOf = function(c) {
    for (var a = 0; a < ThirdPartySource._values.length; a++) {
        var b = ThirdPartySource._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ThirdPartySource.prototype.getDomainID = function() {
    return 100;
};

ThirdPartySource.prototype.getSerializerID = function() {
    return 0;
};

ThirdPartySource.prototype.toString = function() {
    return "ThirdPartySource." + this._name;
};

ThirdPartySource.prototype.clone = function() {
    return this;
};

ThirdPartySource.FACEBOOK = new ThirdPartySource().init("FACEBOOK", 1);

ThirdPartySource.GOOGLEPLUS = new ThirdPartySource().init("GOOGLEPLUS", 2);

ThirdPartySource.TWITTER = new ThirdPartySource().init("TWITTER", 3);

ThirdPartySource.KIK = new ThirdPartySource().init("KIK", 4);

BinaryInputStream.prototype.init = function() {
    return this;
};

BinaryInputStream.readObject = function(c, a) {
    var b = null;
    try {
        if (a.get() == SerializationTypes.NULL_TYPE) return null;
        a.getInt();
        var e = a.getInt(), f = c.getDomain(e);
        if (null == f) throw Error("No domain available for domain id " + e, null);
        var d = f.getBinarySerializerFactory();
        if (null == d) throw Error("No binary factory found in domain " + e, null);
        var h = a.getShort(), b = d.readSerializable(c, a, h);
    } catch (g) {
        throw Error("Can't read Object", g);
    }
    return b;
};

BinaryInputStream.readIntegerList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_INTEGER) : b.push(c.getInt());
    return b;
};

BinaryInputStream.readShortList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_SHORT) : b.push(c.getShort());
    return b;
};

BinaryInputStream.readLongList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_LONG) : b.push(c.getLong());
    return b;
};

BinaryInputStream.readFloatList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_FLOAT) : b.push(c.getFloat());
    return b;
};

BinaryInputStream.readDoubleList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_DOUBLE) : b.push(c.getDouble());
    return b;
};

BinaryInputStream.readStringList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) b.push(BinaryInputStream.readString(c));
    return b;
};

BinaryInputStream.readBooleanList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_BOOLEAN) : b.push(1 == c.get());
    return b;
};

BinaryInputStream.readNMatrix2 = function(c, a) {
    if (a.get() == SerializationTypes.NULL_TYPE) return null;
    a.getInt();
    for (var b = a.getShort(), e = a.getShort(), f = new NMatrix2().init(b, e), b = b * e, e = 0; e < b; e++) f.addItem(BinaryInputStream.readObject(c, a));
    return f;
};

BinaryInputStream.readString = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? null : c.getString();
};

BinaryInputStream.readDate = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_DATE : new Date(c.getLong());
};

BinaryInputStream.readDouble = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_DOUBLE : c.getDouble();
};

BinaryInputStream.readInteger = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_INTEGER : c.getInt();
};

BinaryInputStream.readLong = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_LONG : c.getLong();
};

BinaryInputStream.readByte = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_BYTE : c.get();
};

BinaryInputStream.readShort = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_SHORT : c.getShort();
};

BinaryInputStream.readFloat = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_FLOAT : c.getFloat();
};

BinaryInputStream.readBoolean = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_BOOLEAN : 1 == c.get();
};

BinaryInputStream.getInteger = function(c) {
    return c.getInt();
};

BinaryInputStream.getLong = function(c) {
    return c.getLong();
};

BinaryInputStream.getShort = function(c) {
    return c.getShort();
};

BinaryInputStream.skipProperty = function(c) {
    var a = c.get();
    a != SerializationTypes.NULL_TYPE && (a == SerializationTypes.INTEGER ? c.skip(4) : a == SerializationTypes.SHORT ? c.skip(2) : a == SerializationTypes.LONG ? c.skip(8) : a == SerializationTypes.FLOAT ? c.skip(4) : a == SerializationTypes.DOUBLE ? c.skip(8) : a == SerializationTypes.BOOLEAN ? c.skip(1) : a == SerializationTypes.STRING ? (a = c.getShort(), 
    c.skip(a)) : a == SerializationTypes.OBJECT && (a = c.getInt(), c.skip(a)));
};

ForgotPasswordRequest.prototype = new Message();

ForgotPasswordRequest.prototype.constructor = ForgotPasswordRequest;

ForgotPasswordRequest.prototype.init = function() {
    this._loginSet = !1;
    return this;
};

ForgotPasswordRequest.prototype.getLogin = function() {
    return this._login;
};

ForgotPasswordRequest.prototype.setLogin = function(c) {
    this._login = c;
    this._loginSet = !0;
};

ForgotPasswordRequest.prototype.isloginSet = function() {
    return this._loginSet;
};

ForgotPasswordRequest.prototype.unSetlogin = function() {
    this._loginSet = !1;
};

ForgotPasswordRequest.prototype.getDomainID = function() {
    return ForgotPasswordRequest.domainID;
};

ForgotPasswordRequest.prototype.getSerializerID = function() {
    return ForgotPasswordRequest.serializerID;
};

ForgotPasswordRequest.prototype.toString = function() {
    var c;
    c = "[ForgotPasswordRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._loginSet && 0 == Utils.isNull(this._login) && (c += "_login=" + this._login + "| ");
    return c + "]";
};

ForgotPasswordRequest.prototype.clone = function() {
    var c = new ForgotPasswordRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._loginSet && 0 == Utils.isNull(this._login) && c.setLogin(this._login);
    return c;
};

ForgotPasswordRequest.domainID = 100;

ForgotPasswordRequest.serializerID = 10006;

RefuseFriendDemandRequest.prototype = new Message();

RefuseFriendDemandRequest.prototype.constructor = RefuseFriendDemandRequest;

RefuseFriendDemandRequest.prototype.init = function() {
    this._friendDemandIdSet = !1;
    return this;
};

RefuseFriendDemandRequest.prototype.getFriendDemandId = function() {
    return this._friendDemandId;
};

RefuseFriendDemandRequest.prototype.setFriendDemandId = function(c) {
    this._friendDemandId = c;
    this._friendDemandIdSet = !0;
};

RefuseFriendDemandRequest.prototype.isfriendDemandIdSet = function() {
    return this._friendDemandIdSet;
};

RefuseFriendDemandRequest.prototype.unSetfriendDemandId = function() {
    this._friendDemandIdSet = !1;
};

RefuseFriendDemandRequest.prototype.getDomainID = function() {
    return RefuseFriendDemandRequest.domainID;
};

RefuseFriendDemandRequest.prototype.getSerializerID = function() {
    return RefuseFriendDemandRequest.serializerID;
};

RefuseFriendDemandRequest.prototype.toString = function() {
    var c;
    c = "[RefuseFriendDemandRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && (c += "_friendDemandId=" + this._friendDemandId + "| ");
    return c + "]";
};

RefuseFriendDemandRequest.prototype.clone = function() {
    var c = new RefuseFriendDemandRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && c.setFriendDemandId(this._friendDemandId);
    return c;
};

RefuseFriendDemandRequest.domainID = 100;

RefuseFriendDemandRequest.serializerID = 10039;

ConsumeItemStatus.values = function() {
    return ConsumeItemStatus._values;
};

ConsumeItemStatus.prototype.getValue = function() {
    return this._value;
};

ConsumeItemStatus.prototype.name = function() {
    return this._name;
};

ConsumeItemStatus.prototype.ordinal = function() {
    return this._value;
};

ConsumeItemStatus.prototype.init = function(c, a) {
    void 0 == ConsumeItemStatus._values && (ConsumeItemStatus._values = []);
    this._value = a;
    this._name = c;
    ConsumeItemStatus._values.push(this);
    return this;
};

ConsumeItemStatus.fromValue = function(c) {
    for (var a = 0; a < ConsumeItemStatus._values.length; a++) {
        var b = ConsumeItemStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ConsumeItemStatus.valueOf = function(c) {
    for (var a = 0; a < ConsumeItemStatus._values.length; a++) {
        var b = ConsumeItemStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ConsumeItemStatus.prototype.getDomainID = function() {
    return 100;
};

ConsumeItemStatus.prototype.getSerializerID = function() {
    return 10056;
};

ConsumeItemStatus.prototype.toString = function() {
    return "ConsumeItemStatus." + this._name;
};

ConsumeItemStatus.prototype.clone = function() {
    return this;
};

ConsumeItemStatus.INVALID_PARAMETERS = new ConsumeItemStatus().init("INVALID_PARAMETERS", -2);

ConsumeItemStatus.INTERNAL_ERROR = new ConsumeItemStatus().init("INTERNAL_ERROR", -1);

ConsumeItemStatus.SUCCESS = new ConsumeItemStatus().init("SUCCESS", 0);

ConsumeItemStatus.NOT_ENOUGH_QUANTITY = new ConsumeItemStatus().init("NOT_ENOUGH_QUANTITY", 1);

ConsumeItemStatus.UNKNOWN_ITEM = new ConsumeItemStatus().init("UNKNOWN_ITEM", 2);

GameRunningStateChange.prototype = new Message();

GameRunningStateChange.prototype.constructor = GameRunningStateChange;

GameRunningStateChange.prototype.init = function() {
    this._GameRunningStateSet = this._GameIdSet = !1;
    return this;
};

GameRunningStateChange.prototype.getGameId = function() {
    return this._GameId;
};

GameRunningStateChange.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

GameRunningStateChange.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

GameRunningStateChange.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

GameRunningStateChange.prototype.getGameRunningState = function() {
    return this._GameRunningState;
};

GameRunningStateChange.prototype.setGameRunningState = function(c) {
    this._GameRunningState = c;
    this._GameRunningStateSet = !0;
};

GameRunningStateChange.prototype.isGameRunningStateSet = function() {
    return this._GameRunningStateSet;
};

GameRunningStateChange.prototype.unSetGameRunningState = function() {
    this._GameRunningStateSet = !1;
};

GameRunningStateChange.prototype.getDomainID = function() {
    return GameRunningStateChange.domainID;
};

GameRunningStateChange.prototype.getSerializerID = function() {
    return GameRunningStateChange.serializerID;
};

GameRunningStateChange.prototype.toString = function() {
    var c;
    c = "[GameRunningStateChange --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    1 == this._GameRunningStateSet && 0 == Utils.isNull(this._GameRunningState) && (c += "_GameRunningState=" + this._GameRunningState + "| ");
    return c + "]";
};

GameRunningStateChange.prototype.clone = function() {
    var c = new GameRunningStateChange().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    1 == this._GameRunningStateSet && 0 == Utils.isNull(this._GameRunningState) && c.setGameRunningState(this._GameRunningState);
    return c;
};

GameRunningStateChange.domainID = 100;

GameRunningStateChange.serializerID = 3005;

RemoveStorableResponse.prototype = new Message();

RemoveStorableResponse.prototype.constructor = RemoveStorableResponse;

RemoveStorableResponse.prototype.init = function() {
    this._storableIdSet = this._RemoveStorableStatusSet = !1;
    return this;
};

RemoveStorableResponse.prototype.getRemoveStorableStatus = function() {
    return this._RemoveStorableStatus;
};

RemoveStorableResponse.prototype.setRemoveStorableStatus = function(c) {
    this._RemoveStorableStatus = c;
    this._RemoveStorableStatusSet = !0;
};

RemoveStorableResponse.prototype.isRemoveStorableStatusSet = function() {
    return this._RemoveStorableStatusSet;
};

RemoveStorableResponse.prototype.unSetRemoveStorableStatus = function() {
    this._RemoveStorableStatusSet = !1;
};

RemoveStorableResponse.prototype.getStorableId = function() {
    return this._storableId;
};

RemoveStorableResponse.prototype.setStorableId = function(c) {
    this._storableId = c;
    this._storableIdSet = !0;
};

RemoveStorableResponse.prototype.isstorableIdSet = function() {
    return this._storableIdSet;
};

RemoveStorableResponse.prototype.unSetstorableId = function() {
    this._storableIdSet = !1;
};

RemoveStorableResponse.prototype.getDomainID = function() {
    return RemoveStorableResponse.domainID;
};

RemoveStorableResponse.prototype.getSerializerID = function() {
    return RemoveStorableResponse.serializerID;
};

RemoveStorableResponse.prototype.toString = function() {
    var c;
    c = "[RemoveStorableResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._RemoveStorableStatusSet && 0 == Utils.isNull(this._RemoveStorableStatus) && (c += "_RemoveStorableStatus=" + this._RemoveStorableStatus + "| ");
    1 == this._storableIdSet && 0 == Utils.isNull(this._storableId) && (c += "_storableId=" + this._storableId + "| ");
    return c + "]";
};

RemoveStorableResponse.prototype.clone = function() {
    var c = new RemoveStorableResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._RemoveStorableStatusSet && 0 == Utils.isNull(this._RemoveStorableStatus) && c.setRemoveStorableStatus(this._RemoveStorableStatus);
    1 == this._storableIdSet && 0 == Utils.isNull(this._storableId) && c.setStorableId(this._storableId);
    return c;
};

RemoveStorableResponse.domainID = 100;

RemoveStorableResponse.serializerID = 10130;

AES.prototype.xor_func = function(c, a) {
    for (var b = Array(c.length), e = 0; e < c.length; e++) b[e] = c[e] ^ a[e];
    return b;
};

AES.prototype.generateSubkeys = function(c) {
    for (var a = new Byte2DArray().init(this.Nb * (this.Nr + 1), 4), b = 0; b < this.Nk; ) a.set(b, 0, c[4 * b]), 
    a.set(b, 1, c[4 * b + 1]), a.set(b, 2, c[4 * b + 2]), a.set(b, 3, c[4 * b + 3]), 
    b++;
    for (b = this.Nk; b < this.Nb * (this.Nr + 1); ) {
        c = Array(4);
        for (var e = 0; 4 > e; e++) c[e] = a.get(b - 1, e);
        0 == b % this.Nk ? (c = this.SubWord(this.rotateWord(c)), c[0] ^= this.Rcon[b / this.Nk] & 255) : 6 < this.Nk && 4 == b % this.Nk && (c = this.SubWord(c));
        a.setRow(this.xor_func(a.getRow(b - this.Nk), c), b);
        b++;
    }
    return a;
};

AES.prototype.SubWord = function(c) {
    for (var a = Array(c.length), b = 0; b < a.length; b++) a[b] = this.sbox[c[b] & 255] & 255;
    return a;
};

AES.prototype.rotateWord = function(c) {
    var a = Array(c.length);
    a[0] = c[1];
    a[1] = c[2];
    a[2] = c[3];
    a[3] = c[0];
    return a;
};

AES.prototype.AddRoundKey = function(c, a, b) {
    for (var e = new Byte2DArray().init(c.getRowCount(), c.getColunmSize()), f = 0; f < this.Nb; f++) for (var d = 0; 4 > d; d++) e.set(d, f, c.get(d, f) ^ a.get(b * this.Nb + f, d));
    return e;
};

AES.prototype.SubBytes = function(c) {
    for (var a = new Byte2DArray().init(c.getRowCount(), c.getColunmSize()), b = 0; 4 > b; b++) for (var e = 0; e < this.Nb; e++) a.set(b, e, this.sbox[c.get(b, e) & 255] & 255);
    return a;
};

AES.prototype.InvSubBytes = function(c) {
    for (var a = 0; 4 > a; a++) for (var b = 0; b < this.Nb; b++) c.set(a, b, this.inv_sbox[c.get(a, b) & 255] & 255);
    return c;
};

AES.prototype.ShiftRows = function(c) {
    for (var a = Array(4), b = 1; 4 > b; b++) {
        for (var e = 0; e < this.Nb; e++) a[e] = c.get(b, (e + b) % this.Nb);
        for (e = 0; e < this.Nb; e++) c.set(b, e, a[e]);
    }
    return c;
};

AES.prototype.InvShiftRows = function(c) {
    for (var a = Array(4), b = 1; 4 > b; b++) {
        for (var e = 0; e < this.Nb; e++) a[(e + b) % this.Nb] = c.get(b, e);
        for (e = 0; e < this.Nb; e++) c.set(b, e, a[e]);
    }
    return c;
};

AES.prototype.InvMixColumns = function(c) {
    for (var a = Array(4), b = 0; 4 > b; b++) {
        a[0] = this.FFMul(14, c.get(0, b)) ^ this.FFMul(11, c.get(1, b)) ^ this.FFMul(13, c.get(2, b)) ^ this.FFMul(9, c.get(3, b));
        a[1] = this.FFMul(9, c.get(0, b)) ^ this.FFMul(14, c.get(1, b)) ^ this.FFMul(11, c.get(2, b)) ^ this.FFMul(13, c.get(3, b));
        a[2] = this.FFMul(13, c.get(0, b)) ^ this.FFMul(9, c.get(1, b)) ^ this.FFMul(14, c.get(2, b)) ^ this.FFMul(11, c.get(3, b));
        a[3] = this.FFMul(11, c.get(0, b)) ^ this.FFMul(13, c.get(1, b)) ^ this.FFMul(9, c.get(2, b)) ^ this.FFMul(14, c.get(3, b));
        for (var e = 0; 4 > e; e++) c.set(e, b, a[e]);
    }
    return c;
};

AES.prototype.MixColumns = function(c) {
    for (var a = Array(4), b = 0; 4 > b; b++) {
        a[0] = this.FFMul(2, c.get(0, b)) ^ this.FFMul(3, c.get(1, b)) ^ c.get(2, b) ^ c.get(3, b);
        a[1] = c.get(0, b) ^ this.FFMul(2, c.get(1, b)) ^ this.FFMul(3, c.get(2, b)) ^ c.get(3, b);
        a[2] = c.get(0, b) ^ c.get(1, b) ^ this.FFMul(2, c.get(2, b)) ^ this.FFMul(3, c.get(3, b));
        a[3] = this.FFMul(3, c.get(0, b)) ^ c.get(1, b) ^ c.get(2, b) ^ this.FFMul(2, c.get(3, b));
        for (var e = 0; 4 > e; e++) c.set(e, b, a[e]);
    }
    return c;
};

AES.prototype.FFMul = function(c, a) {
    for (var b = c, e = a, f = 0, d; 0 != b; ) 0 != (b & 1) && (f ^= e), d = e & 128, 
    e <<= 1, 0 != d && (e ^= 27), b = (b & 255) >> 1;
    return f;
};

AES.prototype.encryptBloc = function(c) {
    for (var a = Array(c.length), b = new Byte2DArray().init(4, this.Nb), e = 0; e < c.length; e++) b.set(Math.floor(e / 4), e % 4, c[e % 4 * 4 + Math.floor(e / 4)]);
    b = this.AddRoundKey(b, this.w, 0);
    for (e = 1; e < this.Nr; e++) b = this.SubBytes(b), b = this.ShiftRows(b), b = this.MixColumns(b), 
    b = this.AddRoundKey(b, this.w, e);
    b = this.SubBytes(b);
    b = this.ShiftRows(b);
    b = this.AddRoundKey(b, this.w, this.Nr);
    for (e = 0; e < c.length; e++) a[e % 4 * 4 + Math.floor(e / 4)] = b.get(Math.floor(e / 4), e % 4);
    return a;
};

AES.prototype.decryptBloc = function(c) {
    for (var a = Array(c.length), b = new Byte2DArray().init(4, this.Nb), e = 0; e < c.length; e++) b.set(Math.floor(e / 4), e % 4, c[e % 4 * 4 + Math.floor(e / 4)]);
    b = this.AddRoundKey(b, this.w, this.Nr);
    for (e = this.Nr - 1; 1 <= e; ) b = this.InvSubBytes(b), b = this.InvShiftRows(b), 
    b = this.AddRoundKey(b, this.w, e), b = this.InvMixColumns(b), e--;
    b = this.InvSubBytes(b);
    b = this.InvShiftRows(b);
    b = this.AddRoundKey(b, this.w, 0);
    for (e = 0; e < c.length; e++) a[e % 4 * 4 + Math.floor(e / 4)] = b.get(Math.floor(e / 4), e % 4);
    return a;
};

AES.prototype.encrypt = function(c, a) {
    this.Nb = 4;
    this.Nk = a.length / 4;
    this.Nr = this.Nk + 6;
    var b = 0, e = Array(1), f = 0, b = 16 - c.length % 16, e = Array(b);
    e[0] = 128;
    for (f = 1; f < b; f++) e[f] = 0;
    var d = Array(c.length + b), h = Array(16);
    this.w = this.generateSubkeys(a);
    for (var g = 0, k = 0; k < c.length + b; k++) f = k, 0 < f && 0 == f % 16 && (h = this.encryptBloc(h), 
    AES.arraycopy(h, 0, d, f - 16, h.length)), f < c.length ? h[f % 16] = c[f] : (h[f % 16] = e[g % 16], 
    g++);
    16 == h.length && (h = this.encryptBloc(h), AES.arraycopy(h, 0, d, f + 1 - 16, h.length));
    return d;
};

AES.prototype.decrypt = function(c, a) {
    var b = 0, e = Array(c.length), f = Array(16);
    this.Nb = 4;
    this.Nk = a.length / 4;
    this.Nr = this.Nk + 6;
    this.w = this.generateSubkeys(a);
    for (var d = 0; d < c.length; d++) b = d, 0 < b && 0 == b % 16 && (f = this.decryptBloc(f), 
    AES.arraycopy(f, 0, e, b - 16, f.length)), b < c.length && (f[b % 16] = c[b]);
    f = this.decryptBloc(f);
    AES.arraycopy(f, 0, e, b + 1 - 16, f.length);
    return e = AES.deletePadding(e);
};

AES.deletePadding = function(c) {
    for (var a = 0, b = c.length - 1; 0 == c[b]; ) a++, b--;
    b = Array(c.length - a - 1);
    AES.arraycopy(c, 0, b, 0, c.length - a - 1);
    return b;
};

AES.arraycopy = function(c, a, b, e, f) {
    a = e;
    for (e = 0; e < f; e++) b[a] = c[e], a++;
};

AES.prototype.initBlocks = function() {
    this.Rcon[0] = 141;
    this.Rcon[1] = 1;
    this.Rcon[2] = 2;
    this.Rcon[3] = 4;
    this.Rcon[4] = 8;
    this.Rcon[5] = 16;
    this.Rcon[6] = 32;
    this.Rcon[7] = 64;
    this.Rcon[8] = 128;
    this.Rcon[9] = 27;
    this.Rcon[10] = 54;
    this.Rcon[11] = 108;
    this.Rcon[12] = 216;
    this.Rcon[13] = 171;
    this.Rcon[14] = 77;
    this.Rcon[15] = 154;
    this.Rcon[16] = 47;
    this.Rcon[17] = 94;
    this.Rcon[18] = 188;
    this.Rcon[19] = 99;
    this.Rcon[20] = 198;
    this.Rcon[21] = 151;
    this.Rcon[22] = 53;
    this.Rcon[23] = 106;
    this.Rcon[24] = 212;
    this.Rcon[25] = 179;
    this.Rcon[26] = 125;
    this.Rcon[27] = 250;
    this.Rcon[28] = 239;
    this.Rcon[29] = 197;
    this.Rcon[30] = 145;
    this.Rcon[31] = 57;
    this.Rcon[32] = 114;
    this.Rcon[33] = 228;
    this.Rcon[34] = 211;
    this.Rcon[35] = 189;
    this.Rcon[36] = 97;
    this.Rcon[37] = 194;
    this.Rcon[38] = 159;
    this.Rcon[39] = 37;
    this.Rcon[40] = 74;
    this.Rcon[41] = 148;
    this.Rcon[42] = 51;
    this.Rcon[43] = 102;
    this.Rcon[44] = 204;
    this.Rcon[45] = 131;
    this.Rcon[46] = 29;
    this.Rcon[47] = 58;
    this.Rcon[48] = 116;
    this.Rcon[49] = 232;
    this.Rcon[50] = 203;
    this.Rcon[51] = 141;
    this.Rcon[52] = 1;
    this.Rcon[53] = 2;
    this.Rcon[54] = 4;
    this.Rcon[55] = 8;
    this.Rcon[56] = 16;
    this.Rcon[57] = 32;
    this.Rcon[58] = 64;
    this.Rcon[59] = 128;
    this.Rcon[60] = 27;
    this.Rcon[61] = 54;
    this.Rcon[62] = 108;
    this.Rcon[63] = 216;
    this.Rcon[64] = 171;
    this.Rcon[65] = 77;
    this.Rcon[66] = 154;
    this.Rcon[67] = 47;
    this.Rcon[68] = 94;
    this.Rcon[69] = 188;
    this.Rcon[70] = 99;
    this.Rcon[71] = 198;
    this.Rcon[72] = 151;
    this.Rcon[73] = 53;
    this.Rcon[74] = 106;
    this.Rcon[75] = 212;
    this.Rcon[76] = 179;
    this.Rcon[77] = 125;
    this.Rcon[78] = 250;
    this.Rcon[79] = 239;
    this.Rcon[80] = 197;
    this.Rcon[81] = 145;
    this.Rcon[82] = 57;
    this.Rcon[83] = 114;
    this.Rcon[84] = 228;
    this.Rcon[85] = 211;
    this.Rcon[86] = 189;
    this.Rcon[87] = 97;
    this.Rcon[88] = 194;
    this.Rcon[89] = 159;
    this.Rcon[90] = 37;
    this.Rcon[91] = 74;
    this.Rcon[92] = 148;
    this.Rcon[93] = 51;
    this.Rcon[94] = 102;
    this.Rcon[95] = 204;
    this.Rcon[96] = 131;
    this.Rcon[97] = 29;
    this.Rcon[98] = 58;
    this.Rcon[99] = 116;
    this.Rcon[100] = 232;
    this.Rcon[101] = 203;
    this.Rcon[102] = 141;
    this.Rcon[103] = 1;
    this.Rcon[104] = 2;
    this.Rcon[105] = 4;
    this.Rcon[106] = 8;
    this.Rcon[107] = 16;
    this.Rcon[108] = 32;
    this.Rcon[109] = 64;
    this.Rcon[110] = 128;
    this.Rcon[111] = 27;
    this.Rcon[112] = 54;
    this.Rcon[113] = 108;
    this.Rcon[114] = 216;
    this.Rcon[115] = 171;
    this.Rcon[116] = 77;
    this.Rcon[117] = 154;
    this.Rcon[118] = 47;
    this.Rcon[119] = 94;
    this.Rcon[120] = 188;
    this.Rcon[121] = 99;
    this.Rcon[122] = 198;
    this.Rcon[123] = 151;
    this.Rcon[124] = 53;
    this.Rcon[125] = 106;
    this.Rcon[126] = 212;
    this.Rcon[127] = 179;
    this.Rcon[128] = 125;
    this.Rcon[129] = 250;
    this.Rcon[130] = 239;
    this.Rcon[131] = 197;
    this.Rcon[132] = 145;
    this.Rcon[133] = 57;
    this.Rcon[134] = 114;
    this.Rcon[135] = 228;
    this.Rcon[136] = 211;
    this.Rcon[137] = 189;
    this.Rcon[138] = 97;
    this.Rcon[139] = 194;
    this.Rcon[140] = 159;
    this.Rcon[141] = 37;
    this.Rcon[142] = 74;
    this.Rcon[143] = 148;
    this.Rcon[144] = 51;
    this.Rcon[145] = 102;
    this.Rcon[146] = 204;
    this.Rcon[147] = 131;
    this.Rcon[148] = 29;
    this.Rcon[149] = 58;
    this.Rcon[150] = 116;
    this.Rcon[151] = 232;
    this.Rcon[152] = 203;
    this.Rcon[153] = 141;
    this.Rcon[154] = 1;
    this.Rcon[155] = 2;
    this.Rcon[156] = 4;
    this.Rcon[157] = 8;
    this.Rcon[158] = 16;
    this.Rcon[159] = 32;
    this.Rcon[160] = 64;
    this.Rcon[161] = 128;
    this.Rcon[162] = 27;
    this.Rcon[163] = 54;
    this.Rcon[164] = 108;
    this.Rcon[165] = 216;
    this.Rcon[166] = 171;
    this.Rcon[167] = 77;
    this.Rcon[168] = 154;
    this.Rcon[169] = 47;
    this.Rcon[170] = 94;
    this.Rcon[171] = 188;
    this.Rcon[172] = 99;
    this.Rcon[173] = 198;
    this.Rcon[174] = 151;
    this.Rcon[175] = 53;
    this.Rcon[176] = 106;
    this.Rcon[177] = 212;
    this.Rcon[178] = 179;
    this.Rcon[179] = 125;
    this.Rcon[180] = 250;
    this.Rcon[181] = 239;
    this.Rcon[182] = 197;
    this.Rcon[183] = 145;
    this.Rcon[184] = 57;
    this.Rcon[185] = 114;
    this.Rcon[186] = 228;
    this.Rcon[187] = 211;
    this.Rcon[188] = 189;
    this.Rcon[189] = 97;
    this.Rcon[190] = 194;
    this.Rcon[191] = 159;
    this.Rcon[192] = 37;
    this.Rcon[193] = 74;
    this.Rcon[194] = 148;
    this.Rcon[195] = 51;
    this.Rcon[196] = 102;
    this.Rcon[197] = 204;
    this.Rcon[198] = 131;
    this.Rcon[199] = 29;
    this.Rcon[200] = 58;
    this.Rcon[201] = 116;
    this.Rcon[202] = 232;
    this.Rcon[203] = 203;
    this.Rcon[204] = 141;
    this.Rcon[205] = 1;
    this.Rcon[206] = 2;
    this.Rcon[207] = 4;
    this.Rcon[208] = 8;
    this.Rcon[209] = 16;
    this.Rcon[210] = 32;
    this.Rcon[211] = 64;
    this.Rcon[212] = 128;
    this.Rcon[213] = 27;
    this.Rcon[214] = 54;
    this.Rcon[215] = 108;
    this.Rcon[216] = 216;
    this.Rcon[217] = 171;
    this.Rcon[218] = 77;
    this.Rcon[219] = 154;
    this.Rcon[220] = 47;
    this.Rcon[221] = 94;
    this.Rcon[222] = 188;
    this.Rcon[223] = 99;
    this.Rcon[224] = 198;
    this.Rcon[225] = 151;
    this.Rcon[226] = 53;
    this.Rcon[227] = 106;
    this.Rcon[228] = 212;
    this.Rcon[229] = 179;
    this.Rcon[230] = 125;
    this.Rcon[231] = 250;
    this.Rcon[232] = 239;
    this.Rcon[233] = 197;
    this.Rcon[234] = 145;
    this.Rcon[235] = 57;
    this.Rcon[236] = 114;
    this.Rcon[237] = 228;
    this.Rcon[238] = 211;
    this.Rcon[239] = 189;
    this.Rcon[240] = 97;
    this.Rcon[241] = 194;
    this.Rcon[242] = 159;
    this.Rcon[243] = 37;
    this.Rcon[244] = 74;
    this.Rcon[245] = 148;
    this.Rcon[246] = 51;
    this.Rcon[247] = 102;
    this.Rcon[248] = 204;
    this.Rcon[249] = 131;
    this.Rcon[250] = 29;
    this.Rcon[251] = 58;
    this.Rcon[252] = 116;
    this.Rcon[253] = 232;
    this.Rcon[254] = 203;
    this.inv_sbox[0] = 82;
    this.inv_sbox[1] = 9;
    this.inv_sbox[2] = 106;
    this.inv_sbox[3] = 213;
    this.inv_sbox[4] = 48;
    this.inv_sbox[5] = 54;
    this.inv_sbox[6] = 165;
    this.inv_sbox[7] = 56;
    this.inv_sbox[8] = 191;
    this.inv_sbox[9] = 64;
    this.inv_sbox[10] = 163;
    this.inv_sbox[11] = 158;
    this.inv_sbox[12] = 129;
    this.inv_sbox[13] = 243;
    this.inv_sbox[14] = 215;
    this.inv_sbox[15] = 251;
    this.inv_sbox[16] = 124;
    this.inv_sbox[17] = 227;
    this.inv_sbox[18] = 57;
    this.inv_sbox[19] = 130;
    this.inv_sbox[20] = 155;
    this.inv_sbox[21] = 47;
    this.inv_sbox[22] = 255;
    this.inv_sbox[23] = 135;
    this.inv_sbox[24] = 52;
    this.inv_sbox[25] = 142;
    this.inv_sbox[26] = 67;
    this.inv_sbox[27] = 68;
    this.inv_sbox[28] = 196;
    this.inv_sbox[29] = 222;
    this.inv_sbox[30] = 233;
    this.inv_sbox[31] = 203;
    this.inv_sbox[32] = 84;
    this.inv_sbox[33] = 123;
    this.inv_sbox[34] = 148;
    this.inv_sbox[35] = 50;
    this.inv_sbox[36] = 166;
    this.inv_sbox[37] = 194;
    this.inv_sbox[38] = 35;
    this.inv_sbox[39] = 61;
    this.inv_sbox[40] = 238;
    this.inv_sbox[41] = 76;
    this.inv_sbox[42] = 149;
    this.inv_sbox[43] = 11;
    this.inv_sbox[44] = 66;
    this.inv_sbox[45] = 250;
    this.inv_sbox[46] = 195;
    this.inv_sbox[47] = 78;
    this.inv_sbox[48] = 8;
    this.inv_sbox[49] = 46;
    this.inv_sbox[50] = 161;
    this.inv_sbox[51] = 102;
    this.inv_sbox[52] = 40;
    this.inv_sbox[53] = 217;
    this.inv_sbox[54] = 36;
    this.inv_sbox[55] = 178;
    this.inv_sbox[56] = 118;
    this.inv_sbox[57] = 91;
    this.inv_sbox[58] = 162;
    this.inv_sbox[59] = 73;
    this.inv_sbox[60] = 109;
    this.inv_sbox[61] = 139;
    this.inv_sbox[62] = 209;
    this.inv_sbox[63] = 37;
    this.inv_sbox[64] = 114;
    this.inv_sbox[65] = 248;
    this.inv_sbox[66] = 246;
    this.inv_sbox[67] = 100;
    this.inv_sbox[68] = 134;
    this.inv_sbox[69] = 104;
    this.inv_sbox[70] = 152;
    this.inv_sbox[71] = 22;
    this.inv_sbox[72] = 212;
    this.inv_sbox[73] = 164;
    this.inv_sbox[74] = 92;
    this.inv_sbox[75] = 204;
    this.inv_sbox[76] = 93;
    this.inv_sbox[77] = 101;
    this.inv_sbox[78] = 182;
    this.inv_sbox[79] = 146;
    this.inv_sbox[80] = 108;
    this.inv_sbox[81] = 112;
    this.inv_sbox[82] = 72;
    this.inv_sbox[83] = 80;
    this.inv_sbox[84] = 253;
    this.inv_sbox[85] = 237;
    this.inv_sbox[86] = 185;
    this.inv_sbox[87] = 218;
    this.inv_sbox[88] = 94;
    this.inv_sbox[89] = 21;
    this.inv_sbox[90] = 70;
    this.inv_sbox[91] = 87;
    this.inv_sbox[92] = 167;
    this.inv_sbox[93] = 141;
    this.inv_sbox[94] = 157;
    this.inv_sbox[95] = 132;
    this.inv_sbox[96] = 144;
    this.inv_sbox[97] = 216;
    this.inv_sbox[98] = 171;
    this.inv_sbox[99] = 0;
    this.inv_sbox[100] = 140;
    this.inv_sbox[101] = 188;
    this.inv_sbox[102] = 211;
    this.inv_sbox[103] = 10;
    this.inv_sbox[104] = 247;
    this.inv_sbox[105] = 228;
    this.inv_sbox[106] = 88;
    this.inv_sbox[107] = 5;
    this.inv_sbox[108] = 184;
    this.inv_sbox[109] = 179;
    this.inv_sbox[110] = 69;
    this.inv_sbox[111] = 6;
    this.inv_sbox[112] = 208;
    this.inv_sbox[113] = 44;
    this.inv_sbox[114] = 30;
    this.inv_sbox[115] = 143;
    this.inv_sbox[116] = 202;
    this.inv_sbox[117] = 63;
    this.inv_sbox[118] = 15;
    this.inv_sbox[119] = 2;
    this.inv_sbox[120] = 193;
    this.inv_sbox[121] = 175;
    this.inv_sbox[122] = 189;
    this.inv_sbox[123] = 3;
    this.inv_sbox[124] = 1;
    this.inv_sbox[125] = 19;
    this.inv_sbox[126] = 138;
    this.inv_sbox[127] = 107;
    this.inv_sbox[128] = 58;
    this.inv_sbox[129] = 145;
    this.inv_sbox[130] = 17;
    this.inv_sbox[131] = 65;
    this.inv_sbox[132] = 79;
    this.inv_sbox[133] = 103;
    this.inv_sbox[134] = 220;
    this.inv_sbox[135] = 234;
    this.inv_sbox[136] = 151;
    this.inv_sbox[137] = 242;
    this.inv_sbox[138] = 207;
    this.inv_sbox[139] = 206;
    this.inv_sbox[140] = 240;
    this.inv_sbox[141] = 180;
    this.inv_sbox[142] = 230;
    this.inv_sbox[143] = 115;
    this.inv_sbox[144] = 150;
    this.inv_sbox[145] = 172;
    this.inv_sbox[146] = 116;
    this.inv_sbox[147] = 34;
    this.inv_sbox[148] = 231;
    this.inv_sbox[149] = 173;
    this.inv_sbox[150] = 53;
    this.inv_sbox[151] = 133;
    this.inv_sbox[152] = 226;
    this.inv_sbox[153] = 249;
    this.inv_sbox[154] = 55;
    this.inv_sbox[155] = 232;
    this.inv_sbox[156] = 28;
    this.inv_sbox[157] = 117;
    this.inv_sbox[158] = 223;
    this.inv_sbox[159] = 110;
    this.inv_sbox[160] = 71;
    this.inv_sbox[161] = 241;
    this.inv_sbox[162] = 26;
    this.inv_sbox[163] = 113;
    this.inv_sbox[164] = 29;
    this.inv_sbox[165] = 41;
    this.inv_sbox[166] = 197;
    this.inv_sbox[167] = 137;
    this.inv_sbox[168] = 111;
    this.inv_sbox[169] = 183;
    this.inv_sbox[170] = 98;
    this.inv_sbox[171] = 14;
    this.inv_sbox[172] = 170;
    this.inv_sbox[173] = 24;
    this.inv_sbox[174] = 190;
    this.inv_sbox[175] = 27;
    this.inv_sbox[176] = 252;
    this.inv_sbox[177] = 86;
    this.inv_sbox[178] = 62;
    this.inv_sbox[179] = 75;
    this.inv_sbox[180] = 198;
    this.inv_sbox[181] = 210;
    this.inv_sbox[182] = 121;
    this.inv_sbox[183] = 32;
    this.inv_sbox[184] = 154;
    this.inv_sbox[185] = 219;
    this.inv_sbox[186] = 192;
    this.inv_sbox[187] = 254;
    this.inv_sbox[188] = 120;
    this.inv_sbox[189] = 205;
    this.inv_sbox[190] = 90;
    this.inv_sbox[191] = 244;
    this.inv_sbox[192] = 31;
    this.inv_sbox[193] = 221;
    this.inv_sbox[194] = 168;
    this.inv_sbox[195] = 51;
    this.inv_sbox[196] = 136;
    this.inv_sbox[197] = 7;
    this.inv_sbox[198] = 199;
    this.inv_sbox[199] = 49;
    this.inv_sbox[200] = 177;
    this.inv_sbox[201] = 18;
    this.inv_sbox[202] = 16;
    this.inv_sbox[203] = 89;
    this.inv_sbox[204] = 39;
    this.inv_sbox[205] = 128;
    this.inv_sbox[206] = 236;
    this.inv_sbox[207] = 95;
    this.inv_sbox[208] = 96;
    this.inv_sbox[209] = 81;
    this.inv_sbox[210] = 127;
    this.inv_sbox[211] = 169;
    this.inv_sbox[212] = 25;
    this.inv_sbox[213] = 181;
    this.inv_sbox[214] = 74;
    this.inv_sbox[215] = 13;
    this.inv_sbox[216] = 45;
    this.inv_sbox[217] = 229;
    this.inv_sbox[218] = 122;
    this.inv_sbox[219] = 159;
    this.inv_sbox[220] = 147;
    this.inv_sbox[221] = 201;
    this.inv_sbox[222] = 156;
    this.inv_sbox[223] = 239;
    this.inv_sbox[224] = 160;
    this.inv_sbox[225] = 224;
    this.inv_sbox[226] = 59;
    this.inv_sbox[227] = 77;
    this.inv_sbox[228] = 174;
    this.inv_sbox[229] = 42;
    this.inv_sbox[230] = 245;
    this.inv_sbox[231] = 176;
    this.inv_sbox[232] = 200;
    this.inv_sbox[233] = 235;
    this.inv_sbox[234] = 187;
    this.inv_sbox[235] = 60;
    this.inv_sbox[236] = 131;
    this.inv_sbox[237] = 83;
    this.inv_sbox[238] = 153;
    this.inv_sbox[239] = 97;
    this.inv_sbox[240] = 23;
    this.inv_sbox[241] = 43;
    this.inv_sbox[242] = 4;
    this.inv_sbox[243] = 126;
    this.inv_sbox[244] = 186;
    this.inv_sbox[245] = 119;
    this.inv_sbox[246] = 214;
    this.inv_sbox[247] = 38;
    this.inv_sbox[248] = 225;
    this.inv_sbox[249] = 105;
    this.inv_sbox[250] = 20;
    this.inv_sbox[251] = 99;
    this.inv_sbox[252] = 85;
    this.inv_sbox[253] = 33;
    this.inv_sbox[254] = 12;
    this.inv_sbox[255] = 125;
    this.sbox[0] = 99;
    this.sbox[1] = 124;
    this.sbox[2] = 119;
    this.sbox[3] = 123;
    this.sbox[4] = 242;
    this.sbox[5] = 107;
    this.sbox[6] = 111;
    this.sbox[7] = 197;
    this.sbox[8] = 48;
    this.sbox[9] = 1;
    this.sbox[10] = 103;
    this.sbox[11] = 43;
    this.sbox[12] = 254;
    this.sbox[13] = 215;
    this.sbox[14] = 171;
    this.sbox[15] = 118;
    this.sbox[16] = 202;
    this.sbox[17] = 130;
    this.sbox[18] = 201;
    this.sbox[19] = 125;
    this.sbox[20] = 250;
    this.sbox[21] = 89;
    this.sbox[22] = 71;
    this.sbox[23] = 240;
    this.sbox[24] = 173;
    this.sbox[25] = 212;
    this.sbox[26] = 162;
    this.sbox[27] = 175;
    this.sbox[28] = 156;
    this.sbox[29] = 164;
    this.sbox[30] = 114;
    this.sbox[31] = 192;
    this.sbox[32] = 183;
    this.sbox[33] = 253;
    this.sbox[34] = 147;
    this.sbox[35] = 38;
    this.sbox[36] = 54;
    this.sbox[37] = 63;
    this.sbox[38] = 247;
    this.sbox[39] = 204;
    this.sbox[40] = 52;
    this.sbox[41] = 165;
    this.sbox[42] = 229;
    this.sbox[43] = 241;
    this.sbox[44] = 113;
    this.sbox[45] = 216;
    this.sbox[46] = 49;
    this.sbox[47] = 21;
    this.sbox[48] = 4;
    this.sbox[49] = 199;
    this.sbox[50] = 35;
    this.sbox[51] = 195;
    this.sbox[52] = 24;
    this.sbox[53] = 150;
    this.sbox[54] = 5;
    this.sbox[55] = 154;
    this.sbox[56] = 7;
    this.sbox[57] = 18;
    this.sbox[58] = 128;
    this.sbox[59] = 226;
    this.sbox[60] = 235;
    this.sbox[61] = 39;
    this.sbox[62] = 178;
    this.sbox[63] = 117;
    this.sbox[64] = 9;
    this.sbox[65] = 131;
    this.sbox[66] = 44;
    this.sbox[67] = 26;
    this.sbox[68] = 27;
    this.sbox[69] = 110;
    this.sbox[70] = 90;
    this.sbox[71] = 160;
    this.sbox[72] = 82;
    this.sbox[73] = 59;
    this.sbox[74] = 214;
    this.sbox[75] = 179;
    this.sbox[76] = 41;
    this.sbox[77] = 227;
    this.sbox[78] = 47;
    this.sbox[79] = 132;
    this.sbox[80] = 83;
    this.sbox[81] = 209;
    this.sbox[82] = 0;
    this.sbox[83] = 237;
    this.sbox[84] = 32;
    this.sbox[85] = 252;
    this.sbox[86] = 177;
    this.sbox[87] = 91;
    this.sbox[88] = 106;
    this.sbox[89] = 203;
    this.sbox[90] = 190;
    this.sbox[91] = 57;
    this.sbox[92] = 74;
    this.sbox[93] = 76;
    this.sbox[94] = 88;
    this.sbox[95] = 207;
    this.sbox[96] = 208;
    this.sbox[97] = 239;
    this.sbox[98] = 170;
    this.sbox[99] = 251;
    this.sbox[100] = 67;
    this.sbox[101] = 77;
    this.sbox[102] = 51;
    this.sbox[103] = 133;
    this.sbox[104] = 69;
    this.sbox[105] = 249;
    this.sbox[106] = 2;
    this.sbox[107] = 127;
    this.sbox[108] = 80;
    this.sbox[109] = 60;
    this.sbox[110] = 159;
    this.sbox[111] = 168;
    this.sbox[112] = 81;
    this.sbox[113] = 163;
    this.sbox[114] = 64;
    this.sbox[115] = 143;
    this.sbox[116] = 146;
    this.sbox[117] = 157;
    this.sbox[118] = 56;
    this.sbox[119] = 245;
    this.sbox[120] = 188;
    this.sbox[121] = 182;
    this.sbox[122] = 218;
    this.sbox[123] = 33;
    this.sbox[124] = 16;
    this.sbox[125] = 255;
    this.sbox[126] = 243;
    this.sbox[127] = 210;
    this.sbox[128] = 205;
    this.sbox[129] = 12;
    this.sbox[130] = 19;
    this.sbox[131] = 236;
    this.sbox[132] = 95;
    this.sbox[133] = 151;
    this.sbox[134] = 68;
    this.sbox[135] = 23;
    this.sbox[136] = 196;
    this.sbox[137] = 167;
    this.sbox[138] = 126;
    this.sbox[139] = 61;
    this.sbox[140] = 100;
    this.sbox[141] = 93;
    this.sbox[142] = 25;
    this.sbox[143] = 115;
    this.sbox[144] = 96;
    this.sbox[145] = 129;
    this.sbox[146] = 79;
    this.sbox[147] = 220;
    this.sbox[148] = 34;
    this.sbox[149] = 42;
    this.sbox[150] = 144;
    this.sbox[151] = 136;
    this.sbox[152] = 70;
    this.sbox[153] = 238;
    this.sbox[154] = 184;
    this.sbox[155] = 20;
    this.sbox[156] = 222;
    this.sbox[157] = 94;
    this.sbox[158] = 11;
    this.sbox[159] = 219;
    this.sbox[160] = 224;
    this.sbox[161] = 50;
    this.sbox[162] = 58;
    this.sbox[163] = 10;
    this.sbox[164] = 73;
    this.sbox[165] = 6;
    this.sbox[166] = 36;
    this.sbox[167] = 92;
    this.sbox[168] = 194;
    this.sbox[169] = 211;
    this.sbox[170] = 172;
    this.sbox[171] = 98;
    this.sbox[172] = 145;
    this.sbox[173] = 149;
    this.sbox[174] = 228;
    this.sbox[175] = 121;
    this.sbox[176] = 231;
    this.sbox[177] = 200;
    this.sbox[178] = 55;
    this.sbox[179] = 109;
    this.sbox[180] = 141;
    this.sbox[181] = 213;
    this.sbox[182] = 78;
    this.sbox[183] = 169;
    this.sbox[184] = 108;
    this.sbox[185] = 86;
    this.sbox[186] = 244;
    this.sbox[187] = 234;
    this.sbox[188] = 101;
    this.sbox[189] = 122;
    this.sbox[190] = 174;
    this.sbox[191] = 8;
    this.sbox[192] = 186;
    this.sbox[193] = 120;
    this.sbox[194] = 37;
    this.sbox[195] = 46;
    this.sbox[196] = 28;
    this.sbox[197] = 166;
    this.sbox[198] = 180;
    this.sbox[199] = 198;
    this.sbox[200] = 232;
    this.sbox[201] = 221;
    this.sbox[202] = 116;
    this.sbox[203] = 31;
    this.sbox[204] = 75;
    this.sbox[205] = 189;
    this.sbox[206] = 139;
    this.sbox[207] = 138;
    this.sbox[208] = 112;
    this.sbox[209] = 62;
    this.sbox[210] = 181;
    this.sbox[211] = 102;
    this.sbox[212] = 72;
    this.sbox[213] = 3;
    this.sbox[214] = 246;
    this.sbox[215] = 14;
    this.sbox[216] = 97;
    this.sbox[217] = 53;
    this.sbox[218] = 87;
    this.sbox[219] = 185;
    this.sbox[220] = 134;
    this.sbox[221] = 193;
    this.sbox[222] = 29;
    this.sbox[223] = 158;
    this.sbox[224] = 225;
    this.sbox[225] = 248;
    this.sbox[226] = 152;
    this.sbox[227] = 17;
    this.sbox[228] = 105;
    this.sbox[229] = 217;
    this.sbox[230] = 142;
    this.sbox[231] = 148;
    this.sbox[232] = 155;
    this.sbox[233] = 30;
    this.sbox[234] = 135;
    this.sbox[235] = 233;
    this.sbox[236] = 206;
    this.sbox[237] = 85;
    this.sbox[238] = 40;
    this.sbox[239] = 223;
    this.sbox[240] = 140;
    this.sbox[241] = 161;
    this.sbox[242] = 137;
    this.sbox[243] = 13;
    this.sbox[244] = 191;
    this.sbox[245] = 230;
    this.sbox[246] = 66;
    this.sbox[247] = 104;
    this.sbox[248] = 65;
    this.sbox[249] = 153;
    this.sbox[250] = 45;
    this.sbox[251] = 15;
    this.sbox[252] = 176;
    this.sbox[253] = 84;
    this.sbox[254] = 187;
    this.sbox[255] = 22;
};

AES.prototype.init = function() {
    this.sbox = Array(256);
    this.inv_sbox = Array(256);
    this.Rcon = Array(255);
    this.initBlocks();
    return this;
};

GetGhostsStatus.values = function() {
    return GetGhostsStatus._values;
};

GetGhostsStatus.prototype.getValue = function() {
    return this._value;
};

GetGhostsStatus.prototype.name = function() {
    return this._name;
};

GetGhostsStatus.prototype.ordinal = function() {
    return this._value;
};

GetGhostsStatus.prototype.init = function(c, a) {
    void 0 == GetGhostsStatus._values && (GetGhostsStatus._values = []);
    this._value = a;
    this._name = c;
    GetGhostsStatus._values.push(this);
    return this;
};

GetGhostsStatus.fromValue = function(c) {
    for (var a = 0; a < GetGhostsStatus._values.length; a++) {
        var b = GetGhostsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetGhostsStatus.valueOf = function(c) {
    for (var a = 0; a < GetGhostsStatus._values.length; a++) {
        var b = GetGhostsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetGhostsStatus.prototype.getDomainID = function() {
    return 100;
};

GetGhostsStatus.prototype.getSerializerID = function() {
    return 10107;
};

GetGhostsStatus.prototype.toString = function() {
    return "GetGhostsStatus." + this._name;
};

GetGhostsStatus.prototype.clone = function() {
    return this;
};

GetGhostsStatus.INVALID_PARAMETERS = new GetGhostsStatus().init("INVALID_PARAMETERS", -2);

GetGhostsStatus.INTERNAL_ERROR = new GetGhostsStatus().init("INTERNAL_ERROR", -1);

GetGhostsStatus.SUCCESS = new GetGhostsStatus().init("SUCCESS", 0);

GetGhostsStatus.FAILURE = new GetGhostsStatus().init("FAILURE", 1);

GetGhostsStatus.INVALID_QUERY = new GetGhostsStatus().init("INVALID_QUERY", 3);

InvitePlayerResponse.prototype = new Message();

InvitePlayerResponse.prototype.constructor = InvitePlayerResponse;

InvitePlayerResponse.prototype.init = function() {
    this._invitationIdSet = this._InvitePlayerStatusSet = !1;
    return this;
};

InvitePlayerResponse.prototype.getInvitePlayerStatus = function() {
    return this._InvitePlayerStatus;
};

InvitePlayerResponse.prototype.setInvitePlayerStatus = function(c) {
    this._InvitePlayerStatus = c;
    this._InvitePlayerStatusSet = !0;
};

InvitePlayerResponse.prototype.isInvitePlayerStatusSet = function() {
    return this._InvitePlayerStatusSet;
};

InvitePlayerResponse.prototype.unSetInvitePlayerStatus = function() {
    this._InvitePlayerStatusSet = !1;
};

InvitePlayerResponse.prototype.getInvitationId = function() {
    return this._invitationId;
};

InvitePlayerResponse.prototype.setInvitationId = function(c) {
    this._invitationId = c;
    this._invitationIdSet = !0;
};

InvitePlayerResponse.prototype.isinvitationIdSet = function() {
    return this._invitationIdSet;
};

InvitePlayerResponse.prototype.unSetinvitationId = function() {
    this._invitationIdSet = !1;
};

InvitePlayerResponse.prototype.getDomainID = function() {
    return InvitePlayerResponse.domainID;
};

InvitePlayerResponse.prototype.getSerializerID = function() {
    return InvitePlayerResponse.serializerID;
};

InvitePlayerResponse.prototype.toString = function() {
    var c;
    c = "[InvitePlayerResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._InvitePlayerStatusSet && 0 == Utils.isNull(this._InvitePlayerStatus) && (c += "_InvitePlayerStatus=" + this._InvitePlayerStatus + "| ");
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && (c += "_invitationId=" + this._invitationId + "| ");
    return c + "]";
};

InvitePlayerResponse.prototype.clone = function() {
    var c = new InvitePlayerResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._InvitePlayerStatusSet && 0 == Utils.isNull(this._InvitePlayerStatus) && c.setInvitePlayerStatus(this._InvitePlayerStatus);
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && c.setInvitationId(this._invitationId);
    return c;
};

InvitePlayerResponse.domainID = 100;

InvitePlayerResponse.serializerID = 10169;

JoinGameResponse.prototype = new Message();

JoinGameResponse.prototype.constructor = JoinGameResponse;

JoinGameResponse.prototype.init = function() {
    this._gameSet = this._JoinGameStatusSet = !1;
    return this;
};

JoinGameResponse.prototype.getJoinGameStatus = function() {
    return this._JoinGameStatus;
};

JoinGameResponse.prototype.setJoinGameStatus = function(c) {
    this._JoinGameStatus = c;
    this._JoinGameStatusSet = !0;
};

JoinGameResponse.prototype.isJoinGameStatusSet = function() {
    return this._JoinGameStatusSet;
};

JoinGameResponse.prototype.unSetJoinGameStatus = function() {
    this._JoinGameStatusSet = !1;
};

JoinGameResponse.prototype.getGame = function() {
    return this._game;
};

JoinGameResponse.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

JoinGameResponse.prototype.isgameSet = function() {
    return this._gameSet;
};

JoinGameResponse.prototype.unSetgame = function() {
    this._gameSet = !1;
};

JoinGameResponse.prototype.getDomainID = function() {
    return JoinGameResponse.domainID;
};

JoinGameResponse.prototype.getSerializerID = function() {
    return JoinGameResponse.serializerID;
};

JoinGameResponse.prototype.toString = function() {
    var c;
    c = "[JoinGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._JoinGameStatusSet && 0 == Utils.isNull(this._JoinGameStatus) && (c += "_JoinGameStatus=" + this._JoinGameStatus + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

JoinGameResponse.prototype.clone = function() {
    var c = new JoinGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._JoinGameStatusSet && 0 == Utils.isNull(this._JoinGameStatus) && c.setJoinGameStatus(this._JoinGameStatus);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

JoinGameResponse.domainID = 100;

JoinGameResponse.serializerID = 10073;

OpenUrlData.prototype = new Message();

OpenUrlData.prototype.constructor = OpenUrlData;

OpenUrlData.prototype.init = function() {
    this._ThirdPartyIdSet = this._ThirdPartySourceSet = this._CallbackUrlSet = this._CallbackIdSet = this._SessionIdSet = !1;
    return this;
};

OpenUrlData.prototype.getSessionId = function() {
    return this._SessionId;
};

OpenUrlData.prototype.setSessionId = function(c) {
    this._SessionId = c;
    this._SessionIdSet = !0;
};

OpenUrlData.prototype.isSessionIdSet = function() {
    return this._SessionIdSet;
};

OpenUrlData.prototype.unSetSessionId = function() {
    this._SessionIdSet = !1;
};

OpenUrlData.prototype.getCallbackId = function() {
    return this._CallbackId;
};

OpenUrlData.prototype.setCallbackId = function(c) {
    this._CallbackId = c;
    this._CallbackIdSet = !0;
};

OpenUrlData.prototype.isCallbackIdSet = function() {
    return this._CallbackIdSet;
};

OpenUrlData.prototype.unSetCallbackId = function() {
    this._CallbackIdSet = !1;
};

OpenUrlData.prototype.getCallbackUrl = function() {
    return this._CallbackUrl;
};

OpenUrlData.prototype.setCallbackUrl = function(c) {
    this._CallbackUrl = c;
    this._CallbackUrlSet = !0;
};

OpenUrlData.prototype.isCallbackUrlSet = function() {
    return this._CallbackUrlSet;
};

OpenUrlData.prototype.unSetCallbackUrl = function() {
    this._CallbackUrlSet = !1;
};

OpenUrlData.prototype.getThirdPartySource = function() {
    return this._ThirdPartySource;
};

OpenUrlData.prototype.setThirdPartySource = function(c) {
    this._ThirdPartySource = c;
    this._ThirdPartySourceSet = !0;
};

OpenUrlData.prototype.isThirdPartySourceSet = function() {
    return this._ThirdPartySourceSet;
};

OpenUrlData.prototype.unSetThirdPartySource = function() {
    this._ThirdPartySourceSet = !1;
};

OpenUrlData.prototype.getThirdPartyId = function() {
    return this._ThirdPartyId;
};

OpenUrlData.prototype.setThirdPartyId = function(c) {
    this._ThirdPartyId = c;
    this._ThirdPartyIdSet = !0;
};

OpenUrlData.prototype.isThirdPartyIdSet = function() {
    return this._ThirdPartyIdSet;
};

OpenUrlData.prototype.unSetThirdPartyId = function() {
    this._ThirdPartyIdSet = !1;
};

OpenUrlData.prototype.getDomainID = function() {
    return OpenUrlData.domainID;
};

OpenUrlData.prototype.getSerializerID = function() {
    return OpenUrlData.serializerID;
};

OpenUrlData.prototype.toString = function() {
    var c;
    c = "[OpenUrlData --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SessionIdSet && 0 == Utils.isNull(this._SessionId) && (c += "_SessionId=" + this._SessionId + "| ");
    1 == this._CallbackIdSet && 0 == Utils.isNull(this._CallbackId) && (c += "_CallbackId=" + this._CallbackId + "| ");
    1 == this._CallbackUrlSet && 0 == Utils.isNull(this._CallbackUrl) && (c += "_CallbackUrl=" + this._CallbackUrl + "| ");
    1 == this._ThirdPartySourceSet && 0 == Utils.isNull(this._ThirdPartySource) && (c += "_ThirdPartySource=" + this._ThirdPartySource + "| ");
    1 == this._ThirdPartyIdSet && 0 == Utils.isNull(this._ThirdPartyId) && (c += "_ThirdPartyId=" + this._ThirdPartyId + "| ");
    return c + "]";
};

OpenUrlData.prototype.clone = function() {
    var c = new OpenUrlData().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SessionIdSet && 0 == Utils.isNull(this._SessionId) && c.setSessionId(this._SessionId);
    1 == this._CallbackIdSet && 0 == Utils.isNull(this._CallbackId) && c.setCallbackId(this._CallbackId);
    1 == this._CallbackUrlSet && 0 == Utils.isNull(this._CallbackUrl) && c.setCallbackUrl(this._CallbackUrl);
    1 == this._ThirdPartySourceSet && 0 == Utils.isNull(this._ThirdPartySource) && c.setThirdPartySource(this._ThirdPartySource);
    1 == this._ThirdPartyIdSet && 0 == Utils.isNull(this._ThirdPartyId) && c.setThirdPartyId(this._ThirdPartyId);
    return c;
};

OpenUrlData.domainID = 100;

OpenUrlData.serializerID = 3042;

RefuseInvitationRequest.prototype = new Message();

RefuseInvitationRequest.prototype.constructor = RefuseInvitationRequest;

RefuseInvitationRequest.prototype.init = function() {
    this._invitationIdSet = !1;
    return this;
};

RefuseInvitationRequest.prototype.getInvitationId = function() {
    return this._invitationId;
};

RefuseInvitationRequest.prototype.setInvitationId = function(c) {
    this._invitationId = c;
    this._invitationIdSet = !0;
};

RefuseInvitationRequest.prototype.isinvitationIdSet = function() {
    return this._invitationIdSet;
};

RefuseInvitationRequest.prototype.unSetinvitationId = function() {
    this._invitationIdSet = !1;
};

RefuseInvitationRequest.prototype.getDomainID = function() {
    return RefuseInvitationRequest.domainID;
};

RefuseInvitationRequest.prototype.getSerializerID = function() {
    return RefuseInvitationRequest.serializerID;
};

RefuseInvitationRequest.prototype.toString = function() {
    var c;
    c = "[RefuseInvitationRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && (c += "_invitationId=" + this._invitationId + "| ");
    return c + "]";
};

RefuseInvitationRequest.prototype.clone = function() {
    var c = new RefuseInvitationRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && c.setInvitationId(this._invitationId);
    return c;
};

RefuseInvitationRequest.domainID = 100;

RefuseInvitationRequest.serializerID = 10177;

SaveAsGhostStatus.values = function() {
    return SaveAsGhostStatus._values;
};

SaveAsGhostStatus.prototype.getValue = function() {
    return this._value;
};

SaveAsGhostStatus.prototype.name = function() {
    return this._name;
};

SaveAsGhostStatus.prototype.ordinal = function() {
    return this._value;
};

SaveAsGhostStatus.prototype.init = function(c, a) {
    void 0 == SaveAsGhostStatus._values && (SaveAsGhostStatus._values = []);
    this._value = a;
    this._name = c;
    SaveAsGhostStatus._values.push(this);
    return this;
};

SaveAsGhostStatus.fromValue = function(c) {
    for (var a = 0; a < SaveAsGhostStatus._values.length; a++) {
        var b = SaveAsGhostStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SaveAsGhostStatus.valueOf = function(c) {
    for (var a = 0; a < SaveAsGhostStatus._values.length; a++) {
        var b = SaveAsGhostStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SaveAsGhostStatus.prototype.getDomainID = function() {
    return 100;
};

SaveAsGhostStatus.prototype.getSerializerID = function() {
    return 10104;
};

SaveAsGhostStatus.prototype.toString = function() {
    return "SaveAsGhostStatus." + this._name;
};

SaveAsGhostStatus.prototype.clone = function() {
    return this;
};

SaveAsGhostStatus.INVALID_PARAMETERS = new SaveAsGhostStatus().init("INVALID_PARAMETERS", -2);

SaveAsGhostStatus.INTERNAL_ERROR = new SaveAsGhostStatus().init("INTERNAL_ERROR", -1);

SaveAsGhostStatus.SUCCESS = new SaveAsGhostStatus().init("SUCCESS", 0);

SaveAsGhostStatus.FAILURE = new SaveAsGhostStatus().init("FAILURE", 1);

GetGamesRequest.prototype = new Message();

GetGamesRequest.prototype.constructor = GetGamesRequest;

GetGamesRequest.prototype.init = function() {
    this._dbQuerySet = !1;
    return this;
};

GetGamesRequest.prototype.getDbQuery = function() {
    return this._dbQuery;
};

GetGamesRequest.prototype.setDbQuery = function(c) {
    this._dbQuery = c;
    this._dbQuerySet = !0;
};

GetGamesRequest.prototype.isdbQuerySet = function() {
    return this._dbQuerySet;
};

GetGamesRequest.prototype.unSetdbQuery = function() {
    this._dbQuerySet = !1;
};

GetGamesRequest.prototype.getDomainID = function() {
    return GetGamesRequest.domainID;
};

GetGamesRequest.prototype.getSerializerID = function() {
    return GetGamesRequest.serializerID;
};

GetGamesRequest.prototype.toString = function() {
    var c;
    c = "[GetGamesRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._dbQuerySet && 0 == Utils.isNull(this._dbQuery) && (c += "_dbQuery=" + this._dbQuery + "| ");
    return c + "]";
};

GetGamesRequest.prototype.clone = function() {
    var c = new GetGamesRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._dbQuerySet && 0 == Utils.isNull(this._dbQuery) && c.setDbQuery(this._dbQuery.clone());
    return c;
};

GetGamesRequest.domainID = 100;

GetGamesRequest.serializerID = 10099;

GetGhostsResponse.prototype = new Message();

GetGhostsResponse.prototype.constructor = GetGhostsResponse;

GetGhostsResponse.prototype.init = function() {
    this._GetGhostsStatusSet = !1;
    this._ghosts = [];
    this._ghostsSet = !1;
    return this;
};

GetGhostsResponse.prototype.getGetGhostsStatus = function() {
    return this._GetGhostsStatus;
};

GetGhostsResponse.prototype.setGetGhostsStatus = function(c) {
    this._GetGhostsStatus = c;
    this._GetGhostsStatusSet = !0;
};

GetGhostsResponse.prototype.isGetGhostsStatusSet = function() {
    return this._GetGhostsStatusSet;
};

GetGhostsResponse.prototype.unSetGetGhostsStatus = function() {
    this._GetGhostsStatusSet = !1;
};

GetGhostsResponse.prototype.getGhosts = function() {
    this._ghostsSet = !0;
    return this._ghosts;
};

GetGhostsResponse.prototype.setGhosts = function(c) {
    this._ghosts = c;
    this._ghostsSet = !0;
};

GetGhostsResponse.prototype.isghostsSet = function() {
    return this._ghostsSet;
};

GetGhostsResponse.prototype.unSetghosts = function() {
    this._ghostsSet = !1;
};

GetGhostsResponse.prototype.getDomainID = function() {
    return GetGhostsResponse.domainID;
};

GetGhostsResponse.prototype.getSerializerID = function() {
    return GetGhostsResponse.serializerID;
};

GetGhostsResponse.prototype.toString = function() {
    var c;
    c = "[GetGhostsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetGhostsStatusSet && 0 == Utils.isNull(this._GetGhostsStatus) && (c += "_GetGhostsStatus=" + this._GetGhostsStatus + "| ");
    1 == this._ghostsSet && 0 == Utils.isNull(this._ghosts) && (c += "_ghosts=" + this._ghosts + "| ");
    return c + "]";
};

GetGhostsResponse.prototype.clone = function() {
    var c = new GetGhostsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetGhostsStatusSet && 0 == Utils.isNull(this._GetGhostsStatus) && c.setGetGhostsStatus(this._GetGhostsStatus);
    if (1 == this._ghostsSet && 0 == Utils.isNull(this._ghosts)) {
        for (var a = [], b = 0; b < this._ghosts.length; ++b) {
            var e = this._ghosts[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setGhosts(a);
    }
    return c;
};

GetGhostsResponse.domainID = 100;

GetGhostsResponse.serializerID = 10106;

CompositeNDomainList.prototype = new NDomainList();

CompositeNDomainList.prototype.constructor = CompositeNDomainList;

CompositeNDomainList.prototype.init = function() {
    return this;
};

CompositeNDomainList.prototype.setDomainLists = function(c) {
    for (var a = 0; a < c.length; a++) this.setDomainList(c[a].getDomains());
};

SaveGameStatus.values = function() {
    return SaveGameStatus._values;
};

SaveGameStatus.prototype.getValue = function() {
    return this._value;
};

SaveGameStatus.prototype.name = function() {
    return this._name;
};

SaveGameStatus.prototype.ordinal = function() {
    return this._value;
};

SaveGameStatus.prototype.init = function(c, a) {
    void 0 == SaveGameStatus._values && (SaveGameStatus._values = []);
    this._value = a;
    this._name = c;
    SaveGameStatus._values.push(this);
    return this;
};

SaveGameStatus.fromValue = function(c) {
    for (var a = 0; a < SaveGameStatus._values.length; a++) {
        var b = SaveGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SaveGameStatus.valueOf = function(c) {
    for (var a = 0; a < SaveGameStatus._values.length; a++) {
        var b = SaveGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SaveGameStatus.prototype.getDomainID = function() {
    return 100;
};

SaveGameStatus.prototype.getSerializerID = function() {
    return 10143;
};

SaveGameStatus.prototype.toString = function() {
    return "SaveGameStatus." + this._name;
};

SaveGameStatus.prototype.clone = function() {
    return this;
};

SaveGameStatus.INVALID_PARAMETERS = new SaveGameStatus().init("INVALID_PARAMETERS", -2);

SaveGameStatus.INTERNAL_ERROR = new SaveGameStatus().init("INTERNAL_ERROR", -1);

SaveGameStatus.SUCCESS = new SaveGameStatus().init("SUCCESS", 0);

SaveGameStatus.UNKNOWN_GAME_ID = new SaveGameStatus().init("UNKNOWN_GAME_ID", 4);

NextPlayerTurnStatus.values = function() {
    return NextPlayerTurnStatus._values;
};

NextPlayerTurnStatus.prototype.getValue = function() {
    return this._value;
};

NextPlayerTurnStatus.prototype.name = function() {
    return this._name;
};

NextPlayerTurnStatus.prototype.ordinal = function() {
    return this._value;
};

NextPlayerTurnStatus.prototype.init = function(c, a) {
    void 0 == NextPlayerTurnStatus._values && (NextPlayerTurnStatus._values = []);
    this._value = a;
    this._name = c;
    NextPlayerTurnStatus._values.push(this);
    return this;
};

NextPlayerTurnStatus.fromValue = function(c) {
    for (var a = 0; a < NextPlayerTurnStatus._values.length; a++) {
        var b = NextPlayerTurnStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

NextPlayerTurnStatus.valueOf = function(c) {
    for (var a = 0; a < NextPlayerTurnStatus._values.length; a++) {
        var b = NextPlayerTurnStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

NextPlayerTurnStatus.prototype.getDomainID = function() {
    return 100;
};

NextPlayerTurnStatus.prototype.getSerializerID = function() {
    return 10122;
};

NextPlayerTurnStatus.prototype.toString = function() {
    return "NextPlayerTurnStatus." + this._name;
};

NextPlayerTurnStatus.prototype.clone = function() {
    return this;
};

NextPlayerTurnStatus.INVALID_PARAMETERS = new NextPlayerTurnStatus().init("INVALID_PARAMETERS", -2);

NextPlayerTurnStatus.INTERNAL_ERROR = new NextPlayerTurnStatus().init("INTERNAL_ERROR", -1);

NextPlayerTurnStatus.SUCCESS = new NextPlayerTurnStatus().init("SUCCESS", 0);

NextPlayerTurnStatus.FAILURE = new NextPlayerTurnStatus().init("FAILURE", 1);

NextPlayerTurnStatus.GAME_NOT_FOUND = new NextPlayerTurnStatus().init("GAME_NOT_FOUND", 4);

NPlayerProfile.prototype = new Storable();

NPlayerProfile.prototype.constructor = NPlayerProfile;

NPlayerProfile.prototype.init = function() {
    this._CountrySet = this._EmailSet = this._PlayerIdSet = this._AvatarSet = !1;
    this._Friends = [];
    this._CustomDataSet = this._FriendsSet = !1;
    return this;
};

NPlayerProfile.prototype.getAvatar = function() {
    return this._Avatar;
};

NPlayerProfile.prototype.setAvatar = function(c) {
    this._Avatar = c;
    this._AvatarSet = !0;
};

NPlayerProfile.prototype.isAvatarSet = function() {
    return this._AvatarSet;
};

NPlayerProfile.prototype.unSetAvatar = function() {
    this._AvatarSet = !1;
};

NPlayerProfile.prototype.getPlayerId = function() {
    return this._PlayerId;
};

NPlayerProfile.prototype.setPlayerId = function(c) {
    this._PlayerId = c;
    this._PlayerIdSet = !0;
};

NPlayerProfile.prototype.isPlayerIdSet = function() {
    return this._PlayerIdSet;
};

NPlayerProfile.prototype.unSetPlayerId = function() {
    this._PlayerIdSet = !1;
};

NPlayerProfile.prototype.getEmail = function() {
    return this._Email;
};

NPlayerProfile.prototype.setEmail = function(c) {
    this._Email = c;
    this._EmailSet = !0;
};

NPlayerProfile.prototype.isEmailSet = function() {
    return this._EmailSet;
};

NPlayerProfile.prototype.unSetEmail = function() {
    this._EmailSet = !1;
};

NPlayerProfile.prototype.getCountry = function() {
    return this._Country;
};

NPlayerProfile.prototype.setCountry = function(c) {
    this._Country = c;
    this._CountrySet = !0;
};

NPlayerProfile.prototype.isCountrySet = function() {
    return this._CountrySet;
};

NPlayerProfile.prototype.unSetCountry = function() {
    this._CountrySet = !1;
};

NPlayerProfile.prototype.getFriends = function() {
    this._FriendsSet = !0;
    return this._Friends;
};

NPlayerProfile.prototype.setFriends = function(c) {
    this._Friends = c;
    this._FriendsSet = !0;
};

NPlayerProfile.prototype.isFriendsSet = function() {
    return this._FriendsSet;
};

NPlayerProfile.prototype.unSetFriends = function() {
    this._FriendsSet = !1;
};

NPlayerProfile.prototype.getCustomData = function() {
    return this._CustomData;
};

NPlayerProfile.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NPlayerProfile.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NPlayerProfile.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NPlayerProfile.prototype.getDomainID = function() {
    return NPlayerProfile.domainID;
};

NPlayerProfile.prototype.getSerializerID = function() {
    return NPlayerProfile.serializerID;
};

NPlayerProfile.prototype.toString = function() {
    var c;
    c = "[NPlayerProfile --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._AvatarSet && 0 == Utils.isNull(this._Avatar) && (c += "_Avatar=" + this._Avatar + "| ");
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && (c += "_PlayerId=" + this._PlayerId + "| ");
    1 == this._EmailSet && 0 == Utils.isNull(this._Email) && (c += "_Email=" + this._Email + "| ");
    1 == this._CountrySet && 0 == Utils.isNull(this._Country) && (c += "_Country=" + this._Country + "| ");
    1 == this._FriendsSet && 0 == Utils.isNull(this._Friends) && (c += "_Friends=" + this._Friends + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NPlayerProfile.prototype.clone = function() {
    var c = new NPlayerProfile().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._AvatarSet && 0 == Utils.isNull(this._Avatar) && c.setAvatar(this._Avatar);
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && c.setPlayerId(this._PlayerId);
    1 == this._EmailSet && 0 == Utils.isNull(this._Email) && c.setEmail(this._Email);
    1 == this._CountrySet && 0 == Utils.isNull(this._Country) && c.setCountry(this._Country);
    if (1 == this._FriendsSet && 0 == Utils.isNull(this._Friends)) {
        for (var a = [], b = 0; b < this._Friends.length; ++b) {
            var e = this._Friends[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setFriends(a);
    }
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NPlayerProfile.domainID = 100;

NPlayerProfile.serializerID = 3028;

ForgotPasswordResponse.prototype = new Message();

ForgotPasswordResponse.prototype.constructor = ForgotPasswordResponse;

ForgotPasswordResponse.prototype.init = function() {
    this._ForgotPasswordStatusSet = !1;
    return this;
};

ForgotPasswordResponse.prototype.getForgotPasswordStatus = function() {
    return this._ForgotPasswordStatus;
};

ForgotPasswordResponse.prototype.setForgotPasswordStatus = function(c) {
    this._ForgotPasswordStatus = c;
    this._ForgotPasswordStatusSet = !0;
};

ForgotPasswordResponse.prototype.isForgotPasswordStatusSet = function() {
    return this._ForgotPasswordStatusSet;
};

ForgotPasswordResponse.prototype.unSetForgotPasswordStatus = function() {
    this._ForgotPasswordStatusSet = !1;
};

ForgotPasswordResponse.prototype.getDomainID = function() {
    return ForgotPasswordResponse.domainID;
};

ForgotPasswordResponse.prototype.getSerializerID = function() {
    return ForgotPasswordResponse.serializerID;
};

ForgotPasswordResponse.prototype.toString = function() {
    var c;
    c = "[ForgotPasswordResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ForgotPasswordStatusSet && 0 == Utils.isNull(this._ForgotPasswordStatus) && (c += "_ForgotPasswordStatus=" + this._ForgotPasswordStatus + "| ");
    return c + "]";
};

ForgotPasswordResponse.prototype.clone = function() {
    var c = new ForgotPasswordResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ForgotPasswordStatusSet && 0 == Utils.isNull(this._ForgotPasswordStatus) && c.setForgotPasswordStatus(this._ForgotPasswordStatus);
    return c;
};

ForgotPasswordResponse.domainID = 100;

ForgotPasswordResponse.serializerID = 10007;

JsonOutputStream.prototype.init = function() {
    return this;
};

JsonOutputStream.writeObjectProperty = function(c, a, b, e) {
    if (null != a) {
        var f = a.getDomainID(), d = c.getDomain(f);
        if (null == d) throw Error("No domain available for domain id " + f, null);
        d = d.getJsonSerializerFactory();
        if (null == d) throw Error("No json factory found in domain " + f, null);
        try {
            var h = null, h = null == b ? e : new JSONObject().init();
            JsonOutputStream.writeInteger(f, "domainId", h);
            var g = a.getSerializerID();
            JsonOutputStream.writeSerializerID(g, h);
            d.write(c, a, h);
            null != b && e.putObject(b, h);
        } catch (k) {
            throw Error("Can't read Object", k);
        }
    }
    return e;
};

JsonOutputStream.writeObject = function(c, a, b) {
    JsonOutputStream.writeObjectProperty(c, a, null, b);
    return b;
};

JsonOutputStream.writeStringProperty = function(c, a, b) {
    null != c && b.putString(a, c);
};

JsonOutputStream.writeDoubleProperty = function(c, a, b) {
    c != Utils.NULL_DOUBLE && b.putDouble(a, c);
};

JsonOutputStream.writeInteger = function(c, a, b) {
    c != Utils.NULL_INTEGER && b.putInt(a, c);
};

JsonOutputStream.writeIntegerProperty = function(c, a, b) {
    JsonOutputStream.writeInteger(c, a, b);
};

JsonOutputStream.writeDateProperty = function(c, a, b) {
    c != Utils.NULL_DATE && (c = c.getTime(), JsonOutputStream.writeLongProperty(c, a, b));
};

JsonOutputStream.writeLongProperty = function(c, a, b) {
    c != Utils.NULL_LONG && b.putLong(a, c);
};

JsonOutputStream.writeShortProperty = function(c, a, b) {
    c != Utils.NULL_SHORT && b.putInt(a, c);
};

JsonOutputStream.writeFloatProperty = function(c, a, b) {
    c != Utils.NULL_FLOAT && b.putDouble(a, c);
};

JsonOutputStream.writeBooleanProperty = function(c, a, b) {
    c != Utils.NULL_BOOLEAN && b.putBoolean(a, c);
};

JsonOutputStream.writeMatrixProperty = function(c, a, b) {};

JsonOutputStream.writeSerializerID = function(c, a) {
    JsonOutputStream.writeShortProperty(c, "serializerId", a);
    return "" + c;
};

JsonOutputStream.writeType = function(c, a) {
    JsonOutputStream.writeShortProperty(c, "type", a);
    return "" + c;
};

JsonOutputStream.writeIntegerList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putInt(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeShortList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putInt(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeLongList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putLong(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeFloatList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putDouble(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeDoubleList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putDouble(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeStringList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putString(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeBooleanList = function(c, a, b) {
    if (null != c) {
        for (var e = new JSONArray().init(), f = 0; f < c.length; f++) e.putBoolean(c[f]);
        b.putArray(a, e);
    }
};

JsonOutputStream.writeNMatrix2 = function(c, a, b, e) {
    if (null != a) {
        var f = a.getRowCount(), d = a.getColumnCount(), h = new JSONObject().init();
        h.putInt("rowCount", f);
        h.putInt("columnCount", d);
        for (var g = new JSONArray().init(), k = 0; k < f; k++) for (var l = 0; l < d; l++) {
            var m = a.getItem(k, l), n = new JSONObject().init(), m = JsonOutputStream.writeObject(c, m, n);
            g.putObject(m);
        }
        h.putArray("values", g);
        e.putObject(b, h);
    }
};

CreatePlayerStatus.values = function() {
    return CreatePlayerStatus._values;
};

CreatePlayerStatus.prototype.getValue = function() {
    return this._value;
};

CreatePlayerStatus.prototype.name = function() {
    return this._name;
};

CreatePlayerStatus.prototype.ordinal = function() {
    return this._value;
};

CreatePlayerStatus.prototype.init = function(c, a) {
    void 0 == CreatePlayerStatus._values && (CreatePlayerStatus._values = []);
    this._value = a;
    this._name = c;
    CreatePlayerStatus._values.push(this);
    return this;
};

CreatePlayerStatus.fromValue = function(c) {
    for (var a = 0; a < CreatePlayerStatus._values.length; a++) {
        var b = CreatePlayerStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

CreatePlayerStatus.valueOf = function(c) {
    for (var a = 0; a < CreatePlayerStatus._values.length; a++) {
        var b = CreatePlayerStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

CreatePlayerStatus.prototype.getDomainID = function() {
    return 100;
};

CreatePlayerStatus.prototype.getSerializerID = function() {
    return 10002;
};

CreatePlayerStatus.prototype.toString = function() {
    return "CreatePlayerStatus." + this._name;
};

CreatePlayerStatus.prototype.clone = function() {
    return this;
};

CreatePlayerStatus.INVALID_PARAMETERS = new CreatePlayerStatus().init("INVALID_PARAMETERS", -2);

CreatePlayerStatus.INTERNAL_ERROR = new CreatePlayerStatus().init("INTERNAL_ERROR", -1);

CreatePlayerStatus.SUCCESS = new CreatePlayerStatus().init("SUCCESS", 0);

CreatePlayerStatus.ACCOUNT_ALREADY_EXISTS = new CreatePlayerStatus().init("ACCOUNT_ALREADY_EXISTS", 1);

FriendshipNotification.prototype = new Message();

FriendshipNotification.prototype.constructor = FriendshipNotification;

FriendshipNotification.prototype.init = function() {
    this._FriendSet = !1;
    return this;
};

FriendshipNotification.prototype.getFriend = function() {
    return this._Friend;
};

FriendshipNotification.prototype.setFriend = function(c) {
    this._Friend = c;
    this._FriendSet = !0;
};

FriendshipNotification.prototype.isFriendSet = function() {
    return this._FriendSet;
};

FriendshipNotification.prototype.unSetFriend = function() {
    this._FriendSet = !1;
};

FriendshipNotification.prototype.getDomainID = function() {
    return FriendshipNotification.domainID;
};

FriendshipNotification.prototype.getSerializerID = function() {
    return FriendshipNotification.serializerID;
};

FriendshipNotification.prototype.toString = function() {
    var c;
    c = "[FriendshipNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._FriendSet && 0 == Utils.isNull(this._Friend) && (c += "_Friend=" + this._Friend + "| ");
    return c + "]";
};

FriendshipNotification.prototype.clone = function() {
    var c = new FriendshipNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._FriendSet && 0 == Utils.isNull(this._Friend) && c.setFriend(this._Friend.clone());
    return c;
};

FriendshipNotification.domainID = 100;

FriendshipNotification.serializerID = 3013;

PauseSessionMonitoringStatus.values = function() {
    return PauseSessionMonitoringStatus._values;
};

PauseSessionMonitoringStatus.prototype.getValue = function() {
    return this._value;
};

PauseSessionMonitoringStatus.prototype.name = function() {
    return this._name;
};

PauseSessionMonitoringStatus.prototype.ordinal = function() {
    return this._value;
};

PauseSessionMonitoringStatus.prototype.init = function(c, a) {
    void 0 == PauseSessionMonitoringStatus._values && (PauseSessionMonitoringStatus._values = []);
    this._value = a;
    this._name = c;
    PauseSessionMonitoringStatus._values.push(this);
    return this;
};

PauseSessionMonitoringStatus.fromValue = function(c) {
    for (var a = 0; a < PauseSessionMonitoringStatus._values.length; a++) {
        var b = PauseSessionMonitoringStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

PauseSessionMonitoringStatus.valueOf = function(c) {
    for (var a = 0; a < PauseSessionMonitoringStatus._values.length; a++) {
        var b = PauseSessionMonitoringStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

PauseSessionMonitoringStatus.prototype.getDomainID = function() {
    return 100;
};

PauseSessionMonitoringStatus.prototype.getSerializerID = function() {
    return 10161;
};

PauseSessionMonitoringStatus.prototype.toString = function() {
    return "PauseSessionMonitoringStatus." + this._name;
};

PauseSessionMonitoringStatus.prototype.clone = function() {
    return this;
};

PauseSessionMonitoringStatus.INVALID_PARAMETERS = new PauseSessionMonitoringStatus().init("INVALID_PARAMETERS", -2);

PauseSessionMonitoringStatus.INTERNAL_ERROR = new PauseSessionMonitoringStatus().init("INTERNAL_ERROR", -1);

PauseSessionMonitoringStatus.PAUSED = new PauseSessionMonitoringStatus().init("PAUSED", 0);

SerializationTypes.prototype.init = function() {
    return this;
};

SerializationTypes.NULL_TYPE = 0;

SerializationTypes.OBJECT = 1;

SerializationTypes.LIST = 2;

SerializationTypes.NMATRIX2 = 3;

SerializationTypes.BYTE = 10;

SerializationTypes.INTEGER = 11;

SerializationTypes.SHORT = 12;

SerializationTypes.LONG = 13;

SerializationTypes.FLOAT = 14;

SerializationTypes.DOUBLE = 15;

SerializationTypes.STRING = 16;

SerializationTypes.CHAR = 17;

SerializationTypes.BOOLEAN = 18;

GetFriendDemandsStatus.values = function() {
    return GetFriendDemandsStatus._values;
};

GetFriendDemandsStatus.prototype.getValue = function() {
    return this._value;
};

GetFriendDemandsStatus.prototype.name = function() {
    return this._name;
};

GetFriendDemandsStatus.prototype.ordinal = function() {
    return this._value;
};

GetFriendDemandsStatus.prototype.init = function(c, a) {
    void 0 == GetFriendDemandsStatus._values && (GetFriendDemandsStatus._values = []);
    this._value = a;
    this._name = c;
    GetFriendDemandsStatus._values.push(this);
    return this;
};

GetFriendDemandsStatus.fromValue = function(c) {
    for (var a = 0; a < GetFriendDemandsStatus._values.length; a++) {
        var b = GetFriendDemandsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetFriendDemandsStatus.valueOf = function(c) {
    for (var a = 0; a < GetFriendDemandsStatus._values.length; a++) {
        var b = GetFriendDemandsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetFriendDemandsStatus.prototype.getDomainID = function() {
    return 100;
};

GetFriendDemandsStatus.prototype.getSerializerID = function() {
    return 10035;
};

GetFriendDemandsStatus.prototype.toString = function() {
    return "GetFriendDemandsStatus." + this._name;
};

GetFriendDemandsStatus.prototype.clone = function() {
    return this;
};

GetFriendDemandsStatus.INVALID_PARAMETERS = new GetFriendDemandsStatus().init("INVALID_PARAMETERS", -2);

GetFriendDemandsStatus.INTERNAL_ERROR = new GetFriendDemandsStatus().init("INTERNAL_ERROR", -1);

GetFriendDemandsStatus.AUTHENTICATION_REQUIRED = new GetFriendDemandsStatus().init("AUTHENTICATION_REQUIRED", 0);

GetFriendDemandsStatus.SUCCESS = new GetFriendDemandsStatus().init("SUCCESS", 1);

T5534.prototype = new T5520();

T5534.prototype.constructor = T5534;

T5534.prototype.init = function(c, a, b, e, f, d) {
    this._f17801 = NLoggerFactory.getLogger("SocketConnection");
    T5520.prototype.init.call(this, c, a, b);
    this._v17804 = e;
    this._v17805 = f;
    this._m17806 = d;
    return this;
};

T5534.prototype._m25044 = function() {
    var c = this;
    if (this._s18096 == T5529._s18143) {
        this._s18096 = T5529._g18144;
        try {
            this._i17803 = new T5532().init(this._f9006, this._f9007, this._v18100, this._d18099), 
            this._o17807 = function(a) {
                if (c._s18096 == T5529._g18144 || c._s18096 == T5529._w18145) null != c._m17806 ? c._i17803._m25049(a) : c._i17803._m25061(a);
            }, c._z17802 = new NSocketImpl().init(), c._z17802.openConnection(c._j9010, c._v17804, c._v17805, c._m17806, function() {
                c._s18096 = T5529._w18145;
                c._i18097._m25032();
            }, c._e18094, function() {
                c._s18096 == T5529._g18144 ? c._g18098._m25048() : c._f17801.error("invalid connection status");
            }, c._o17807);
        } catch (a) {
            c._f17801.errorCause("Can't connect to server  url " + c._v17804 + ":" + c._v17805, a), 
            c._g18098._m25048();
        }
    }
};

T5534.prototype._m25052 = function(c) {
    this._s18096 == T5529._w18145 && this._m25502(c);
};

T5534.prototype._m25502 = function(c) {
    null != this._m17806 ? (c = this._i17803._m25055(c), this._z17802.sendString(c, null, this._t18093)) : (c = this._i17803._m25058(c), 
    this._z17802.sendBytes(c.getByteBuffer(), null, this._t18093), MemoryManagement.free(c));
};

T5534.prototype._m25054 = function(c, a) {
    var b = this;
    this._v17808 = a;
    this._s18096 = T5529._f18146;
    this._m25502(c);
    this._z17802.drain(function() {
        try {
            b._f9007(b._v17808);
        } catch (a) {
            b._f17801.errorCause("Error occured while processing message : ", a);
        }
    });
};

T5534.prototype._m25050 = function() {
    this._m25051();
};

T5534.prototype._m25051 = function() {
    try {
        this._z17802.close();
    } catch (c) {}
};

DomainMessageListener.prototype.init = function(c, a) {
    this.domainId = c;
    this.messageListener = a;
    return this;
};

DomainMessageListener.prototype.getDomainId = function() {
    return this.domainId;
};

DomainMessageListener.prototype.getMessageListener = function() {
    return this.messageListener;
};

GetGhostsRequest.prototype = new Message();

GetGhostsRequest.prototype.constructor = GetGhostsRequest;

GetGhostsRequest.prototype.init = function() {
    this._dbQuerySet = !1;
    return this;
};

GetGhostsRequest.prototype.getDbQuery = function() {
    return this._dbQuery;
};

GetGhostsRequest.prototype.setDbQuery = function(c) {
    this._dbQuery = c;
    this._dbQuerySet = !0;
};

GetGhostsRequest.prototype.isdbQuerySet = function() {
    return this._dbQuerySet;
};

GetGhostsRequest.prototype.unSetdbQuery = function() {
    this._dbQuerySet = !1;
};

GetGhostsRequest.prototype.getDomainID = function() {
    return GetGhostsRequest.domainID;
};

GetGhostsRequest.prototype.getSerializerID = function() {
    return GetGhostsRequest.serializerID;
};

GetGhostsRequest.prototype.toString = function() {
    var c;
    c = "[GetGhostsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._dbQuerySet && 0 == Utils.isNull(this._dbQuery) && (c += "_dbQuery=" + this._dbQuery + "| ");
    return c + "]";
};

GetGhostsRequest.prototype.clone = function() {
    var c = new GetGhostsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._dbQuerySet && 0 == Utils.isNull(this._dbQuery) && c.setDbQuery(this._dbQuery.clone());
    return c;
};

GetGhostsRequest.domainID = 100;

GetGhostsRequest.serializerID = 10105;

PlayerSessionType.values = function() {
    return PlayerSessionType._values;
};

PlayerSessionType.prototype.getValue = function() {
    return this._value;
};

PlayerSessionType.prototype.name = function() {
    return this._name;
};

PlayerSessionType.prototype.ordinal = function() {
    return this._value;
};

PlayerSessionType.prototype.init = function(c, a) {
    void 0 == PlayerSessionType._values && (PlayerSessionType._values = []);
    this._value = a;
    this._name = c;
    PlayerSessionType._values.push(this);
    return this;
};

PlayerSessionType.fromValue = function(c) {
    for (var a = 0; a < PlayerSessionType._values.length; a++) {
        var b = PlayerSessionType._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

PlayerSessionType.valueOf = function(c) {
    for (var a = 0; a < PlayerSessionType._values.length; a++) {
        var b = PlayerSessionType._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

PlayerSessionType.prototype.getDomainID = function() {
    return 100;
};

PlayerSessionType.prototype.getSerializerID = function() {
    return 11;
};

PlayerSessionType.prototype.toString = function() {
    return "PlayerSessionType." + this._name;
};

PlayerSessionType.prototype.clone = function() {
    return this;
};

PlayerSessionType.ANONYMOUS = new PlayerSessionType().init("ANONYMOUS", 0);

PlayerSessionType.AUTHENTICATED = new PlayerSessionType().init("AUTHENTICATED", 1);

DisconnectedContext.prototype = new Message();

DisconnectedContext.prototype.constructor = DisconnectedContext;

DisconnectedContext.prototype.init = function() {
    this._Participants = [];
    this._ParticipantsSet = !1;
    return this;
};

DisconnectedContext.prototype.getParticipants = function() {
    this._ParticipantsSet = !0;
    return this._Participants;
};

DisconnectedContext.prototype.setParticipants = function(c) {
    this._Participants = c;
    this._ParticipantsSet = !0;
};

DisconnectedContext.prototype.isParticipantsSet = function() {
    return this._ParticipantsSet;
};

DisconnectedContext.prototype.unSetParticipants = function() {
    this._ParticipantsSet = !1;
};

DisconnectedContext.prototype.getDomainID = function() {
    return DisconnectedContext.domainID;
};

DisconnectedContext.prototype.getSerializerID = function() {
    return DisconnectedContext.serializerID;
};

DisconnectedContext.prototype.toString = function() {
    var c;
    c = "[DisconnectedContext --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ParticipantsSet && 0 == Utils.isNull(this._Participants) && (c += "_Participants=" + this._Participants + "| ");
    return c + "]";
};

DisconnectedContext.prototype.clone = function() {
    var c = new DisconnectedContext().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    if (1 == this._ParticipantsSet && 0 == Utils.isNull(this._Participants)) {
        for (var a = [], b = 0; b < this._Participants.length; ++b) {
            var e = this._Participants[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setParticipants(a);
    }
    return c;
};

DisconnectedContext.domainID = 100;

DisconnectedContext.serializerID = 3041;

UpdateStorableRequest.prototype = new Message();

UpdateStorableRequest.prototype.constructor = UpdateStorableRequest;

UpdateStorableRequest.prototype.init = function() {
    this._storableSet = !1;
    return this;
};

UpdateStorableRequest.prototype.getStorable = function() {
    return this._storable;
};

UpdateStorableRequest.prototype.setStorable = function(c) {
    this._storable = c;
    this._storableSet = !0;
};

UpdateStorableRequest.prototype.isstorableSet = function() {
    return this._storableSet;
};

UpdateStorableRequest.prototype.unSetstorable = function() {
    this._storableSet = !1;
};

UpdateStorableRequest.prototype.getDomainID = function() {
    return UpdateStorableRequest.domainID;
};

UpdateStorableRequest.prototype.getSerializerID = function() {
    return UpdateStorableRequest.serializerID;
};

UpdateStorableRequest.prototype.toString = function() {
    var c;
    c = "[UpdateStorableRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._storableSet && 0 == Utils.isNull(this._storable) && (c += "_storable=" + this._storable + "| ");
    return c + "]";
};

UpdateStorableRequest.prototype.clone = function() {
    var c = new UpdateStorableRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._storableSet && 0 == Utils.isNull(this._storable) && c.setStorable(this._storable.clone());
    return c;
};

UpdateStorableRequest.domainID = 100;

UpdateStorableRequest.serializerID = 10126;

GetGamesStatus.values = function() {
    return GetGamesStatus._values;
};

GetGamesStatus.prototype.getValue = function() {
    return this._value;
};

GetGamesStatus.prototype.name = function() {
    return this._name;
};

GetGamesStatus.prototype.ordinal = function() {
    return this._value;
};

GetGamesStatus.prototype.init = function(c, a) {
    void 0 == GetGamesStatus._values && (GetGamesStatus._values = []);
    this._value = a;
    this._name = c;
    GetGamesStatus._values.push(this);
    return this;
};

GetGamesStatus.fromValue = function(c) {
    for (var a = 0; a < GetGamesStatus._values.length; a++) {
        var b = GetGamesStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetGamesStatus.valueOf = function(c) {
    for (var a = 0; a < GetGamesStatus._values.length; a++) {
        var b = GetGamesStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetGamesStatus.prototype.getDomainID = function() {
    return 100;
};

GetGamesStatus.prototype.getSerializerID = function() {
    return 10101;
};

GetGamesStatus.prototype.toString = function() {
    return "GetGamesStatus." + this._name;
};

GetGamesStatus.prototype.clone = function() {
    return this;
};

GetGamesStatus.INVALID_PARAMETERS = new GetGamesStatus().init("INVALID_PARAMETERS", -2);

GetGamesStatus.INTERNAL_ERROR = new GetGamesStatus().init("INTERNAL_ERROR", -1);

GetGamesStatus.SUCCESS = new GetGamesStatus().init("SUCCESS", 0);

GetGamesStatus.INVALID_QUERY = new GetGamesStatus().init("INVALID_QUERY", 1);

LogoutResponse.prototype = new Message();

LogoutResponse.prototype.constructor = LogoutResponse;

LogoutResponse.prototype.init = function() {
    this._playerSet = this._LogoutStatusSet = !1;
    return this;
};

LogoutResponse.prototype.getLogoutStatus = function() {
    return this._LogoutStatus;
};

LogoutResponse.prototype.setLogoutStatus = function(c) {
    this._LogoutStatus = c;
    this._LogoutStatusSet = !0;
};

LogoutResponse.prototype.isLogoutStatusSet = function() {
    return this._LogoutStatusSet;
};

LogoutResponse.prototype.unSetLogoutStatus = function() {
    this._LogoutStatusSet = !1;
};

LogoutResponse.prototype.getPlayer = function() {
    return this._player;
};

LogoutResponse.prototype.setPlayer = function(c) {
    this._player = c;
    this._playerSet = !0;
};

LogoutResponse.prototype.isplayerSet = function() {
    return this._playerSet;
};

LogoutResponse.prototype.unSetplayer = function() {
    this._playerSet = !1;
};

LogoutResponse.prototype.getDomainID = function() {
    return LogoutResponse.domainID;
};

LogoutResponse.prototype.getSerializerID = function() {
    return LogoutResponse.serializerID;
};

LogoutResponse.prototype.toString = function() {
    var c;
    c = "[LogoutResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._LogoutStatusSet && 0 == Utils.isNull(this._LogoutStatus) && (c += "_LogoutStatus=" + this._LogoutStatus + "| ");
    1 == this._playerSet && 0 == Utils.isNull(this._player) && (c += "_player=" + this._player + "| ");
    return c + "]";
};

LogoutResponse.prototype.clone = function() {
    var c = new LogoutResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._LogoutStatusSet && 0 == Utils.isNull(this._LogoutStatus) && c.setLogoutStatus(this._LogoutStatus);
    1 == this._playerSet && 0 == Utils.isNull(this._player) && c.setPlayer(this._player.clone());
    return c;
};

LogoutResponse.domainID = 100;

LogoutResponse.serializerID = 10019;

GetItemsRequest.prototype = new Message();

GetItemsRequest.prototype.constructor = GetItemsRequest;

GetItemsRequest.prototype.init = function() {
    return this;
};

GetItemsRequest.prototype.getDomainID = function() {
    return GetItemsRequest.domainID;
};

GetItemsRequest.prototype.getSerializerID = function() {
    return GetItemsRequest.serializerID;
};

GetItemsRequest.prototype.toString = function() {
    var c;
    c = "[GetItemsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

GetItemsRequest.prototype.clone = function() {
    var c = new GetItemsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

GetItemsRequest.domainID = 100;

GetItemsRequest.serializerID = 10051;

GetStorablesRequest.prototype = new Message();

GetStorablesRequest.prototype.constructor = GetStorablesRequest;

GetStorablesRequest.prototype.init = function() {
    this._dbQuerySet = !1;
    return this;
};

GetStorablesRequest.prototype.getDbQuery = function() {
    return this._dbQuery;
};

GetStorablesRequest.prototype.setDbQuery = function(c) {
    this._dbQuery = c;
    this._dbQuerySet = !0;
};

GetStorablesRequest.prototype.isdbQuerySet = function() {
    return this._dbQuerySet;
};

GetStorablesRequest.prototype.unSetdbQuery = function() {
    this._dbQuerySet = !1;
};

GetStorablesRequest.prototype.getDomainID = function() {
    return GetStorablesRequest.domainID;
};

GetStorablesRequest.prototype.getSerializerID = function() {
    return GetStorablesRequest.serializerID;
};

GetStorablesRequest.prototype.toString = function() {
    var c;
    c = "[GetStorablesRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._dbQuerySet && 0 == Utils.isNull(this._dbQuery) && (c += "_dbQuery=" + this._dbQuery + "| ");
    return c + "]";
};

GetStorablesRequest.prototype.clone = function() {
    var c = new GetStorablesRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._dbQuerySet && 0 == Utils.isNull(this._dbQuery) && c.setDbQuery(this._dbQuery.clone());
    return c;
};

GetStorablesRequest.domainID = 100;

GetStorablesRequest.serializerID = 10114;

T5525.prototype.init = function() {
    this._o17983 = [];
    return this;
};

T5525.prototype._m25504 = function() {
    for (var c = this._o17983.length, a = 0; a < c; a++) (0, this._o17983[a])(null);
};

T5525.prototype._m25505 = function() {
    for (var c = this._o17983.length, a = 0; a < c; a++) (0, this._o17983[a])(null);
};

T5525.prototype._m25506 = function() {
    for (var c = this._o17983.length, a = 0; a < c; a++) (0, this._o17983[a])(null);
};

T5525.prototype._m25507 = function() {
    for (var c = this._o17983.length, a = 0; a < c; a++) (0, this._o17983[a])(null);
};

T5525.prototype._m25508 = function(c) {
    this._o17983.push(c);
};

T5525.prototype._m25509 = function(c) {
    0 < this._o17983.length && (c = this._o17983.indexOf(c), 0 <= c && this._o17983.splice(this._o17983.indexOf(c), 1));
};

T5525.prototype._m25510 = function() {
    return this._o17983;
};

NGameInvitation.prototype = new Message();

NGameInvitation.prototype.constructor = NGameInvitation;

NGameInvitation.prototype.init = function() {
    this._GameIdSet = !1;
    return this;
};

NGameInvitation.prototype.getGameId = function() {
    return this._GameId;
};

NGameInvitation.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

NGameInvitation.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

NGameInvitation.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

NGameInvitation.prototype.getDomainID = function() {
    return NGameInvitation.domainID;
};

NGameInvitation.prototype.getSerializerID = function() {
    return NGameInvitation.serializerID;
};

NGameInvitation.prototype.toString = function() {
    var c;
    c = "[NGameInvitation --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    return c + "]";
};

NGameInvitation.prototype.clone = function() {
    var c = new NGameInvitation().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    return c;
};

NGameInvitation.domainID = 100;

NGameInvitation.serializerID = 3048;

SendGameChatToPlayerListResponse.prototype = new Message();

SendGameChatToPlayerListResponse.prototype.constructor = SendGameChatToPlayerListResponse;

SendGameChatToPlayerListResponse.prototype.init = function() {
    this._SendGameChatToPlayerListStatusSet = !1;
    return this;
};

SendGameChatToPlayerListResponse.prototype.getSendGameChatToPlayerListStatus = function() {
    return this._SendGameChatToPlayerListStatus;
};

SendGameChatToPlayerListResponse.prototype.setSendGameChatToPlayerListStatus = function(c) {
    this._SendGameChatToPlayerListStatus = c;
    this._SendGameChatToPlayerListStatusSet = !0;
};

SendGameChatToPlayerListResponse.prototype.isSendGameChatToPlayerListStatusSet = function() {
    return this._SendGameChatToPlayerListStatusSet;
};

SendGameChatToPlayerListResponse.prototype.unSetSendGameChatToPlayerListStatus = function() {
    this._SendGameChatToPlayerListStatusSet = !1;
};

SendGameChatToPlayerListResponse.prototype.getDomainID = function() {
    return SendGameChatToPlayerListResponse.domainID;
};

SendGameChatToPlayerListResponse.prototype.getSerializerID = function() {
    return SendGameChatToPlayerListResponse.serializerID;
};

SendGameChatToPlayerListResponse.prototype.toString = function() {
    var c;
    c = "[SendGameChatToPlayerListResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SendGameChatToPlayerListStatusSet && 0 == Utils.isNull(this._SendGameChatToPlayerListStatus) && (c += "_SendGameChatToPlayerListStatus=" + this._SendGameChatToPlayerListStatus + "| ");
    return c + "]";
};

SendGameChatToPlayerListResponse.prototype.clone = function() {
    var c = new SendGameChatToPlayerListResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SendGameChatToPlayerListStatusSet && 0 == Utils.isNull(this._SendGameChatToPlayerListStatus) && c.setSendGameChatToPlayerListStatus(this._SendGameChatToPlayerListStatus);
    return c;
};

SendGameChatToPlayerListResponse.domainID = 100;

SendGameChatToPlayerListResponse.serializerID = 10928;

LoginStatus.values = function() {
    return LoginStatus._values;
};

LoginStatus.prototype.getValue = function() {
    return this._value;
};

LoginStatus.prototype.name = function() {
    return this._name;
};

LoginStatus.prototype.ordinal = function() {
    return this._value;
};

LoginStatus.prototype.init = function(c, a) {
    void 0 == LoginStatus._values && (LoginStatus._values = []);
    this._value = a;
    this._name = c;
    LoginStatus._values.push(this);
    return this;
};

LoginStatus.fromValue = function(c) {
    for (var a = 0; a < LoginStatus._values.length; a++) {
        var b = LoginStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

LoginStatus.valueOf = function(c) {
    for (var a = 0; a < LoginStatus._values.length; a++) {
        var b = LoginStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

LoginStatus.prototype.getDomainID = function() {
    return 100;
};

LoginStatus.prototype.getSerializerID = function() {
    return 10011;
};

LoginStatus.prototype.toString = function() {
    return "LoginStatus." + this._name;
};

LoginStatus.prototype.clone = function() {
    return this;
};

LoginStatus.INVALID_PARAMETERS = new LoginStatus().init("INVALID_PARAMETERS", -2);

LoginStatus.INTERNAL_ERROR = new LoginStatus().init("INTERNAL_ERROR", -1);

LoginStatus.CONNECTED = new LoginStatus().init("CONNECTED", 0);

LoginStatus.INVALID_LOGIN = new LoginStatus().init("INVALID_LOGIN", 1);

LoginStatus.ALREADY_CONNECTED = new LoginStatus().init("ALREADY_CONNECTED", 2);

GetStorablesStatus.values = function() {
    return GetStorablesStatus._values;
};

GetStorablesStatus.prototype.getValue = function() {
    return this._value;
};

GetStorablesStatus.prototype.name = function() {
    return this._name;
};

GetStorablesStatus.prototype.ordinal = function() {
    return this._value;
};

GetStorablesStatus.prototype.init = function(c, a) {
    void 0 == GetStorablesStatus._values && (GetStorablesStatus._values = []);
    this._value = a;
    this._name = c;
    GetStorablesStatus._values.push(this);
    return this;
};

GetStorablesStatus.fromValue = function(c) {
    for (var a = 0; a < GetStorablesStatus._values.length; a++) {
        var b = GetStorablesStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetStorablesStatus.valueOf = function(c) {
    for (var a = 0; a < GetStorablesStatus._values.length; a++) {
        var b = GetStorablesStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetStorablesStatus.prototype.getDomainID = function() {
    return 100;
};

GetStorablesStatus.prototype.getSerializerID = function() {
    return 10116;
};

GetStorablesStatus.prototype.toString = function() {
    return "GetStorablesStatus." + this._name;
};

GetStorablesStatus.prototype.clone = function() {
    return this;
};

GetStorablesStatus.INVALID_PARAMETERS = new GetStorablesStatus().init("INVALID_PARAMETERS", -2);

GetStorablesStatus.INTERNAL_ERROR = new GetStorablesStatus().init("INTERNAL_ERROR", -1);

GetStorablesStatus.SUCCESS = new GetStorablesStatus().init("SUCCESS", 0);

GetStorablesStatus.FAILURE = new GetStorablesStatus().init("FAILURE", 1);

GetStorablesStatus.INVALID_QUERY = new GetStorablesStatus().init("INVALID_QUERY", 4);

LoginRequest.prototype = new Message();

LoginRequest.prototype.constructor = LoginRequest;

LoginRequest.prototype.init = function() {
    this._passwordSet = this._loginSet = !1;
    return this;
};

LoginRequest.prototype.getLogin = function() {
    return this._login;
};

LoginRequest.prototype.setLogin = function(c) {
    this._login = c;
    this._loginSet = !0;
};

LoginRequest.prototype.isloginSet = function() {
    return this._loginSet;
};

LoginRequest.prototype.unSetlogin = function() {
    this._loginSet = !1;
};

LoginRequest.prototype.getPassword = function() {
    return this._password;
};

LoginRequest.prototype.setPassword = function(c) {
    this._password = c;
    this._passwordSet = !0;
};

LoginRequest.prototype.ispasswordSet = function() {
    return this._passwordSet;
};

LoginRequest.prototype.unSetpassword = function() {
    this._passwordSet = !1;
};

LoginRequest.prototype.getDomainID = function() {
    return LoginRequest.domainID;
};

LoginRequest.prototype.getSerializerID = function() {
    return LoginRequest.serializerID;
};

LoginRequest.prototype.toString = function() {
    var c;
    c = "[LoginRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._loginSet && 0 == Utils.isNull(this._login) && (c += "_login=" + this._login + "| ");
    1 == this._passwordSet && 0 == Utils.isNull(this._password) && (c += "_password=" + this._password + "| ");
    return c + "]";
};

LoginRequest.prototype.clone = function() {
    var c = new LoginRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._loginSet && 0 == Utils.isNull(this._login) && c.setLogin(this._login);
    1 == this._passwordSet && 0 == Utils.isNull(this._password) && c.setPassword(this._password);
    return c;
};

LoginRequest.domainID = 100;

LoginRequest.serializerID = 10009;

InvalidVersion.prototype = new Message();

InvalidVersion.prototype.constructor = InvalidVersion;

InvalidVersion.prototype.init = function() {
    return this;
};

InvalidVersion.prototype.getSerializerID = function() {
    return 0;
};

InvalidVersion.prototype.clone = function() {
    var c = new InvalidVersion().init();
    null != this._MessageId && c.setMessageId(this._MessageId);
    null != this._RequestId && c.setRequestId(this._RequestId);
    return c;
};

InvalidVersion.prototype.toString = function() {
    var c;
    c = "[InvalidVersion --> ";
    null != this._MessageId && (c += "_MessageId=" + this._MessageId + "| ");
    null != this._RequestId && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

InvalidVersion.prototype.equals = function(c) {
    return !1;
};

InvalidVersion.prototype.getDomainID = function() {
    return 0;
};

AchieveRequest.prototype = new Message();

AchieveRequest.prototype.constructor = AchieveRequest;

AchieveRequest.prototype.init = function() {
    this._achivementIdSet = !1;
    return this;
};

AchieveRequest.prototype.getAchivementId = function() {
    return this._achivementId;
};

AchieveRequest.prototype.setAchivementId = function(c) {
    this._achivementId = c;
    this._achivementIdSet = !0;
};

AchieveRequest.prototype.isachivementIdSet = function() {
    return this._achivementIdSet;
};

AchieveRequest.prototype.unSetachivementId = function() {
    this._achivementIdSet = !1;
};

AchieveRequest.prototype.getDomainID = function() {
    return AchieveRequest.domainID;
};

AchieveRequest.prototype.getSerializerID = function() {
    return AchieveRequest.serializerID;
};

AchieveRequest.prototype.toString = function() {
    var c;
    c = "[AchieveRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && (c += "_achivementId=" + this._achivementId + "| ");
    return c + "]";
};

AchieveRequest.prototype.clone = function() {
    var c = new AchieveRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._achivementIdSet && 0 == Utils.isNull(this._achivementId) && c.setAchivementId(this._achivementId);
    return c;
};

AchieveRequest.domainID = 100;

AchieveRequest.serializerID = 10066;

LoadGhostStatus.values = function() {
    return LoadGhostStatus._values;
};

LoadGhostStatus.prototype.getValue = function() {
    return this._value;
};

LoadGhostStatus.prototype.name = function() {
    return this._name;
};

LoadGhostStatus.prototype.ordinal = function() {
    return this._value;
};

LoadGhostStatus.prototype.init = function(c, a) {
    void 0 == LoadGhostStatus._values && (LoadGhostStatus._values = []);
    this._value = a;
    this._name = c;
    LoadGhostStatus._values.push(this);
    return this;
};

LoadGhostStatus.fromValue = function(c) {
    for (var a = 0; a < LoadGhostStatus._values.length; a++) {
        var b = LoadGhostStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

LoadGhostStatus.valueOf = function(c) {
    for (var a = 0; a < LoadGhostStatus._values.length; a++) {
        var b = LoadGhostStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

LoadGhostStatus.prototype.getDomainID = function() {
    return 100;
};

LoadGhostStatus.prototype.getSerializerID = function() {
    return 10110;
};

LoadGhostStatus.prototype.toString = function() {
    return "LoadGhostStatus." + this._name;
};

LoadGhostStatus.prototype.clone = function() {
    return this;
};

LoadGhostStatus.INVALID_PARAMETERS = new LoadGhostStatus().init("INVALID_PARAMETERS", -2);

LoadGhostStatus.INTERNAL_ERROR = new LoadGhostStatus().init("INTERNAL_ERROR", -1);

LoadGhostStatus.SUCCESS = new LoadGhostStatus().init("SUCCESS", 0);

LoadGhostStatus.FAILURE = new LoadGhostStatus().init("FAILURE", 1);

LoadGhostResponse.prototype = new Message();

LoadGhostResponse.prototype.constructor = LoadGhostResponse;

LoadGhostResponse.prototype.init = function() {
    this._gameSet = this._LoadGhostStatusSet = !1;
    return this;
};

LoadGhostResponse.prototype.getLoadGhostStatus = function() {
    return this._LoadGhostStatus;
};

LoadGhostResponse.prototype.setLoadGhostStatus = function(c) {
    this._LoadGhostStatus = c;
    this._LoadGhostStatusSet = !0;
};

LoadGhostResponse.prototype.isLoadGhostStatusSet = function() {
    return this._LoadGhostStatusSet;
};

LoadGhostResponse.prototype.unSetLoadGhostStatus = function() {
    this._LoadGhostStatusSet = !1;
};

LoadGhostResponse.prototype.getGame = function() {
    return this._game;
};

LoadGhostResponse.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

LoadGhostResponse.prototype.isgameSet = function() {
    return this._gameSet;
};

LoadGhostResponse.prototype.unSetgame = function() {
    this._gameSet = !1;
};

LoadGhostResponse.prototype.getDomainID = function() {
    return LoadGhostResponse.domainID;
};

LoadGhostResponse.prototype.getSerializerID = function() {
    return LoadGhostResponse.serializerID;
};

LoadGhostResponse.prototype.toString = function() {
    var c;
    c = "[LoadGhostResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._LoadGhostStatusSet && 0 == Utils.isNull(this._LoadGhostStatus) && (c += "_LoadGhostStatus=" + this._LoadGhostStatus + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

LoadGhostResponse.prototype.clone = function() {
    var c = new LoadGhostResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._LoadGhostStatusSet && 0 == Utils.isNull(this._LoadGhostStatus) && c.setLoadGhostStatus(this._LoadGhostStatus);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

LoadGhostResponse.domainID = 100;

LoadGhostResponse.serializerID = 10109;

NInvitationStatus.values = function() {
    return NInvitationStatus._values;
};

NInvitationStatus.prototype.getValue = function() {
    return this._value;
};

NInvitationStatus.prototype.name = function() {
    return this._name;
};

NInvitationStatus.prototype.ordinal = function() {
    return this._value;
};

NInvitationStatus.prototype.init = function(c, a) {
    void 0 == NInvitationStatus._values && (NInvitationStatus._values = []);
    this._value = a;
    this._name = c;
    NInvitationStatus._values.push(this);
    return this;
};

NInvitationStatus.fromValue = function(c) {
    for (var a = 0; a < NInvitationStatus._values.length; a++) {
        var b = NInvitationStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

NInvitationStatus.valueOf = function(c) {
    for (var a = 0; a < NInvitationStatus._values.length; a++) {
        var b = NInvitationStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

NInvitationStatus.prototype.getDomainID = function() {
    return 100;
};

NInvitationStatus.prototype.getSerializerID = function() {
    return 13;
};

NInvitationStatus.prototype.toString = function() {
    return "NInvitationStatus." + this._name;
};

NInvitationStatus.prototype.clone = function() {
    return this;
};

NInvitationStatus.PENDING = new NInvitationStatus().init("PENDING", 0);

NInvitationStatus.ACCEPTED = new NInvitationStatus().init("ACCEPTED", 1);

NInvitationStatus.REFUSED = new NInvitationStatus().init("REFUSED", 2);

NInvitationStatus.EXPIRED = new NInvitationStatus().init("EXPIRED", 3);

SlaveConnectionNotification.prototype = new Message();

SlaveConnectionNotification.prototype.constructor = SlaveConnectionNotification;

SlaveConnectionNotification.prototype.init = function() {
    this._sessionIdSet = !1;
    return this;
};

SlaveConnectionNotification.prototype.getSessionId = function() {
    return this._sessionId;
};

SlaveConnectionNotification.prototype.setSessionId = function(c) {
    this._sessionId = c;
    this._sessionIdSet = !0;
};

SlaveConnectionNotification.prototype.issessionIdSet = function() {
    return this._sessionIdSet;
};

SlaveConnectionNotification.prototype.unSetsessionId = function() {
    this._sessionIdSet = !1;
};

SlaveConnectionNotification.prototype.getDomainID = function() {
    return SlaveConnectionNotification.domainID;
};

SlaveConnectionNotification.prototype.getSerializerID = function() {
    return SlaveConnectionNotification.serializerID;
};

SlaveConnectionNotification.prototype.toString = function() {
    var c;
    c = "[SlaveConnectionNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && (c += "_sessionId=" + this._sessionId + "| ");
    return c + "]";
};

SlaveConnectionNotification.prototype.clone = function() {
    var c = new SlaveConnectionNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && c.setSessionId(this._sessionId);
    return c;
};

SlaveConnectionNotification.domainID = 100;

SlaveConnectionNotification.serializerID = 3023;

NItem.prototype = new Storable();

NItem.prototype.constructor = NItem;

NItem.prototype.init = function() {
    this._CustomDataSet = this._OrderSet = this._CountSet = this._BoughtSet = this._PriceSet = this._NameSet = this._IdSet = !1;
    return this;
};

NItem.prototype.getId = function() {
    return this._Id;
};

NItem.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NItem.prototype.isIdSet = function() {
    return this._IdSet;
};

NItem.prototype.unSetId = function() {
    this._IdSet = !1;
};

NItem.prototype.getName = function() {
    return this._Name;
};

NItem.prototype.setName = function(c) {
    this._Name = c;
    this._NameSet = !0;
};

NItem.prototype.isNameSet = function() {
    return this._NameSet;
};

NItem.prototype.unSetName = function() {
    this._NameSet = !1;
};

NItem.prototype.getPrice = function() {
    return this._Price;
};

NItem.prototype.setPrice = function(c) {
    this._Price = c;
    this._PriceSet = !0;
};

NItem.prototype.isPriceSet = function() {
    return this._PriceSet;
};

NItem.prototype.unSetPrice = function() {
    this._PriceSet = !1;
};

NItem.prototype.isBought = function() {
    return this._Bought;
};

NItem.prototype.setBought = function(c) {
    this._Bought = c;
    this._BoughtSet = !0;
};

NItem.prototype.isBoughtSet = function() {
    return this._BoughtSet;
};

NItem.prototype.unSetBought = function() {
    this._BoughtSet = !1;
};

NItem.prototype.getCount = function() {
    return this._Count;
};

NItem.prototype.setCount = function(c) {
    this._Count = c;
    this._CountSet = !0;
};

NItem.prototype.isCountSet = function() {
    return this._CountSet;
};

NItem.prototype.unSetCount = function() {
    this._CountSet = !1;
};

NItem.prototype.getOrder = function() {
    return this._Order;
};

NItem.prototype.setOrder = function(c) {
    this._Order = c;
    this._OrderSet = !0;
};

NItem.prototype.isOrderSet = function() {
    return this._OrderSet;
};

NItem.prototype.unSetOrder = function() {
    this._OrderSet = !1;
};

NItem.prototype.getCustomData = function() {
    return this._CustomData;
};

NItem.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NItem.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NItem.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NItem.prototype.getDomainID = function() {
    return NItem.domainID;
};

NItem.prototype.getSerializerID = function() {
    return NItem.serializerID;
};

NItem.prototype.toString = function() {
    var c;
    c = "[NItem --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._PriceSet && 0 == Utils.isNullInteger(this._Price) && (c += "_Price=" + this._Price + "| ");
    1 == this._BoughtSet && 0 == Utils.isNullBoolean(this._Bought) && (c += "_Bought=" + this._Bought + "| ");
    1 == this._CountSet && 0 == Utils.isNullInteger(this._Count) && (c += "_Count=" + this._Count + "| ");
    1 == this._OrderSet && 0 == Utils.isNullInteger(this._Order) && (c += "_Order=" + this._Order + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NItem.prototype.clone = function() {
    var c = new NItem().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    1 == this._PriceSet && 0 == Utils.isNullInteger(this._Price) && c.setPrice(this._Price);
    1 == this._BoughtSet && 0 == Utils.isNullBoolean(this._Bought) && c.setBought(this._Bought);
    1 == this._CountSet && 0 == Utils.isNullInteger(this._Count) && c.setCount(this._Count);
    1 == this._OrderSet && 0 == Utils.isNullInteger(this._Order) && c.setOrder(this._Order);
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NItem.domainID = 100;

NItem.serializerID = 3019;

GetScoresResponse.prototype = new Message();

GetScoresResponse.prototype.constructor = GetScoresResponse;

GetScoresResponse.prototype.init = function() {
    this._leaderboardNameSet = this._leaderboardIdSet = this._GetScoresStatusSet = !1;
    this._scores = [];
    this._scoresSet = !1;
    return this;
};

GetScoresResponse.prototype.getGetScoresStatus = function() {
    return this._GetScoresStatus;
};

GetScoresResponse.prototype.setGetScoresStatus = function(c) {
    this._GetScoresStatus = c;
    this._GetScoresStatusSet = !0;
};

GetScoresResponse.prototype.isGetScoresStatusSet = function() {
    return this._GetScoresStatusSet;
};

GetScoresResponse.prototype.unSetGetScoresStatus = function() {
    this._GetScoresStatusSet = !1;
};

GetScoresResponse.prototype.getLeaderboardId = function() {
    return this._leaderboardId;
};

GetScoresResponse.prototype.setLeaderboardId = function(c) {
    this._leaderboardId = c;
    this._leaderboardIdSet = !0;
};

GetScoresResponse.prototype.isleaderboardIdSet = function() {
    return this._leaderboardIdSet;
};

GetScoresResponse.prototype.unSetleaderboardId = function() {
    this._leaderboardIdSet = !1;
};

GetScoresResponse.prototype.getLeaderboardName = function() {
    return this._leaderboardName;
};

GetScoresResponse.prototype.setLeaderboardName = function(c) {
    this._leaderboardName = c;
    this._leaderboardNameSet = !0;
};

GetScoresResponse.prototype.isleaderboardNameSet = function() {
    return this._leaderboardNameSet;
};

GetScoresResponse.prototype.unSetleaderboardName = function() {
    this._leaderboardNameSet = !1;
};

GetScoresResponse.prototype.getScores = function() {
    this._scoresSet = !0;
    return this._scores;
};

GetScoresResponse.prototype.setScores = function(c) {
    this._scores = c;
    this._scoresSet = !0;
};

GetScoresResponse.prototype.isscoresSet = function() {
    return this._scoresSet;
};

GetScoresResponse.prototype.unSetscores = function() {
    this._scoresSet = !1;
};

GetScoresResponse.prototype.getDomainID = function() {
    return GetScoresResponse.domainID;
};

GetScoresResponse.prototype.getSerializerID = function() {
    return GetScoresResponse.serializerID;
};

GetScoresResponse.prototype.toString = function() {
    var c;
    c = "[GetScoresResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetScoresStatusSet && 0 == Utils.isNull(this._GetScoresStatus) && (c += "_GetScoresStatus=" + this._GetScoresStatus + "| ");
    1 == this._leaderboardIdSet && 0 == Utils.isNull(this._leaderboardId) && (c += "_leaderboardId=" + this._leaderboardId + "| ");
    1 == this._leaderboardNameSet && 0 == Utils.isNull(this._leaderboardName) && (c += "_leaderboardName=" + this._leaderboardName + "| ");
    1 == this._scoresSet && 0 == Utils.isNull(this._scores) && (c += "_scores=" + this._scores + "| ");
    return c + "]";
};

GetScoresResponse.prototype.clone = function() {
    var c = new GetScoresResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetScoresStatusSet && 0 == Utils.isNull(this._GetScoresStatus) && c.setGetScoresStatus(this._GetScoresStatus);
    1 == this._leaderboardIdSet && 0 == Utils.isNull(this._leaderboardId) && c.setLeaderboardId(this._leaderboardId);
    1 == this._leaderboardNameSet && 0 == Utils.isNull(this._leaderboardName) && c.setLeaderboardName(this._leaderboardName);
    if (1 == this._scoresSet && 0 == Utils.isNull(this._scores)) {
        for (var a = [], b = 0; b < this._scores.length; ++b) {
            var e = this._scores[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setScores(a);
    }
    return c;
};

GetScoresResponse.domainID = 100;

GetScoresResponse.serializerID = 10046;

GetFriendDemandsRequest.prototype = new Message();

GetFriendDemandsRequest.prototype.constructor = GetFriendDemandsRequest;

GetFriendDemandsRequest.prototype.init = function() {
    return this;
};

GetFriendDemandsRequest.prototype.getDomainID = function() {
    return GetFriendDemandsRequest.domainID;
};

GetFriendDemandsRequest.prototype.getSerializerID = function() {
    return GetFriendDemandsRequest.serializerID;
};

GetFriendDemandsRequest.prototype.toString = function() {
    var c;
    c = "[GetFriendDemandsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

GetFriendDemandsRequest.prototype.clone = function() {
    var c = new GetFriendDemandsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

GetFriendDemandsRequest.domainID = 100;

GetFriendDemandsRequest.serializerID = 10033;

MatchAndJoinGameResponse.prototype = new Message();

MatchAndJoinGameResponse.prototype.constructor = MatchAndJoinGameResponse;

MatchAndJoinGameResponse.prototype.init = function() {
    this._gameSet = this._MatchAndJoinGameStatusSet = !1;
    return this;
};

MatchAndJoinGameResponse.prototype.getMatchAndJoinGameStatus = function() {
    return this._MatchAndJoinGameStatus;
};

MatchAndJoinGameResponse.prototype.setMatchAndJoinGameStatus = function(c) {
    this._MatchAndJoinGameStatus = c;
    this._MatchAndJoinGameStatusSet = !0;
};

MatchAndJoinGameResponse.prototype.isMatchAndJoinGameStatusSet = function() {
    return this._MatchAndJoinGameStatusSet;
};

MatchAndJoinGameResponse.prototype.unSetMatchAndJoinGameStatus = function() {
    this._MatchAndJoinGameStatusSet = !1;
};

MatchAndJoinGameResponse.prototype.getGame = function() {
    return this._game;
};

MatchAndJoinGameResponse.prototype.setGame = function(c) {
    this._game = c;
    this._gameSet = !0;
};

MatchAndJoinGameResponse.prototype.isgameSet = function() {
    return this._gameSet;
};

MatchAndJoinGameResponse.prototype.unSetgame = function() {
    this._gameSet = !1;
};

MatchAndJoinGameResponse.prototype.getDomainID = function() {
    return MatchAndJoinGameResponse.domainID;
};

MatchAndJoinGameResponse.prototype.getSerializerID = function() {
    return MatchAndJoinGameResponse.serializerID;
};

MatchAndJoinGameResponse.prototype.toString = function() {
    var c;
    c = "[MatchAndJoinGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._MatchAndJoinGameStatusSet && 0 == Utils.isNull(this._MatchAndJoinGameStatus) && (c += "_MatchAndJoinGameStatus=" + this._MatchAndJoinGameStatus + "| ");
    1 == this._gameSet && 0 == Utils.isNull(this._game) && (c += "_game=" + this._game + "| ");
    return c + "]";
};

MatchAndJoinGameResponse.prototype.clone = function() {
    var c = new MatchAndJoinGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._MatchAndJoinGameStatusSet && 0 == Utils.isNull(this._MatchAndJoinGameStatus) && c.setMatchAndJoinGameStatus(this._MatchAndJoinGameStatus);
    1 == this._gameSet && 0 == Utils.isNull(this._game) && c.setGame(this._game.clone());
    return c;
};

MatchAndJoinGameResponse.domainID = 100;

MatchAndJoinGameResponse.serializerID = 10166;

NWorldUpdate.prototype = new Storable();

NWorldUpdate.prototype.constructor = NWorldUpdate;

NWorldUpdate.prototype.init = function() {
    this._UpdateSet = !1;
    this._Values = [];
    this._ValuesSet = !1;
    return this;
};

NWorldUpdate.prototype.getUpdate = function() {
    return this._Update;
};

NWorldUpdate.prototype.setUpdate = function(c) {
    this._Update = c;
    this._UpdateSet = !0;
};

NWorldUpdate.prototype.isUpdateSet = function() {
    return this._UpdateSet;
};

NWorldUpdate.prototype.unSetUpdate = function() {
    this._UpdateSet = !1;
};

NWorldUpdate.prototype.getValues = function() {
    this._ValuesSet = !0;
    return this._Values;
};

NWorldUpdate.prototype.setValues = function(c) {
    this._Values = c;
    this._ValuesSet = !0;
};

NWorldUpdate.prototype.isValuesSet = function() {
    return this._ValuesSet;
};

NWorldUpdate.prototype.unSetValues = function() {
    this._ValuesSet = !1;
};

NWorldUpdate.prototype.getDomainID = function() {
    return NWorldUpdate.domainID;
};

NWorldUpdate.prototype.getSerializerID = function() {
    return NWorldUpdate.serializerID;
};

NWorldUpdate.prototype.toString = function() {
    var c;
    c = "[NWorldUpdate --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._UpdateSet && 0 == Utils.isNullInteger(this._Update) && (c += "_Update=" + this._Update + "| ");
    1 == this._ValuesSet && 0 == Utils.isNull(this._Values) && (c += "_Values=" + this._Values + "| ");
    return c + "]";
};

NWorldUpdate.prototype.clone = function() {
    var c = new NWorldUpdate().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._UpdateSet && 0 == Utils.isNullInteger(this._Update) && c.setUpdate(this._Update);
    if (1 == this._ValuesSet && 0 == Utils.isNull(this._Values)) {
        for (var a = [], b = 0; b < this._Values.length; ++b) {
            var e = this._Values[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setValues(a);
    }
    return c;
};

NWorldUpdate.domainID = 100;

NWorldUpdate.serializerID = 3015;

T5530.prototype.init = function(c) {
    this._o20667 = [];
    this._n20681 = null;
    this._y20669 = new T5528().init();
    this._i20670 = new T5526().init();
    this._l20671 = new T5523().init();
    this._t20672 = new T5524().init();
    this._m20673 = NLoggerFactory.getLogger("FoldingNetworkConnection");
    this._w10473 = c;
    return this;
};

T5530.prototype._m25044 = function() {
    this._m25961();
};

T5530.prototype._m25961 = function() {
    var c = this;
    0 != this._o20667.length ? (null != this._n20681 && (this._n20681._m25513(this._l20687), 
    this._n20681._m25518(this._h20689), this._n20681._m25515(this._b20688), this._n20681._m25521(this._b20686), 
    MemoryManagement.free(this._l20687), MemoryManagement.free(this._h20689), MemoryManagement.free(this._b20688), 
    MemoryManagement.free(this._b20686)), this._n20681 = this._o20667[0], this._o20667.splice(0, 1), 
    this._l20687 = function() {
        c._n20681._m25513(c._l20687);
        c._y20669._m25032();
    }, c._n20681._m25512(c._l20687), c._b20688 = function() {
        c._n20681._m25515(c._b20688);
        c._i20670._m25036();
    }, c._n20681._m25514(c._b20688), c._h20689 = function() {
        c._n20681._m25518(c._h20689);
        c._m25961();
    }, c._n20681._m25516(c._h20689), c._b20686 = function() {
        c._n20681._m25521(c._b20686);
        c._t20672._m25040();
    }, c._n20681._m25520(c._b20686), c._n20681._m25044()) : c._l20671._m25048();
};

T5530.prototype._m25050 = function() {
    null != this._n20681 && this._n20681._m25050();
};

T5530.prototype._m25052 = function(c) {
    this._n20681._m25052(c);
};

T5530.prototype._m25056 = function(c) {
    this._o20667.push(c);
};

T5530.prototype._m25512 = function(c) {
    this._y20669._m25034(c);
};

T5530.prototype._m25514 = function(c) {
    this._i20670._m25038(c);
};

T5530.prototype._m25516 = function(c) {
    this._l20671._m25517(c);
};

T5530.prototype._m25520 = function(c) {
    this._t20672._m25042(c);
};

T5530.prototype._m25521 = function(c) {
    this._t20672._m25043(c);
};

T5530.prototype._m25513 = function(c) {
    this._y20669._m25035(c);
};

T5530.prototype._m25515 = function(c) {
    this._i20670._m25039(c);
};

T5530.prototype._m25518 = function(c) {
    this._l20671._m25519(c);
};

T5530.prototype._m25054 = function(c, a) {
    this._n20681._m25054(c, a);
};

StopPlugConnectionResponse.prototype = new Message();

StopPlugConnectionResponse.prototype.constructor = StopPlugConnectionResponse;

StopPlugConnectionResponse.prototype.init = function() {
    return this;
};

StopPlugConnectionResponse.prototype.getDomainID = function() {
    return StopPlugConnectionResponse.domainID;
};

StopPlugConnectionResponse.prototype.getSerializerID = function() {
    return StopPlugConnectionResponse.serializerID;
};

StopPlugConnectionResponse.prototype.toString = function() {
    var c;
    c = "[StopPlugConnectionResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

StopPlugConnectionResponse.prototype.clone = function() {
    var c = new StopPlugConnectionResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

StopPlugConnectionResponse.domainID = 0;

StopPlugConnectionResponse.serializerID = 3008;

GetInvitationsStatus.values = function() {
    return GetInvitationsStatus._values;
};

GetInvitationsStatus.prototype.getValue = function() {
    return this._value;
};

GetInvitationsStatus.prototype.name = function() {
    return this._name;
};

GetInvitationsStatus.prototype.ordinal = function() {
    return this._value;
};

GetInvitationsStatus.prototype.init = function(c, a) {
    void 0 == GetInvitationsStatus._values && (GetInvitationsStatus._values = []);
    this._value = a;
    this._name = c;
    GetInvitationsStatus._values.push(this);
    return this;
};

GetInvitationsStatus.fromValue = function(c) {
    for (var a = 0; a < GetInvitationsStatus._values.length; a++) {
        var b = GetInvitationsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetInvitationsStatus.valueOf = function(c) {
    for (var a = 0; a < GetInvitationsStatus._values.length; a++) {
        var b = GetInvitationsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetInvitationsStatus.prototype.getDomainID = function() {
    return 100;
};

GetInvitationsStatus.prototype.getSerializerID = function() {
    return 10173;
};

GetInvitationsStatus.prototype.toString = function() {
    return "GetInvitationsStatus." + this._name;
};

GetInvitationsStatus.prototype.clone = function() {
    return this;
};

GetInvitationsStatus.INVALID_PARAMETERS = new GetInvitationsStatus().init("INVALID_PARAMETERS", -2);

GetInvitationsStatus.INTERNAL_ERROR = new GetInvitationsStatus().init("INTERNAL_ERROR", -1);

GetInvitationsStatus.SUCCESS = new GetInvitationsStatus().init("SUCCESS", 0);

GetInvitationsStatus.INVALID_QUERY = new GetInvitationsStatus().init("INVALID_QUERY", 1);

NLoggerFactory.prototype.init = function() {
    return this;
};

NLoggerFactory.getLogger = function(c) {
    return new NLoggerImpl().init(c);
};

ResumeSessionMonitoringResponse.prototype = new Message();

ResumeSessionMonitoringResponse.prototype.constructor = ResumeSessionMonitoringResponse;

ResumeSessionMonitoringResponse.prototype.init = function() {
    this._ResumeSessionMonitoringStatusSet = !1;
    return this;
};

ResumeSessionMonitoringResponse.prototype.getResumeSessionMonitoringStatus = function() {
    return this._ResumeSessionMonitoringStatus;
};

ResumeSessionMonitoringResponse.prototype.setResumeSessionMonitoringStatus = function(c) {
    this._ResumeSessionMonitoringStatus = c;
    this._ResumeSessionMonitoringStatusSet = !0;
};

ResumeSessionMonitoringResponse.prototype.isResumeSessionMonitoringStatusSet = function() {
    return this._ResumeSessionMonitoringStatusSet;
};

ResumeSessionMonitoringResponse.prototype.unSetResumeSessionMonitoringStatus = function() {
    this._ResumeSessionMonitoringStatusSet = !1;
};

ResumeSessionMonitoringResponse.prototype.getDomainID = function() {
    return ResumeSessionMonitoringResponse.domainID;
};

ResumeSessionMonitoringResponse.prototype.getSerializerID = function() {
    return ResumeSessionMonitoringResponse.serializerID;
};

ResumeSessionMonitoringResponse.prototype.toString = function() {
    var c;
    c = "[ResumeSessionMonitoringResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ResumeSessionMonitoringStatusSet && 0 == Utils.isNull(this._ResumeSessionMonitoringStatus) && (c += "_ResumeSessionMonitoringStatus=" + this._ResumeSessionMonitoringStatus + "| ");
    return c + "]";
};

ResumeSessionMonitoringResponse.prototype.clone = function() {
    var c = new ResumeSessionMonitoringResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ResumeSessionMonitoringStatusSet && 0 == Utils.isNull(this._ResumeSessionMonitoringStatus) && c.setResumeSessionMonitoringStatus(this._ResumeSessionMonitoringStatus);
    return c;
};

ResumeSessionMonitoringResponse.domainID = 100;

ResumeSessionMonitoringResponse.serializerID = 10163;

BuyItemRequest.prototype = new Message();

BuyItemRequest.prototype.constructor = BuyItemRequest;

BuyItemRequest.prototype.init = function() {
    this._quantitySet = this._itemIdSet = !1;
    return this;
};

BuyItemRequest.prototype.getItemId = function() {
    return this._itemId;
};

BuyItemRequest.prototype.setItemId = function(c) {
    this._itemId = c;
    this._itemIdSet = !0;
};

BuyItemRequest.prototype.isitemIdSet = function() {
    return this._itemIdSet;
};

BuyItemRequest.prototype.unSetitemId = function() {
    this._itemIdSet = !1;
};

BuyItemRequest.prototype.getQuantity = function() {
    return this._quantity;
};

BuyItemRequest.prototype.setQuantity = function(c) {
    this._quantity = c;
    this._quantitySet = !0;
};

BuyItemRequest.prototype.isquantitySet = function() {
    return this._quantitySet;
};

BuyItemRequest.prototype.unSetquantity = function() {
    this._quantitySet = !1;
};

BuyItemRequest.prototype.getDomainID = function() {
    return BuyItemRequest.domainID;
};

BuyItemRequest.prototype.getSerializerID = function() {
    return BuyItemRequest.serializerID;
};

BuyItemRequest.prototype.toString = function() {
    var c;
    c = "[BuyItemRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._itemIdSet && 0 == Utils.isNull(this._itemId) && (c += "_itemId=" + this._itemId + "| ");
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && (c += "_quantity=" + this._quantity + "| ");
    return c + "]";
};

BuyItemRequest.prototype.clone = function() {
    var c = new BuyItemRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._itemIdSet && 0 == Utils.isNull(this._itemId) && c.setItemId(this._itemId);
    1 == this._quantitySet && 0 == Utils.isNullInteger(this._quantity) && c.setQuantity(this._quantity);
    return c;
};

BuyItemRequest.domainID = 100;

BuyItemRequest.serializerID = 10048;

RemoveStorableStatus.values = function() {
    return RemoveStorableStatus._values;
};

RemoveStorableStatus.prototype.getValue = function() {
    return this._value;
};

RemoveStorableStatus.prototype.name = function() {
    return this._name;
};

RemoveStorableStatus.prototype.ordinal = function() {
    return this._value;
};

RemoveStorableStatus.prototype.init = function(c, a) {
    void 0 == RemoveStorableStatus._values && (RemoveStorableStatus._values = []);
    this._value = a;
    this._name = c;
    RemoveStorableStatus._values.push(this);
    return this;
};

RemoveStorableStatus.fromValue = function(c) {
    for (var a = 0; a < RemoveStorableStatus._values.length; a++) {
        var b = RemoveStorableStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

RemoveStorableStatus.valueOf = function(c) {
    for (var a = 0; a < RemoveStorableStatus._values.length; a++) {
        var b = RemoveStorableStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

RemoveStorableStatus.prototype.getDomainID = function() {
    return 100;
};

RemoveStorableStatus.prototype.getSerializerID = function() {
    return 10131;
};

RemoveStorableStatus.prototype.toString = function() {
    return "RemoveStorableStatus." + this._name;
};

RemoveStorableStatus.prototype.clone = function() {
    return this;
};

RemoveStorableStatus.INVALID_PARAMETERS = new RemoveStorableStatus().init("INVALID_PARAMETERS", -2);

RemoveStorableStatus.INTERNAL_ERROR = new RemoveStorableStatus().init("INTERNAL_ERROR", -1);

RemoveStorableStatus.SUCCESS = new RemoveStorableStatus().init("SUCCESS", 0);

RemoveStorableStatus.FAILURE = new RemoveStorableStatus().init("FAILURE", 1);

GetScoresRequest.prototype = new Message();

GetScoresRequest.prototype.constructor = GetScoresRequest;

GetScoresRequest.prototype.init = function() {
    this._limitSet = this._startSet = this._periodSet = this._leaderboardIdSet = !1;
    return this;
};

GetScoresRequest.prototype.getLeaderboardId = function() {
    return this._leaderboardId;
};

GetScoresRequest.prototype.setLeaderboardId = function(c) {
    this._leaderboardId = c;
    this._leaderboardIdSet = !0;
};

GetScoresRequest.prototype.isleaderboardIdSet = function() {
    return this._leaderboardIdSet;
};

GetScoresRequest.prototype.unSetleaderboardId = function() {
    this._leaderboardIdSet = !1;
};

GetScoresRequest.prototype.getPeriod = function() {
    return this._period;
};

GetScoresRequest.prototype.setPeriod = function(c) {
    this._period = c;
    this._periodSet = !0;
};

GetScoresRequest.prototype.isperiodSet = function() {
    return this._periodSet;
};

GetScoresRequest.prototype.unSetperiod = function() {
    this._periodSet = !1;
};

GetScoresRequest.prototype.getStart = function() {
    return this._start;
};

GetScoresRequest.prototype.setStart = function(c) {
    this._start = c;
    this._startSet = !0;
};

GetScoresRequest.prototype.isstartSet = function() {
    return this._startSet;
};

GetScoresRequest.prototype.unSetstart = function() {
    this._startSet = !1;
};

GetScoresRequest.prototype.getLimit = function() {
    return this._limit;
};

GetScoresRequest.prototype.setLimit = function(c) {
    this._limit = c;
    this._limitSet = !0;
};

GetScoresRequest.prototype.islimitSet = function() {
    return this._limitSet;
};

GetScoresRequest.prototype.unSetlimit = function() {
    this._limitSet = !1;
};

GetScoresRequest.prototype.getDomainID = function() {
    return GetScoresRequest.domainID;
};

GetScoresRequest.prototype.getSerializerID = function() {
    return GetScoresRequest.serializerID;
};

GetScoresRequest.prototype.toString = function() {
    var c;
    c = "[GetScoresRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._leaderboardIdSet && 0 == Utils.isNull(this._leaderboardId) && (c += "_leaderboardId=" + this._leaderboardId + "| ");
    1 == this._periodSet && 0 == Utils.isNull(this._period) && (c += "_period=" + this._period + "| ");
    1 == this._startSet && 0 == Utils.isNullInteger(this._start) && (c += "_start=" + this._start + "| ");
    1 == this._limitSet && 0 == Utils.isNullInteger(this._limit) && (c += "_limit=" + this._limit + "| ");
    return c + "]";
};

GetScoresRequest.prototype.clone = function() {
    var c = new GetScoresRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._leaderboardIdSet && 0 == Utils.isNull(this._leaderboardId) && c.setLeaderboardId(this._leaderboardId);
    1 == this._periodSet && 0 == Utils.isNull(this._period) && c.setPeriod(this._period);
    1 == this._startSet && 0 == Utils.isNullInteger(this._start) && c.setStart(this._start);
    1 == this._limitSet && 0 == Utils.isNullInteger(this._limit) && c.setLimit(this._limit);
    return c;
};

GetScoresRequest.domainID = 100;

GetScoresRequest.serializerID = 10045;

OpenUrl.prototype = new Message();

OpenUrl.prototype.constructor = OpenUrl;

OpenUrl.prototype.init = function() {
    this._urlSet = !1;
    return this;
};

OpenUrl.prototype.getUrl = function() {
    return this._url;
};

OpenUrl.prototype.setUrl = function(c) {
    this._url = c;
    this._urlSet = !0;
};

OpenUrl.prototype.isurlSet = function() {
    return this._urlSet;
};

OpenUrl.prototype.unSeturl = function() {
    this._urlSet = !1;
};

OpenUrl.prototype.getDomainID = function() {
    return OpenUrl.domainID;
};

OpenUrl.prototype.getSerializerID = function() {
    return OpenUrl.serializerID;
};

OpenUrl.prototype.toString = function() {
    var c;
    c = "[OpenUrl --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._urlSet && 0 == Utils.isNull(this._url) && (c += "_url=" + this._url + "| ");
    return c + "]";
};

OpenUrl.prototype.clone = function() {
    var c = new OpenUrl().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._urlSet && 0 == Utils.isNull(this._url) && c.setUrl(this._url);
    return c;
};

OpenUrl.domainID = 100;

OpenUrl.serializerID = 3039;

SaveStorableRequest.prototype = new Message();

SaveStorableRequest.prototype.constructor = SaveStorableRequest;

SaveStorableRequest.prototype.init = function() {
    this._storableSet = !1;
    return this;
};

SaveStorableRequest.prototype.getStorable = function() {
    return this._storable;
};

SaveStorableRequest.prototype.setStorable = function(c) {
    this._storable = c;
    this._storableSet = !0;
};

SaveStorableRequest.prototype.isstorableSet = function() {
    return this._storableSet;
};

SaveStorableRequest.prototype.unSetstorable = function() {
    this._storableSet = !1;
};

SaveStorableRequest.prototype.getDomainID = function() {
    return SaveStorableRequest.domainID;
};

SaveStorableRequest.prototype.getSerializerID = function() {
    return SaveStorableRequest.serializerID;
};

SaveStorableRequest.prototype.toString = function() {
    var c;
    c = "[SaveStorableRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._storableSet && 0 == Utils.isNull(this._storable) && (c += "_storable=" + this._storable + "| ");
    return c + "]";
};

SaveStorableRequest.prototype.clone = function() {
    var c = new SaveStorableRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._storableSet && 0 == Utils.isNull(this._storable) && c.setStorable(this._storable.clone());
    return c;
};

SaveStorableRequest.domainID = 100;

SaveStorableRequest.serializerID = 10117;

NRoom.prototype = new AbstractRoom();

NRoom.prototype.constructor = NRoom;

NRoom.prototype.init = function() {
    this._DefaultRoomSet = !1;
    return this;
};

NRoom.prototype.isDefaultRoom = function() {
    return this._DefaultRoom;
};

NRoom.prototype.setDefaultRoom = function(c) {
    this._DefaultRoom = c;
    this._DefaultRoomSet = !0;
};

NRoom.prototype.isDefaultRoomSet = function() {
    return this._DefaultRoomSet;
};

NRoom.prototype.unSetDefaultRoom = function() {
    this._DefaultRoomSet = !1;
};

NRoom.prototype.getDomainID = function() {
    return NRoom.domainID;
};

NRoom.prototype.getSerializerID = function() {
    return NRoom.serializerID;
};

NRoom.prototype.toString = function() {
    var c;
    c = "[NRoom --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._PlayersSet && 0 == Utils.isNull(this._Players) && (c += "_Players=" + this._Players + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    1 == this._DefaultRoomSet && 0 == Utils.isNullBoolean(this._DefaultRoom) && (c += "_DefaultRoom=" + this._DefaultRoom + "| ");
    return c + "]";
};

NRoom.prototype.clone = function() {
    var c = new NRoom().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    if (1 == this._PlayersSet && 0 == Utils.isNull(this._Players)) {
        for (var a = [], b = 0; b < this._Players.length; ++b) {
            var e = this._Players[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setPlayers(a);
    }
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    1 == this._DefaultRoomSet && 0 == Utils.isNullBoolean(this._DefaultRoom) && c.setDefaultRoom(this._DefaultRoom);
    return c;
};

NRoom.domainID = 100;

NRoom.serializerID = 3009;

BinaryStream.prototype.init = function(c) {
    this.byteBuffer = c;
    return this;
};

BinaryStream.prototype.putShortAt = function(c, a) {
    this.byteBuffer.putShortAt(c, a);
};

BinaryStream.prototype.skip = function(c) {
    this.byteBuffer.skip(c);
};

BinaryStream.prototype.ignore = function() {};

BinaryStream.prototype.ignoreLength = function(c) {};

BinaryStream.prototype.limit = function() {
    return this.byteBuffer.limit();
};

BinaryStream.prototype.position = function() {
    return this.byteBuffer.position();
};

BinaryStream.prototype.getShort = function() {
    return this.byteBuffer.getShort();
};

BinaryStream.prototype.getBytes = function(c) {
    return this.byteBuffer.getBytes(c);
};

BinaryStream.prototype.getDouble = function() {
    return this.byteBuffer.getDouble();
};

BinaryStream.prototype.getString = function() {
    var c = this.getShort(), c = this.getBytes(c), a = ByteUtil.getString(c);
    MemoryManagement.free(c);
    return a;
};

BinaryStream.prototype.getInt = function() {
    return this.byteBuffer.getInt();
};

BinaryStream.prototype.getLong = function() {
    return this.byteBuffer.getLong();
};

BinaryStream.prototype.get = function() {
    return this.byteBuffer.get();
};

BinaryStream.prototype.getFloat = function() {
    return this.byteBuffer.getFloat();
};

BinaryStream.prototype.putShort = function(c) {
    this.byteBuffer.putShort(c);
};

BinaryStream.prototype.put = function(c) {
    this.byteBuffer.put(c);
};

BinaryStream.prototype.putIntAt = function(c, a) {
    this.byteBuffer.putIntAt(c, a);
};

BinaryStream.prototype.putString = function(c) {
    c = ByteUtil.getBytes(c);
    this.putShort(c.length);
    this.byteBuffer.putBytes(c);
    MemoryManagement.free(c);
};

BinaryStream.prototype.putDouble = function(c) {
    this.byteBuffer.putDouble(c);
};

BinaryStream.prototype.putInt = function(c) {
    this.byteBuffer.putInt(c);
};

BinaryStream.prototype.putLong = function(c) {
    this.byteBuffer.putLong(c);
};

BinaryStream.prototype.putFloat = function(c) {
    this.byteBuffer.putFloat(c);
};

BinaryStream.prototype.getByteBuffer = function() {
    return this.byteBuffer;
};

BinaryStream.prototype.getKeyShort = function(c) {
    return 0;
};

BinaryStream.prototype.getKeyDouble = function(c) {
    return 0;
};

BinaryStream.prototype.getKeyInt = function(c) {
    return 0;
};

BinaryStream.prototype.getKeyLong = function(c) {
    return 0;
};

BinaryStream.prototype.getKeyFloat = function(c) {
    return 0;
};

BinaryStream.prototype.getKeyString = function(c) {
    return null;
};

BinaryStream.prototype.putKeyShort = function(c, a) {};

BinaryStream.prototype.putKeyString = function(c, a) {};

BinaryStream.prototype.putKeyDouble = function(c, a) {};

BinaryStream.prototype.putKeyInt = function(c, a) {};

BinaryStream.prototype.putKeyLong = function(c, a) {};

BinaryStream.prototype.putKeyFloat = function(c, a) {};

NInvitation.prototype = new Storable();

NInvitation.prototype.constructor = NInvitation;

NInvitation.prototype.init = function() {
    this._CustomDataSet = this._StatusSet = this._ExpirationDelaySet = this._CreationTimeStampSet = this._ContentSet = this._InviteeSet = this._InviterSet = this._IdSet = !1;
    return this;
};

NInvitation.prototype.getId = function() {
    return this._Id;
};

NInvitation.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NInvitation.prototype.isIdSet = function() {
    return this._IdSet;
};

NInvitation.prototype.unSetId = function() {
    this._IdSet = !1;
};

NInvitation.prototype.getInviter = function() {
    return this._Inviter;
};

NInvitation.prototype.setInviter = function(c) {
    this._Inviter = c;
    this._InviterSet = !0;
};

NInvitation.prototype.isInviterSet = function() {
    return this._InviterSet;
};

NInvitation.prototype.unSetInviter = function() {
    this._InviterSet = !1;
};

NInvitation.prototype.getInvitee = function() {
    return this._Invitee;
};

NInvitation.prototype.setInvitee = function(c) {
    this._Invitee = c;
    this._InviteeSet = !0;
};

NInvitation.prototype.isInviteeSet = function() {
    return this._InviteeSet;
};

NInvitation.prototype.unSetInvitee = function() {
    this._InviteeSet = !1;
};

NInvitation.prototype.getContent = function() {
    return this._Content;
};

NInvitation.prototype.setContent = function(c) {
    this._Content = c;
    this._ContentSet = !0;
};

NInvitation.prototype.isContentSet = function() {
    return this._ContentSet;
};

NInvitation.prototype.unSetContent = function() {
    this._ContentSet = !1;
};

NInvitation.prototype.getCreationTimeStamp = function() {
    return this._CreationTimeStamp;
};

NInvitation.prototype.setCreationTimeStamp = function(c) {
    this._CreationTimeStamp = c;
    this._CreationTimeStampSet = !0;
};

NInvitation.prototype.isCreationTimeStampSet = function() {
    return this._CreationTimeStampSet;
};

NInvitation.prototype.unSetCreationTimeStamp = function() {
    this._CreationTimeStampSet = !1;
};

NInvitation.prototype.getExpirationDelay = function() {
    return this._ExpirationDelay;
};

NInvitation.prototype.setExpirationDelay = function(c) {
    this._ExpirationDelay = c;
    this._ExpirationDelaySet = !0;
};

NInvitation.prototype.isExpirationDelaySet = function() {
    return this._ExpirationDelaySet;
};

NInvitation.prototype.unSetExpirationDelay = function() {
    this._ExpirationDelaySet = !1;
};

NInvitation.prototype.getStatus = function() {
    return this._Status;
};

NInvitation.prototype.setStatus = function(c) {
    this._Status = c;
    this._StatusSet = !0;
};

NInvitation.prototype.isStatusSet = function() {
    return this._StatusSet;
};

NInvitation.prototype.unSetStatus = function() {
    this._StatusSet = !1;
};

NInvitation.prototype.getCustomData = function() {
    return this._CustomData;
};

NInvitation.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NInvitation.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NInvitation.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NInvitation.prototype.getDomainID = function() {
    return NInvitation.domainID;
};

NInvitation.prototype.getSerializerID = function() {
    return NInvitation.serializerID;
};

NInvitation.prototype.toString = function() {
    var c;
    c = "[NInvitation --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._InviterSet && 0 == Utils.isNull(this._Inviter) && (c += "_Inviter=" + this._Inviter + "| ");
    1 == this._InviteeSet && 0 == Utils.isNull(this._Invitee) && (c += "_Invitee=" + this._Invitee + "| ");
    1 == this._ContentSet && 0 == Utils.isNull(this._Content) && (c += "_Content=" + this._Content + "| ");
    1 == this._CreationTimeStampSet && 0 == Utils.isNullDouble(this._CreationTimeStamp) && (c += "_CreationTimeStamp=" + this._CreationTimeStamp + "| ");
    1 == this._ExpirationDelaySet && 0 == Utils.isNullDouble(this._ExpirationDelay) && (c += "_ExpirationDelay=" + this._ExpirationDelay + "| ");
    1 == this._StatusSet && 0 == Utils.isNull(this._Status) && (c += "_Status=" + this._Status + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NInvitation.prototype.clone = function() {
    var c = new NInvitation().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._InviterSet && 0 == Utils.isNull(this._Inviter) && c.setInviter(this._Inviter.clone());
    1 == this._InviteeSet && 0 == Utils.isNull(this._Invitee) && c.setInvitee(this._Invitee.clone());
    1 == this._ContentSet && 0 == Utils.isNull(this._Content) && c.setContent(this._Content.clone());
    1 == this._CreationTimeStampSet && 0 == Utils.isNullDouble(this._CreationTimeStamp) && c.setCreationTimeStamp(this._CreationTimeStamp);
    1 == this._ExpirationDelaySet && 0 == Utils.isNullDouble(this._ExpirationDelay) && c.setExpirationDelay(this._ExpirationDelay);
    1 == this._StatusSet && 0 == Utils.isNull(this._Status) && c.setStatus(this._Status);
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NInvitation.domainID = 100;

NInvitation.serializerID = 3047;

StringInputStream.prototype.init = function() {
    return this;
};

StringInputStream.readObject = function(c, a) {
    var b = null;
    try {
        if (a.get() == SerializationTypes.NULL_TYPE) return null;
        a.getInt();
        var e = a.getInt(), f = c.getDomain(e);
        if (null == f) throw Error("No domain available for domain id " + e, null);
        var d = f.getStringSerializerFactory();
        if (null == d) throw Error("No string factory found in domain " + e, null);
        var h = a.getShort(), b = d.readSerializable(c, a, h);
    } catch (g) {
        throw Error("Can't read Object", g);
    }
    return b;
};

StringInputStream.readIntegerList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_INTEGER) : b.push(c.getInt());
    return b;
};

StringInputStream.readShortList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_SHORT) : b.push(c.getShort());
    return b;
};

StringInputStream.readLongList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_LONG) : b.push(c.getLong());
    return b;
};

StringInputStream.readFloatList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_FLOAT) : b.push(c.getFloat());
    return b;
};

StringInputStream.readDoubleList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_DOUBLE) : b.push(c.getDouble());
    return b;
};

StringInputStream.readStringList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) b.push(StringInputStream.readString(c));
    return b;
};

StringInputStream.readBooleanList = function(c) {
    if (c.get() == SerializationTypes.NULL_TYPE) return null;
    c.getInt();
    for (var a = c.getShort(), b = [], e = 0; e < a; e++) c.get() == SerializationTypes.NULL_TYPE ? b.push(Utils.NULL_BOOLEAN) : b.push(1 == c.get());
    return b;
};

StringInputStream.readNMatrix2 = function(c, a) {
    if (a.get() == SerializationTypes.NULL_TYPE) return null;
    a.getInt();
    for (var b = a.getShort(), e = a.getShort(), f = new NMatrix2().init(b, e), b = b * e, e = 0; e < b; e++) f.addItem(StringInputStream.readObject(c, a));
    return f;
};

StringInputStream.readString = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? null : c.getString();
};

StringInputStream.readDate = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_DATE : new Date(c.getLong());
};

StringInputStream.readDouble = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_DOUBLE : c.getDouble();
};

StringInputStream.readInteger = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_INTEGER : c.getInt();
};

StringInputStream.readLong = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_LONG : c.getLong();
};

StringInputStream.readByte = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_BYTE : c.get();
};

StringInputStream.readShort = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_SHORT : c.getShort();
};

StringInputStream.readFloat = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_FLOAT : c.getFloat();
};

StringInputStream.readBoolean = function(c) {
    return c.get() == SerializationTypes.NULL_TYPE ? Utils.NULL_BOOLEAN : 1 == c.get();
};

StringInputStream.getInteger = function(c) {
    return c.getInt();
};

StringInputStream.getLong = function(c) {
    return c.getLong();
};

StringInputStream.getShort = function(c) {
    return c.getShort();
};

StringInputStream.skipProperty = function(c) {
    var a = c.get();
    a != SerializationTypes.NULL_TYPE && (a == SerializationTypes.OBJECT ? (a = c.getInt(), 
    c.ignoreLength(a)) : c.ignore());
};

NAchievement.prototype = new Storable();

NAchievement.prototype.constructor = NAchievement;

NAchievement.prototype.init = function() {
    this._OrderSet = this._ProgressSet = this._GoalSet = this._TypeSet = this._NEnergySet = this._NXPSet = this._DescriptionSet = this._FeaturedSet = this._AchievedSet = this._NameSet = this._IdSet = !1;
    return this;
};

NAchievement.prototype.getId = function() {
    return this._Id;
};

NAchievement.prototype.setId = function(c) {
    this._Id = c;
    this._IdSet = !0;
};

NAchievement.prototype.isIdSet = function() {
    return this._IdSet;
};

NAchievement.prototype.unSetId = function() {
    this._IdSet = !1;
};

NAchievement.prototype.getName = function() {
    return this._Name;
};

NAchievement.prototype.setName = function(c) {
    this._Name = c;
    this._NameSet = !0;
};

NAchievement.prototype.isNameSet = function() {
    return this._NameSet;
};

NAchievement.prototype.unSetName = function() {
    this._NameSet = !1;
};

NAchievement.prototype.isAchieved = function() {
    return this._Achieved;
};

NAchievement.prototype.setAchieved = function(c) {
    this._Achieved = c;
    this._AchievedSet = !0;
};

NAchievement.prototype.isAchievedSet = function() {
    return this._AchievedSet;
};

NAchievement.prototype.unSetAchieved = function() {
    this._AchievedSet = !1;
};

NAchievement.prototype.isFeatured = function() {
    return this._Featured;
};

NAchievement.prototype.setFeatured = function(c) {
    this._Featured = c;
    this._FeaturedSet = !0;
};

NAchievement.prototype.isFeaturedSet = function() {
    return this._FeaturedSet;
};

NAchievement.prototype.unSetFeatured = function() {
    this._FeaturedSet = !1;
};

NAchievement.prototype.getDescription = function() {
    return this._Description;
};

NAchievement.prototype.setDescription = function(c) {
    this._Description = c;
    this._DescriptionSet = !0;
};

NAchievement.prototype.isDescriptionSet = function() {
    return this._DescriptionSet;
};

NAchievement.prototype.unSetDescription = function() {
    this._DescriptionSet = !1;
};

NAchievement.prototype.getNXP = function() {
    return this._NXP;
};

NAchievement.prototype.setNXP = function(c) {
    this._NXP = c;
    this._NXPSet = !0;
};

NAchievement.prototype.isNXPSet = function() {
    return this._NXPSet;
};

NAchievement.prototype.unSetNXP = function() {
    this._NXPSet = !1;
};

NAchievement.prototype.getNEnergy = function() {
    return this._NEnergy;
};

NAchievement.prototype.setNEnergy = function(c) {
    this._NEnergy = c;
    this._NEnergySet = !0;
};

NAchievement.prototype.isNEnergySet = function() {
    return this._NEnergySet;
};

NAchievement.prototype.unSetNEnergy = function() {
    this._NEnergySet = !1;
};

NAchievement.prototype.getType = function() {
    return this._Type;
};

NAchievement.prototype.setType = function(c) {
    this._Type = c;
    this._TypeSet = !0;
};

NAchievement.prototype.isTypeSet = function() {
    return this._TypeSet;
};

NAchievement.prototype.unSetType = function() {
    this._TypeSet = !1;
};

NAchievement.prototype.getGoal = function() {
    return this._Goal;
};

NAchievement.prototype.setGoal = function(c) {
    this._Goal = c;
    this._GoalSet = !0;
};

NAchievement.prototype.isGoalSet = function() {
    return this._GoalSet;
};

NAchievement.prototype.unSetGoal = function() {
    this._GoalSet = !1;
};

NAchievement.prototype.getProgress = function() {
    return this._Progress;
};

NAchievement.prototype.setProgress = function(c) {
    this._Progress = c;
    this._ProgressSet = !0;
};

NAchievement.prototype.isProgressSet = function() {
    return this._ProgressSet;
};

NAchievement.prototype.unSetProgress = function() {
    this._ProgressSet = !1;
};

NAchievement.prototype.getOrder = function() {
    return this._Order;
};

NAchievement.prototype.setOrder = function(c) {
    this._Order = c;
    this._OrderSet = !0;
};

NAchievement.prototype.isOrderSet = function() {
    return this._OrderSet;
};

NAchievement.prototype.unSetOrder = function() {
    this._OrderSet = !1;
};

NAchievement.prototype.getDomainID = function() {
    return NAchievement.domainID;
};

NAchievement.prototype.getSerializerID = function() {
    return NAchievement.serializerID;
};

NAchievement.prototype.toString = function() {
    var c;
    c = "[NAchievement --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && (c += "_Id=" + this._Id + "| ");
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && (c += "_Name=" + this._Name + "| ");
    1 == this._AchievedSet && 0 == Utils.isNullBoolean(this._Achieved) && (c += "_Achieved=" + this._Achieved + "| ");
    1 == this._FeaturedSet && 0 == Utils.isNullBoolean(this._Featured) && (c += "_Featured=" + this._Featured + "| ");
    1 == this._DescriptionSet && 0 == Utils.isNull(this._Description) && (c += "_Description=" + this._Description + "| ");
    1 == this._NXPSet && 0 == Utils.isNullInteger(this._NXP) && (c += "_NXP=" + this._NXP + "| ");
    1 == this._NEnergySet && 0 == Utils.isNullInteger(this._NEnergy) && (c += "_NEnergy=" + this._NEnergy + "| ");
    1 == this._TypeSet && 0 == Utils.isNull(this._Type) && (c += "_Type=" + this._Type + "| ");
    1 == this._GoalSet && 0 == Utils.isNullInteger(this._Goal) && (c += "_Goal=" + this._Goal + "| ");
    1 == this._ProgressSet && 0 == Utils.isNullInteger(this._Progress) && (c += "_Progress=" + this._Progress + "| ");
    1 == this._OrderSet && 0 == Utils.isNullInteger(this._Order) && (c += "_Order=" + this._Order + "| ");
    return c + "]";
};

NAchievement.prototype.clone = function() {
    var c = new NAchievement().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._IdSet && 0 == Utils.isNull(this._Id) && c.setId(this._Id);
    1 == this._NameSet && 0 == Utils.isNull(this._Name) && c.setName(this._Name);
    1 == this._AchievedSet && 0 == Utils.isNullBoolean(this._Achieved) && c.setAchieved(this._Achieved);
    1 == this._FeaturedSet && 0 == Utils.isNullBoolean(this._Featured) && c.setFeatured(this._Featured);
    1 == this._DescriptionSet && 0 == Utils.isNull(this._Description) && c.setDescription(this._Description);
    1 == this._NXPSet && 0 == Utils.isNullInteger(this._NXP) && c.setNXP(this._NXP);
    1 == this._NEnergySet && 0 == Utils.isNullInteger(this._NEnergy) && c.setNEnergy(this._NEnergy);
    1 == this._TypeSet && 0 == Utils.isNull(this._Type) && c.setType(this._Type);
    1 == this._GoalSet && 0 == Utils.isNullInteger(this._Goal) && c.setGoal(this._Goal);
    1 == this._ProgressSet && 0 == Utils.isNullInteger(this._Progress) && c.setProgress(this._Progress);
    1 == this._OrderSet && 0 == Utils.isNullInteger(this._Order) && c.setOrder(this._Order);
    return c;
};

NAchievement.domainID = 100;

NAchievement.serializerID = 3002;

CreateGameStatus.values = function() {
    return CreateGameStatus._values;
};

CreateGameStatus.prototype.getValue = function() {
    return this._value;
};

CreateGameStatus.prototype.name = function() {
    return this._name;
};

CreateGameStatus.prototype.ordinal = function() {
    return this._value;
};

CreateGameStatus.prototype.init = function(c, a) {
    void 0 == CreateGameStatus._values && (CreateGameStatus._values = []);
    this._value = a;
    this._name = c;
    CreateGameStatus._values.push(this);
    return this;
};

CreateGameStatus.fromValue = function(c) {
    for (var a = 0; a < CreateGameStatus._values.length; a++) {
        var b = CreateGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

CreateGameStatus.valueOf = function(c) {
    for (var a = 0; a < CreateGameStatus._values.length; a++) {
        var b = CreateGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

CreateGameStatus.prototype.getDomainID = function() {
    return 100;
};

CreateGameStatus.prototype.getSerializerID = function() {
    return 10098;
};

CreateGameStatus.prototype.toString = function() {
    return "CreateGameStatus." + this._name;
};

CreateGameStatus.prototype.clone = function() {
    return this;
};

CreateGameStatus.INVALID_PARAMETERS = new CreateGameStatus().init("INVALID_PARAMETERS", -2);

CreateGameStatus.INTERNAL_ERROR = new CreateGameStatus().init("INTERNAL_ERROR", -1);

CreateGameStatus.SUCCESS = new CreateGameStatus().init("SUCCESS", 0);

GetScoresStatus.values = function() {
    return GetScoresStatus._values;
};

GetScoresStatus.prototype.getValue = function() {
    return this._value;
};

GetScoresStatus.prototype.name = function() {
    return this._name;
};

GetScoresStatus.prototype.ordinal = function() {
    return this._value;
};

GetScoresStatus.prototype.init = function(c, a) {
    void 0 == GetScoresStatus._values && (GetScoresStatus._values = []);
    this._value = a;
    this._name = c;
    GetScoresStatus._values.push(this);
    return this;
};

GetScoresStatus.fromValue = function(c) {
    for (var a = 0; a < GetScoresStatus._values.length; a++) {
        var b = GetScoresStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetScoresStatus.valueOf = function(c) {
    for (var a = 0; a < GetScoresStatus._values.length; a++) {
        var b = GetScoresStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetScoresStatus.prototype.getDomainID = function() {
    return 100;
};

GetScoresStatus.prototype.getSerializerID = function() {
    return 10047;
};

GetScoresStatus.prototype.toString = function() {
    return "GetScoresStatus." + this._name;
};

GetScoresStatus.prototype.clone = function() {
    return this;
};

GetScoresStatus.INVALID_PARAMETERS = new GetScoresStatus().init("INVALID_PARAMETERS", -2);

GetScoresStatus.INTERNAL_ERROR = new GetScoresStatus().init("INTERNAL_ERROR", -1);

GetScoresStatus.SUCCESS = new GetScoresStatus().init("SUCCESS", 0);

GetScoresStatus.FAILURE = new GetScoresStatus().init("FAILURE", 1);

GetScoresStatus.UNKNOWN_LEADERBOARD = new GetScoresStatus().init("UNKNOWN_LEADERBOARD", 2);

JoinGameRequest.prototype = new Message();

JoinGameRequest.prototype.constructor = JoinGameRequest;

JoinGameRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

JoinGameRequest.prototype.getGameId = function() {
    return this._gameId;
};

JoinGameRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

JoinGameRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

JoinGameRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

JoinGameRequest.prototype.getDomainID = function() {
    return JoinGameRequest.domainID;
};

JoinGameRequest.prototype.getSerializerID = function() {
    return JoinGameRequest.serializerID;
};

JoinGameRequest.prototype.toString = function() {
    var c;
    c = "[JoinGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

JoinGameRequest.prototype.clone = function() {
    var c = new JoinGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

JoinGameRequest.domainID = 100;

JoinGameRequest.serializerID = 10072;

SavePlayerProfileRequest.prototype = new Message();

SavePlayerProfileRequest.prototype.constructor = SavePlayerProfileRequest;

SavePlayerProfileRequest.prototype.init = function() {
    this._profileSet = !1;
    return this;
};

SavePlayerProfileRequest.prototype.getProfile = function() {
    return this._profile;
};

SavePlayerProfileRequest.prototype.setProfile = function(c) {
    this._profile = c;
    this._profileSet = !0;
};

SavePlayerProfileRequest.prototype.isprofileSet = function() {
    return this._profileSet;
};

SavePlayerProfileRequest.prototype.unSetprofile = function() {
    this._profileSet = !1;
};

SavePlayerProfileRequest.prototype.getDomainID = function() {
    return SavePlayerProfileRequest.domainID;
};

SavePlayerProfileRequest.prototype.getSerializerID = function() {
    return SavePlayerProfileRequest.serializerID;
};

SavePlayerProfileRequest.prototype.toString = function() {
    var c;
    c = "[SavePlayerProfileRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._profileSet && 0 == Utils.isNull(this._profile) && (c += "_profile=" + this._profile + "| ");
    return c + "]";
};

SavePlayerProfileRequest.prototype.clone = function() {
    var c = new SavePlayerProfileRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._profileSet && 0 == Utils.isNull(this._profile) && c.setProfile(this._profile.clone());
    return c;
};

SavePlayerProfileRequest.domainID = 100;

SavePlayerProfileRequest.serializerID = 10012;

GetPlayersStatus.values = function() {
    return GetPlayersStatus._values;
};

GetPlayersStatus.prototype.getValue = function() {
    return this._value;
};

GetPlayersStatus.prototype.name = function() {
    return this._name;
};

GetPlayersStatus.prototype.ordinal = function() {
    return this._value;
};

GetPlayersStatus.prototype.init = function(c, a) {
    void 0 == GetPlayersStatus._values && (GetPlayersStatus._values = []);
    this._value = a;
    this._name = c;
    GetPlayersStatus._values.push(this);
    return this;
};

GetPlayersStatus.fromValue = function(c) {
    for (var a = 0; a < GetPlayersStatus._values.length; a++) {
        var b = GetPlayersStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetPlayersStatus.valueOf = function(c) {
    for (var a = 0; a < GetPlayersStatus._values.length; a++) {
        var b = GetPlayersStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetPlayersStatus.prototype.getDomainID = function() {
    return 100;
};

GetPlayersStatus.prototype.getSerializerID = function() {
    return 10182;
};

GetPlayersStatus.prototype.toString = function() {
    return "GetPlayersStatus." + this._name;
};

GetPlayersStatus.prototype.clone = function() {
    return this;
};

GetPlayersStatus.INVALID_PARAMETERS = new GetPlayersStatus().init("INVALID_PARAMETERS", -2);

GetPlayersStatus.INTERNAL_ERROR = new GetPlayersStatus().init("INTERNAL_ERROR", -1);

GetPlayersStatus.SUCCESS = new GetPlayersStatus().init("SUCCESS", 0);

GetPlayersStatus.INVALID_QUERY = new GetPlayersStatus().init("INVALID_QUERY", 1);

T5511.prototype.init = function(c) {
    void 0 == T5511._h13538 && (T5511._h13538 = "connectionId");
    this._y13531 = "1_0_1_0";
    this._r13534 = [];
    this._a13535 = [];
    this._z13539 = NLoggerFactory.getLogger("AbstractNuggetaPlug");
    this._h13540 = [];
    this._o13546 = HandshakeState.INIT;
    this._d13550 = this._u13549 = this._j13548 = !1;
    if (0 == c.indexOf("nuggeta")) {
        var a = c.split("://");
        2 == a.length ? (this._v5587 = "127.0.0.1:3110", this._w13547 = a[1]) : this._z13539.error("Malformed URL : " + c);
    } else this._u13549 = !0, this._o13552 = DnsStatus.SUCCESS, this._v5587 = c;
    this._z13539 = NLoggerFactory.getLogger("NuggetaPlug");
    this._j13532 = new NuggetaGameApi().init();
    this._m13533 = new NuggetaCoreApi().init();
    this.initAdminPlug();
    this.initGamingPlug();
    return this;
};

T5511.prototype.initAdminPlug = function() {
    var c = this;
    this._x13537 = new BasicNuggetaPlug().init();
    var a = new NuggetaCoreDomain().init();
    this._x13537.addDomain(a);
    this._x13537.setConnectionReadyListener(function() {
        var a = new DnsRequest().init();
        a.setGameId(c._w13547);
        a.setGameVersion(c.getVersion());
        a.setGameDeployedVersion(c.getDeployedVersion());
        a.setPlatform(Platform.get());
        c._x13537.sendMessage(a);
    });
    c._x13537.setConnectionLostListener(function() {
        c._z13539.error("x12-plug lost");
        c._x13537.stop();
        c.restart();
    });
    c._x13537.setConnectionFailListener(function() {
        c._z13539.error("x12-plug fail");
        c._x13537.stop();
        if (c._o13546 == HandshakeState.BALANCE) c.restart(); else {
            var a = new StartResponse().init();
            a.setStartStatus(StartStatus.FAILED);
            c._n13554(a);
        }
    });
    c._x13537.addMessageListener(function(a) {
        c.onAdminMessage(a);
    });
};

T5511.prototype.onAdminMessage = function(c) {
    if (!this._j13548 && c instanceof DnsResponse) {
        var a = c.getStartDetails();
        this._o13552 = c.getDnsStatus();
        this._d13553 = this._cloneSerializable(a);
        c.getDnsStatus() == DnsStatus.SUCCESS ? (this._o13552 = DnsStatus.SUCCESS, this._x13537.stop(), 
        a = c.getIpAddress() + ":" + c.getTcpPort(), this.startGSConnection(a)) : c.getDnsStatus() == DnsStatus.WARNED ? (this._o13552 = DnsStatus.WARNED, 
        this._x13537.stop(), a = c.getIpAddress() + ":" + c.getTcpPort(), this.startGSConnection(a)) : c.getDnsStatus() == DnsStatus.REFUSED ? (c = new StartResponse().init(), 
        c.setStartStatus(StartStatus.REFUSED), c.setStartDetails(a), null != a && 1 == a.isUseDefaultImpl() && this.defaultAlertVersionUnsupported(a), 
        this._n13554(c)) : c.getDnsStatus() == DnsStatus.FAILED ? (a = new DnsRequest().init(), 
        a.setGameId(this._w13547), a.setGameVersion(this.getVersion()), a.setGameDeployedVersion(this.getDeployedVersion()), 
        a.setPlatform(Platform.get()), this._x13537.sendMessage(a)) : c.getDnsStatus() == DnsStatus.FAILED_TRY_LATER && (this._x13537.stop(), 
        this._o13546 == HandshakeState.BALANCE ? (this._j13548 = !0, this._l13555()) : (a = new StartResponse().init(), 
        a.setStartStatus(StartStatus.FAILED), this._n13554(a)));
    }
};

T5511.prototype.initGamingPlug = function() {
    var c = this;
    this._h13536 = new BasicNuggetaPlug().init();
    var a = new NuggetaCoreDomain().init();
    this._h13536.addDomain(a);
    a = new NuggetaGameCoreDomain().init();
    this._h13536.addDomain(a);
    this._h13536.setConnectionReadyListener(function() {
        var a = new Handshake().init();
        a.setReason(c._o13546);
        a.setSessionId(c._x13544);
        a.setDebugSpId(c._x13545);
        a.setPlayerIdsStored(c._v13551);
        a.setPlatform(Platform.get());
        a.setGameId(c._w13547);
        c._h13536.sendMessage(a);
        MemoryManagement.free(a);
    });
    c._h13536.setConnectionFailListener(function() {
        c._h13536.stop();
        if (c._u13549) {
            var a = new StartResponse().init();
            a.setStartStatus(StartStatus.FAILED);
            null != c._n13554 && c._n13554(a);
        } else c.restart();
    });
    c._h13536.setConnectionLostListener(function() {
        c._j13548 || (c._z13539.error("gs-plug lost"), c._h13536.stop(), c._o13546 != HandshakeState.BALANCE ? (c._o13546 = HandshakeState.BALANCE, 
        c._z13539.warn("Connection Interrupted ! trying to reconnect..."), null != c._t13556 && c._t13556()) : c._z13539.error("Balance failed : onConnectionLost - Retry to balance connection"), 
        c.restart());
    });
    c._h13536.addMessageListener(function(a) {
        c.onGSMessage(a);
    });
};

T5511.prototype.startGSConnection = function(c) {
    if (!this._j13548) {
        this._j13532.setBasicNuggetaPlug(this._h13536);
        this._m13533.setBasicNuggetaPlug(this._h13536);
        for (var a = 0; a < this._r13534.length; a++) this._r13534[a].setBasicNuggetaPlug(this._h13536);
        this._h13536.setUrl(c);
        this._h13536.start();
    }
};

T5511.prototype.onGSMessage = function(c) {
    var a = this;
    if (!this._j13548 || c instanceof StopPlugConnectionResponse) if (c instanceof SessionExpired && (this._j13548 = !0), 
    c instanceof StopPlugConnectionResponse) this.stop0(); else if (c instanceof OpenConnection) {
        var b = c.getIpAddress();
        c = c.getTcpPort();
        b = b + ":" + c;
        this._t13541 = new T5512().init("gs-plug-slave-", this._dupString(""));
        this._t13541._m25001(function() {
            var b = new Handshake().init();
            b.setReason(HandshakeState.OPEN_SLAVE_CONNECTION);
            b.setPlayerIdsStored(a._v13551);
            b.setSessionId(a._x13544);
            b.setGameId(a._w13547);
            a._t13541._m25002(b);
        });
        a._t13541._m25003(function() {
            a._h13540.splice(a._h13540.indexOf(a._t13541), 1);
        });
        a._t13541._m25004(function() {
            a._h13540.splice(a._h13540.indexOf(a._t13541), 1);
        });
        a._t13541._m25006(a._r13542._m25007("gs-plug", function(b) {
            if (!(b instanceof OpenConnection || b instanceof HandshakeResponse)) {
                if (b instanceof JoinGameResponse) {
                    var c = b.getGame();
                    a._t13541._m25005(a._dupString(c.getId()));
                }
                a._j13532.getDomainMessageListener().getMessageListener()(b);
            }
        }, b));
        a._h13540.push(a._t13541);
    } else if (c instanceof SwitchToServerInformation) a._h13536.stop(), a._o13546 = HandshakeState.SWITCH, 
    this.startGSConnection(c.getAddress()); else if (c instanceof HandshakeResponse) if (c.getExecutionStatus() == ExecutionStatus.OK) if (this.setSessionId(c.getSessionId()), 
    a._h13536.setPrefixMessageId(a._x13544), c.getReason() == HandshakeState.BALANCE) a._o13546 = HandshakeState.INIT, 
    a._s13557(); else {
        if (c.getReason() != HandshakeState.SWITCH && c.getReason() == HandshakeState.INIT) {
            a._o13546 = HandshakeState.INIT;
            this.storeConnectionId(c.getPlayerIdsStored());
            b = new StartResponse().init();
            if (a._o13552 == DnsStatus.SUCCESS) {
                b.setStartStatus(StartStatus.READY);
                var e = this._cloneSerializable(c.getPlayer());
                b.setPlayer(e);
                c = this._cloneSerializable(c.getPlayerSessionType());
                b.setPlayerSessionType(c);
            } else a._o13552 == DnsStatus.WARNED && (b.setStartStatus(StartStatus.WARNED), e = this._cloneSerializable(c.getPlayer()), 
            b.setPlayer(e), c = this._cloneSerializable(c.getPlayerSessionType()), b.setPlayerSessionType(c), 
            c = this._cloneSerializable(a._d13553), b.setStartDetails(c), null != a._d13553 && 1 == a._d13553.isUseDefaultImpl() && this.defaultAlertWarningNewVersion(c));
            a._n13554(b);
        }
    } else c.getReason() == HandshakeState.BALANCE ? (a._j13548 = !0, a._l13555()) : (b = new StartResponse().init(), 
    b.setStartStatus(StartStatus.FAILED), a._n13554(b)); else c instanceof OpenUrl && (a._d13550 = !0, 
    this.openWebView(c)), a._m13533.getDomainMessageListener().getMessageListener()(c), 
    a._j13532.getDomainMessageListener().getMessageListener()(c);
};

T5511.prototype.start0 = function() {
    this._v13551 = this.loadConnectionId();
    this._j13548 = !1;
    this._u13549 ? this.startGSConnection(this._v5587) : this.startAdminConnection();
};

T5511.prototype.start = function() {
    this.start0();
};

T5511.prototype.restart = function() {
    this._j13548 || (this._u13549 ? this.startGSConnection(this._v5587) : this.startAdminConnection());
};

T5511.prototype.startAdminConnection = function() {
    this._x13537.start();
};

T5511.prototype.stop = function() {
    this._j13548 = !0;
    null != this._h13536 ? this._h13536.sendStopMessage() : this.stop0();
};

T5511.prototype.stop0 = function() {
    this._j13548 = !0;
    null != this._x13537 && this._x13537.stop();
    null != this._h13536 && this._h13536.stop();
    for (var c = 0; c < this._h13540.length; c++) this._h13540[c]._m25011();
    null != this._p13558 && this._p13558();
};

T5511.prototype.sendMessage = function(c) {
    c = this._cloneSerializable(c);
    return this._h13536.sendMessage(c);
};

T5511.prototype.sendGameMessage = function(c, a) {
    c.setGameId(a);
    for (var b = 0; b < this._h13540.length; b++) this._h13540[b]._m25014(a);
    return this._h13536.sendMessage(c);
};

T5511.prototype._cloneSerializable = function(c) {
    return c;
};

T5511.prototype.gameApi = function() {
    return this._j13532;
};

T5511.prototype.coreApi = function() {
    return this._m13533;
};

T5511.prototype.defaultAlertWarningNewVersion = function(c) {
    Notifications.toast("A new version is available ! , you should download it");
};

T5511.prototype.defaultAlertVersionUnsupported = function(c) {
    Notifications.toast("A new version is available ! , you need to download it");
};

T5511.prototype.loadConnectionId = function() {
    return NStorage.getItem(T5511._h13538);
};

T5511.prototype.getVersion = function() {
    return 666666666;
};

T5511.prototype.getDeployedVersion = function() {
    return 777777777;
};

T5511.prototype.storeConnectionId = function(c) {
    this._v13551 = this._dupString(c);
    NStorage.setItem(T5511._h13538, this._v13551);
};

T5511.prototype._dupString = function(c) {
    return c;
};

T5511.prototype.openWebView = function(c) {
    Net.openWebView(c.getUrl());
};

T5511.prototype.setSessionId = function(c) {
    this._x13544 = this._dupString(c);
};

T5511.prototype.setPlayerDebugId = function(c) {
    this._x13545 = c;
};

T5511.prototype.setStartResponseHandler = function(c) {
    this._n13554 = c;
};

T5511.prototype.setConnectionLostListener = function(c) {
    this._l13555 = c;
};

T5511.prototype.setConnectionInvalidVersionDetectedListener = function(c) {
    this._x13537.setConnectionInvalidVersionDetectedListener(c);
    this._h13536.setConnectionInvalidVersionDetectedListener(c);
};

T5511.prototype.setConnectionInterruptedListener = function(c) {
    this._t13556 = c;
};

T5511.prototype.setConnectionResumedListener = function(c) {
    this._s13557 = c;
};

T5511.prototype.setConnectionStopListener = function(c) {
    this._p13558 = c;
};

T5511.prototype.addDomain = function(c) {
    this._a13535.push(c);
    null != this._h13536 && this._h13536.addDomain(c);
};

T5511.prototype.registerApi = function(c) {
    var a = c.getDomain();
    this._h13536.addDomain(a);
    a.getDomainId();
    this._h13536.addDomainMessageListener(c.getDomainMessageListener());
    this._r13534.push(c);
};

T5511.prototype.printVersion = function() {
    this._z13539.info("Version : " + this._y13531);
};

T5511.prototype.addMessageListener = function(c) {
    this._h13536.addMessageListener(c);
};

T5511.prototype.addNRawMessageHandler = function(c) {
    this._m13533.addNRawMessageHandler(c);
};

T5511.prototype.addNRawGameMessageHandler = function(c) {
    this._j13532.addNRawGameMessageHandler(c);
};

T5511.prototype.enablePump = function(c) {
    this._j13532.enablePump(c);
    this._m13533.enablePump(c);
    for (var a = 0; a < this._r13534.length; a++) this._r13534[a].enablePump(c);
};

T5511.prototype.pump = function() {
    this._m13533.pump();
    this._j13532.pump();
    for (var c = 0; c < this._r13534.length; c++) this._r13534[c].pump();
    for (var c = this.pumpAndGet(), a = 0; a < c.length; a++) MemoryManagement.free(c[a]);
    MemoryManagement.free(c);
};

T5511.prototype.pumpAndGet = function() {
    for (var c = this._m13533.pumpAndGet(), a = this._j13532.pumpAndGet(), b = 0; b < a.length; b++) c.push(a[b]);
    for (a = 0; a < this._r13534.length; a++) for (var b = this._r13534[a].pumpAndGet(), e = 0; e < b.length; e++) c.push(b[e]);
    return c;
};

SaveGameResponse.prototype = new Message();

SaveGameResponse.prototype.constructor = SaveGameResponse;

SaveGameResponse.prototype.init = function() {
    this._gameIdSet = this._SaveGameStatusSet = !1;
    return this;
};

SaveGameResponse.prototype.getSaveGameStatus = function() {
    return this._SaveGameStatus;
};

SaveGameResponse.prototype.setSaveGameStatus = function(c) {
    this._SaveGameStatus = c;
    this._SaveGameStatusSet = !0;
};

SaveGameResponse.prototype.isSaveGameStatusSet = function() {
    return this._SaveGameStatusSet;
};

SaveGameResponse.prototype.unSetSaveGameStatus = function() {
    this._SaveGameStatusSet = !1;
};

SaveGameResponse.prototype.getGameId = function() {
    return this._gameId;
};

SaveGameResponse.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

SaveGameResponse.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

SaveGameResponse.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

SaveGameResponse.prototype.getDomainID = function() {
    return SaveGameResponse.domainID;
};

SaveGameResponse.prototype.getSerializerID = function() {
    return SaveGameResponse.serializerID;
};

SaveGameResponse.prototype.toString = function() {
    var c;
    c = "[SaveGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SaveGameStatusSet && 0 == Utils.isNull(this._SaveGameStatus) && (c += "_SaveGameStatus=" + this._SaveGameStatus + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

SaveGameResponse.prototype.clone = function() {
    var c = new SaveGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SaveGameStatusSet && 0 == Utils.isNull(this._SaveGameStatus) && c.setSaveGameStatus(this._SaveGameStatus);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

SaveGameResponse.domainID = 100;

SaveGameResponse.serializerID = 10142;

InvitationAcceptedNotification.prototype = new Message();

InvitationAcceptedNotification.prototype.constructor = InvitationAcceptedNotification;

InvitationAcceptedNotification.prototype.init = function() {
    this._InvitationSet = !1;
    return this;
};

InvitationAcceptedNotification.prototype.getInvitation = function() {
    return this._Invitation;
};

InvitationAcceptedNotification.prototype.setInvitation = function(c) {
    this._Invitation = c;
    this._InvitationSet = !0;
};

InvitationAcceptedNotification.prototype.isInvitationSet = function() {
    return this._InvitationSet;
};

InvitationAcceptedNotification.prototype.unSetInvitation = function() {
    this._InvitationSet = !1;
};

InvitationAcceptedNotification.prototype.getDomainID = function() {
    return InvitationAcceptedNotification.domainID;
};

InvitationAcceptedNotification.prototype.getSerializerID = function() {
    return InvitationAcceptedNotification.serializerID;
};

InvitationAcceptedNotification.prototype.toString = function() {
    var c;
    c = "[InvitationAcceptedNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && (c += "_Invitation=" + this._Invitation + "| ");
    return c + "]";
};

InvitationAcceptedNotification.prototype.clone = function() {
    var c = new InvitationAcceptedNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._InvitationSet && 0 == Utils.isNull(this._Invitation) && c.setInvitation(this._Invitation.clone());
    return c;
};

InvitationAcceptedNotification.domainID = 100;

InvitationAcceptedNotification.serializerID = 3050;

InvitePlayerStatus.values = function() {
    return InvitePlayerStatus._values;
};

InvitePlayerStatus.prototype.getValue = function() {
    return this._value;
};

InvitePlayerStatus.prototype.name = function() {
    return this._name;
};

InvitePlayerStatus.prototype.ordinal = function() {
    return this._value;
};

InvitePlayerStatus.prototype.init = function(c, a) {
    void 0 == InvitePlayerStatus._values && (InvitePlayerStatus._values = []);
    this._value = a;
    this._name = c;
    InvitePlayerStatus._values.push(this);
    return this;
};

InvitePlayerStatus.fromValue = function(c) {
    for (var a = 0; a < InvitePlayerStatus._values.length; a++) {
        var b = InvitePlayerStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

InvitePlayerStatus.valueOf = function(c) {
    for (var a = 0; a < InvitePlayerStatus._values.length; a++) {
        var b = InvitePlayerStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

InvitePlayerStatus.prototype.getDomainID = function() {
    return 100;
};

InvitePlayerStatus.prototype.getSerializerID = function() {
    return 10170;
};

InvitePlayerStatus.prototype.toString = function() {
    return "InvitePlayerStatus." + this._name;
};

InvitePlayerStatus.prototype.clone = function() {
    return this;
};

InvitePlayerStatus.INVALID_PARAMETERS = new InvitePlayerStatus().init("INVALID_PARAMETERS", -2);

InvitePlayerStatus.INTERNAL_ERROR = new InvitePlayerStatus().init("INTERNAL_ERROR", -1);

InvitePlayerStatus.SUCCESS = new InvitePlayerStatus().init("SUCCESS", 0);

InvitePlayerStatus.UNKNOWN_PLAYER_ID = new InvitePlayerStatus().init("UNKNOWN_PLAYER_ID", 2);

ForgotPasswordStatus.values = function() {
    return ForgotPasswordStatus._values;
};

ForgotPasswordStatus.prototype.getValue = function() {
    return this._value;
};

ForgotPasswordStatus.prototype.name = function() {
    return this._name;
};

ForgotPasswordStatus.prototype.ordinal = function() {
    return this._value;
};

ForgotPasswordStatus.prototype.init = function(c, a) {
    void 0 == ForgotPasswordStatus._values && (ForgotPasswordStatus._values = []);
    this._value = a;
    this._name = c;
    ForgotPasswordStatus._values.push(this);
    return this;
};

ForgotPasswordStatus.fromValue = function(c) {
    for (var a = 0; a < ForgotPasswordStatus._values.length; a++) {
        var b = ForgotPasswordStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ForgotPasswordStatus.valueOf = function(c) {
    for (var a = 0; a < ForgotPasswordStatus._values.length; a++) {
        var b = ForgotPasswordStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ForgotPasswordStatus.prototype.getDomainID = function() {
    return 100;
};

ForgotPasswordStatus.prototype.getSerializerID = function() {
    return 10008;
};

ForgotPasswordStatus.prototype.toString = function() {
    return "ForgotPasswordStatus." + this._name;
};

ForgotPasswordStatus.prototype.clone = function() {
    return this;
};

ForgotPasswordStatus.INVALID_PARAMETERS = new ForgotPasswordStatus().init("INVALID_PARAMETERS", -2);

ForgotPasswordStatus.INTERNAL_ERROR = new ForgotPasswordStatus().init("INTERNAL_ERROR", -1);

ForgotPasswordStatus.SUCCESS = new ForgotPasswordStatus().init("SUCCESS", 0);

ForgotPasswordStatus.INVALID_CREDENTIALS = new ForgotPasswordStatus().init("INVALID_CREDENTIALS", 1);

SavePlayerProfileResponse.prototype = new Message();

SavePlayerProfileResponse.prototype.constructor = SavePlayerProfileResponse;

SavePlayerProfileResponse.prototype.init = function() {
    this._SavePlayerProfileStatusSet = !1;
    return this;
};

SavePlayerProfileResponse.prototype.getSavePlayerProfileStatus = function() {
    return this._SavePlayerProfileStatus;
};

SavePlayerProfileResponse.prototype.setSavePlayerProfileStatus = function(c) {
    this._SavePlayerProfileStatus = c;
    this._SavePlayerProfileStatusSet = !0;
};

SavePlayerProfileResponse.prototype.isSavePlayerProfileStatusSet = function() {
    return this._SavePlayerProfileStatusSet;
};

SavePlayerProfileResponse.prototype.unSetSavePlayerProfileStatus = function() {
    this._SavePlayerProfileStatusSet = !1;
};

SavePlayerProfileResponse.prototype.getDomainID = function() {
    return SavePlayerProfileResponse.domainID;
};

SavePlayerProfileResponse.prototype.getSerializerID = function() {
    return SavePlayerProfileResponse.serializerID;
};

SavePlayerProfileResponse.prototype.toString = function() {
    var c;
    c = "[SavePlayerProfileResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SavePlayerProfileStatusSet && 0 == Utils.isNull(this._SavePlayerProfileStatus) && (c += "_SavePlayerProfileStatus=" + this._SavePlayerProfileStatus + "| ");
    return c + "]";
};

SavePlayerProfileResponse.prototype.clone = function() {
    var c = new SavePlayerProfileResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SavePlayerProfileStatusSet && 0 == Utils.isNull(this._SavePlayerProfileStatus) && c.setSavePlayerProfileStatus(this._SavePlayerProfileStatus);
    return c;
};

SavePlayerProfileResponse.domainID = 100;

SavePlayerProfileResponse.serializerID = 10013;

NPlayerWallet.prototype = new Storable();

NPlayerWallet.prototype.constructor = NPlayerWallet;

NPlayerWallet.prototype.init = function() {
    this._NbCoinsSet = this._PlayerIdSet = !1;
    return this;
};

NPlayerWallet.prototype.getPlayerId = function() {
    return this._PlayerId;
};

NPlayerWallet.prototype.setPlayerId = function(c) {
    this._PlayerId = c;
    this._PlayerIdSet = !0;
};

NPlayerWallet.prototype.isPlayerIdSet = function() {
    return this._PlayerIdSet;
};

NPlayerWallet.prototype.unSetPlayerId = function() {
    this._PlayerIdSet = !1;
};

NPlayerWallet.prototype.getNbCoins = function() {
    return this._NbCoins;
};

NPlayerWallet.prototype.setNbCoins = function(c) {
    this._NbCoins = c;
    this._NbCoinsSet = !0;
};

NPlayerWallet.prototype.isNbCoinsSet = function() {
    return this._NbCoinsSet;
};

NPlayerWallet.prototype.unSetNbCoins = function() {
    this._NbCoinsSet = !1;
};

NPlayerWallet.prototype.getDomainID = function() {
    return NPlayerWallet.domainID;
};

NPlayerWallet.prototype.getSerializerID = function() {
    return NPlayerWallet.serializerID;
};

NPlayerWallet.prototype.toString = function() {
    var c;
    c = "[NPlayerWallet --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && (c += "_PlayerId=" + this._PlayerId + "| ");
    1 == this._NbCoinsSet && 0 == Utils.isNullInteger(this._NbCoins) && (c += "_NbCoins=" + this._NbCoins + "| ");
    return c + "]";
};

NPlayerWallet.prototype.clone = function() {
    var c = new NPlayerWallet().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._PlayerIdSet && 0 == Utils.isNull(this._PlayerId) && c.setPlayerId(this._PlayerId);
    1 == this._NbCoinsSet && 0 == Utils.isNullInteger(this._NbCoins) && c.setNbCoins(this._NbCoins);
    return c;
};

NPlayerWallet.domainID = 100;

NPlayerWallet.serializerID = 3018;

LoadGameRequest.prototype = new Message();

LoadGameRequest.prototype.constructor = LoadGameRequest;

LoadGameRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

LoadGameRequest.prototype.getGameId = function() {
    return this._gameId;
};

LoadGameRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

LoadGameRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

LoadGameRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

LoadGameRequest.prototype.getDomainID = function() {
    return LoadGameRequest.domainID;
};

LoadGameRequest.prototype.getSerializerID = function() {
    return LoadGameRequest.serializerID;
};

LoadGameRequest.prototype.toString = function() {
    var c;
    c = "[LoadGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

LoadGameRequest.prototype.clone = function() {
    var c = new LoadGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

LoadGameRequest.domainID = 100;

LoadGameRequest.serializerID = 10144;

SendGameChatStatus.values = function() {
    return SendGameChatStatus._values;
};

SendGameChatStatus.prototype.getValue = function() {
    return this._value;
};

SendGameChatStatus.prototype.name = function() {
    return this._name;
};

SendGameChatStatus.prototype.ordinal = function() {
    return this._value;
};

SendGameChatStatus.prototype.init = function(c, a) {
    void 0 == SendGameChatStatus._values && (SendGameChatStatus._values = []);
    this._value = a;
    this._name = c;
    SendGameChatStatus._values.push(this);
    return this;
};

SendGameChatStatus.fromValue = function(c) {
    for (var a = 0; a < SendGameChatStatus._values.length; a++) {
        var b = SendGameChatStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SendGameChatStatus.valueOf = function(c) {
    for (var a = 0; a < SendGameChatStatus._values.length; a++) {
        var b = SendGameChatStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SendGameChatStatus.prototype.getDomainID = function() {
    return 100;
};

SendGameChatStatus.prototype.getSerializerID = function() {
    return 10113;
};

SendGameChatStatus.prototype.toString = function() {
    return "SendGameChatStatus." + this._name;
};

SendGameChatStatus.prototype.clone = function() {
    return this;
};

SendGameChatStatus.INVALID_PARAMETERS = new SendGameChatStatus().init("INVALID_PARAMETERS", -2);

SendGameChatStatus.INTERNAL_ERROR = new SendGameChatStatus().init("INTERNAL_ERROR", -1);

SendGameChatStatus.SENT = new SendGameChatStatus().init("SENT", 0);

SendGameChatStatus.FAILURE = new SendGameChatStatus().init("FAILURE", 1);

AchieveStatus.values = function() {
    return AchieveStatus._values;
};

AchieveStatus.prototype.getValue = function() {
    return this._value;
};

AchieveStatus.prototype.name = function() {
    return this._name;
};

AchieveStatus.prototype.ordinal = function() {
    return this._value;
};

AchieveStatus.prototype.init = function(c, a) {
    void 0 == AchieveStatus._values && (AchieveStatus._values = []);
    this._value = a;
    this._name = c;
    AchieveStatus._values.push(this);
    return this;
};

AchieveStatus.fromValue = function(c) {
    for (var a = 0; a < AchieveStatus._values.length; a++) {
        var b = AchieveStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

AchieveStatus.valueOf = function(c) {
    for (var a = 0; a < AchieveStatus._values.length; a++) {
        var b = AchieveStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

AchieveStatus.prototype.getDomainID = function() {
    return 100;
};

AchieveStatus.prototype.getSerializerID = function() {
    return 10068;
};

AchieveStatus.prototype.toString = function() {
    return "AchieveStatus." + this._name;
};

AchieveStatus.prototype.clone = function() {
    return this;
};

AchieveStatus.INVALID_PARAMETERS = new AchieveStatus().init("INVALID_PARAMETERS", -2);

AchieveStatus.INTERNAL_ERROR = new AchieveStatus().init("INTERNAL_ERROR", -1);

AchieveStatus.SUCCESS = new AchieveStatus().init("SUCCESS", 0);

AchieveStatus.FAILURE = new AchieveStatus().init("FAILURE", 1);

AchieveStatus.UNKNOWN_ACHIEVEMENT = new AchieveStatus().init("UNKNOWN_ACHIEVEMENT", 2);

AchieveStatus.ALREADY_ACHIEVED = new AchieveStatus().init("ALREADY_ACHIEVED", 3);

StartResponse.prototype = new Message();

StartResponse.prototype.constructor = StartResponse;

StartResponse.prototype.init = function() {
    this._PlayerSet = this._PlayerSessionTypeSet = this._StartDetailsSet = this._StartStatusSet = !1;
    return this;
};

StartResponse.prototype.getStartStatus = function() {
    return this._StartStatus;
};

StartResponse.prototype.setStartStatus = function(c) {
    this._StartStatus = c;
    this._StartStatusSet = !0;
};

StartResponse.prototype.isStartStatusSet = function() {
    return this._StartStatusSet;
};

StartResponse.prototype.unSetStartStatus = function() {
    this._StartStatusSet = !1;
};

StartResponse.prototype.getStartDetails = function() {
    return this._StartDetails;
};

StartResponse.prototype.setStartDetails = function(c) {
    this._StartDetails = c;
    this._StartDetailsSet = !0;
};

StartResponse.prototype.isStartDetailsSet = function() {
    return this._StartDetailsSet;
};

StartResponse.prototype.unSetStartDetails = function() {
    this._StartDetailsSet = !1;
};

StartResponse.prototype.getPlayerSessionType = function() {
    return this._PlayerSessionType;
};

StartResponse.prototype.setPlayerSessionType = function(c) {
    this._PlayerSessionType = c;
    this._PlayerSessionTypeSet = !0;
};

StartResponse.prototype.isPlayerSessionTypeSet = function() {
    return this._PlayerSessionTypeSet;
};

StartResponse.prototype.unSetPlayerSessionType = function() {
    this._PlayerSessionTypeSet = !1;
};

StartResponse.prototype.getPlayer = function() {
    return this._Player;
};

StartResponse.prototype.setPlayer = function(c) {
    this._Player = c;
    this._PlayerSet = !0;
};

StartResponse.prototype.isPlayerSet = function() {
    return this._PlayerSet;
};

StartResponse.prototype.unSetPlayer = function() {
    this._PlayerSet = !1;
};

StartResponse.prototype.getDomainID = function() {
    return StartResponse.domainID;
};

StartResponse.prototype.getSerializerID = function() {
    return StartResponse.serializerID;
};

StartResponse.prototype.toString = function() {
    var c;
    c = "[StartResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._StartStatusSet && 0 == Utils.isNull(this._StartStatus) && (c += "_StartStatus=" + this._StartStatus + "| ");
    1 == this._StartDetailsSet && 0 == Utils.isNull(this._StartDetails) && (c += "_StartDetails=" + this._StartDetails + "| ");
    1 == this._PlayerSessionTypeSet && 0 == Utils.isNull(this._PlayerSessionType) && (c += "_PlayerSessionType=" + this._PlayerSessionType + "| ");
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && (c += "_Player=" + this._Player + "| ");
    return c + "]";
};

StartResponse.prototype.clone = function() {
    var c = new StartResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._StartStatusSet && 0 == Utils.isNull(this._StartStatus) && c.setStartStatus(this._StartStatus);
    1 == this._StartDetailsSet && 0 == Utils.isNull(this._StartDetails) && c.setStartDetails(this._StartDetails.clone());
    1 == this._PlayerSessionTypeSet && 0 == Utils.isNull(this._PlayerSessionType) && c.setPlayerSessionType(this._PlayerSessionType);
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && c.setPlayer(this._Player.clone());
    return c;
};

StartResponse.domainID = 100;

StartResponse.serializerID = 3045;

NuggetaGameCoreApi.prototype = new AbstractNuggetaApi();

NuggetaGameCoreApi.prototype.constructor = NuggetaGameCoreApi;

NuggetaGameCoreApi.prototype.init = function() {
    this.dispatcher = new NuggetaGameCoreDispatcher().init();
    this.domain = new NuggetaGameCoreDomain().init();
    AbstractNuggetaApi.prototype.init.call(this);
    return this;
};

NuggetaGameCoreApi.prototype.getDomain = function() {
    return this.domain;
};

NuggetaGameCoreApi.prototype.getDispatcher = function() {
    return this.dispatcher;
};

NuggetaGameCoreApi.prototype.createPlayer = function(c, a, b) {
    var e = new CreatePlayerRequest().init();
    e.setLogin(c);
    e.setPassword(a);
    e.setPlayer(this._cloneSerializable(b));
    return this.basicNuggetaPlug.sendMessage(e);
};

NuggetaGameCoreApi.prototype.createPlayerRequest = function(c, a, b, e) {
    var f = new CreatePlayerRequest().init();
    f.setLogin(c);
    f.setPassword(a);
    f.setPlayer(this._cloneSerializable(b));
    return this.request(f, e);
};

NuggetaGameCoreApi.prototype.login = function(c, a) {
    var b = new LoginRequest().init();
    b.setLogin(c);
    b.setPassword(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.loginRequest = function(c, a, b) {
    var e = new LoginRequest().init();
    e.setLogin(c);
    e.setPassword(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.thirdPartyLogin = function(c, a) {
    var b = new ThirdPartyLoginRequest().init();
    b.setThirdPartySource(this._cloneSerializable(c));
    b.setAccessToken(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.thirdPartyLoginRequest = function(c, a, b) {
    var e = new ThirdPartyLoginRequest().init();
    e.setThirdPartySource(this._cloneSerializable(c));
    e.setAccessToken(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.logout = function() {
    var c = new LogoutRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.logoutRequest = function(c) {
    var a = new LogoutRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.forgotPassword = function(c) {
    var a = new ForgotPasswordRequest().init();
    a.setLogin(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.forgotPasswordRequest = function(c, a) {
    var b = new ForgotPasswordRequest().init();
    b.setLogin(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.setPlayerName = function(c) {
    var a = new SetPlayerNameRequest().init();
    a.setName(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.setPlayerNameRequest = function(c, a) {
    var b = new SetPlayerNameRequest().init();
    b.setName(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getFriends = function() {
    var c = new GetFriendsRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.getFriendsRequest = function(c) {
    var a = new GetFriendsRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.askForFriend = function(c) {
    var a = new AskForFriendRequest().init();
    a.setId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.askForFriendRequest = function(c, a) {
    var b = new AskForFriendRequest().init();
    b.setId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getFriendDemands = function() {
    var c = new GetFriendDemandsRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.getFriendDemandsRequest = function(c) {
    var a = new GetFriendDemandsRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.acceptFriendDemand = function(c) {
    var a = new AcceptFriendDemandRequest().init();
    a.setFriendDemandId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.acceptFriendDemandRequest = function(c, a) {
    var b = new AcceptFriendDemandRequest().init();
    b.setFriendDemandId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.refuseFriendDemand = function(c) {
    var a = new RefuseFriendDemandRequest().init();
    a.setFriendDemandId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.refuseFriendDemandRequest = function(c, a) {
    var b = new RefuseFriendDemandRequest().init();
    b.setFriendDemandId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.submitScore = function(c, a) {
    var b = new SubmitScoreRequest().init();
    b.setScore(this._cloneSerializable(c));
    b.setLeaderboardId(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.submitScoreRequest = function(c, a, b) {
    var e = new SubmitScoreRequest().init();
    e.setScore(this._cloneSerializable(c));
    e.setLeaderboardId(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.getScores = function(c, a, b, e) {
    var f = new GetScoresRequest().init();
    f.setLeaderboardId(c);
    f.setPeriod(this._cloneSerializable(a));
    f.setStart(b);
    f.setLimit(e);
    return this.basicNuggetaPlug.sendMessage(f);
};

NuggetaGameCoreApi.prototype.getScoresRequest = function(c, a, b, e, f) {
    var d = new GetScoresRequest().init();
    d.setLeaderboardId(c);
    d.setPeriod(this._cloneSerializable(a));
    d.setStart(b);
    d.setLimit(e);
    return this.request(d, f);
};

NuggetaGameCoreApi.prototype.getAchievements = function() {
    var c = new GetAchievementsRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.getAchievementsRequest = function(c) {
    var a = new GetAchievementsRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.achieve = function(c) {
    var a = new AchieveRequest().init();
    a.setAchivementId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.achieveRequest = function(c, a) {
    var b = new AchieveRequest().init();
    b.setAchivementId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.achieveWithProgress = function(c, a) {
    var b = new AchieveWithProgressRequest().init();
    b.setAchivementId(c);
    b.setValue(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.achieveWithProgressRequest = function(c, a, b) {
    var e = new AchieveWithProgressRequest().init();
    e.setAchivementId(c);
    e.setValue(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.getPlayerProfile = function() {
    var c = new GetPlayerProfileRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.getPlayerProfileRequest = function(c) {
    var a = new GetPlayerProfileRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.getPlayerProfileByPlayerId = function(c) {
    var a = new GetPlayerProfileByPlayerIdRequest().init();
    a.setPlayerId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.getPlayerProfileByPlayerIdRequest = function(c, a) {
    var b = new GetPlayerProfileByPlayerIdRequest().init();
    b.setPlayerId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.savePlayerProfile = function(c) {
    var a = new SavePlayerProfileRequest().init();
    a.setProfile(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.savePlayerProfileRequest = function(c, a) {
    var b = new SavePlayerProfileRequest().init();
    b.setProfile(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getStorables = function(c) {
    var a = new GetStorablesRequest().init();
    a.setDbQuery(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.getStorablesRequest = function(c, a) {
    var b = new GetStorablesRequest().init();
    b.setDbQuery(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.saveStorable = function(c) {
    var a = new SaveStorableRequest().init();
    a.setStorable(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.saveStorableRequest = function(c, a) {
    var b = new SaveStorableRequest().init();
    b.setStorable(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.updateStorable = function(c) {
    var a = new UpdateStorableRequest().init();
    a.setStorable(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.updateStorableRequest = function(c, a) {
    var b = new UpdateStorableRequest().init();
    b.setStorable(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.removeStorable = function(c) {
    var a = new RemoveStorableRequest().init();
    a.setStorable(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.removeStorableRequest = function(c, a) {
    var b = new RemoveStorableRequest().init();
    b.setStorable(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getItems = function() {
    var c = new GetItemsRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.getItemsRequest = function(c) {
    var a = new GetItemsRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.buyItem = function(c, a) {
    var b = new BuyItemRequest().init();
    b.setItemId(c);
    b.setQuantity(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.buyItemRequest = function(c, a, b) {
    var e = new BuyItemRequest().init();
    e.setItemId(c);
    e.setQuantity(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.consumeItem = function(c, a) {
    var b = new ConsumeItemRequest().init();
    b.setItemId(c);
    b.setQuantity(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.consumeItemRequest = function(c, a, b) {
    var e = new ConsumeItemRequest().init();
    e.setItemId(c);
    e.setQuantity(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.increasePlayerWallet = function(c) {
    var a = new IncreasePlayerWalletRequest().init();
    a.setValue(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.increasePlayerWalletRequest = function(c, a) {
    var b = new IncreasePlayerWalletRequest().init();
    b.setValue(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getPlayerWallet = function() {
    var c = new GetPlayerWalletRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.getPlayerWalletRequest = function(c) {
    var a = new GetPlayerWalletRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.joinGame = function(c) {
    var a = new JoinGameRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.joinGameRequest = function(c, a) {
    var b = new JoinGameRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.unjoinGame = function(c) {
    var a = new UnjoinGameRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.unjoinGameRequest = function(c, a) {
    var b = new UnjoinGameRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.startGame = function(c) {
    var a = new StartGameRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.startGameRequest = function(c, a) {
    var b = new StartGameRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.stopGame = function(c) {
    var a = new StopGameRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.stopGameRequest = function(c, a) {
    var b = new StopGameRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.createGame = function(c) {
    var a = new CreateGameRequest().init();
    a.setGame(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.createGameRequest = function(c, a) {
    var b = new CreateGameRequest().init();
    b.setGame(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getGames = function(c) {
    var a = new GetGamesRequest().init();
    a.setDbQuery(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.getGamesRequest = function(c, a) {
    var b = new GetGamesRequest().init();
    b.setDbQuery(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.saveAsGhost = function(c) {
    var a = new SaveAsGhostRequest().init();
    a.setGame(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.saveAsGhostRequest = function(c, a) {
    var b = new SaveAsGhostRequest().init();
    b.setGame(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.getGhosts = function(c) {
    var a = new GetGhostsRequest().init();
    a.setDbQuery(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.getGhostsRequest = function(c, a) {
    var b = new GetGhostsRequest().init();
    b.setDbQuery(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.loadGhost = function(c) {
    var a = new LoadGhostRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.loadGhostRequest = function(c, a) {
    var b = new LoadGhostRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.nextPlayerTurn = function(c) {
    var a = new NextPlayerTurnRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.nextPlayerTurnRequest = function(c, a) {
    var b = new NextPlayerTurnRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.saveGame = function(c) {
    var a = new SaveGameRequest().init();
    a.setGame(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.saveGameRequest = function(c, a) {
    var b = new SaveGameRequest().init();
    b.setGame(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.loadGame = function(c) {
    var a = new LoadGameRequest().init();
    a.setGameId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.loadGameRequest = function(c, a) {
    var b = new LoadGameRequest().init();
    b.setGameId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.sendGameChat = function(c, a) {
    var b = new SendGameChatRequest().init();
    b.setGameId(c);
    b.setMessage(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.sendGameChatRequest = function(c, a, b) {
    var e = new SendGameChatRequest().init();
    e.setGameId(c);
    e.setMessage(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.sendGameChatToPlayer = function(c, a, b) {
    var e = new SendGameChatToPlayerRequest().init();
    e.setGameId(c);
    e.setPlayerId(a);
    e.setMessage(b);
    return this.basicNuggetaPlug.sendMessage(e);
};

NuggetaGameCoreApi.prototype.sendGameChatToPlayerRequest = function(c, a, b, e) {
    var f = new SendGameChatToPlayerRequest().init();
    f.setGameId(c);
    f.setPlayerId(a);
    f.setMessage(b);
    return this.request(f, e);
};

NuggetaGameCoreApi.prototype.sendGameChatToPlayerList = function(c, a) {
    var b = new SendGameChatToPlayerListRequest().init();
    b.setGameId(c);
    b.setMessage(a);
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.sendGameChatToPlayerListRequest = function(c, a, b) {
    var e = new SendGameChatToPlayerListRequest().init();
    e.setGameId(c);
    e.setMessage(a);
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.invitePlayer = function(c, a) {
    var b = new InvitePlayerRequest().init();
    b.setPlayerId(c);
    b.setInvitation(this._cloneSerializable(a));
    return this.basicNuggetaPlug.sendMessage(b);
};

NuggetaGameCoreApi.prototype.invitePlayerRequest = function(c, a, b) {
    var e = new InvitePlayerRequest().init();
    e.setPlayerId(c);
    e.setInvitation(this._cloneSerializable(a));
    return this.request(e, b);
};

NuggetaGameCoreApi.prototype.getInvitations = function(c) {
    var a = new GetInvitationsRequest().init();
    a.setNuggetaQuery(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.getInvitationsRequest = function(c, a) {
    var b = new GetInvitationsRequest().init();
    b.setNuggetaQuery(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.acceptInvitation = function(c) {
    var a = new AcceptInvitationRequest().init();
    a.setInvitationId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.acceptInvitationRequest = function(c, a) {
    var b = new AcceptInvitationRequest().init();
    b.setInvitationId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.refuseInvitation = function(c) {
    var a = new RefuseInvitationRequest().init();
    a.setInvitationId(c);
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.refuseInvitationRequest = function(c, a) {
    var b = new RefuseInvitationRequest().init();
    b.setInvitationId(c);
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.pauseSessionMonitoring = function() {
    var c = new PauseSessionMonitoringRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.pauseSessionMonitoringRequest = function(c) {
    var a = new PauseSessionMonitoringRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.resumeSessionMonitoring = function() {
    var c = new ResumeSessionMonitoringRequest().init();
    return this.basicNuggetaPlug.sendMessage(c);
};

NuggetaGameCoreApi.prototype.resumeSessionMonitoringRequest = function(c) {
    var a = new ResumeSessionMonitoringRequest().init();
    return this.request(a, c);
};

NuggetaGameCoreApi.prototype.matchAndJoinGame = function(c, a, b) {
    var e = new MatchAndJoinGameRequest().init();
    e.setGamesQuery(this._cloneSerializable(c));
    e.setMatchMakingConditions(this._cloneSerializable(a));
    e.setTimeoutDelayMinPlayers(b);
    return this.basicNuggetaPlug.sendMessage(e);
};

NuggetaGameCoreApi.prototype.matchAndJoinGameRequest = function(c, a, b, e) {
    var f = new MatchAndJoinGameRequest().init();
    f.setGamesQuery(this._cloneSerializable(c));
    f.setMatchMakingConditions(this._cloneSerializable(a));
    f.setTimeoutDelayMinPlayers(b);
    return this.request(f, e);
};

NuggetaGameCoreApi.prototype.getPlayers = function(c) {
    var a = new GetPlayersRequest().init();
    a.setPlayersQuery(this._cloneSerializable(c));
    return this.basicNuggetaPlug.sendMessage(a);
};

NuggetaGameCoreApi.prototype.getPlayersRequest = function(c, a) {
    var b = new GetPlayersRequest().init();
    b.setPlayersQuery(this._cloneSerializable(c));
    return this.request(b, a);
};

NuggetaGameCoreApi.prototype.addPlayerEnterGameHandler = function(c) {
    this.dispatcher.addPlayerEnterGameHandler(c);
};

NuggetaGameCoreApi.prototype.removePlayerEnterGameHandler = function(c) {
    this.dispatcher.removePlayerEnterGameHandler(c);
};

NuggetaGameCoreApi.prototype.addPlayerUnjoinGameHandler = function(c) {
    this.dispatcher.addPlayerUnjoinGameHandler(c);
};

NuggetaGameCoreApi.prototype.removePlayerUnjoinGameHandler = function(c) {
    this.dispatcher.removePlayerUnjoinGameHandler(c);
};

NuggetaGameCoreApi.prototype.addFriendshipNotificationHandler = function(c) {
    this.dispatcher.addFriendshipNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeFriendshipNotificationHandler = function(c) {
    this.dispatcher.removeFriendshipNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addFriendConnectedNotificationHandler = function(c) {
    this.dispatcher.addFriendConnectedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeFriendConnectedNotificationHandler = function(c) {
    this.dispatcher.removeFriendConnectedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addFriendDisconnectedNotificationHandler = function(c) {
    this.dispatcher.addFriendDisconnectedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeFriendDisconnectedNotificationHandler = function(c) {
    this.dispatcher.removeFriendDisconnectedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addSessionExpiredHandler = function(c) {
    this.dispatcher.addSessionExpiredHandler(c);
};

NuggetaGameCoreApi.prototype.removeSessionExpiredHandler = function(c) {
    this.dispatcher.removeSessionExpiredHandler(c);
};

NuggetaGameCoreApi.prototype.addFriendDemandNotificationHandler = function(c) {
    this.dispatcher.addFriendDemandNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeFriendDemandNotificationHandler = function(c) {
    this.dispatcher.removeFriendDemandNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addGameChatNotificationHandler = function(c) {
    this.dispatcher.addGameChatNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeGameChatNotificationHandler = function(c) {
    this.dispatcher.removeGameChatNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addMyTurnNotificationHandler = function(c) {
    this.dispatcher.addMyTurnNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeMyTurnNotificationHandler = function(c) {
    this.dispatcher.removeMyTurnNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addPlayerTurnNotificationHandler = function(c) {
    this.dispatcher.addPlayerTurnNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removePlayerTurnNotificationHandler = function(c) {
    this.dispatcher.removePlayerTurnNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addStartResponseHandler = function(c) {
    this.dispatcher.addStartResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeStartResponseHandler = function(c) {
    this.dispatcher.removeStartResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addInvitationRequestNotificationHandler = function(c) {
    this.dispatcher.addInvitationRequestNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeInvitationRequestNotificationHandler = function(c) {
    this.dispatcher.removeInvitationRequestNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addInvitationAcceptedNotificationHandler = function(c) {
    this.dispatcher.addInvitationAcceptedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeInvitationAcceptedNotificationHandler = function(c) {
    this.dispatcher.removeInvitationAcceptedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addInvitationRefusedNotificationHandler = function(c) {
    this.dispatcher.addInvitationRefusedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeInvitationRefusedNotificationHandler = function(c) {
    this.dispatcher.removeInvitationRefusedNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addInvitationExpiredNotificationHandler = function(c) {
    this.dispatcher.addInvitationExpiredNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeInvitationExpiredNotificationHandler = function(c) {
    this.dispatcher.removeInvitationExpiredNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addNRawGameMessageHandler = function(c) {
    this.dispatcher.addNRawGameMessageHandler(c);
};

NuggetaGameCoreApi.prototype.removeNRawGameMessageHandler = function(c) {
    this.dispatcher.removeNRawGameMessageHandler(c);
};

NuggetaGameCoreApi.prototype.addGameRunningStateChangeHandler = function(c) {
    this.dispatcher.addGameRunningStateChangeHandler(c);
};

NuggetaGameCoreApi.prototype.removeGameRunningStateChangeHandler = function(c) {
    this.dispatcher.removeGameRunningStateChangeHandler(c);
};

NuggetaGameCoreApi.prototype.addNMatchAndJoinGameExpiredNotificationHandler = function(c) {
    this.dispatcher.addNMatchAndJoinGameExpiredNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.removeNMatchAndJoinGameExpiredNotificationHandler = function(c) {
    this.dispatcher.removeNMatchAndJoinGameExpiredNotificationHandler(c);
};

NuggetaGameCoreApi.prototype.addCreatePlayerResponseHandler = function(c) {
    this.dispatcher.addCreatePlayerResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeCreatePlayerResponseHandler = function(c) {
    this.dispatcher.removeCreatePlayerResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addLoginResponseHandler = function(c) {
    this.dispatcher.addLoginResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeLoginResponseHandler = function(c) {
    this.dispatcher.removeLoginResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addThirdPartyLoginResponseHandler = function(c) {
    this.dispatcher.addThirdPartyLoginResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeThirdPartyLoginResponseHandler = function(c) {
    this.dispatcher.removeThirdPartyLoginResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addLogoutResponseHandler = function(c) {
    this.dispatcher.addLogoutResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeLogoutResponseHandler = function(c) {
    this.dispatcher.removeLogoutResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addForgotPasswordResponseHandler = function(c) {
    this.dispatcher.addForgotPasswordResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeForgotPasswordResponseHandler = function(c) {
    this.dispatcher.removeForgotPasswordResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSetPlayerNameResponseHandler = function(c) {
    this.dispatcher.addSetPlayerNameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSetPlayerNameResponseHandler = function(c) {
    this.dispatcher.removeSetPlayerNameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetFriendsResponseHandler = function(c) {
    this.dispatcher.addGetFriendsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetFriendsResponseHandler = function(c) {
    this.dispatcher.removeGetFriendsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addAskForFriendResponseHandler = function(c) {
    this.dispatcher.addAskForFriendResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeAskForFriendResponseHandler = function(c) {
    this.dispatcher.removeAskForFriendResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetFriendDemandsResponseHandler = function(c) {
    this.dispatcher.addGetFriendDemandsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetFriendDemandsResponseHandler = function(c) {
    this.dispatcher.removeGetFriendDemandsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addAcceptFriendDemandResponseHandler = function(c) {
    this.dispatcher.addAcceptFriendDemandResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeAcceptFriendDemandResponseHandler = function(c) {
    this.dispatcher.removeAcceptFriendDemandResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addRefuseFriendDemandResponseHandler = function(c) {
    this.dispatcher.addRefuseFriendDemandResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeRefuseFriendDemandResponseHandler = function(c) {
    this.dispatcher.removeRefuseFriendDemandResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSubmitScoreResponseHandler = function(c) {
    this.dispatcher.addSubmitScoreResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSubmitScoreResponseHandler = function(c) {
    this.dispatcher.removeSubmitScoreResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetScoresResponseHandler = function(c) {
    this.dispatcher.addGetScoresResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetScoresResponseHandler = function(c) {
    this.dispatcher.removeGetScoresResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetAchievementsResponseHandler = function(c) {
    this.dispatcher.addGetAchievementsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetAchievementsResponseHandler = function(c) {
    this.dispatcher.removeGetAchievementsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addAchieveResponseHandler = function(c) {
    this.dispatcher.addAchieveResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeAchieveResponseHandler = function(c) {
    this.dispatcher.removeAchieveResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addAchieveWithProgressResponseHandler = function(c) {
    this.dispatcher.addAchieveWithProgressResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeAchieveWithProgressResponseHandler = function(c) {
    this.dispatcher.removeAchieveWithProgressResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetPlayerProfileResponseHandler = function(c) {
    this.dispatcher.addGetPlayerProfileResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetPlayerProfileResponseHandler = function(c) {
    this.dispatcher.removeGetPlayerProfileResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetPlayerProfileByPlayerIdResponseHandler = function(c) {
    this.dispatcher.addGetPlayerProfileByPlayerIdResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetPlayerProfileByPlayerIdResponseHandler = function(c) {
    this.dispatcher.removeGetPlayerProfileByPlayerIdResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSavePlayerProfileResponseHandler = function(c) {
    this.dispatcher.addSavePlayerProfileResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSavePlayerProfileResponseHandler = function(c) {
    this.dispatcher.removeSavePlayerProfileResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetStorablesResponseHandler = function(c) {
    this.dispatcher.addGetStorablesResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetStorablesResponseHandler = function(c) {
    this.dispatcher.removeGetStorablesResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSaveStorableResponseHandler = function(c) {
    this.dispatcher.addSaveStorableResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSaveStorableResponseHandler = function(c) {
    this.dispatcher.removeSaveStorableResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addUpdateStorableResponseHandler = function(c) {
    this.dispatcher.addUpdateStorableResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeUpdateStorableResponseHandler = function(c) {
    this.dispatcher.removeUpdateStorableResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addRemoveStorableResponseHandler = function(c) {
    this.dispatcher.addRemoveStorableResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeRemoveStorableResponseHandler = function(c) {
    this.dispatcher.removeRemoveStorableResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetItemsResponseHandler = function(c) {
    this.dispatcher.addGetItemsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetItemsResponseHandler = function(c) {
    this.dispatcher.removeGetItemsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addBuyItemResponseHandler = function(c) {
    this.dispatcher.addBuyItemResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeBuyItemResponseHandler = function(c) {
    this.dispatcher.removeBuyItemResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addConsumeItemResponseHandler = function(c) {
    this.dispatcher.addConsumeItemResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeConsumeItemResponseHandler = function(c) {
    this.dispatcher.removeConsumeItemResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addIncreasePlayerWalletResponseHandler = function(c) {
    this.dispatcher.addIncreasePlayerWalletResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeIncreasePlayerWalletResponseHandler = function(c) {
    this.dispatcher.removeIncreasePlayerWalletResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetPlayerWalletResponseHandler = function(c) {
    this.dispatcher.addGetPlayerWalletResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetPlayerWalletResponseHandler = function(c) {
    this.dispatcher.removeGetPlayerWalletResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addJoinGameResponseHandler = function(c) {
    this.dispatcher.addJoinGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeJoinGameResponseHandler = function(c) {
    this.dispatcher.removeJoinGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addUnjoinGameResponseHandler = function(c) {
    this.dispatcher.addUnjoinGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeUnjoinGameResponseHandler = function(c) {
    this.dispatcher.removeUnjoinGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addStartGameResponseHandler = function(c) {
    this.dispatcher.addStartGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeStartGameResponseHandler = function(c) {
    this.dispatcher.removeStartGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addStopGameResponseHandler = function(c) {
    this.dispatcher.addStopGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeStopGameResponseHandler = function(c) {
    this.dispatcher.removeStopGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addCreateGameResponseHandler = function(c) {
    this.dispatcher.addCreateGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeCreateGameResponseHandler = function(c) {
    this.dispatcher.removeCreateGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetGamesResponseHandler = function(c) {
    this.dispatcher.addGetGamesResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetGamesResponseHandler = function(c) {
    this.dispatcher.removeGetGamesResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSaveAsGhostResponseHandler = function(c) {
    this.dispatcher.addSaveAsGhostResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSaveAsGhostResponseHandler = function(c) {
    this.dispatcher.removeSaveAsGhostResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetGhostsResponseHandler = function(c) {
    this.dispatcher.addGetGhostsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetGhostsResponseHandler = function(c) {
    this.dispatcher.removeGetGhostsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addLoadGhostResponseHandler = function(c) {
    this.dispatcher.addLoadGhostResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeLoadGhostResponseHandler = function(c) {
    this.dispatcher.removeLoadGhostResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addNextPlayerTurnResponseHandler = function(c) {
    this.dispatcher.addNextPlayerTurnResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeNextPlayerTurnResponseHandler = function(c) {
    this.dispatcher.removeNextPlayerTurnResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSaveGameResponseHandler = function(c) {
    this.dispatcher.addSaveGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSaveGameResponseHandler = function(c) {
    this.dispatcher.removeSaveGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addLoadGameResponseHandler = function(c) {
    this.dispatcher.addLoadGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeLoadGameResponseHandler = function(c) {
    this.dispatcher.removeLoadGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSendGameChatResponseHandler = function(c) {
    this.dispatcher.addSendGameChatResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSendGameChatResponseHandler = function(c) {
    this.dispatcher.removeSendGameChatResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSendGameChatToPlayerResponseHandler = function(c) {
    this.dispatcher.addSendGameChatToPlayerResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSendGameChatToPlayerResponseHandler = function(c) {
    this.dispatcher.removeSendGameChatToPlayerResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addSendGameChatToPlayerListResponseHandler = function(c) {
    this.dispatcher.addSendGameChatToPlayerListResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeSendGameChatToPlayerListResponseHandler = function(c) {
    this.dispatcher.removeSendGameChatToPlayerListResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addInvitePlayerResponseHandler = function(c) {
    this.dispatcher.addInvitePlayerResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeInvitePlayerResponseHandler = function(c) {
    this.dispatcher.removeInvitePlayerResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetInvitationsResponseHandler = function(c) {
    this.dispatcher.addGetInvitationsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetInvitationsResponseHandler = function(c) {
    this.dispatcher.removeGetInvitationsResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addAcceptInvitationResponseHandler = function(c) {
    this.dispatcher.addAcceptInvitationResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeAcceptInvitationResponseHandler = function(c) {
    this.dispatcher.removeAcceptInvitationResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addRefuseInvitationResponseHandler = function(c) {
    this.dispatcher.addRefuseInvitationResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeRefuseInvitationResponseHandler = function(c) {
    this.dispatcher.removeRefuseInvitationResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addPauseSessionMonitoringResponseHandler = function(c) {
    this.dispatcher.addPauseSessionMonitoringResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removePauseSessionMonitoringResponseHandler = function(c) {
    this.dispatcher.removePauseSessionMonitoringResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addResumeSessionMonitoringResponseHandler = function(c) {
    this.dispatcher.addResumeSessionMonitoringResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeResumeSessionMonitoringResponseHandler = function(c) {
    this.dispatcher.removeResumeSessionMonitoringResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addMatchAndJoinGameResponseHandler = function(c) {
    this.dispatcher.addMatchAndJoinGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeMatchAndJoinGameResponseHandler = function(c) {
    this.dispatcher.removeMatchAndJoinGameResponseHandler(c);
};

NuggetaGameCoreApi.prototype.addGetPlayersResponseHandler = function(c) {
    this.dispatcher.addGetPlayersResponseHandler(c);
};

NuggetaGameCoreApi.prototype.removeGetPlayersResponseHandler = function(c) {
    this.dispatcher.removeGetPlayersResponseHandler(c);
};

NuggetaGameCoreApi.prototype.callHandler = function(c, a) {
    c instanceof PlayerEnterGame ? a(MemoryManagement._clone(c)) : c instanceof PlayerUnjoinGame ? a(MemoryManagement._clone(c)) : c instanceof FriendshipNotification ? a(MemoryManagement._clone(c)) : c instanceof FriendConnectedNotification ? a(MemoryManagement._clone(c)) : c instanceof FriendDisconnectedNotification ? a(MemoryManagement._clone(c)) : c instanceof SessionExpired ? a(MemoryManagement._clone(c)) : c instanceof FriendDemandNotification ? a(MemoryManagement._clone(c)) : c instanceof GameChatNotification ? a(MemoryManagement._clone(c)) : c instanceof MyTurnNotification ? a(MemoryManagement._clone(c)) : c instanceof PlayerTurnNotification ? a(MemoryManagement._clone(c)) : c instanceof StartResponse ? a(MemoryManagement._clone(c)) : c instanceof InvitationRequestNotification ? a(MemoryManagement._clone(c)) : c instanceof InvitationAcceptedNotification ? a(MemoryManagement._clone(c)) : c instanceof InvitationRefusedNotification ? a(MemoryManagement._clone(c)) : c instanceof InvitationExpiredNotification ? a(MemoryManagement._clone(c)) : c instanceof NRawGameMessage ? a(MemoryManagement._clone(c)) : c instanceof GameRunningStateChange ? a(MemoryManagement._clone(c)) : c instanceof NMatchAndJoinGameExpiredNotification ? a(MemoryManagement._clone(c)) : c instanceof CreatePlayerResponse ? a(MemoryManagement._clone(c)) : c instanceof LoginResponse ? a(MemoryManagement._clone(c)) : c instanceof ThirdPartyLoginResponse ? a(MemoryManagement._clone(c)) : c instanceof LogoutResponse ? a(MemoryManagement._clone(c)) : c instanceof ForgotPasswordResponse ? a(MemoryManagement._clone(c)) : c instanceof SetPlayerNameResponse ? a(MemoryManagement._clone(c)) : c instanceof GetFriendsResponse ? a(MemoryManagement._clone(c)) : c instanceof AskForFriendResponse ? a(MemoryManagement._clone(c)) : c instanceof GetFriendDemandsResponse ? a(MemoryManagement._clone(c)) : c instanceof AcceptFriendDemandResponse ? a(MemoryManagement._clone(c)) : c instanceof RefuseFriendDemandResponse ? a(MemoryManagement._clone(c)) : c instanceof SubmitScoreResponse ? a(MemoryManagement._clone(c)) : c instanceof GetScoresResponse ? a(MemoryManagement._clone(c)) : c instanceof GetAchievementsResponse ? a(MemoryManagement._clone(c)) : c instanceof AchieveResponse ? a(MemoryManagement._clone(c)) : c instanceof AchieveWithProgressResponse ? a(MemoryManagement._clone(c)) : c instanceof GetPlayerProfileResponse ? a(MemoryManagement._clone(c)) : c instanceof GetPlayerProfileByPlayerIdResponse ? a(MemoryManagement._clone(c)) : c instanceof SavePlayerProfileResponse ? a(MemoryManagement._clone(c)) : c instanceof GetStorablesResponse ? a(MemoryManagement._clone(c)) : c instanceof SaveStorableResponse ? a(MemoryManagement._clone(c)) : c instanceof UpdateStorableResponse ? a(MemoryManagement._clone(c)) : c instanceof RemoveStorableResponse ? a(MemoryManagement._clone(c)) : c instanceof GetItemsResponse ? a(MemoryManagement._clone(c)) : c instanceof BuyItemResponse ? a(MemoryManagement._clone(c)) : c instanceof ConsumeItemResponse ? a(MemoryManagement._clone(c)) : c instanceof IncreasePlayerWalletResponse ? a(MemoryManagement._clone(c)) : c instanceof GetPlayerWalletResponse ? a(MemoryManagement._clone(c)) : c instanceof JoinGameResponse ? a(MemoryManagement._clone(c)) : c instanceof UnjoinGameResponse ? a(MemoryManagement._clone(c)) : c instanceof StartGameResponse ? a(MemoryManagement._clone(c)) : c instanceof StopGameResponse ? a(MemoryManagement._clone(c)) : c instanceof CreateGameResponse ? a(MemoryManagement._clone(c)) : c instanceof GetGamesResponse ? a(MemoryManagement._clone(c)) : c instanceof SaveAsGhostResponse ? a(MemoryManagement._clone(c)) : c instanceof GetGhostsResponse ? a(MemoryManagement._clone(c)) : c instanceof LoadGhostResponse ? a(MemoryManagement._clone(c)) : c instanceof NextPlayerTurnResponse ? a(MemoryManagement._clone(c)) : c instanceof SaveGameResponse ? a(MemoryManagement._clone(c)) : c instanceof LoadGameResponse ? a(MemoryManagement._clone(c)) : c instanceof SendGameChatResponse ? a(MemoryManagement._clone(c)) : c instanceof SendGameChatToPlayerResponse ? a(MemoryManagement._clone(c)) : c instanceof SendGameChatToPlayerListResponse ? a(MemoryManagement._clone(c)) : c instanceof InvitePlayerResponse ? a(MemoryManagement._clone(c)) : c instanceof GetInvitationsResponse ? a(MemoryManagement._clone(c)) : c instanceof AcceptInvitationResponse ? a(MemoryManagement._clone(c)) : c instanceof RefuseInvitationResponse ? a(MemoryManagement._clone(c)) : c instanceof PauseSessionMonitoringResponse ? a(MemoryManagement._clone(c)) : c instanceof ResumeSessionMonitoringResponse ? a(MemoryManagement._clone(c)) : c instanceof MatchAndJoinGameResponse ? a(MemoryManagement._clone(c)) : c instanceof GetPlayersResponse && a(MemoryManagement._clone(c));
};

UpdateStorableResponse.prototype = new Message();

UpdateStorableResponse.prototype.constructor = UpdateStorableResponse;

UpdateStorableResponse.prototype.init = function() {
    this._storableIdSet = this._UpdateStorableStatusSet = !1;
    return this;
};

UpdateStorableResponse.prototype.getUpdateStorableStatus = function() {
    return this._UpdateStorableStatus;
};

UpdateStorableResponse.prototype.setUpdateStorableStatus = function(c) {
    this._UpdateStorableStatus = c;
    this._UpdateStorableStatusSet = !0;
};

UpdateStorableResponse.prototype.isUpdateStorableStatusSet = function() {
    return this._UpdateStorableStatusSet;
};

UpdateStorableResponse.prototype.unSetUpdateStorableStatus = function() {
    this._UpdateStorableStatusSet = !1;
};

UpdateStorableResponse.prototype.getStorableId = function() {
    return this._storableId;
};

UpdateStorableResponse.prototype.setStorableId = function(c) {
    this._storableId = c;
    this._storableIdSet = !0;
};

UpdateStorableResponse.prototype.isstorableIdSet = function() {
    return this._storableIdSet;
};

UpdateStorableResponse.prototype.unSetstorableId = function() {
    this._storableIdSet = !1;
};

UpdateStorableResponse.prototype.getDomainID = function() {
    return UpdateStorableResponse.domainID;
};

UpdateStorableResponse.prototype.getSerializerID = function() {
    return UpdateStorableResponse.serializerID;
};

UpdateStorableResponse.prototype.toString = function() {
    var c;
    c = "[UpdateStorableResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._UpdateStorableStatusSet && 0 == Utils.isNull(this._UpdateStorableStatus) && (c += "_UpdateStorableStatus=" + this._UpdateStorableStatus + "| ");
    1 == this._storableIdSet && 0 == Utils.isNull(this._storableId) && (c += "_storableId=" + this._storableId + "| ");
    return c + "]";
};

UpdateStorableResponse.prototype.clone = function() {
    var c = new UpdateStorableResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._UpdateStorableStatusSet && 0 == Utils.isNull(this._UpdateStorableStatus) && c.setUpdateStorableStatus(this._UpdateStorableStatus);
    1 == this._storableIdSet && 0 == Utils.isNull(this._storableId) && c.setStorableId(this._storableId);
    return c;
};

UpdateStorableResponse.domainID = 100;

UpdateStorableResponse.serializerID = 10127;

T5524.prototype.init = function() {
    this._h14272 = [];
    return this;
};

T5524.prototype._m25040 = function() {
    for (var c = this._h14272.length, a = 0; a < c; a++) (0, this._h14272[a])();
};

T5524.prototype._m25041 = function() {
    return this._h14272;
};

T5524.prototype._m25042 = function(c) {
    this._h14272.push(c);
};

T5524.prototype._m25043 = function(c) {
    0 < this._h14272.length && (c = this._h14272.indexOf(c), 0 <= c && this._h14272.splice(this._h14272.indexOf(c), 1));
};

ConnectionReady.prototype = new Message();

ConnectionReady.prototype.constructor = ConnectionReady;

ConnectionReady.prototype.init = function() {
    return this;
};

ConnectionReady.prototype.getSerializerID = function() {
    return 0;
};

ConnectionReady.prototype.clone = function() {
    return new ConnectionReady().init();
};

ConnectionReady.prototype.toString = function() {
    return "";
};

ConnectionReady.prototype.equals = function(c) {
    return !1;
};

ConnectionReady.prototype.getDomainID = function() {
    return 0;
};

AcceptInvitationRequest.prototype = new Message();

AcceptInvitationRequest.prototype.constructor = AcceptInvitationRequest;

AcceptInvitationRequest.prototype.init = function() {
    this._invitationIdSet = !1;
    return this;
};

AcceptInvitationRequest.prototype.getInvitationId = function() {
    return this._invitationId;
};

AcceptInvitationRequest.prototype.setInvitationId = function(c) {
    this._invitationId = c;
    this._invitationIdSet = !0;
};

AcceptInvitationRequest.prototype.isinvitationIdSet = function() {
    return this._invitationIdSet;
};

AcceptInvitationRequest.prototype.unSetinvitationId = function() {
    this._invitationIdSet = !1;
};

AcceptInvitationRequest.prototype.getDomainID = function() {
    return AcceptInvitationRequest.domainID;
};

AcceptInvitationRequest.prototype.getSerializerID = function() {
    return AcceptInvitationRequest.serializerID;
};

AcceptInvitationRequest.prototype.toString = function() {
    var c;
    c = "[AcceptInvitationRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && (c += "_invitationId=" + this._invitationId + "| ");
    return c + "]";
};

AcceptInvitationRequest.prototype.clone = function() {
    var c = new AcceptInvitationRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && c.setInvitationId(this._invitationId);
    return c;
};

AcceptInvitationRequest.domainID = 100;

AcceptInvitationRequest.serializerID = 10174;

StartDetails.prototype.init = function() {
    this._UrlSet = this._TextSet = this._TitleSet = this._NextVersionSet = this._CurrentVersionSet = this._UseDefaultImplSet = !1;
    return this;
};

StartDetails.prototype.isUseDefaultImpl = function() {
    return this._UseDefaultImpl;
};

StartDetails.prototype.setUseDefaultImpl = function(c) {
    this._UseDefaultImpl = c;
    this._UseDefaultImplSet = !0;
};

StartDetails.prototype.isUseDefaultImplSet = function() {
    return this._UseDefaultImplSet;
};

StartDetails.prototype.unSetUseDefaultImpl = function() {
    this._UseDefaultImplSet = !1;
};

StartDetails.prototype.getCurrentVersion = function() {
    return this._CurrentVersion;
};

StartDetails.prototype.setCurrentVersion = function(c) {
    this._CurrentVersion = c;
    this._CurrentVersionSet = !0;
};

StartDetails.prototype.isCurrentVersionSet = function() {
    return this._CurrentVersionSet;
};

StartDetails.prototype.unSetCurrentVersion = function() {
    this._CurrentVersionSet = !1;
};

StartDetails.prototype.getNextVersion = function() {
    return this._NextVersion;
};

StartDetails.prototype.setNextVersion = function(c) {
    this._NextVersion = c;
    this._NextVersionSet = !0;
};

StartDetails.prototype.isNextVersionSet = function() {
    return this._NextVersionSet;
};

StartDetails.prototype.unSetNextVersion = function() {
    this._NextVersionSet = !1;
};

StartDetails.prototype.getTitle = function() {
    return this._Title;
};

StartDetails.prototype.setTitle = function(c) {
    this._Title = c;
    this._TitleSet = !0;
};

StartDetails.prototype.isTitleSet = function() {
    return this._TitleSet;
};

StartDetails.prototype.unSetTitle = function() {
    this._TitleSet = !1;
};

StartDetails.prototype.getText = function() {
    return this._Text;
};

StartDetails.prototype.setText = function(c) {
    this._Text = c;
    this._TextSet = !0;
};

StartDetails.prototype.isTextSet = function() {
    return this._TextSet;
};

StartDetails.prototype.unSetText = function() {
    this._TextSet = !1;
};

StartDetails.prototype.getUrl = function() {
    return this._Url;
};

StartDetails.prototype.setUrl = function(c) {
    this._Url = c;
    this._UrlSet = !0;
};

StartDetails.prototype.isUrlSet = function() {
    return this._UrlSet;
};

StartDetails.prototype.unSetUrl = function() {
    this._UrlSet = !1;
};

StartDetails.prototype.getDomainID = function() {
    return StartDetails.domainID;
};

StartDetails.prototype.getSerializerID = function() {
    return StartDetails.serializerID;
};

StartDetails.prototype.toString = function() {
    var c;
    c = "[StartDetails --> ";
    1 == this._UseDefaultImplSet && 0 == Utils.isNullBoolean(this._UseDefaultImpl) && (c += "_UseDefaultImpl=" + this._UseDefaultImpl + "| ");
    1 == this._CurrentVersionSet && 0 == Utils.isNullInteger(this._CurrentVersion) && (c += "_CurrentVersion=" + this._CurrentVersion + "| ");
    1 == this._NextVersionSet && 0 == Utils.isNullInteger(this._NextVersion) && (c += "_NextVersion=" + this._NextVersion + "| ");
    1 == this._TitleSet && 0 == Utils.isNull(this._Title) && (c += "_Title=" + this._Title + "| ");
    1 == this._TextSet && 0 == Utils.isNull(this._Text) && (c += "_Text=" + this._Text + "| ");
    1 == this._UrlSet && 0 == Utils.isNull(this._Url) && (c += "_Url=" + this._Url + "| ");
    return c + "]";
};

StartDetails.prototype.clone = function() {
    var c = new StartDetails().init();
    1 == this._UseDefaultImplSet && 0 == Utils.isNullBoolean(this._UseDefaultImpl) && c.setUseDefaultImpl(this._UseDefaultImpl);
    1 == this._CurrentVersionSet && 0 == Utils.isNullInteger(this._CurrentVersion) && c.setCurrentVersion(this._CurrentVersion);
    1 == this._NextVersionSet && 0 == Utils.isNullInteger(this._NextVersion) && c.setNextVersion(this._NextVersion);
    1 == this._TitleSet && 0 == Utils.isNull(this._Title) && c.setTitle(this._Title);
    1 == this._TextSet && 0 == Utils.isNull(this._Text) && c.setText(this._Text);
    1 == this._UrlSet && 0 == Utils.isNull(this._Url) && c.setUrl(this._Url);
    return c;
};

StartDetails.domainID = 0;

StartDetails.serializerID = 3006;

GameRunningState.values = function() {
    return GameRunningState._values;
};

GameRunningState.prototype.getValue = function() {
    return this._value;
};

GameRunningState.prototype.name = function() {
    return this._name;
};

GameRunningState.prototype.ordinal = function() {
    return this._value;
};

GameRunningState.prototype.init = function(c, a) {
    void 0 == GameRunningState._values && (GameRunningState._values = []);
    this._value = a;
    this._name = c;
    GameRunningState._values.push(this);
    return this;
};

GameRunningState.fromValue = function(c) {
    for (var a = 0; a < GameRunningState._values.length; a++) {
        var b = GameRunningState._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GameRunningState.valueOf = function(c) {
    for (var a = 0; a < GameRunningState._values.length; a++) {
        var b = GameRunningState._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GameRunningState.prototype.getDomainID = function() {
    return 100;
};

GameRunningState.prototype.getSerializerID = function() {
    return 7;
};

GameRunningState.prototype.toString = function() {
    return "GameRunningState." + this._name;
};

GameRunningState.prototype.clone = function() {
    return this;
};

GameRunningState.PENDING = new GameRunningState().init("PENDING", 0);

GameRunningState.RUNNING = new GameRunningState().init("RUNNING", 1);

GameRunningState.FINISHED = new GameRunningState().init("FINISHED", 5);

T5518.prototype.init = function() {
    return this;
};

T5518.prototype.write = function(c, a, b) {
    0 == a.getSerializerID() ? this._m25962(c, a, b) : 1 == a.getSerializerID() ? this._m25963(c, a, b) : 2 == a.getSerializerID() ? this._m25964(c, a, b) : 3 == a.getSerializerID() ? this._m25965(c, a, b) : 4 == a.getSerializerID() ? this._m25966(c, a, b) : 5 == a.getSerializerID() ? this._m25967(c, a, b) : 6 == a.getSerializerID() ? this._m25968(c, a, b) : 7 == a.getSerializerID() ? this._m25969(c, a, b) : 8 == a.getSerializerID() ? this._m25970(c, a, b) : 9 == a.getSerializerID() ? this._m25971(c, a, b) : 10 == a.getSerializerID() ? this._m25972(c, a, b) : 11 == a.getSerializerID() ? this._m25973(c, a, b) : 12 == a.getSerializerID() ? this._m25974(c, a, b) : 13 == a.getSerializerID() ? this._m25975(c, a, b) : 14 == a.getSerializerID() ? this._m25976(c, a, b) : 10002 == a.getSerializerID() ? this._m25977(c, a, b) : 10011 == a.getSerializerID() ? this._m25978(c, a, b) : 10140 == a.getSerializerID() ? this._m25979(c, a, b) : 10020 == a.getSerializerID() ? this._m25980(c, a, b) : 10008 == a.getSerializerID() ? this._m25981(c, a, b) : 10125 == a.getSerializerID() ? this._m25982(c, a, b) : 10029 == a.getSerializerID() ? this._m25983(c, a, b) : 12e3 == a.getSerializerID() ? this._m25984(c, a, b) : 10035 == a.getSerializerID() ? this._m25985(c, a, b) : 10038 == a.getSerializerID() ? this._m25986(c, a, b) : 10041 == a.getSerializerID() ? this._m25987(c, a, b) : 10044 == a.getSerializerID() ? this._m25988(c, a, b) : 10047 == a.getSerializerID() ? this._m25989(c, a, b) : 10065 == a.getSerializerID() ? this._m25990(c, a, b) : 10068 == a.getSerializerID() ? this._m25991(c, a, b) : 10071 == a.getSerializerID() ? this._m25992(c, a, b) : 10017 == a.getSerializerID() ? this._m25993(c, a, b) : 11832 == a.getSerializerID() ? this._m25994(c, a, b) : 10014 == a.getSerializerID() ? this._m25995(c, a, b) : 10116 == a.getSerializerID() ? this._m25996(c, a, b) : 10119 == a.getSerializerID() ? this._m25997(c, a, b) : 10128 == a.getSerializerID() ? this._m25998(c, a, b) : 10131 == a.getSerializerID() ? this._m25999(c, a, b) : 10053 == a.getSerializerID() ? this._m26000(c, a, b) : 10050 == a.getSerializerID() ? this._m26001(c, a, b) : 10056 == a.getSerializerID() ? this._m26002(c, a, b) : 10059 == a.getSerializerID() ? this._m26003(c, a, b) : 10062 == a.getSerializerID() ? this._m26004(c, a, b) : 10074 == a.getSerializerID() ? this._m26005(c, a, b) : 10077 == a.getSerializerID() ? this._m26006(c, a, b) : 10092 == a.getSerializerID() ? this._m26007(c, a, b) : 10095 == a.getSerializerID() ? this._m26008(c, a, b) : 10098 == a.getSerializerID() ? this._m26009(c, a, b) : 10101 == a.getSerializerID() ? this._m26010(c, a, b) : 10104 == a.getSerializerID() ? this._m26011(c, a, b) : 10107 == a.getSerializerID() ? this._m26012(c, a, b) : 10110 == a.getSerializerID() ? this._m26013(c, a, b) : 10122 == a.getSerializerID() ? this._m26014(c, a, b) : 10143 == a.getSerializerID() ? this._m26015(c, a, b) : 10146 == a.getSerializerID() ? this._m26016(c, a, b) : 10113 == a.getSerializerID() ? this._m26017(c, a, b) : 10926 == a.getSerializerID() ? this._m26018(c, a, b) : 10929 == a.getSerializerID() ? this._m26019(c, a, b) : 10170 == a.getSerializerID() ? this._m26020(c, a, b) : 10173 == a.getSerializerID() ? this._m26021(c, a, b) : 10176 == a.getSerializerID() ? this._m26022(c, a, b) : 10179 == a.getSerializerID() ? this._m26023(c, a, b) : 10161 == a.getSerializerID() ? this._m26024(c, a, b) : 10164 == a.getSerializerID() ? this._m26025(c, a, b) : 10167 == a.getSerializerID() ? this._m26026(c, a, b) : 10182 == a.getSerializerID() ? this._m26027(c, a, b) : 3001 == a.getSerializerID() ? this._m26028(c, a, b) : 3002 == a.getSerializerID() ? this._m26029(c, a, b) : 3003 == a.getSerializerID() ? this._m26030(c, a, b) : 3004 == a.getSerializerID() ? this._m26031(c, a, b) : 3005 == a.getSerializerID() ? this._m26032(c, a, b) : 3006 == a.getSerializerID() ? this._m26033(c, a, b) : 3007 == a.getSerializerID() ? this._m26034(c, a, b) : 3008 == a.getSerializerID() ? this._m26035(c, a, b) : 3009 == a.getSerializerID() ? this._m26036(c, a, b) : 3010 == a.getSerializerID() ? this._m26037(c, a, b) : 3011 == a.getSerializerID() ? this._m26038(c, a, b) : 3012 == a.getSerializerID() ? this._m26039(c, a, b) : 3013 == a.getSerializerID() ? this._m26040(c, a, b) : 3014 == a.getSerializerID() ? this._m26041(c, a, b) : 3015 == a.getSerializerID() ? this._m26042(c, a, b) : 3016 == a.getSerializerID() ? this._m26043(c, a, b) : 3017 == a.getSerializerID() ? this._m26044(c, a, b) : 3018 == a.getSerializerID() ? this._m26045(c, a, b) : 3019 == a.getSerializerID() ? this._m26046(c, a, b) : 3020 == a.getSerializerID() ? this._m26047(c, a, b) : 3021 == a.getSerializerID() ? this._m26048(c, a, b) : 3022 == a.getSerializerID() ? this._m26049(c, a, b) : 3023 == a.getSerializerID() ? this._m26050(c, a, b) : 3024 == a.getSerializerID() ? this._m26051(c, a, b) : 3025 == a.getSerializerID() ? this._m26052(c, a, b) : 3026 == a.getSerializerID() ? this._m26053(c, a, b) : 3027 == a.getSerializerID() ? this._m26054(c, a, b) : 3028 == a.getSerializerID() ? this._m26055(c, a, b) : 3029 == a.getSerializerID() ? this._m26056(c, a, b) : 3030 == a.getSerializerID() ? this._m26057(c, a, b) : 3032 == a.getSerializerID() ? this._m26058(c, a, b) : 3033 == a.getSerializerID() ? this._m26059(c, a, b) : 3034 == a.getSerializerID() ? this._m26060(c, a, b) : 3035 == a.getSerializerID() ? this._m26061(c, a, b) : 3036 == a.getSerializerID() ? this._m26062(c, a, b) : 3037 == a.getSerializerID() ? this._m26063(c, a, b) : 3038 == a.getSerializerID() ? this._m26064(c, a, b) : 3039 == a.getSerializerID() ? this._m26065(c, a, b) : 3040 == a.getSerializerID() ? this._m26066(c, a, b) : 3041 == a.getSerializerID() ? this._m26067(c, a, b) : 3042 == a.getSerializerID() ? this._m26068(c, a, b) : 3043 == a.getSerializerID() ? this._m26069(c, a, b) : 3044 == a.getSerializerID() ? this._m26070(c, a, b) : 3045 == a.getSerializerID() ? this._m26071(c, a, b) : 3047 == a.getSerializerID() ? this._m26072(c, a, b) : 3048 == a.getSerializerID() ? this._m26073(c, a, b) : 3049 == a.getSerializerID() ? this._m26074(c, a, b) : 3050 == a.getSerializerID() ? this._m26075(c, a, b) : 3051 == a.getSerializerID() ? this._m26076(c, a, b) : 3052 == a.getSerializerID() ? this._m26077(c, a, b) : 3053 == a.getSerializerID() ? this._m26078(c, a, b) : 1e4 == a.getSerializerID() ? this._m26079(c, a, b) : 10001 == a.getSerializerID() ? this._m26080(c, a, b) : 10009 == a.getSerializerID() ? this._m26081(c, a, b) : 10010 == a.getSerializerID() ? this._m26082(c, a, b) : 10138 == a.getSerializerID() ? this._m26083(c, a, b) : 10139 == a.getSerializerID() ? this._m26084(c, a, b) : 10018 == a.getSerializerID() ? this._m26085(c, a, b) : 10019 == a.getSerializerID() ? this._m26086(c, a, b) : 10006 == a.getSerializerID() ? this._m26087(c, a, b) : 10007 == a.getSerializerID() ? this._m26088(c, a, b) : 10123 == a.getSerializerID() ? this._m26089(c, a, b) : 10124 == a.getSerializerID() ? this._m26090(c, a, b) : 10027 == a.getSerializerID() ? this._m26091(c, a, b) : 10028 == a.getSerializerID() ? this._m26092(c, a, b) : 11998 == a.getSerializerID() ? this._m26093(c, a, b) : 11999 == a.getSerializerID() ? this._m26094(c, a, b) : 10033 == a.getSerializerID() ? this._m26095(c, a, b) : 10034 == a.getSerializerID() ? this._m26096(c, a, b) : 10036 == a.getSerializerID() ? this._m26097(c, a, b) : 10037 == a.getSerializerID() ? this._m26098(c, a, b) : 10039 == a.getSerializerID() ? this._m26099(c, a, b) : 10040 == a.getSerializerID() ? this._m26100(c, a, b) : 10042 == a.getSerializerID() ? this._m26101(c, a, b) : 10043 == a.getSerializerID() ? this._m26102(c, a, b) : 10045 == a.getSerializerID() ? this._m26103(c, a, b) : 10046 == a.getSerializerID() ? this._m26104(c, a, b) : 10063 == a.getSerializerID() ? this._m26105(c, a, b) : 10064 == a.getSerializerID() ? this._m26106(c, a, b) : 10066 == a.getSerializerID() ? this._m26107(c, a, b) : 10067 == a.getSerializerID() ? this._m26108(c, a, b) : 10069 == a.getSerializerID() ? this._m26109(c, a, b) : 10070 == a.getSerializerID() ? this._m26110(c, a, b) : 10015 == a.getSerializerID() ? this._m26111(c, a, b) : 10016 == a.getSerializerID() ? this._m26112(c, a, b) : 11830 == a.getSerializerID() ? this._m26113(c, a, b) : 11831 == a.getSerializerID() ? this._m26114(c, a, b) : 10012 == a.getSerializerID() ? this._m26115(c, a, b) : 10013 == a.getSerializerID() ? this._m26116(c, a, b) : 10114 == a.getSerializerID() ? this._m26117(c, a, b) : 10115 == a.getSerializerID() ? this._m26118(c, a, b) : 10117 == a.getSerializerID() ? this._m26119(c, a, b) : 10118 == a.getSerializerID() ? this._m26120(c, a, b) : 10126 == a.getSerializerID() ? this._m26121(c, a, b) : 10127 == a.getSerializerID() ? this._m26122(c, a, b) : 10129 == a.getSerializerID() ? this._m26123(c, a, b) : 10130 == a.getSerializerID() ? this._m26124(c, a, b) : 10051 == a.getSerializerID() ? this._m26125(c, a, b) : 10052 == a.getSerializerID() ? this._m26126(c, a, b) : 10048 == a.getSerializerID() ? this._m26127(c, a, b) : 10049 == a.getSerializerID() ? this._m26128(c, a, b) : 10054 == a.getSerializerID() ? this._m26129(c, a, b) : 10055 == a.getSerializerID() ? this._m26130(c, a, b) : 10057 == a.getSerializerID() ? this._m26131(c, a, b) : 10058 == a.getSerializerID() ? this._m26132(c, a, b) : 10060 == a.getSerializerID() ? this._m26133(c, a, b) : 10061 == a.getSerializerID() ? this._m26134(c, a, b) : 10072 == a.getSerializerID() ? this._m26135(c, a, b) : 10073 == a.getSerializerID() ? this._m26136(c, a, b) : 10075 == a.getSerializerID() ? this._m26137(c, a, b) : 10076 == a.getSerializerID() ? this._m26138(c, a, b) : 10090 == a.getSerializerID() ? this._m26139(c, a, b) : 10091 == a.getSerializerID() ? this._m26140(c, a, b) : 10093 == a.getSerializerID() ? this._m26141(c, a, b) : 10094 == a.getSerializerID() ? this._m26142(c, a, b) : 10096 == a.getSerializerID() ? this._m26143(c, a, b) : 10097 == a.getSerializerID() ? this._m26144(c, a, b) : 10099 == a.getSerializerID() ? this._m26145(c, a, b) : 10100 == a.getSerializerID() ? this._m26146(c, a, b) : 10102 == a.getSerializerID() ? this._m26147(c, a, b) : 10103 == a.getSerializerID() ? this._m26148(c, a, b) : 10105 == a.getSerializerID() ? this._m26149(c, a, b) : 10106 == a.getSerializerID() ? this._m26150(c, a, b) : 10108 == a.getSerializerID() ? this._m26151(c, a, b) : 10109 == a.getSerializerID() ? this._m26152(c, a, b) : 10120 == a.getSerializerID() ? this._m26153(c, a, b) : 10121 == a.getSerializerID() ? this._m26154(c, a, b) : 10141 == a.getSerializerID() ? this._m26155(c, a, b) : 10142 == a.getSerializerID() ? this._m26156(c, a, b) : 10144 == a.getSerializerID() ? this._m26157(c, a, b) : 10145 == a.getSerializerID() ? this._m26158(c, a, b) : 10111 == a.getSerializerID() ? this._m26159(c, a, b) : 10112 == a.getSerializerID() ? this._m26160(c, a, b) : 10924 == a.getSerializerID() ? this._m26161(c, a, b) : 10925 == a.getSerializerID() ? this._m26162(c, a, b) : 10927 == a.getSerializerID() ? this._m26163(c, a, b) : 10928 == a.getSerializerID() ? this._m26164(c, a, b) : 10168 == a.getSerializerID() ? this._m26165(c, a, b) : 10169 == a.getSerializerID() ? this._m26166(c, a, b) : 10171 == a.getSerializerID() ? this._m26167(c, a, b) : 10172 == a.getSerializerID() ? this._m26168(c, a, b) : 10174 == a.getSerializerID() ? this._m26169(c, a, b) : 10175 == a.getSerializerID() ? this._m26170(c, a, b) : 10177 == a.getSerializerID() ? this._m26171(c, a, b) : 10178 == a.getSerializerID() ? this._m26172(c, a, b) : 10159 == a.getSerializerID() ? this._m26173(c, a, b) : 10160 == a.getSerializerID() ? this._m26174(c, a, b) : 10162 == a.getSerializerID() ? this._m26175(c, a, b) : 10163 == a.getSerializerID() ? this._m26176(c, a, b) : 10165 == a.getSerializerID() ? this._m26177(c, a, b) : 10166 == a.getSerializerID() ? this._m26178(c, a, b) : 10180 == a.getSerializerID() ? this._m26179(c, a, b) : 10181 == a.getSerializerID() && this._m26180(c, a, b);
};

T5518.prototype._m25962 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25963 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25964 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25965 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25966 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25967 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25968 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25969 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25970 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25971 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25972 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25973 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25974 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25975 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25976 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25977 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25978 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25979 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25980 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25981 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25982 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25983 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25984 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25985 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25986 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25987 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25988 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25989 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25990 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25991 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25992 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25993 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25994 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25995 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25996 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25997 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25998 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m25999 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26000 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26001 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26002 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26003 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26004 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26005 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26006 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26007 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26008 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26009 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26010 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26011 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26012 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26013 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26014 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26015 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26016 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26017 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26018 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26019 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26020 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26021 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26022 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26023 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26024 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26025 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26026 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26027 = function(c, a, b) {
    StringOutputStream.writeInteger(a.getValue(), b);
};

T5518.prototype._m26028 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isLoginSet() && (d = StringOutputStream.writeStringProperty(a.getLogin(), 1001, b)) && f++;
    1 == a.isPasswordSet() && (d = StringOutputStream.writeStringProperty(a.getPassword(), 1002, b)) && f++;
    1 == a.isAccessTokenSet() && (d = StringOutputStream.writeStringProperty(a.getAccessToken(), 1003, b)) && f++;
    1 == a.isNameSet() && (d = StringOutputStream.writeStringProperty(a.getName(), 1004, b)) && f++;
    1 == a.isConnectedSet() && (d = StringOutputStream.writeBooleanProperty(a.isConnected(), 1005, b)) && f++;
    1 == a.isLoginSourceSet() && (d = StringOutputStream.writeObjectProperty(c, a.getLoginSource(), 1006, b)) && f++;
    1 == a.isThirdPartyIdSet() && (d = StringOutputStream.writeStringProperty(a.getThirdPartyId(), 1007, b)) && f++;
    1 == a.isCreationDateSet() && (d = StringOutputStream.writeDoubleProperty(a.getCreationDate(), 1008, b)) && f++;
    1 == a.isActiveSet() && (d = StringOutputStream.writeBooleanProperty(a.isActive(), 1009, b)) && f++;
    1 == a.isLangSet() && (d = StringOutputStream.writeStringProperty(a.getLang(), 1010, b)) && f++;
    1 == a.isAnonymousSet() && (d = StringOutputStream.writeBooleanProperty(a.isAnonymous(), 1011, b)) && f++;
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1012, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26029 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = StringOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    1 == a.isAchievedSet() && (d = StringOutputStream.writeBooleanProperty(a.isAchieved(), 1002, b)) && f++;
    1 == a.isFeaturedSet() && (d = StringOutputStream.writeBooleanProperty(a.isFeatured(), 1003, b)) && f++;
    1 == a.isDescriptionSet() && (d = StringOutputStream.writeStringProperty(a.getDescription(), 1004, b)) && f++;
    1 == a.isNXPSet() && (d = StringOutputStream.writeIntegerProperty(a.getNXP(), 1005, b)) && f++;
    1 == a.isNEnergySet() && (d = StringOutputStream.writeIntegerProperty(a.getNEnergy(), 1006, b)) && f++;
    1 == a.isTypeSet() && (d = StringOutputStream.writeObjectProperty(c, a.getType(), 1007, b)) && f++;
    1 == a.isGoalSet() && (d = StringOutputStream.writeIntegerProperty(a.getGoal(), 1008, b)) && f++;
    1 == a.isProgressSet() && (d = StringOutputStream.writeIntegerProperty(a.getProgress(), 1009, b)) && f++;
    1 == a.isOrderSet() && (d = StringOutputStream.writeIntegerProperty(a.getOrder(), 1010, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26030 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isVersionSet() && (d = StringOutputStream.writeStringProperty(a.getVersion(), 2e3, b)) && f++;
    1 == a.isReasonSet() && (d = StringOutputStream.writeObjectProperty(c, a.getReason(), 2001, b)) && f++;
    1 == a.isplayerIdsStoredSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerIdsStored(), 2002, b)) && f++;
    1 == a.issessionIdSet() && (d = StringOutputStream.writeStringProperty(a.getSessionId(), 2003, b)) && f++;
    1 == a.isplatformSet() && (d = StringOutputStream.writeStringProperty(a.getPlatform(), 2004, b)) && f++;
    1 == a.isspIdSet() && (d = StringOutputStream.writeStringProperty(a.getSpId(), 2005, b)) && f++;
    1 == a.isdebugSpIdSet() && (d = StringOutputStream.writeStringProperty(a.getDebugSpId(), 2006, b)) && f++;
    1 == a.isGameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2007, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26031 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isExecutionStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getExecutionStatus(), 2e3, b)) && f++;
    1 == a.isReasonSet() && (d = StringOutputStream.writeObjectProperty(c, a.getReason(), 2001, b)) && f++;
    1 == a.isplayerIdsStoredSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerIdsStored(), 2002, b)) && f++;
    1 == a.issessionIdSet() && (d = StringOutputStream.writeStringProperty(a.getSessionId(), 2003, b)) && f++;
    1 == a.isPlayerSessionTypeSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayerSessionType(), 2004, b)) && f++;
    1 == a.isPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2005, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26032 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    1 == a.isGameRunningStateSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGameRunningState(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26033 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isEmitterSet() && (d = StringOutputStream.writeObjectProperty(c, a.getEmitter(), 1e3, b)) && f++;
    1 == a.isReceiverIdSet() && (d = StringOutputStream.writeStringProperty(a.getReceiverId(), 1001, b)) && f++;
    1 == a.isCustomMessageSet() && (d = StringOutputStream.writeStringProperty(a.getCustomMessage(), 1002, b)) && f++;
    1 == a.isFriendDemandStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getFriendDemandStatus(), 1003, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1004, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26034 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isValueSet() && (f = StringOutputStream.writeDoubleProperty(a.getValue(), 1e3, b)) && e++;
    1 == a.isTimestampSet() && (f = StringOutputStream.writeDoubleProperty(a.getTimestamp(), 1001, b)) && e++;
    1 == a.isPlayerIdSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerId(), 1002, b)) && e++;
    1 == a.isPlayerNameSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerName(), 1003, b)) && e++;
    1 == a.isPlayerAvatarPathSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerAvatarPath(), 1004, b)) && e++;
    1 == a.isCustomDataSet() && (f = StringOutputStream.writeStringProperty(a.getCustomData(), 1005, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26035 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = StringOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    if (1 == a.isPlayersSet()) {
        d = a.getPlayers();
        if (null == d) d = !1; else {
            b.putShort(1002);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1003, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26036 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = StringOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    if (1 == a.isPlayersSet()) {
        d = a.getPlayers();
        if (null == d) d = !1; else {
            b.putShort(1002);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1003, b)) && f++;
    1 == a.isDefaultRoomSet() && (d = StringOutputStream.writeBooleanProperty(a.isDefaultRoom(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26037 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isNameSet() && (d = StringOutputStream.writeStringProperty(a.getName(), 1001, b)) && f++;
    if (1 == a.isPlayersSet()) {
        d = a.getPlayers();
        if (null == d) d = !1; else {
            b.putShort(1002);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1003, b)) && f++;
    1 == a.isGameRunningStateSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGameRunningState(), 2e3, b)) && f++;
    1 == a.isGameCharacteristicsSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGameCharacteristics(), 2001, b)) && f++;
    1 == a.isGameStateSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGameState(), 2002, b)) && f++;
    1 == a.isMatchMakingConditionsSet() && (d = StringOutputStream.writeObjectProperty(c, a.getMatchMakingConditions(), 2003, b)) && f++;
    1 == a.isTurnBasedContextSet() && (d = StringOutputStream.writeObjectProperty(c, a.getTurnBasedContext(), 2004, b)) && f++;
    1 == a.isOwnerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getOwner(), 2006, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26038 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isMinPlayerSet() && (f = StringOutputStream.writeIntegerProperty(a.getMinPlayer(), 0, b)) && e++;
    1 == a.isMaxPlayerSet() && (f = StringOutputStream.writeIntegerProperty(a.getMaxPlayer(), 1, b)) && e++;
    1 == a.isAutoStopSet() && (f = StringOutputStream.writeBooleanProperty(a.isAutoStop(), 2, b)) && e++;
    1 == a.isAutoStartSet() && (f = StringOutputStream.writeBooleanProperty(a.isAutoStart(), 3, b)) && e++;
    1 == a.isCustomDataSet() && (f = StringOutputStream.writeStringProperty(a.getCustomData(), 4, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26039 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    1 == a.isPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26040 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isFriendSet() && (d = StringOutputStream.writeObjectProperty(c, a.getFriend(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26041 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    1 == a.isPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26042 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isUpdateSet() && (d = StringOutputStream.writeIntegerProperty(a.getUpdate(), 1e3, b)) && f++;
    if (1 == a.isValuesSet()) {
        a = a.getValues();
        if (null == a) d = !1; else {
            b.putShort(1001);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26043 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isfriendSet() && (d = StringOutputStream.writeObjectProperty(c, a.getFriend(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26044 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isfriendSet() && (d = StringOutputStream.writeObjectProperty(c, a.getFriend(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26045 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isPlayerIdSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerId(), 1e3, b)) && e++;
    1 == a.isNbCoinsSet() && (f = StringOutputStream.writeIntegerProperty(a.getNbCoins(), 1001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26046 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isIdSet() && (f = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && e++;
    1 == a.isNameSet() && (f = StringOutputStream.writeStringProperty(a.getName(), 1001, b)) && e++;
    1 == a.isPriceSet() && (f = StringOutputStream.writeIntegerProperty(a.getPrice(), 1002, b)) && e++;
    1 == a.isBoughtSet() && (f = StringOutputStream.writeBooleanProperty(a.isBought(), 1003, b)) && e++;
    1 == a.isCountSet() && (f = StringOutputStream.writeIntegerProperty(a.getCount(), 1004, b)) && e++;
    1 == a.isOrderSet() && (f = StringOutputStream.writeIntegerProperty(a.getOrder(), 1005, b)) && e++;
    1 == a.isCustomDataSet() && (f = StringOutputStream.writeStringProperty(a.getCustomData(), 1006, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26047 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    if (1 == a.isUpdatesSet()) {
        d = a.getUpdates();
        if (null == d) d = !1; else {
            b.putShort(0);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26048 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 0, b)) && f++;
    1 == a.isCustomObjectSet() && (d = StringOutputStream.writeObjectProperty(c, a.getCustomObject(), 1, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26049 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isIpAddressSet() && (f = StringOutputStream.writeStringProperty(a.getIpAddress(), 2e3, b)) && e++;
    1 == a.isTcpPortSet() && (f = StringOutputStream.writeIntegerProperty(a.getTcpPort(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26050 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.issessionIdSet() && (f = StringOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26051 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.issystemIDSet() && (d = StringOutputStream.writeStringProperty(a.getSystemID(), 2e3, b)) && f++;
    1 == a.istargetIDSet() && (d = StringOutputStream.writeStringProperty(a.getTargetID(), 2001, b)) && f++;
    1 == a.isOwnerIDSet() && (d = StringOutputStream.writeStringProperty(a.getOwnerID(), 2002, b)) && f++;
    1 == a.isApplicationIDSet() && (d = StringOutputStream.writeStringProperty(a.getApplicationID(), 2003, b)) && f++;
    1 == a.isplayerIdSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerId(), 2004, b)) && f++;
    1 == a.ismessageSet() && (d = StringOutputStream.writeObjectProperty(c, a.getMessage(), 2005, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26052 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.iscontentSet() && (f = StringOutputStream.writeStringProperty(a.getContent(), 3e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26053 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.issessionIdSet() && (f = StringOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26054 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isReasonSet() && (f = StringOutputStream.writeStringProperty(a.getReason(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26055 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isAvatarSet() && (d = StringOutputStream.writeStringProperty(a.getAvatar(), 1e3, b)) && f++;
    1 == a.isPlayerIdSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerId(), 1001, b)) && f++;
    1 == a.isEmailSet() && (d = StringOutputStream.writeStringProperty(a.getEmail(), 1002, b)) && f++;
    1 == a.isCountrySet() && (d = StringOutputStream.writeStringProperty(a.getCountry(), 1003, b)) && f++;
    if (1 == a.isFriendsSet()) {
        d = a.getFriends();
        if (null == d) d = !1; else {
            b.putShort(1004);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1005, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26056 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isFriendDemandSet() && (d = StringOutputStream.writeObjectProperty(c, a.getFriendDemand(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26057 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isplayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    1 == a.ismessageSet() && (d = StringOutputStream.writeStringProperty(a.getMessage(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26058 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isAddressSet() && (f = StringOutputStream.writeStringProperty(a.getAddress(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26059 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isSessionIdSet() && (f = StringOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && e++;
    1 == a.isPlayerIdSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerId(), 2001, b)) && e++;
    1 == a.isplayerIdsStoredSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerIdsStored(), 2002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26060 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26061 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCurrentPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getCurrentPlayer(), 2e3, b)) && f++;
    1 == a.isGameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26062 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    if (1 == a.isItemsSet()) {
        a = a.getItems();
        if (null == a) d = !1; else {
            b.putShort(0);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26063 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    if (1 == a.isachievementsSet()) {
        a = a.getAchievements();
        if (null == a) d = !1; else {
            b.putShort(0);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26064 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 0, b)) && f++;
    1 == a.isNameSet() && (d = StringOutputStream.writeStringProperty(a.getName(), 1, b)) && f++;
    if (1 == a.isleaderboardEntriesSet()) {
        d = a.getLeaderboardEntries();
        if (null == d) d = !1; else {
            b.putShort(2);
            b.put(SerializationTypes.LIST);
            var h = b.position();
            b.skip(4);
            var g = d.length;
            b.putShort(g);
            for (var k = 0; k < g; k++) {
                var l = d[k];
                null == l ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, l, b);
            }
            b.putIntAt(h, b.position() - h);
            d = !0;
        }
        d && f++;
    }
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26065 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isurlSet() && (f = StringOutputStream.writeStringProperty(a.getUrl(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26066 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCurrentPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getCurrentPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26067 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    if (1 == a.isParticipantsSet()) {
        a = a.getParticipants();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26068 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSessionIdSet() && (d = StringOutputStream.writeStringProperty(a.getSessionId(), 2e3, b)) && f++;
    1 == a.isCallbackIdSet() && (d = StringOutputStream.writeStringProperty(a.getCallbackId(), 2001, b)) && f++;
    1 == a.isCallbackUrlSet() && (d = StringOutputStream.writeStringProperty(a.getCallbackUrl(), 2002, b)) && f++;
    1 == a.isThirdPartySourceSet() && (d = StringOutputStream.writeObjectProperty(c, a.getThirdPartySource(), 2003, b)) && f++;
    1 == a.isThirdPartyIdSet() && (d = StringOutputStream.writeStringProperty(a.getThirdPartyId(), 2004, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26069 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isTimestampSet() && (d = StringOutputStream.writeDoubleProperty(a.getTimestamp(), 1001, b)) && f++;
    1 == a.isPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 1002, b)) && f++;
    1 == a.isScoreSet() && (d = StringOutputStream.writeObjectProperty(c, a.getScore(), 1003, b)) && f++;
    1 == a.isPlayerIdSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerId(), 1004, b)) && f++;
    1 == a.isPlayerNameSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerName(), 1005, b)) && f++;
    1 == a.isPlayerAvatarPathSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerAvatarPath(), 1006, b)) && f++;
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1007, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26070 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26071 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isStartStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStartStatus(), 2e3, b)) && f++;
    1 == a.isStartDetailsSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStartDetails(), 2001, b)) && f++;
    1 == a.isPlayerSessionTypeSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayerSessionType(), 2002, b)) && f++;
    1 == a.isPlayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2003, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26072 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isIdSet() && (d = StringOutputStream.writeStringProperty(a.getId(), 1e3, b)) && f++;
    1 == a.isInviterSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInviter(), 1001, b)) && f++;
    1 == a.isInviteeSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitee(), 1002, b)) && f++;
    1 == a.isContentSet() && (d = StringOutputStream.writeObjectProperty(c, a.getContent(), 1003, b)) && f++;
    1 == a.isCreationTimeStampSet() && (d = StringOutputStream.writeDoubleProperty(a.getCreationTimeStamp(), 1004, b)) && f++;
    1 == a.isExpirationDelaySet() && (d = StringOutputStream.writeDoubleProperty(a.getExpirationDelay(), 1005, b)) && f++;
    1 == a.isStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStatus(), 1006, b)) && f++;
    1 == a.isCustomDataSet() && (d = StringOutputStream.writeStringProperty(a.getCustomData(), 1007, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26073 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26074 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26075 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26076 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26077 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitationSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitation(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26078 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26079 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isloginSet() && (d = StringOutputStream.writeStringProperty(a.getLogin(), 2e3, b)) && f++;
    1 == a.ispasswordSet() && (d = StringOutputStream.writeStringProperty(a.getPassword(), 2001, b)) && f++;
    1 == a.isplayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2002, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26080 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCreatePlayerStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getCreatePlayerStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26081 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isloginSet() && (f = StringOutputStream.writeStringProperty(a.getLogin(), 2e3, b)) && e++;
    1 == a.ispasswordSet() && (f = StringOutputStream.writeStringProperty(a.getPassword(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26082 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLoginStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getLoginStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26083 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isthirdPartySourceSet() && (d = StringOutputStream.writeObjectProperty(c, a.getThirdPartySource(), 2e3, b)) && f++;
    1 == a.isaccessTokenSet() && (d = StringOutputStream.writeStringProperty(a.getAccessToken(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26084 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isThirdPartyLoginStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getThirdPartyLoginStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26085 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26086 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLogoutStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getLogoutStatus(), 1999, b)) && f++;
    1 == a.isplayerSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayer(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26087 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isloginSet() && (f = StringOutputStream.writeStringProperty(a.getLogin(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26088 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isForgotPasswordStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getForgotPasswordStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26089 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isnameSet() && (f = StringOutputStream.writeStringProperty(a.getName(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26090 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSetPlayerNameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSetPlayerNameStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26091 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26092 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetFriendsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetFriendsStatus(), 1999, b)) && f++;
    if (1 == a.isfriendsSet()) {
        a = a.getFriends();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26093 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isidSet() && (f = StringOutputStream.writeStringProperty(a.getId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26094 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAskForFriendStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getAskForFriendStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26095 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26096 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetFriendDemandsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetFriendDemandsStatus(), 1999, b)) && f++;
    if (1 == a.isfriendDemandsSet()) {
        a = a.getFriendDemands();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26097 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isfriendDemandIdSet() && (f = StringOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26098 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAcceptFriendDemandStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getAcceptFriendDemandStatus(), 1999, b)) && f++;
    1 == a.isfriendDemandIdSet() && (d = StringOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26099 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isfriendDemandIdSet() && (f = StringOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26100 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isRefuseFriendDemandStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getRefuseFriendDemandStatus(), 1999, b)) && f++;
    1 == a.isfriendDemandIdSet() && (d = StringOutputStream.writeStringProperty(a.getFriendDemandId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26101 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isscoreSet() && (d = StringOutputStream.writeObjectProperty(c, a.getScore(), 2e3, b)) && f++;
    1 == a.isleaderboardIdSet() && (d = StringOutputStream.writeStringProperty(a.getLeaderboardId(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26102 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSubmitScoreStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSubmitScoreStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26103 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isleaderboardIdSet() && (d = StringOutputStream.writeStringProperty(a.getLeaderboardId(), 2e3, b)) && f++;
    1 == a.isperiodSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPeriod(), 2001, b)) && f++;
    1 == a.isstartSet() && (d = StringOutputStream.writeIntegerProperty(a.getStart(), 2002, b)) && f++;
    1 == a.islimitSet() && (d = StringOutputStream.writeIntegerProperty(a.getLimit(), 2003, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26104 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetScoresStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetScoresStatus(), 1999, b)) && f++;
    1 == a.isleaderboardIdSet() && (d = StringOutputStream.writeStringProperty(a.getLeaderboardId(), 2e3, b)) && f++;
    1 == a.isleaderboardNameSet() && (d = StringOutputStream.writeStringProperty(a.getLeaderboardName(), 2001, b)) && f++;
    if (1 == a.isscoresSet()) {
        a = a.getScores();
        if (null == a) d = !1; else {
            b.putShort(2002);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26105 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26106 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetAchievementsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetAchievementsStatus(), 1999, b)) && f++;
    if (1 == a.isachievementsSet()) {
        a = a.getAchievements();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26107 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isachivementIdSet() && (f = StringOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26108 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAchieveStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getAchieveStatus(), 1999, b)) && f++;
    1 == a.isachivementIdSet() && (d = StringOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26109 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isachivementIdSet() && (f = StringOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && e++;
    1 == a.isvalueSet() && (f = StringOutputStream.writeIntegerProperty(a.getValue(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26110 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAchieveWithProgressStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getAchieveWithProgressStatus(), 1999, b)) && f++;
    1 == a.isachivementIdSet() && (d = StringOutputStream.writeStringProperty(a.getAchivementId(), 2e3, b)) && f++;
    1 == a.isprogressSet() && (d = StringOutputStream.writeIntegerProperty(a.getProgress(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26111 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26112 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayerProfileStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetPlayerProfileStatus(), 1999, b)) && f++;
    1 == a.isprofileSet() && (d = StringOutputStream.writeObjectProperty(c, a.getProfile(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26113 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isplayerIdSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26114 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayerProfileByPlayerIdStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetPlayerProfileByPlayerIdStatus(), 1999, b)) && f++;
    1 == a.isprofileSet() && (d = StringOutputStream.writeObjectProperty(c, a.getProfile(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26115 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isprofileSet() && (d = StringOutputStream.writeObjectProperty(c, a.getProfile(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26116 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSavePlayerProfileStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSavePlayerProfileStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26117 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isdbQuerySet() && (d = StringOutputStream.writeObjectProperty(c, a.getDbQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26118 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetStorablesStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetStorablesStatus(), 1999, b)) && f++;
    if (1 == a.isstorablesSet()) {
        a = a.getStorables();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26119 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isstorableSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStorable(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26120 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSaveStorableStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSaveStorableStatus(), 1999, b)) && f++;
    1 == a.isstorableIdSet() && (d = StringOutputStream.writeStringProperty(a.getStorableId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26121 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isstorableSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStorable(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26122 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isUpdateStorableStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getUpdateStorableStatus(), 1999, b)) && f++;
    1 == a.isstorableIdSet() && (d = StringOutputStream.writeStringProperty(a.getStorableId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26123 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isstorableSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStorable(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26124 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isRemoveStorableStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getRemoveStorableStatus(), 1999, b)) && f++;
    1 == a.isstorableIdSet() && (d = StringOutputStream.writeStringProperty(a.getStorableId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26125 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26126 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetItemsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetItemsStatus(), 1999, b)) && f++;
    if (1 == a.isitemsSet()) {
        a = a.getItems();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26127 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isitemIdSet() && (f = StringOutputStream.writeStringProperty(a.getItemId(), 2e3, b)) && e++;
    1 == a.isquantitySet() && (f = StringOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26128 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isBuyItemStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getBuyItemStatus(), 1999, b)) && f++;
    1 == a.isboughtItemSet() && (d = StringOutputStream.writeObjectProperty(c, a.getBoughtItem(), 2e3, b)) && f++;
    1 == a.isquantitySet() && (d = StringOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26129 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isitemIdSet() && (f = StringOutputStream.writeStringProperty(a.getItemId(), 2e3, b)) && e++;
    1 == a.isquantitySet() && (f = StringOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26130 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isConsumeItemStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getConsumeItemStatus(), 1999, b)) && f++;
    1 == a.isconsumedItemSet() && (d = StringOutputStream.writeObjectProperty(c, a.getConsumedItem(), 2e3, b)) && f++;
    1 == a.isquantitySet() && (d = StringOutputStream.writeIntegerProperty(a.getQuantity(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26131 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isvalueSet() && (f = StringOutputStream.writeIntegerProperty(a.getValue(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26132 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isIncreasePlayerWalletStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getIncreasePlayerWalletStatus(), 1999, b)) && f++;
    1 == a.isvalueSet() && (d = StringOutputStream.writeIntegerProperty(a.getValue(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26133 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26134 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayerWalletStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetPlayerWalletStatus(), 1999, b)) && f++;
    1 == a.iswalletSet() && (d = StringOutputStream.writeObjectProperty(c, a.getWallet(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26135 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26136 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isJoinGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getJoinGameStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26137 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26138 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isUnjoinGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getUnjoinGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26139 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26140 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isStartGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStartGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26141 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26142 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isStopGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getStopGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26143 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26144 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isCreateGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getCreateGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26145 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isdbQuerySet() && (d = StringOutputStream.writeObjectProperty(c, a.getDbQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26146 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetGamesStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetGamesStatus(), 1999, b)) && f++;
    if (1 == a.isgamesSet()) {
        a = a.getGames();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26147 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26148 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSaveAsGhostStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSaveAsGhostStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26149 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isdbQuerySet() && (d = StringOutputStream.writeObjectProperty(c, a.getDbQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26150 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetGhostsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetGhostsStatus(), 1999, b)) && f++;
    if (1 == a.isghostsSet()) {
        a = a.getGhosts();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26151 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26152 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLoadGhostStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getLoadGhostStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26153 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26154 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isNextPlayerTurnStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getNextPlayerTurnStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26155 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26156 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSaveGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSaveGameStatus(), 1999, b)) && f++;
    1 == a.isgameIdSet() && (d = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26157 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26158 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isLoadGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getLoadGameStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26159 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.ismessageSet() && (f = StringOutputStream.writeStringProperty(a.getMessage(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26160 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSendGameChatStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSendGameChatStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26161 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.isplayerIdSet() && (f = StringOutputStream.writeStringProperty(a.getPlayerId(), 2001, b)) && e++;
    1 == a.ismessageSet() && (f = StringOutputStream.writeStringProperty(a.getMessage(), 2002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26162 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSendGameChatToPlayerStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSendGameChatToPlayerStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26163 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isgameIdSet() && (f = StringOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.ismessageSet() && (f = StringOutputStream.writeStringProperty(a.getMessage(), 2001, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26164 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isSendGameChatToPlayerListStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getSendGameChatToPlayerListStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26165 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isplayerIdSet() && (d = StringOutputStream.writeStringProperty(a.getPlayerId(), 2e3, b)) && f++;
    1 == a.isinvitationSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitation(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26166 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isInvitePlayerStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getInvitePlayerStatus(), 1999, b)) && f++;
    1 == a.isinvitationIdSet() && (d = StringOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26167 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isnuggetaQuerySet() && (d = StringOutputStream.writeObjectProperty(c, a.getNuggetaQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26168 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetInvitationsStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetInvitationsStatus(), 1999, b)) && f++;
    if (1 == a.isinvitationsSet()) {
        a = a.getInvitations();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype._m26169 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isinvitationIdSet() && (f = StringOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26170 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isAcceptInvitationStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getAcceptInvitationStatus(), 1999, b)) && f++;
    1 == a.isinvitationIdSet() && (d = StringOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26171 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isinvitationIdSet() && (f = StringOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26172 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isRefuseInvitationStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getRefuseInvitationStatus(), 1999, b)) && f++;
    1 == a.isinvitationIdSet() && (d = StringOutputStream.writeStringProperty(a.getInvitationId(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26173 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26174 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isPauseSessionMonitoringStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getPauseSessionMonitoringStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26175 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5518.prototype._m26176 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isResumeSessionMonitoringStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getResumeSessionMonitoringStatus(), 1999, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26177 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isgamesQuerySet() && (d = StringOutputStream.writeObjectProperty(c, a.getGamesQuery(), 2e3, b)) && f++;
    1 == a.ismatchMakingConditionsSet() && (d = StringOutputStream.writeObjectProperty(c, a.getMatchMakingConditions(), 2001, b)) && f++;
    1 == a.istimeoutDelayMinPlayersSet() && (d = StringOutputStream.writeIntegerProperty(a.getTimeoutDelayMinPlayers(), 2002, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26178 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isMatchAndJoinGameStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getMatchAndJoinGameStatus(), 1999, b)) && f++;
    1 == a.isgameSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGame(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26179 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isplayersQuerySet() && (d = StringOutputStream.writeObjectProperty(c, a.getPlayersQuery(), 2e3, b)) && f++;
    b.putShortAt(e, f);
};

T5518.prototype._m26180 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = StringOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = StringOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = StringOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = StringOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isGetPlayersStatusSet() && (d = StringOutputStream.writeObjectProperty(c, a.getGetPlayersStatus(), 1999, b)) && f++;
    if (1 == a.isplayersSet()) {
        a = a.getPlayers();
        if (null == a) d = !1; else {
            b.putShort(2e3);
            b.put(SerializationTypes.LIST);
            d = b.position();
            b.skip(4);
            var h = a.length;
            b.putShort(h);
            for (var g = 0; g < h; g++) {
                var k = a[g];
                null == k ? b.put(SerializationTypes.NULL_TYPE) : StringOutputStream.writeObject(c, k, b);
            }
            b.putIntAt(d, b.position() - d);
            d = !0;
        }
        d && f++;
    }
    b.putShortAt(e, f);
};

T5518.prototype.readSerializable = function(c, a, b) {
    if (0 == b) return this._m26181(c, a);
    if (1 == b) return this._m26182(c, a);
    if (2 == b) return this._m26183(c, a);
    if (3 == b) return this._m26184(c, a);
    if (4 == b) return this._m26185(c, a);
    if (5 == b) return this._m26186(c, a);
    if (6 == b) return this._m26187(c, a);
    if (7 == b) return this._m26188(c, a);
    if (8 == b) return this._m26189(c, a);
    if (9 == b) return this._m26190(c, a);
    if (10 == b) return this._m26191(c, a);
    if (11 == b) return this._m26192(c, a);
    if (12 == b) return this._m26193(c, a);
    if (13 == b) return this._m26194(c, a);
    if (14 == b) return this._m26195(c, a);
    if (10002 == b) return this._m26196(c, a);
    if (10011 == b) return this._m26197(c, a);
    if (10140 == b) return this._m26198(c, a);
    if (10020 == b) return this._m26199(c, a);
    if (10008 == b) return this._m26200(c, a);
    if (10125 == b) return this._m26201(c, a);
    if (10029 == b) return this._m26202(c, a);
    if (12e3 == b) return this._m26203(c, a);
    if (10035 == b) return this._m26204(c, a);
    if (10038 == b) return this._m26205(c, a);
    if (10041 == b) return this._m26206(c, a);
    if (10044 == b) return this._m26207(c, a);
    if (10047 == b) return this._m26208(c, a);
    if (10065 == b) return this._m26209(c, a);
    if (10068 == b) return this._m26210(c, a);
    if (10071 == b) return this._m26211(c, a);
    if (10017 == b) return this._m26212(c, a);
    if (11832 == b) return this._m26213(c, a);
    if (10014 == b) return this._m26214(c, a);
    if (10116 == b) return this._m26215(c, a);
    if (10119 == b) return this._m26216(c, a);
    if (10128 == b) return this._m26217(c, a);
    if (10131 == b) return this._m26218(c, a);
    if (10053 == b) return this._m26219(c, a);
    if (10050 == b) return this._m26220(c, a);
    if (10056 == b) return this._m26221(c, a);
    if (10059 == b) return this._m26222(c, a);
    if (10062 == b) return this._m26223(c, a);
    if (10074 == b) return this._m26224(c, a);
    if (10077 == b) return this._m26225(c, a);
    if (10092 == b) return this._m26226(c, a);
    if (10095 == b) return this._m26227(c, a);
    if (10098 == b) return this._m26228(c, a);
    if (10101 == b) return this._m26229(c, a);
    if (10104 == b) return this._m26230(c, a);
    if (10107 == b) return this._m26231(c, a);
    if (10110 == b) return this._m26232(c, a);
    if (10122 == b) return this._m26233(c, a);
    if (10143 == b) return this._m26234(c, a);
    if (10146 == b) return this._m26235(c, a);
    if (10113 == b) return this._m26236(c, a);
    if (10926 == b) return this._m26237(c, a);
    if (10929 == b) return this._m26238(c, a);
    if (10170 == b) return this._m26239(c, a);
    if (10173 == b) return this._m26240(c, a);
    if (10176 == b) return this._m26241(c, a);
    if (10179 == b) return this._m26242(c, a);
    if (10161 == b) return this._m26243(c, a);
    if (10164 == b) return this._m26244(c, a);
    if (10167 == b) return this._m26245(c, a);
    if (10182 == b) return this._m26246(c, a);
    if (3001 == b) return this._m26247(c, a);
    if (3002 == b) return this._m26248(c, a);
    if (3003 == b) return this._m26249(c, a);
    if (3004 == b) return this._m26250(c, a);
    if (3005 == b) return this._m26251(c, a);
    if (3006 == b) return this._m26252(c, a);
    if (3007 == b) return this._m26253(c, a);
    if (3008 == b) return this._m26254(c, a);
    if (3009 == b) return this._m26255(c, a);
    if (3010 == b) return this._m26256(c, a);
    if (3011 == b) return this._m26257(c, a);
    if (3012 == b) return this._m26258(c, a);
    if (3013 == b) return this._m26259(c, a);
    if (3014 == b) return this._m26260(c, a);
    if (3015 == b) return this._m26261(c, a);
    if (3016 == b) return this._m26262(c, a);
    if (3017 == b) return this._m26263(c, a);
    if (3018 == b) return this._m26264(c, a);
    if (3019 == b) return this._m26265(c, a);
    if (3020 == b) return this._m26266(c, a);
    if (3021 == b) return this._m26267(c, a);
    if (3022 == b) return this._m26268(c, a);
    if (3023 == b) return this._m26269(c, a);
    if (3024 == b) return this._m26270(c, a);
    if (3025 == b) return this._m26271(c, a);
    if (3026 == b) return this._m26272(c, a);
    if (3027 == b) return this._m26273(c, a);
    if (3028 == b) return this._m26274(c, a);
    if (3029 == b) return this._m26275(c, a);
    if (3030 == b) return this._m26276(c, a);
    if (3032 == b) return this._m26277(c, a);
    if (3033 == b) return this._m26278(c, a);
    if (3034 == b) return this._m26279(c, a);
    if (3035 == b) return this._m26280(c, a);
    if (3036 == b) return this._m26281(c, a);
    if (3037 == b) return this._m26282(c, a);
    if (3038 == b) return this._m26283(c, a);
    if (3039 == b) return this._m26284(c, a);
    if (3040 == b) return this._m26285(c, a);
    if (3041 == b) return this._m26286(c, a);
    if (3042 == b) return this._m26287(c, a);
    if (3043 == b) return this._m26288(c, a);
    if (3044 == b) return this._m26289(c, a);
    if (3045 == b) return this._m26290(c, a);
    if (3047 == b) return this._m26291(c, a);
    if (3048 == b) return this._m26292(c, a);
    if (3049 == b) return this._m26293(c, a);
    if (3050 == b) return this._m26294(c, a);
    if (3051 == b) return this._m26295(c, a);
    if (3052 == b) return this._m26296(c, a);
    if (3053 == b) return this._m26297(c, a);
    if (1e4 == b) return this._m26298(c, a);
    if (10001 == b) return this._m26299(c, a);
    if (10009 == b) return this._m26300(c, a);
    if (10010 == b) return this._m26301(c, a);
    if (10138 == b) return this._m26302(c, a);
    if (10139 == b) return this._m26303(c, a);
    if (10018 == b) return this._m26304(c, a);
    if (10019 == b) return this._m26305(c, a);
    if (10006 == b) return this._m26306(c, a);
    if (10007 == b) return this._m26307(c, a);
    if (10123 == b) return this._m26308(c, a);
    if (10124 == b) return this._m26309(c, a);
    if (10027 == b) return this._m26310(c, a);
    if (10028 == b) return this._m26311(c, a);
    if (11998 == b) return this._m26312(c, a);
    if (11999 == b) return this._m26313(c, a);
    if (10033 == b) return this._m26314(c, a);
    if (10034 == b) return this._m26315(c, a);
    if (10036 == b) return this._m26316(c, a);
    if (10037 == b) return this._m26317(c, a);
    if (10039 == b) return this._m26318(c, a);
    if (10040 == b) return this._m26319(c, a);
    if (10042 == b) return this._m26320(c, a);
    if (10043 == b) return this._m26321(c, a);
    if (10045 == b) return this._m26322(c, a);
    if (10046 == b) return this._m26323(c, a);
    if (10063 == b) return this._m26324(c, a);
    if (10064 == b) return this._m26325(c, a);
    if (10066 == b) return this._m26326(c, a);
    if (10067 == b) return this._m26327(c, a);
    if (10069 == b) return this._m26328(c, a);
    if (10070 == b) return this._m26329(c, a);
    if (10015 == b) return this._m26330(c, a);
    if (10016 == b) return this._m26331(c, a);
    if (11830 == b) return this._m26332(c, a);
    if (11831 == b) return this._m26333(c, a);
    if (10012 == b) return this._m26334(c, a);
    if (10013 == b) return this._m26335(c, a);
    if (10114 == b) return this._m26336(c, a);
    if (10115 == b) return this._m26337(c, a);
    if (10117 == b) return this._m26338(c, a);
    if (10118 == b) return this._m26339(c, a);
    if (10126 == b) return this._m26340(c, a);
    if (10127 == b) return this._m26341(c, a);
    if (10129 == b) return this._m26342(c, a);
    if (10130 == b) return this._m26343(c, a);
    if (10051 == b) return this._m26344(c, a);
    if (10052 == b) return this._m26345(c, a);
    if (10048 == b) return this._m26346(c, a);
    if (10049 == b) return this._m26347(c, a);
    if (10054 == b) return this._m26348(c, a);
    if (10055 == b) return this._m26349(c, a);
    if (10057 == b) return this._m26350(c, a);
    if (10058 == b) return this._m26351(c, a);
    if (10060 == b) return this._m26352(c, a);
    if (10061 == b) return this._m26353(c, a);
    if (10072 == b) return this._m26354(c, a);
    if (10073 == b) return this._m26355(c, a);
    if (10075 == b) return this._m26356(c, a);
    if (10076 == b) return this._m26357(c, a);
    if (10090 == b) return this._m26358(c, a);
    if (10091 == b) return this._m26359(c, a);
    if (10093 == b) return this._m26360(c, a);
    if (10094 == b) return this._m26361(c, a);
    if (10096 == b) return this._m26362(c, a);
    if (10097 == b) return this._m26363(c, a);
    if (10099 == b) return this._m26364(c, a);
    if (10100 == b) return this._m26365(c, a);
    if (10102 == b) return this._m26366(c, a);
    if (10103 == b) return this._m26367(c, a);
    if (10105 == b) return this._m26368(c, a);
    if (10106 == b) return this._m26369(c, a);
    if (10108 == b) return this._m26370(c, a);
    if (10109 == b) return this._m26371(c, a);
    if (10120 == b) return this._m26372(c, a);
    if (10121 == b) return this._m26373(c, a);
    if (10141 == b) return this._m26374(c, a);
    if (10142 == b) return this._m26375(c, a);
    if (10144 == b) return this._m26376(c, a);
    if (10145 == b) return this._m26377(c, a);
    if (10111 == b) return this._m26378(c, a);
    if (10112 == b) return this._m26379(c, a);
    if (10924 == b) return this._m26380(c, a);
    if (10925 == b) return this._m26381(c, a);
    if (10927 == b) return this._m26382(c, a);
    if (10928 == b) return this._m26383(c, a);
    if (10168 == b) return this._m26384(c, a);
    if (10169 == b) return this._m26385(c, a);
    if (10171 == b) return this._m26386(c, a);
    if (10172 == b) return this._m26387(c, a);
    if (10174 == b) return this._m26388(c, a);
    if (10175 == b) return this._m26389(c, a);
    if (10177 == b) return this._m26390(c, a);
    if (10178 == b) return this._m26391(c, a);
    if (10159 == b) return this._m26392(c, a);
    if (10160 == b) return this._m26393(c, a);
    if (10162 == b) return this._m26394(c, a);
    if (10163 == b) return this._m26395(c, a);
    if (10165 == b) return this._m26396(c, a);
    if (10166 == b) return this._m26397(c, a);
    if (10180 == b) return this._m26398(c, a);
    if (10181 == b) return this._m26399(c, a);
    throw new NError().init("No serializer found for type " + b, null);
};

T5518.prototype._m26181 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ThirdPartySource.fromValue(b);
};

T5518.prototype._m26182 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return MatchMakingType.fromValue(b);
};

T5518.prototype._m26183 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return LeaderboardOrder.fromValue(b);
};

T5518.prototype._m26184 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return LeaderboardPeriod.fromValue(b);
};

T5518.prototype._m26185 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return HandshakeState.fromValue(b);
};

T5518.prototype._m26186 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return PlayerState.fromValue(b);
};

T5518.prototype._m26187 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ClientApplication.fromValue(b);
};

T5518.prototype._m26188 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GameRunningState.fromValue(b);
};

T5518.prototype._m26189 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return NFriendDemandStatus.fromValue(b);
};

T5518.prototype._m26190 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ThirdPartyMethodType.fromValue(b);
};

T5518.prototype._m26191 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return StartStatus.fromValue(b);
};

T5518.prototype._m26192 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return PlayerSessionType.fromValue(b);
};

T5518.prototype._m26193 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return NAchievementType.fromValue(b);
};

T5518.prototype._m26194 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return NInvitationStatus.fromValue(b);
};

T5518.prototype._m26195 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ExecutionStatus.fromValue(b);
};

T5518.prototype._m26196 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return CreatePlayerStatus.fromValue(b);
};

T5518.prototype._m26197 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return LoginStatus.fromValue(b);
};

T5518.prototype._m26198 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ThirdPartyLoginStatus.fromValue(b);
};

T5518.prototype._m26199 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return LogoutStatus.fromValue(b);
};

T5518.prototype._m26200 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ForgotPasswordStatus.fromValue(b);
};

T5518.prototype._m26201 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SetPlayerNameStatus.fromValue(b);
};

T5518.prototype._m26202 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetFriendsStatus.fromValue(b);
};

T5518.prototype._m26203 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return AskForFriendStatus.fromValue(b);
};

T5518.prototype._m26204 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetFriendDemandsStatus.fromValue(b);
};

T5518.prototype._m26205 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return AcceptFriendDemandStatus.fromValue(b);
};

T5518.prototype._m26206 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return RefuseFriendDemandStatus.fromValue(b);
};

T5518.prototype._m26207 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SubmitScoreStatus.fromValue(b);
};

T5518.prototype._m26208 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetScoresStatus.fromValue(b);
};

T5518.prototype._m26209 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetAchievementsStatus.fromValue(b);
};

T5518.prototype._m26210 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return AchieveStatus.fromValue(b);
};

T5518.prototype._m26211 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return AchieveWithProgressStatus.fromValue(b);
};

T5518.prototype._m26212 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetPlayerProfileStatus.fromValue(b);
};

T5518.prototype._m26213 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetPlayerProfileByPlayerIdStatus.fromValue(b);
};

T5518.prototype._m26214 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SavePlayerProfileStatus.fromValue(b);
};

T5518.prototype._m26215 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetStorablesStatus.fromValue(b);
};

T5518.prototype._m26216 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SaveStorableStatus.fromValue(b);
};

T5518.prototype._m26217 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return UpdateStorableStatus.fromValue(b);
};

T5518.prototype._m26218 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return RemoveStorableStatus.fromValue(b);
};

T5518.prototype._m26219 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetItemsStatus.fromValue(b);
};

T5518.prototype._m26220 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return BuyItemStatus.fromValue(b);
};

T5518.prototype._m26221 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ConsumeItemStatus.fromValue(b);
};

T5518.prototype._m26222 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return IncreasePlayerWalletStatus.fromValue(b);
};

T5518.prototype._m26223 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetPlayerWalletStatus.fromValue(b);
};

T5518.prototype._m26224 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return JoinGameStatus.fromValue(b);
};

T5518.prototype._m26225 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return UnjoinGameStatus.fromValue(b);
};

T5518.prototype._m26226 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return StartGameStatus.fromValue(b);
};

T5518.prototype._m26227 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return StopGameStatus.fromValue(b);
};

T5518.prototype._m26228 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return CreateGameStatus.fromValue(b);
};

T5518.prototype._m26229 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetGamesStatus.fromValue(b);
};

T5518.prototype._m26230 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SaveAsGhostStatus.fromValue(b);
};

T5518.prototype._m26231 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetGhostsStatus.fromValue(b);
};

T5518.prototype._m26232 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return LoadGhostStatus.fromValue(b);
};

T5518.prototype._m26233 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return NextPlayerTurnStatus.fromValue(b);
};

T5518.prototype._m26234 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SaveGameStatus.fromValue(b);
};

T5518.prototype._m26235 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return LoadGameStatus.fromValue(b);
};

T5518.prototype._m26236 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SendGameChatStatus.fromValue(b);
};

T5518.prototype._m26237 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SendGameChatToPlayerStatus.fromValue(b);
};

T5518.prototype._m26238 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return SendGameChatToPlayerListStatus.fromValue(b);
};

T5518.prototype._m26239 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return InvitePlayerStatus.fromValue(b);
};

T5518.prototype._m26240 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetInvitationsStatus.fromValue(b);
};

T5518.prototype._m26241 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return AcceptInvitationStatus.fromValue(b);
};

T5518.prototype._m26242 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return RefuseInvitationStatus.fromValue(b);
};

T5518.prototype._m26243 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return PauseSessionMonitoringStatus.fromValue(b);
};

T5518.prototype._m26244 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return ResumeSessionMonitoringStatus.fromValue(b);
};

T5518.prototype._m26245 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return MatchAndJoinGameStatus.fromValue(b);
};

T5518.prototype._m26246 = function(c, a) {
    var b = StringInputStream.readInteger(a);
    return GetPlayersStatus.fromValue(b);
};

T5518.prototype._m26247 = function(c, a) {
    for (var b = new NPlayer().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setPassword(d), MemoryManagement.free(d)) : 1003 == d ? (d = StringInputStream.readString(a), 
        b.setAccessToken(d), MemoryManagement.free(d)) : 1004 == d ? (d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : 1005 == d ? b.setConnected(StringInputStream.readBoolean(a)) : 1006 == d ? b.setLoginSource(StringInputStream.readObject(c, a)) : 1007 == d ? (d = StringInputStream.readString(a), 
        b.setThirdPartyId(d), MemoryManagement.free(d)) : 1008 == d ? b.setCreationDate(StringInputStream.readDouble(a)) : 1009 == d ? b.setActive(StringInputStream.readBoolean(a)) : 1010 == d ? (d = StringInputStream.readString(a), 
        b.setLang(d), MemoryManagement.free(d)) : 1011 == d ? b.setAnonymous(StringInputStream.readBoolean(a)) : 1012 == d ? (d = StringInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26248 = function(c, a) {
    for (var b = new NAchievement().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : 1002 == d ? b.setAchieved(StringInputStream.readBoolean(a)) : 1003 == d ? b.setFeatured(StringInputStream.readBoolean(a)) : 1004 == d ? (d = StringInputStream.readString(a), 
        b.setDescription(d), MemoryManagement.free(d)) : 1005 == d ? b.setNXP(StringInputStream.readInteger(a)) : 1006 == d ? b.setNEnergy(StringInputStream.readInteger(a)) : 1007 == d ? b.setType(StringInputStream.readObject(c, a)) : 1008 == d ? b.setGoal(StringInputStream.readInteger(a)) : 1009 == d ? b.setProgress(StringInputStream.readInteger(a)) : 1010 == d ? b.setOrder(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26249 = function(c, a) {
    for (var b = new Handshake().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setVersion(d), MemoryManagement.free(d)) : 2001 == d ? b.setReason(StringInputStream.readObject(c, a)) : 2002 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerIdsStored(d), MemoryManagement.free(d)) : 2003 == d ? (d = StringInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2004 == d ? (d = StringInputStream.readString(a), 
        b.setPlatform(d), MemoryManagement.free(d)) : 2005 == d ? (d = StringInputStream.readString(a), 
        b.setSpId(d), MemoryManagement.free(d)) : 2006 == d ? (d = StringInputStream.readString(a), 
        b.setDebugSpId(d), MemoryManagement.free(d)) : 2007 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26250 = function(c, a) {
    for (var b = new HandshakeResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setExecutionStatus(StringInputStream.readObject(c, a)) : 2001 == d ? b.setReason(StringInputStream.readObject(c, a)) : 2002 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerIdsStored(d), MemoryManagement.free(d)) : 2003 == d ? (d = StringInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2004 == d ? b.setPlayerSessionType(StringInputStream.readObject(c, a)) : 2005 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26251 = function(c, a) {
    for (var b = new GameRunningStateChange().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setGameRunningState(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26252 = function(c, a) {
    for (var b = new NFriendDemand().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? b.setEmitter(StringInputStream.readObject(c, a)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setReceiverId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setCustomMessage(d), MemoryManagement.free(d)) : 1003 == d ? b.setFriendDemandStatus(StringInputStream.readObject(c, a)) : 1004 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26253 = function(c, a) {
    for (var b = new NScore().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? b.setValue(StringInputStream.readDouble(a)) : 1001 == d ? b.setTimestamp(StringInputStream.readDouble(a)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 1003 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerName(d), MemoryManagement.free(d)) : 1004 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerAvatarPath(d), MemoryManagement.free(d)) : 1005 == d ? (d = StringInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26254 = function(c, a) {
    for (var b = new AbstractRoom().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (1002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else 1003 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26255 = function(c, a) {
    for (var b = new NRoom().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (1002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else 1003 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDefaultRoom(StringInputStream.readBoolean(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26256 = function(c, a) {
    for (var b = new NGame().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (1002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else 1003 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGameRunningState(StringInputStream.readObject(c, a)) : 2001 == d ? b.setGameCharacteristics(StringInputStream.readObject(c, a)) : 2002 == d ? b.setGameState(StringInputStream.readObject(c, a)) : 2003 == d ? b.setMatchMakingConditions(StringInputStream.readObject(c, a)) : 2004 == d ? b.setTurnBasedContext(StringInputStream.readObject(c, a)) : 2006 == d ? b.setOwner(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26257 = function(c, a) {
    for (var b = new NGameCharacteristics().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? b.setMinPlayer(StringInputStream.readInteger(a)) : 1 == d ? b.setMaxPlayer(StringInputStream.readInteger(a)) : 2 == d ? b.setAutoStop(StringInputStream.readBoolean(a)) : 3 == d ? b.setAutoStart(StringInputStream.readBoolean(a)) : 4 == d ? (d = StringInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26258 = function(c, a) {
    for (var b = new PlayerEnterGame().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26259 = function(c, a) {
    for (var b = new FriendshipNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriend(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26260 = function(c, a) {
    for (var b = new PlayerUnjoinGame().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26261 = function(c, a) {
    for (var b = new NWorldUpdate().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) b.setUpdate(StringInputStream.readInteger(a)); else if (1001 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setValues(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26262 = function(c, a) {
    for (var b = new FriendConnectedNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriend(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26263 = function(c, a) {
    for (var b = new FriendDisconnectedNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriend(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26264 = function(c, a) {
    for (var b = new NPlayerWallet().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 1001 == d ? b.setNbCoins(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26265 = function(c, a) {
    for (var b = new NItem().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : 1002 == d ? b.setPrice(StringInputStream.readInteger(a)) : 1003 == d ? b.setBought(StringInputStream.readBoolean(a)) : 1004 == d ? b.setCount(StringInputStream.readInteger(a)) : 1005 == d ? b.setOrder(StringInputStream.readInteger(a)) : 1006 == d ? (d = StringInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26266 = function(c, a) {
    for (var b = new NGameState().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setUpdates(d);
        } else 1 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26267 = function(c, a) {
    for (var b = new NMatchMakingConditions().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : 1 == d ? b.setCustomObject(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26268 = function(c, a) {
    for (var b = new OpenConnection().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setIpAddress(d), MemoryManagement.free(d)) : 2001 == d ? b.setTcpPort(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26269 = function(c, a) {
    for (var b = new SlaveConnectionNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26270 = function(c, a) {
    for (var b = new PlayerMessage().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setSystemID(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setTargetID(d), MemoryManagement.free(d)) : 2002 == d ? (d = StringInputStream.readString(a), 
        b.setOwnerID(d), MemoryManagement.free(d)) : 2003 == d ? (d = StringInputStream.readString(a), 
        b.setApplicationID(d), MemoryManagement.free(d)) : 2004 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2005 == d ? b.setMessage(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26271 = function(c, a) {
    for (var b = new NRawGameMessage().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 3e3 == d ? (d = StringInputStream.readString(a), 
        b.setContent(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26272 = function(c, a) {
    for (var b = new SessionExpired().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26273 = function(c, a) {
    for (var b = new GameMessageError().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setReason(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26274 = function(c, a) {
    for (var b = new NPlayerProfile().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setAvatar(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setEmail(d), MemoryManagement.free(d); else if (1003 == d) d = StringInputStream.readString(a), 
        b.setCountry(d), MemoryManagement.free(d); else if (1004 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setFriends(d);
        } else 1005 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26275 = function(c, a) {
    for (var b = new FriendDemandNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setFriendDemand(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26276 = function(c, a) {
    for (var b = new GameChatNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26277 = function(c, a) {
    for (var b = new SwitchToServerInformation().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setAddress(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26278 = function(c, a) {
    for (var b = new SwitchPlayerRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2002 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerIdsStored(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26279 = function(c, a) {
    for (var b = new MyTurnNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26280 = function(c, a) {
    for (var b = new PlayerTurnNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCurrentPlayer(StringInputStream.readObject(c, a)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26281 = function(c, a) {
    for (var b = new NStore().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) if (0 == StringInputStream.getShort(a)) {
        var d = [];
        if (a.get() != SerializationTypes.NULL_TYPE) {
            a.getInt();
            for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
        }
        b.setItems(d);
    } else StringInputStream.skipProperty(a);
    return b;
};

T5518.prototype._m26282 = function(c, a) {
    for (var b = new NAchievementBoard().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) if (0 == StringInputStream.getShort(a)) {
        var d = [];
        if (a.get() != SerializationTypes.NULL_TYPE) {
            a.getInt();
            for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
        }
        b.setAchievements(d);
    } else StringInputStream.skipProperty(a);
    return b;
};

T5518.prototype._m26283 = function(c, a) {
    for (var b = new NLeaderboard().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setId(d), MemoryManagement.free(d); else if (1 == d) d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d); else if (2 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setLeaderboardEntries(d);
        } else 3 == d ? (d = StringInputStream.readString(a), b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26284 = function(c, a) {
    for (var b = new OpenUrl().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setUrl(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26285 = function(c, a) {
    for (var b = new TurnBasedContext().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCurrentPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26286 = function(c, a) {
    for (var b = new DisconnectedContext().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setParticipants(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26287 = function(c, a) {
    for (var b = new OpenUrlData().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setSessionId(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setCallbackId(d), MemoryManagement.free(d)) : 2002 == d ? (d = StringInputStream.readString(a), 
        b.setCallbackUrl(d), MemoryManagement.free(d)) : 2003 == d ? b.setThirdPartySource(StringInputStream.readObject(c, a)) : 2004 == d ? (d = StringInputStream.readString(a), 
        b.setThirdPartyId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26288 = function(c, a) {
    for (var b = new NLeaderboardEntry().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? b.setTimestamp(StringInputStream.readDouble(a)) : 1002 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : 1003 == d ? b.setScore(StringInputStream.readObject(c, a)) : 1004 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 1005 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerName(d), MemoryManagement.free(d)) : 1006 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerAvatarPath(d), MemoryManagement.free(d)) : 1007 == d ? (d = StringInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26289 = function(c, a) {
    for (var b = new StartRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26290 = function(c, a) {
    for (var b = new StartResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStartStatus(StringInputStream.readObject(c, a)) : 2001 == d ? b.setStartDetails(StringInputStream.readObject(c, a)) : 2002 == d ? b.setPlayerSessionType(StringInputStream.readObject(c, a)) : 2003 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26291 = function(c, a) {
    for (var b = new NInvitation().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : 1001 == d ? b.setInviter(StringInputStream.readObject(c, a)) : 1002 == d ? b.setInvitee(StringInputStream.readObject(c, a)) : 1003 == d ? b.setContent(StringInputStream.readObject(c, a)) : 1004 == d ? b.setCreationTimeStamp(StringInputStream.readDouble(a)) : 1005 == d ? b.setExpirationDelay(StringInputStream.readDouble(a)) : 1006 == d ? b.setStatus(StringInputStream.readObject(c, a)) : 1007 == d ? (d = StringInputStream.readString(a), 
        b.setCustomData(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26292 = function(c, a) {
    for (var b = new NGameInvitation().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26293 = function(c, a) {
    for (var b = new InvitationRequestNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26294 = function(c, a) {
    for (var b = new InvitationAcceptedNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26295 = function(c, a) {
    for (var b = new InvitationRefusedNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26296 = function(c, a) {
    for (var b = new InvitationExpiredNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setInvitation(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26297 = function(c, a) {
    for (var b = new NMatchAndJoinGameExpiredNotification().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26298 = function(c, a) {
    for (var b = new CreatePlayerRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setPassword(d), MemoryManagement.free(d)) : 2002 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26299 = function(c, a) {
    for (var b = new CreatePlayerResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setCreatePlayerStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26300 = function(c, a) {
    for (var b = new LoginRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setPassword(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26301 = function(c, a) {
    for (var b = new LoginResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLoginStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26302 = function(c, a) {
    for (var b = new ThirdPartyLoginRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setThirdPartySource(StringInputStream.readObject(c, a)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setAccessToken(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26303 = function(c, a) {
    for (var b = new ThirdPartyLoginResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setThirdPartyLoginStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26304 = function(c, a) {
    for (var b = new LogoutRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26305 = function(c, a) {
    for (var b = new LogoutResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLogoutStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setPlayer(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26306 = function(c, a) {
    for (var b = new ForgotPasswordRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setLogin(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26307 = function(c, a) {
    for (var b = new ForgotPasswordResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setForgotPasswordStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26308 = function(c, a) {
    for (var b = new SetPlayerNameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setName(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26309 = function(c, a) {
    for (var b = new SetPlayerNameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSetPlayerNameStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26310 = function(c, a) {
    for (var b = new GetFriendsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26311 = function(c, a) {
    for (var b = new GetFriendsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetFriendsStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setFriends(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26312 = function(c, a) {
    for (var b = new AskForFriendRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26313 = function(c, a) {
    for (var b = new AskForFriendResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAskForFriendStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26314 = function(c, a) {
    for (var b = new GetFriendDemandsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26315 = function(c, a) {
    for (var b = new GetFriendDemandsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetFriendDemandsStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setFriendDemands(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26316 = function(c, a) {
    for (var b = new AcceptFriendDemandRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26317 = function(c, a) {
    for (var b = new AcceptFriendDemandResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAcceptFriendDemandStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26318 = function(c, a) {
    for (var b = new RefuseFriendDemandRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26319 = function(c, a) {
    for (var b = new RefuseFriendDemandResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setRefuseFriendDemandStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setFriendDemandId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26320 = function(c, a) {
    for (var b = new SubmitScoreRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setScore(StringInputStream.readObject(c, a)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setLeaderboardId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26321 = function(c, a) {
    for (var b = new SubmitScoreResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSubmitScoreStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26322 = function(c, a) {
    for (var b = new GetScoresRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setLeaderboardId(d), MemoryManagement.free(d)) : 2001 == d ? b.setPeriod(StringInputStream.readObject(c, a)) : 2002 == d ? b.setStart(StringInputStream.readInteger(a)) : 2003 == d ? b.setLimit(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26323 = function(c, a) {
    for (var b = new GetScoresResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetScoresStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) d = StringInputStream.readString(a), 
        b.setLeaderboardId(d), MemoryManagement.free(d); else if (2001 == d) d = StringInputStream.readString(a), 
        b.setLeaderboardName(d), MemoryManagement.free(d); else if (2002 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setScores(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26324 = function(c, a) {
    for (var b = new GetAchievementsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26325 = function(c, a) {
    for (var b = new GetAchievementsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetAchievementsStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setAchievements(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26326 = function(c, a) {
    for (var b = new AchieveRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26327 = function(c, a) {
    for (var b = new AchieveResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAchieveStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26328 = function(c, a) {
    for (var b = new AchieveWithProgressRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : 2001 == d ? b.setValue(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26329 = function(c, a) {
    for (var b = new AchieveWithProgressResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAchieveWithProgressStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setAchivementId(d), MemoryManagement.free(d)) : 2001 == d ? b.setProgress(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26330 = function(c, a) {
    for (var b = new GetPlayerProfileRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26331 = function(c, a) {
    for (var b = new GetPlayerProfileResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setGetPlayerProfileStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setProfile(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26332 = function(c, a) {
    for (var b = new GetPlayerProfileByPlayerIdRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26333 = function(c, a) {
    for (var b = new GetPlayerProfileByPlayerIdResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setGetPlayerProfileByPlayerIdStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setProfile(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26334 = function(c, a) {
    for (var b = new SavePlayerProfileRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setProfile(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26335 = function(c, a) {
    for (var b = new SavePlayerProfileResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSavePlayerProfileStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26336 = function(c, a) {
    for (var b = new GetStorablesRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDbQuery(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26337 = function(c, a) {
    for (var b = new GetStorablesResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetStorablesStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setStorables(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26338 = function(c, a) {
    for (var b = new SaveStorableRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStorable(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26339 = function(c, a) {
    for (var b = new SaveStorableResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSaveStorableStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setStorableId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26340 = function(c, a) {
    for (var b = new UpdateStorableRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStorable(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26341 = function(c, a) {
    for (var b = new UpdateStorableResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setUpdateStorableStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setStorableId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26342 = function(c, a) {
    for (var b = new RemoveStorableRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setStorable(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26343 = function(c, a) {
    for (var b = new RemoveStorableResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setRemoveStorableStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setStorableId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26344 = function(c, a) {
    for (var b = new GetItemsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26345 = function(c, a) {
    for (var b = new GetItemsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetItemsStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setItems(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26346 = function(c, a) {
    for (var b = new BuyItemRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setItemId(d), MemoryManagement.free(d)) : 2001 == d ? b.setQuantity(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26347 = function(c, a) {
    for (var b = new BuyItemResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setBuyItemStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setBoughtItem(StringInputStream.readObject(c, a)) : 2001 == d ? b.setQuantity(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26348 = function(c, a) {
    for (var b = new ConsumeItemRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setItemId(d), MemoryManagement.free(d)) : 2001 == d ? b.setQuantity(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26349 = function(c, a) {
    for (var b = new ConsumeItemResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setConsumeItemStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setConsumedItem(StringInputStream.readObject(c, a)) : 2001 == d ? b.setQuantity(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26350 = function(c, a) {
    for (var b = new IncreasePlayerWalletRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setValue(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26351 = function(c, a) {
    for (var b = new IncreasePlayerWalletResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setIncreasePlayerWalletStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setValue(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26352 = function(c, a) {
    for (var b = new GetPlayerWalletRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26353 = function(c, a) {
    for (var b = new GetPlayerWalletResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setGetPlayerWalletStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setWallet(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26354 = function(c, a) {
    for (var b = new JoinGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26355 = function(c, a) {
    for (var b = new JoinGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setJoinGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26356 = function(c, a) {
    for (var b = new UnjoinGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26357 = function(c, a) {
    for (var b = new UnjoinGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setUnjoinGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26358 = function(c, a) {
    for (var b = new StartGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26359 = function(c, a) {
    for (var b = new StartGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setStartGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26360 = function(c, a) {
    for (var b = new StopGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26361 = function(c, a) {
    for (var b = new StopGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setStopGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26362 = function(c, a) {
    for (var b = new CreateGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26363 = function(c, a) {
    for (var b = new CreateGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setCreateGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26364 = function(c, a) {
    for (var b = new GetGamesRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDbQuery(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26365 = function(c, a) {
    for (var b = new GetGamesResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetGamesStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setGames(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26366 = function(c, a) {
    for (var b = new SaveAsGhostRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26367 = function(c, a) {
    for (var b = new SaveAsGhostResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSaveAsGhostStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26368 = function(c, a) {
    for (var b = new GetGhostsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setDbQuery(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26369 = function(c, a) {
    for (var b = new GetGhostsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetGhostsStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setGhosts(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26370 = function(c, a) {
    for (var b = new LoadGhostRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26371 = function(c, a) {
    for (var b = new LoadGhostResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLoadGhostStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26372 = function(c, a) {
    for (var b = new NextPlayerTurnRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26373 = function(c, a) {
    for (var b = new NextPlayerTurnResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setNextPlayerTurnStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26374 = function(c, a) {
    for (var b = new SaveGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26375 = function(c, a) {
    for (var b = new SaveGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSaveGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26376 = function(c, a) {
    for (var b = new LoadGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26377 = function(c, a) {
    for (var b = new LoadGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setLoadGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26378 = function(c, a) {
    for (var b = new SendGameChatRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26379 = function(c, a) {
    for (var b = new SendGameChatResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSendGameChatStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26380 = function(c, a) {
    for (var b = new SendGameChatToPlayerRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2002 == d ? (d = StringInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26381 = function(c, a) {
    for (var b = new SendGameChatToPlayerResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSendGameChatToPlayerStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26382 = function(c, a) {
    for (var b = new SendGameChatToPlayerListRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? (d = StringInputStream.readString(a), 
        b.setMessage(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26383 = function(c, a) {
    for (var b = new SendGameChatToPlayerListResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setSendGameChatToPlayerListStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26384 = function(c, a) {
    for (var b = new InvitePlayerRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setPlayerId(d), MemoryManagement.free(d)) : 2001 == d ? b.setInvitation(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26385 = function(c, a) {
    for (var b = new InvitePlayerResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setInvitePlayerStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26386 = function(c, a) {
    for (var b = new GetInvitationsRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setNuggetaQuery(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26387 = function(c, a) {
    for (var b = new GetInvitationsResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetInvitationsStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setInvitations(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26388 = function(c, a) {
    for (var b = new AcceptInvitationRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26389 = function(c, a) {
    for (var b = new AcceptInvitationResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setAcceptInvitationStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26390 = function(c, a) {
    for (var b = new RefuseInvitationRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26391 = function(c, a) {
    for (var b = new RefuseInvitationResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setRefuseInvitationStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? (d = StringInputStream.readString(a), 
        b.setInvitationId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26392 = function(c, a) {
    for (var b = new PauseSessionMonitoringRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26393 = function(c, a) {
    for (var b = new PauseSessionMonitoringResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setPauseSessionMonitoringStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26394 = function(c, a) {
    for (var b = new ResumeSessionMonitoringRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26395 = function(c, a) {
    for (var b = new ResumeSessionMonitoringResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setResumeSessionMonitoringStatus(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26396 = function(c, a) {
    for (var b = new MatchAndJoinGameRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setGamesQuery(StringInputStream.readObject(c, a)) : 2001 == d ? b.setMatchMakingConditions(StringInputStream.readObject(c, a)) : 2002 == d ? b.setTimeoutDelayMinPlayers(StringInputStream.readInteger(a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26397 = function(c, a) {
    for (var b = new MatchAndJoinGameResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 1999 == d ? b.setMatchAndJoinGameStatus(StringInputStream.readObject(c, a)) : 2e3 == d ? b.setGame(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26398 = function(c, a) {
    for (var b = new GetPlayersRequest().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        0 == d ? (d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setPlayersQuery(StringInputStream.readObject(c, a)) : StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype._m26399 = function(c, a) {
    for (var b = new GetPlayersResponse().init(), e = StringInputStream.getShort(a), f = 0; f < e; f++) {
        var d = StringInputStream.getShort(a);
        if (0 == d) d = StringInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d); else if (1e3 == d) d = StringInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d); else if (1001 == d) d = StringInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d); else if (1002 == d) d = StringInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d); else if (1999 == d) b.setGetPlayersStatus(StringInputStream.readObject(c, a)); else if (2e3 == d) {
            d = [];
            if (a.get() != SerializationTypes.NULL_TYPE) {
                a.getInt();
                for (var h = a.getShort(), d = [], g = 0; g < h; g++) d.push(StringInputStream.readObject(c, a));
            }
            b.setPlayers(d);
        } else StringInputStream.skipProperty(a);
    }
    return b;
};

T5518.prototype.getSerializerFactoryType = function() {
    return SerializerFactoryType.STRING;
};

GetPlayerProfileByPlayerIdRequest.prototype = new Message();

GetPlayerProfileByPlayerIdRequest.prototype.constructor = GetPlayerProfileByPlayerIdRequest;

GetPlayerProfileByPlayerIdRequest.prototype.init = function() {
    this._playerIdSet = !1;
    return this;
};

GetPlayerProfileByPlayerIdRequest.prototype.getPlayerId = function() {
    return this._playerId;
};

GetPlayerProfileByPlayerIdRequest.prototype.setPlayerId = function(c) {
    this._playerId = c;
    this._playerIdSet = !0;
};

GetPlayerProfileByPlayerIdRequest.prototype.isplayerIdSet = function() {
    return this._playerIdSet;
};

GetPlayerProfileByPlayerIdRequest.prototype.unSetplayerId = function() {
    this._playerIdSet = !1;
};

GetPlayerProfileByPlayerIdRequest.prototype.getDomainID = function() {
    return GetPlayerProfileByPlayerIdRequest.domainID;
};

GetPlayerProfileByPlayerIdRequest.prototype.getSerializerID = function() {
    return GetPlayerProfileByPlayerIdRequest.serializerID;
};

GetPlayerProfileByPlayerIdRequest.prototype.toString = function() {
    var c;
    c = "[GetPlayerProfileByPlayerIdRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && (c += "_playerId=" + this._playerId + "| ");
    return c + "]";
};

GetPlayerProfileByPlayerIdRequest.prototype.clone = function() {
    var c = new GetPlayerProfileByPlayerIdRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._playerIdSet && 0 == Utils.isNull(this._playerId) && c.setPlayerId(this._playerId);
    return c;
};

GetPlayerProfileByPlayerIdRequest.domainID = 100;

GetPlayerProfileByPlayerIdRequest.serializerID = 11830;

Pump.prototype.init = function(c) {
    this.activePumpableMessages = [];
    this.times = [];
    this.timeOut = c;
    return this;
};

Pump.prototype.pump = function() {
    var c = [];
    this.checkCache(NSystem.currentTimeMillis());
    for (var a = 0; a < this.activePumpableMessages.length; a++) c.push(this.activePumpableMessages[a]);
    this.activePumpableMessages.splice(0, this.activePumpableMessages.length);
    this.times.splice(0, this.times.length);
    return c;
};

Pump.prototype.add = function(c) {
    var a = NSystem.currentTimeMillis();
    this.checkCache(a);
    this.activePumpableMessages.push(c);
    this.times.push(a);
};

Pump.prototype.checkCache = function(c) {};

T5519.prototype.init = function(c) {
    this._y24575 = new T5528().init();
    this._j24576 = new T5526().init();
    this._h24577 = new T5523().init();
    this._j24578 = new T5524().init();
    this._v13202 = "";
    this._x24580 = !1;
    this._v13202 = c;
    return this;
};

T5519.prototype._m25006 = function(c) {
    this._o24581 = c;
    this._x24580 = !1;
};

T5519.prototype._m25002 = function(c) {
    if (null == this._o24581) throw Error("**************************** No connection available to sendMessage , did you wait for StartResponse before sending any message ? ", null);
    this._o24581._m25052(c);
};

T5519.prototype._m25001 = function(c) {
    this._y24575._m25034(c);
};

T5519.prototype._m26430 = function(c) {
    this._y24575._m25035(c);
};

T5519.prototype._m25003 = function(c) {
    this._j24576._m25038(c);
};

T5519.prototype._m26431 = function(c) {
    this._j24576._m25039(c);
};

T5519.prototype._m25004 = function(c) {
    this._h24577._m25517(c);
};

T5519.prototype._m26432 = function(c) {
    this._h24577._m25519(c);
};

T5519.prototype._m26426 = function(c) {
    this._j24578._m25042(c);
};

T5519.prototype._m26433 = function(c) {
    this._j24578._m25043(c);
};

T5519.prototype._m25011 = function() {
    this._x24580 = !0;
    null != this._o24581 && (this._o24581._m25050(), this._o24581 = null);
};

T5519.prototype._m26434 = function() {
    return this._x24580;
};

T5519.prototype._m26435 = function() {
    return this._o24581;
};

T5519.prototype._m26427 = function() {
    null != this._o24581 && this._o24581._m25054(new StopPlugConnectionRequest().init(), new StopPlugConnectionResponse().init());
};

RefuseFriendDemandResponse.prototype = new Message();

RefuseFriendDemandResponse.prototype.constructor = RefuseFriendDemandResponse;

RefuseFriendDemandResponse.prototype.init = function() {
    this._friendDemandIdSet = this._RefuseFriendDemandStatusSet = !1;
    return this;
};

RefuseFriendDemandResponse.prototype.getRefuseFriendDemandStatus = function() {
    return this._RefuseFriendDemandStatus;
};

RefuseFriendDemandResponse.prototype.setRefuseFriendDemandStatus = function(c) {
    this._RefuseFriendDemandStatus = c;
    this._RefuseFriendDemandStatusSet = !0;
};

RefuseFriendDemandResponse.prototype.isRefuseFriendDemandStatusSet = function() {
    return this._RefuseFriendDemandStatusSet;
};

RefuseFriendDemandResponse.prototype.unSetRefuseFriendDemandStatus = function() {
    this._RefuseFriendDemandStatusSet = !1;
};

RefuseFriendDemandResponse.prototype.getFriendDemandId = function() {
    return this._friendDemandId;
};

RefuseFriendDemandResponse.prototype.setFriendDemandId = function(c) {
    this._friendDemandId = c;
    this._friendDemandIdSet = !0;
};

RefuseFriendDemandResponse.prototype.isfriendDemandIdSet = function() {
    return this._friendDemandIdSet;
};

RefuseFriendDemandResponse.prototype.unSetfriendDemandId = function() {
    this._friendDemandIdSet = !1;
};

RefuseFriendDemandResponse.prototype.getDomainID = function() {
    return RefuseFriendDemandResponse.domainID;
};

RefuseFriendDemandResponse.prototype.getSerializerID = function() {
    return RefuseFriendDemandResponse.serializerID;
};

RefuseFriendDemandResponse.prototype.toString = function() {
    var c;
    c = "[RefuseFriendDemandResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._RefuseFriendDemandStatusSet && 0 == Utils.isNull(this._RefuseFriendDemandStatus) && (c += "_RefuseFriendDemandStatus=" + this._RefuseFriendDemandStatus + "| ");
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && (c += "_friendDemandId=" + this._friendDemandId + "| ");
    return c + "]";
};

RefuseFriendDemandResponse.prototype.clone = function() {
    var c = new RefuseFriendDemandResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._RefuseFriendDemandStatusSet && 0 == Utils.isNull(this._RefuseFriendDemandStatus) && c.setRefuseFriendDemandStatus(this._RefuseFriendDemandStatus);
    1 == this._friendDemandIdSet && 0 == Utils.isNull(this._friendDemandId) && c.setFriendDemandId(this._friendDemandId);
    return c;
};

RefuseFriendDemandResponse.domainID = 100;

RefuseFriendDemandResponse.serializerID = 10040;

HeartBeatRequest.prototype = new Message();

HeartBeatRequest.prototype.constructor = HeartBeatRequest;

HeartBeatRequest.prototype.init = function() {
    this._CounterSet = !1;
    return this;
};

HeartBeatRequest.prototype.getCounter = function() {
    return this._Counter;
};

HeartBeatRequest.prototype.setCounter = function(c) {
    this._Counter = c;
    this._CounterSet = !0;
};

HeartBeatRequest.prototype.isCounterSet = function() {
    return this._CounterSet;
};

HeartBeatRequest.prototype.unSetCounter = function() {
    this._CounterSet = !1;
};

HeartBeatRequest.prototype.getDomainID = function() {
    return HeartBeatRequest.domainID;
};

HeartBeatRequest.prototype.getSerializerID = function() {
    return HeartBeatRequest.serializerID;
};

HeartBeatRequest.prototype.toString = function() {
    var c;
    c = "[HeartBeatRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._CounterSet && 0 == Utils.isNullInteger(this._Counter) && (c += "_Counter=" + this._Counter + "| ");
    return c + "]";
};

HeartBeatRequest.prototype.clone = function() {
    var c = new HeartBeatRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._CounterSet && 0 == Utils.isNullInteger(this._Counter) && c.setCounter(this._Counter);
    return c;
};

HeartBeatRequest.domainID = 0;

HeartBeatRequest.serializerID = 3002;

GetAchievementsStatus.values = function() {
    return GetAchievementsStatus._values;
};

GetAchievementsStatus.prototype.getValue = function() {
    return this._value;
};

GetAchievementsStatus.prototype.name = function() {
    return this._name;
};

GetAchievementsStatus.prototype.ordinal = function() {
    return this._value;
};

GetAchievementsStatus.prototype.init = function(c, a) {
    void 0 == GetAchievementsStatus._values && (GetAchievementsStatus._values = []);
    this._value = a;
    this._name = c;
    GetAchievementsStatus._values.push(this);
    return this;
};

GetAchievementsStatus.fromValue = function(c) {
    for (var a = 0; a < GetAchievementsStatus._values.length; a++) {
        var b = GetAchievementsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetAchievementsStatus.valueOf = function(c) {
    for (var a = 0; a < GetAchievementsStatus._values.length; a++) {
        var b = GetAchievementsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetAchievementsStatus.prototype.getDomainID = function() {
    return 100;
};

GetAchievementsStatus.prototype.getSerializerID = function() {
    return 10065;
};

GetAchievementsStatus.prototype.toString = function() {
    return "GetAchievementsStatus." + this._name;
};

GetAchievementsStatus.prototype.clone = function() {
    return this;
};

GetAchievementsStatus.INVALID_PARAMETERS = new GetAchievementsStatus().init("INVALID_PARAMETERS", -2);

GetAchievementsStatus.INTERNAL_ERROR = new GetAchievementsStatus().init("INTERNAL_ERROR", -1);

GetAchievementsStatus.SUCCESS = new GetAchievementsStatus().init("SUCCESS", 0);

GetAchievementsStatus.FAILURE = new GetAchievementsStatus().init("FAILURE", 1);

AskForFriendResponse.prototype = new Message();

AskForFriendResponse.prototype.constructor = AskForFriendResponse;

AskForFriendResponse.prototype.init = function() {
    this._AskForFriendStatusSet = !1;
    return this;
};

AskForFriendResponse.prototype.getAskForFriendStatus = function() {
    return this._AskForFriendStatus;
};

AskForFriendResponse.prototype.setAskForFriendStatus = function(c) {
    this._AskForFriendStatus = c;
    this._AskForFriendStatusSet = !0;
};

AskForFriendResponse.prototype.isAskForFriendStatusSet = function() {
    return this._AskForFriendStatusSet;
};

AskForFriendResponse.prototype.unSetAskForFriendStatus = function() {
    this._AskForFriendStatusSet = !1;
};

AskForFriendResponse.prototype.getDomainID = function() {
    return AskForFriendResponse.domainID;
};

AskForFriendResponse.prototype.getSerializerID = function() {
    return AskForFriendResponse.serializerID;
};

AskForFriendResponse.prototype.toString = function() {
    var c;
    c = "[AskForFriendResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._AskForFriendStatusSet && 0 == Utils.isNull(this._AskForFriendStatus) && (c += "_AskForFriendStatus=" + this._AskForFriendStatus + "| ");
    return c + "]";
};

AskForFriendResponse.prototype.clone = function() {
    var c = new AskForFriendResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._AskForFriendStatusSet && 0 == Utils.isNull(this._AskForFriendStatus) && c.setAskForFriendStatus(this._AskForFriendStatus);
    return c;
};

AskForFriendResponse.domainID = 100;

AskForFriendResponse.serializerID = 11999;

PlayerTurnNotification.prototype = new Message();

PlayerTurnNotification.prototype.constructor = PlayerTurnNotification;

PlayerTurnNotification.prototype.init = function() {
    this._GameIdSet = this._CurrentPlayerSet = !1;
    return this;
};

PlayerTurnNotification.prototype.getCurrentPlayer = function() {
    return this._CurrentPlayer;
};

PlayerTurnNotification.prototype.setCurrentPlayer = function(c) {
    this._CurrentPlayer = c;
    this._CurrentPlayerSet = !0;
};

PlayerTurnNotification.prototype.isCurrentPlayerSet = function() {
    return this._CurrentPlayerSet;
};

PlayerTurnNotification.prototype.unSetCurrentPlayer = function() {
    this._CurrentPlayerSet = !1;
};

PlayerTurnNotification.prototype.getGameId = function() {
    return this._GameId;
};

PlayerTurnNotification.prototype.setGameId = function(c) {
    this._GameId = c;
    this._GameIdSet = !0;
};

PlayerTurnNotification.prototype.isGameIdSet = function() {
    return this._GameIdSet;
};

PlayerTurnNotification.prototype.unSetGameId = function() {
    this._GameIdSet = !1;
};

PlayerTurnNotification.prototype.getDomainID = function() {
    return PlayerTurnNotification.domainID;
};

PlayerTurnNotification.prototype.getSerializerID = function() {
    return PlayerTurnNotification.serializerID;
};

PlayerTurnNotification.prototype.toString = function() {
    var c;
    c = "[PlayerTurnNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._CurrentPlayerSet && 0 == Utils.isNull(this._CurrentPlayer) && (c += "_CurrentPlayer=" + this._CurrentPlayer + "| ");
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && (c += "_GameId=" + this._GameId + "| ");
    return c + "]";
};

PlayerTurnNotification.prototype.clone = function() {
    var c = new PlayerTurnNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._CurrentPlayerSet && 0 == Utils.isNull(this._CurrentPlayer) && c.setCurrentPlayer(this._CurrentPlayer.clone());
    1 == this._GameIdSet && 0 == Utils.isNull(this._GameId) && c.setGameId(this._GameId);
    return c;
};

PlayerTurnNotification.domainID = 100;

PlayerTurnNotification.serializerID = 3035;

RefuseFriendDemandStatus.values = function() {
    return RefuseFriendDemandStatus._values;
};

RefuseFriendDemandStatus.prototype.getValue = function() {
    return this._value;
};

RefuseFriendDemandStatus.prototype.name = function() {
    return this._name;
};

RefuseFriendDemandStatus.prototype.ordinal = function() {
    return this._value;
};

RefuseFriendDemandStatus.prototype.init = function(c, a) {
    void 0 == RefuseFriendDemandStatus._values && (RefuseFriendDemandStatus._values = []);
    this._value = a;
    this._name = c;
    RefuseFriendDemandStatus._values.push(this);
    return this;
};

RefuseFriendDemandStatus.fromValue = function(c) {
    for (var a = 0; a < RefuseFriendDemandStatus._values.length; a++) {
        var b = RefuseFriendDemandStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

RefuseFriendDemandStatus.valueOf = function(c) {
    for (var a = 0; a < RefuseFriendDemandStatus._values.length; a++) {
        var b = RefuseFriendDemandStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

RefuseFriendDemandStatus.prototype.getDomainID = function() {
    return 100;
};

RefuseFriendDemandStatus.prototype.getSerializerID = function() {
    return 10041;
};

RefuseFriendDemandStatus.prototype.toString = function() {
    return "RefuseFriendDemandStatus." + this._name;
};

RefuseFriendDemandStatus.prototype.clone = function() {
    return this;
};

RefuseFriendDemandStatus.INVALID_PARAMETERS = new RefuseFriendDemandStatus().init("INVALID_PARAMETERS", -2);

RefuseFriendDemandStatus.INTERNAL_ERROR = new RefuseFriendDemandStatus().init("INTERNAL_ERROR", -1);

RefuseFriendDemandStatus.AUTHENTICATION_REQUIRED = new RefuseFriendDemandStatus().init("AUTHENTICATION_REQUIRED", 0);

RefuseFriendDemandStatus.UNKNOWN_FRIEND_DEMAND = new RefuseFriendDemandStatus().init("UNKNOWN_FRIEND_DEMAND", 1);

RefuseFriendDemandStatus.SUCCESS = new RefuseFriendDemandStatus().init("SUCCESS", 2);

RefuseFriendDemandStatus.FAILURE = new RefuseFriendDemandStatus().init("FAILURE", 3);

NuggetaExceptionMessage.prototype = new Message();

NuggetaExceptionMessage.prototype.constructor = NuggetaExceptionMessage;

NuggetaExceptionMessage.prototype.init = function() {
    this._ReasonSet = this._ErrorCodeSet = !1;
    return this;
};

NuggetaExceptionMessage.prototype.getErrorCode = function() {
    return this._ErrorCode;
};

NuggetaExceptionMessage.prototype.setErrorCode = function(c) {
    this._ErrorCode = c;
    this._ErrorCodeSet = !0;
};

NuggetaExceptionMessage.prototype.isErrorCodeSet = function() {
    return this._ErrorCodeSet;
};

NuggetaExceptionMessage.prototype.unSetErrorCode = function() {
    this._ErrorCodeSet = !1;
};

NuggetaExceptionMessage.prototype.getReason = function() {
    return this._Reason;
};

NuggetaExceptionMessage.prototype.setReason = function(c) {
    this._Reason = c;
    this._ReasonSet = !0;
};

NuggetaExceptionMessage.prototype.isReasonSet = function() {
    return this._ReasonSet;
};

NuggetaExceptionMessage.prototype.unSetReason = function() {
    this._ReasonSet = !1;
};

NuggetaExceptionMessage.prototype.getDomainID = function() {
    return NuggetaExceptionMessage.domainID;
};

NuggetaExceptionMessage.prototype.getSerializerID = function() {
    return NuggetaExceptionMessage.serializerID;
};

NuggetaExceptionMessage.prototype.toString = function() {
    var c;
    c = "[NuggetaExceptionMessage --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ErrorCodeSet && 0 == Utils.isNull(this._ErrorCode) && (c += "_ErrorCode=" + this._ErrorCode + "| ");
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && (c += "_Reason=" + this._Reason + "| ");
    return c + "]";
};

NuggetaExceptionMessage.prototype.clone = function() {
    var c = new NuggetaExceptionMessage().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ErrorCodeSet && 0 == Utils.isNull(this._ErrorCode) && c.setErrorCode(this._ErrorCode);
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && c.setReason(this._Reason);
    return c;
};

NuggetaExceptionMessage.domainID = 0;

NuggetaExceptionMessage.serializerID = 3009;

NGameState.prototype.init = function() {
    this._Updates = [];
    this._CustomDataSet = this._UpdatesSet = !1;
    return this;
};

NGameState.prototype.getUpdates = function() {
    this._UpdatesSet = !0;
    return this._Updates;
};

NGameState.prototype.setUpdates = function(c) {
    this._Updates = c;
    this._UpdatesSet = !0;
};

NGameState.prototype.isUpdatesSet = function() {
    return this._UpdatesSet;
};

NGameState.prototype.unSetUpdates = function() {
    this._UpdatesSet = !1;
};

NGameState.prototype.getCustomData = function() {
    return this._CustomData;
};

NGameState.prototype.setCustomData = function(c) {
    this._CustomData = c;
    this._CustomDataSet = !0;
};

NGameState.prototype.isCustomDataSet = function() {
    return this._CustomDataSet;
};

NGameState.prototype.unSetCustomData = function() {
    this._CustomDataSet = !1;
};

NGameState.prototype.getDomainID = function() {
    return NGameState.domainID;
};

NGameState.prototype.getSerializerID = function() {
    return NGameState.serializerID;
};

NGameState.prototype.toString = function() {
    var c;
    c = "[NGameState --> ";
    1 == this._UpdatesSet && 0 == Utils.isNull(this._Updates) && (c += "_Updates=" + this._Updates + "| ");
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && (c += "_CustomData=" + this._CustomData + "| ");
    return c + "]";
};

NGameState.prototype.clone = function() {
    var c = new NGameState().init();
    if (1 == this._UpdatesSet && 0 == Utils.isNull(this._Updates)) {
        for (var a = [], b = 0; b < this._Updates.length; ++b) {
            var e = this._Updates[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setUpdates(a);
    }
    1 == this._CustomDataSet && 0 == Utils.isNull(this._CustomData) && c.setCustomData(this._CustomData);
    return c;
};

NGameState.domainID = 100;

NGameState.serializerID = 3020;

StopGameResponse.prototype = new Message();

StopGameResponse.prototype.constructor = StopGameResponse;

StopGameResponse.prototype.init = function() {
    this._gameIdSet = this._StopGameStatusSet = !1;
    return this;
};

StopGameResponse.prototype.getStopGameStatus = function() {
    return this._StopGameStatus;
};

StopGameResponse.prototype.setStopGameStatus = function(c) {
    this._StopGameStatus = c;
    this._StopGameStatusSet = !0;
};

StopGameResponse.prototype.isStopGameStatusSet = function() {
    return this._StopGameStatusSet;
};

StopGameResponse.prototype.unSetStopGameStatus = function() {
    this._StopGameStatusSet = !1;
};

StopGameResponse.prototype.getGameId = function() {
    return this._gameId;
};

StopGameResponse.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

StopGameResponse.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

StopGameResponse.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

StopGameResponse.prototype.getDomainID = function() {
    return StopGameResponse.domainID;
};

StopGameResponse.prototype.getSerializerID = function() {
    return StopGameResponse.serializerID;
};

StopGameResponse.prototype.toString = function() {
    var c;
    c = "[StopGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._StopGameStatusSet && 0 == Utils.isNull(this._StopGameStatus) && (c += "_StopGameStatus=" + this._StopGameStatus + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

StopGameResponse.prototype.clone = function() {
    var c = new StopGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._StopGameStatusSet && 0 == Utils.isNull(this._StopGameStatus) && c.setStopGameStatus(this._StopGameStatus);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

StopGameResponse.domainID = 100;

StopGameResponse.serializerID = 10094;

NArrays.prototype.init = function() {
    return this;
};

NArrays.arraycopy = function(c, a, b, e, f) {
    a = e;
    for (e = 0; e < f; e++) b[a] = c[e], a++;
};

TurnBasedContext.prototype = new Message();

TurnBasedContext.prototype.constructor = TurnBasedContext;

TurnBasedContext.prototype.init = function() {
    this._CurrentPlayerSet = !1;
    return this;
};

TurnBasedContext.prototype.getCurrentPlayer = function() {
    return this._CurrentPlayer;
};

TurnBasedContext.prototype.setCurrentPlayer = function(c) {
    this._CurrentPlayer = c;
    this._CurrentPlayerSet = !0;
};

TurnBasedContext.prototype.isCurrentPlayerSet = function() {
    return this._CurrentPlayerSet;
};

TurnBasedContext.prototype.unSetCurrentPlayer = function() {
    this._CurrentPlayerSet = !1;
};

TurnBasedContext.prototype.getDomainID = function() {
    return TurnBasedContext.domainID;
};

TurnBasedContext.prototype.getSerializerID = function() {
    return TurnBasedContext.serializerID;
};

TurnBasedContext.prototype.toString = function() {
    var c;
    c = "[TurnBasedContext --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._CurrentPlayerSet && 0 == Utils.isNull(this._CurrentPlayer) && (c += "_CurrentPlayer=" + this._CurrentPlayer + "| ");
    return c + "]";
};

TurnBasedContext.prototype.clone = function() {
    var c = new TurnBasedContext().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._CurrentPlayerSet && 0 == Utils.isNull(this._CurrentPlayer) && c.setCurrentPlayer(this._CurrentPlayer.clone());
    return c;
};

TurnBasedContext.domainID = 100;

TurnBasedContext.serializerID = 3040;

NuggetaGameApi.prototype = new NuggetaGameCoreApi();

NuggetaGameApi.prototype.constructor = NuggetaGameApi;

NuggetaGameApi.prototype.init = function() {
    void 0 == NuggetaGameApi.logger && (NuggetaGameApi.logger = NLoggerFactory.getLogger("ApiImpl"));
    NuggetaGameCoreApi.prototype.init.call(this);
    this.adApi = new AdApiImpl().init();
    return this;
};

NuggetaGameApi.prototype.getAvatar = function(c) {
    return null != c.getThirdPartyId() ? c.getLoginSource() == ThirdPartySource.FACEBOOK ? "http://graph.facebook.com/" + c.getThirdPartyId() + "/picture" : c.getLoginSource() == ThirdPartySource.GOOGLEPLUS ? "https://profiles.google.com/s2/photos/profile/" + c.getThirdPartyId() + "?sz=50" : null : null;
};

NuggetaGamePlug.prototype = new T5511();

NuggetaGamePlug.prototype.constructor = NuggetaGamePlug;

NuggetaGamePlug.prototype.init = function(c) {
    T5511.prototype.init.call(this, c);
    this._z13539 = NLoggerFactory.getLogger("NuggetaPlug");
    return this;
};

ThirdPartyLoginRequest.prototype = new Message();

ThirdPartyLoginRequest.prototype.constructor = ThirdPartyLoginRequest;

ThirdPartyLoginRequest.prototype.init = function() {
    this._accessTokenSet = this._thirdPartySourceSet = !1;
    return this;
};

ThirdPartyLoginRequest.prototype.getThirdPartySource = function() {
    return this._thirdPartySource;
};

ThirdPartyLoginRequest.prototype.setThirdPartySource = function(c) {
    this._thirdPartySource = c;
    this._thirdPartySourceSet = !0;
};

ThirdPartyLoginRequest.prototype.isthirdPartySourceSet = function() {
    return this._thirdPartySourceSet;
};

ThirdPartyLoginRequest.prototype.unSetthirdPartySource = function() {
    this._thirdPartySourceSet = !1;
};

ThirdPartyLoginRequest.prototype.getAccessToken = function() {
    return this._accessToken;
};

ThirdPartyLoginRequest.prototype.setAccessToken = function(c) {
    this._accessToken = c;
    this._accessTokenSet = !0;
};

ThirdPartyLoginRequest.prototype.isaccessTokenSet = function() {
    return this._accessTokenSet;
};

ThirdPartyLoginRequest.prototype.unSetaccessToken = function() {
    this._accessTokenSet = !1;
};

ThirdPartyLoginRequest.prototype.getDomainID = function() {
    return ThirdPartyLoginRequest.domainID;
};

ThirdPartyLoginRequest.prototype.getSerializerID = function() {
    return ThirdPartyLoginRequest.serializerID;
};

ThirdPartyLoginRequest.prototype.toString = function() {
    var c;
    c = "[ThirdPartyLoginRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._thirdPartySourceSet && 0 == Utils.isNull(this._thirdPartySource) && (c += "_thirdPartySource=" + this._thirdPartySource + "| ");
    1 == this._accessTokenSet && 0 == Utils.isNull(this._accessToken) && (c += "_accessToken=" + this._accessToken + "| ");
    return c + "]";
};

ThirdPartyLoginRequest.prototype.clone = function() {
    var c = new ThirdPartyLoginRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._thirdPartySourceSet && 0 == Utils.isNull(this._thirdPartySource) && c.setThirdPartySource(this._thirdPartySource);
    1 == this._accessTokenSet && 0 == Utils.isNull(this._accessToken) && c.setAccessToken(this._accessToken);
    return c;
};

ThirdPartyLoginRequest.domainID = 100;

ThirdPartyLoginRequest.serializerID = 10138;

GetPlayersResponse.prototype = new Message();

GetPlayersResponse.prototype.constructor = GetPlayersResponse;

GetPlayersResponse.prototype.init = function() {
    this._GetPlayersStatusSet = !1;
    this._players = [];
    this._playersSet = !1;
    return this;
};

GetPlayersResponse.prototype.getGetPlayersStatus = function() {
    return this._GetPlayersStatus;
};

GetPlayersResponse.prototype.setGetPlayersStatus = function(c) {
    this._GetPlayersStatus = c;
    this._GetPlayersStatusSet = !0;
};

GetPlayersResponse.prototype.isGetPlayersStatusSet = function() {
    return this._GetPlayersStatusSet;
};

GetPlayersResponse.prototype.unSetGetPlayersStatus = function() {
    this._GetPlayersStatusSet = !1;
};

GetPlayersResponse.prototype.getPlayers = function() {
    this._playersSet = !0;
    return this._players;
};

GetPlayersResponse.prototype.setPlayers = function(c) {
    this._players = c;
    this._playersSet = !0;
};

GetPlayersResponse.prototype.isplayersSet = function() {
    return this._playersSet;
};

GetPlayersResponse.prototype.unSetplayers = function() {
    this._playersSet = !1;
};

GetPlayersResponse.prototype.getDomainID = function() {
    return GetPlayersResponse.domainID;
};

GetPlayersResponse.prototype.getSerializerID = function() {
    return GetPlayersResponse.serializerID;
};

GetPlayersResponse.prototype.toString = function() {
    var c;
    c = "[GetPlayersResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetPlayersStatusSet && 0 == Utils.isNull(this._GetPlayersStatus) && (c += "_GetPlayersStatus=" + this._GetPlayersStatus + "| ");
    1 == this._playersSet && 0 == Utils.isNull(this._players) && (c += "_players=" + this._players + "| ");
    return c + "]";
};

GetPlayersResponse.prototype.clone = function() {
    var c = new GetPlayersResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetPlayersStatusSet && 0 == Utils.isNull(this._GetPlayersStatus) && c.setGetPlayersStatus(this._GetPlayersStatus);
    if (1 == this._playersSet && 0 == Utils.isNull(this._players)) {
        for (var a = [], b = 0; b < this._players.length; ++b) {
            var e = this._players[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setPlayers(a);
    }
    return c;
};

GetPlayersResponse.domainID = 100;

GetPlayersResponse.serializerID = 10181;

UnjoinGameStatus.values = function() {
    return UnjoinGameStatus._values;
};

UnjoinGameStatus.prototype.getValue = function() {
    return this._value;
};

UnjoinGameStatus.prototype.name = function() {
    return this._name;
};

UnjoinGameStatus.prototype.ordinal = function() {
    return this._value;
};

UnjoinGameStatus.prototype.init = function(c, a) {
    void 0 == UnjoinGameStatus._values && (UnjoinGameStatus._values = []);
    this._value = a;
    this._name = c;
    UnjoinGameStatus._values.push(this);
    return this;
};

UnjoinGameStatus.fromValue = function(c) {
    for (var a = 0; a < UnjoinGameStatus._values.length; a++) {
        var b = UnjoinGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

UnjoinGameStatus.valueOf = function(c) {
    for (var a = 0; a < UnjoinGameStatus._values.length; a++) {
        var b = UnjoinGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

UnjoinGameStatus.prototype.getDomainID = function() {
    return 100;
};

UnjoinGameStatus.prototype.getSerializerID = function() {
    return 10077;
};

UnjoinGameStatus.prototype.toString = function() {
    return "UnjoinGameStatus." + this._name;
};

UnjoinGameStatus.prototype.clone = function() {
    return this;
};

UnjoinGameStatus.INVALID_PARAMETERS = new UnjoinGameStatus().init("INVALID_PARAMETERS", -2);

UnjoinGameStatus.INTERNAL_ERROR = new UnjoinGameStatus().init("INTERNAL_ERROR", -1);

UnjoinGameStatus.SUCCESS = new UnjoinGameStatus().init("SUCCESS", 0);

UnjoinGameStatus.GAME_NOT_FOUND = new UnjoinGameStatus().init("GAME_NOT_FOUND", 1);

UnjoinGameStatus.FAILURE = new UnjoinGameStatus().init("FAILURE", 2);

PlayerState.values = function() {
    return PlayerState._values;
};

PlayerState.prototype.getValue = function() {
    return this._value;
};

PlayerState.prototype.name = function() {
    return this._name;
};

PlayerState.prototype.ordinal = function() {
    return this._value;
};

PlayerState.prototype.init = function(c, a) {
    void 0 == PlayerState._values && (PlayerState._values = []);
    this._value = a;
    this._name = c;
    PlayerState._values.push(this);
    return this;
};

PlayerState.fromValue = function(c) {
    for (var a = 0; a < PlayerState._values.length; a++) {
        var b = PlayerState._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

PlayerState.valueOf = function(c) {
    for (var a = 0; a < PlayerState._values.length; a++) {
        var b = PlayerState._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

PlayerState.prototype.getDomainID = function() {
    return 100;
};

PlayerState.prototype.getSerializerID = function() {
    return 5;
};

PlayerState.prototype.toString = function() {
    return "PlayerState." + this._name;
};

PlayerState.prototype.clone = function() {
    return this;
};

PlayerState.AVAILABLE = new PlayerState().init("AVAILABLE", 0);

PlayerState.PLAYING = new PlayerState().init("PLAYING", 1);

T5523.prototype.init = function() {
    this._h24207 = [];
    return this;
};

T5523.prototype._m25048 = function() {
    for (var c = this._h24207.length, a = 0; a < c; a++) (0, this._h24207[a])();
};

T5523.prototype._m26400 = function() {
    return this._h24207;
};

T5523.prototype._m25517 = function(c) {
    this._h24207.push(c);
};

T5523.prototype._m25519 = function(c) {
    0 < this._h24207.length && (c = this._h24207.indexOf(c), 0 <= c && this._h24207.splice(this._h24207.indexOf(c), 1));
};

FriendDisconnectedNotification.prototype = new Message();

FriendDisconnectedNotification.prototype.constructor = FriendDisconnectedNotification;

FriendDisconnectedNotification.prototype.init = function() {
    this._friendSet = !1;
    return this;
};

FriendDisconnectedNotification.prototype.getFriend = function() {
    return this._friend;
};

FriendDisconnectedNotification.prototype.setFriend = function(c) {
    this._friend = c;
    this._friendSet = !0;
};

FriendDisconnectedNotification.prototype.isfriendSet = function() {
    return this._friendSet;
};

FriendDisconnectedNotification.prototype.unSetfriend = function() {
    this._friendSet = !1;
};

FriendDisconnectedNotification.prototype.getDomainID = function() {
    return FriendDisconnectedNotification.domainID;
};

FriendDisconnectedNotification.prototype.getSerializerID = function() {
    return FriendDisconnectedNotification.serializerID;
};

FriendDisconnectedNotification.prototype.toString = function() {
    var c;
    c = "[FriendDisconnectedNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._friendSet && 0 == Utils.isNull(this._friend) && (c += "_friend=" + this._friend + "| ");
    return c + "]";
};

FriendDisconnectedNotification.prototype.clone = function() {
    var c = new FriendDisconnectedNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._friendSet && 0 == Utils.isNull(this._friend) && c.setFriend(this._friend.clone());
    return c;
};

FriendDisconnectedNotification.domainID = 100;

FriendDisconnectedNotification.serializerID = 3017;

GetFriendsResponse.prototype = new Message();

GetFriendsResponse.prototype.constructor = GetFriendsResponse;

GetFriendsResponse.prototype.init = function() {
    this._GetFriendsStatusSet = !1;
    this._friends = [];
    this._friendsSet = !1;
    return this;
};

GetFriendsResponse.prototype.getGetFriendsStatus = function() {
    return this._GetFriendsStatus;
};

GetFriendsResponse.prototype.setGetFriendsStatus = function(c) {
    this._GetFriendsStatus = c;
    this._GetFriendsStatusSet = !0;
};

GetFriendsResponse.prototype.isGetFriendsStatusSet = function() {
    return this._GetFriendsStatusSet;
};

GetFriendsResponse.prototype.unSetGetFriendsStatus = function() {
    this._GetFriendsStatusSet = !1;
};

GetFriendsResponse.prototype.getFriends = function() {
    this._friendsSet = !0;
    return this._friends;
};

GetFriendsResponse.prototype.setFriends = function(c) {
    this._friends = c;
    this._friendsSet = !0;
};

GetFriendsResponse.prototype.isfriendsSet = function() {
    return this._friendsSet;
};

GetFriendsResponse.prototype.unSetfriends = function() {
    this._friendsSet = !1;
};

GetFriendsResponse.prototype.getDomainID = function() {
    return GetFriendsResponse.domainID;
};

GetFriendsResponse.prototype.getSerializerID = function() {
    return GetFriendsResponse.serializerID;
};

GetFriendsResponse.prototype.toString = function() {
    var c;
    c = "[GetFriendsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetFriendsStatusSet && 0 == Utils.isNull(this._GetFriendsStatus) && (c += "_GetFriendsStatus=" + this._GetFriendsStatus + "| ");
    1 == this._friendsSet && 0 == Utils.isNull(this._friends) && (c += "_friends=" + this._friends + "| ");
    return c + "]";
};

GetFriendsResponse.prototype.clone = function() {
    var c = new GetFriendsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetFriendsStatusSet && 0 == Utils.isNull(this._GetFriendsStatus) && c.setGetFriendsStatus(this._GetFriendsStatus);
    if (1 == this._friendsSet && 0 == Utils.isNull(this._friends)) {
        for (var a = [], b = 0; b < this._friends.length; ++b) {
            var e = this._friends[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setFriends(a);
    }
    return c;
};

GetFriendsResponse.domainID = 100;

GetFriendsResponse.serializerID = 10028;

StopGameRequest.prototype = new Message();

StopGameRequest.prototype.constructor = StopGameRequest;

StopGameRequest.prototype.init = function() {
    this._gameIdSet = !1;
    return this;
};

StopGameRequest.prototype.getGameId = function() {
    return this._gameId;
};

StopGameRequest.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

StopGameRequest.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

StopGameRequest.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

StopGameRequest.prototype.getDomainID = function() {
    return StopGameRequest.domainID;
};

StopGameRequest.prototype.getSerializerID = function() {
    return StopGameRequest.serializerID;
};

StopGameRequest.prototype.toString = function() {
    var c;
    c = "[StopGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

StopGameRequest.prototype.clone = function() {
    var c = new StopGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

StopGameRequest.domainID = 100;

StopGameRequest.serializerID = 10093;

MatchAndJoinGameRequest.prototype = new Message();

MatchAndJoinGameRequest.prototype.constructor = MatchAndJoinGameRequest;

MatchAndJoinGameRequest.prototype.init = function() {
    this._timeoutDelayMinPlayersSet = this._matchMakingConditionsSet = this._gamesQuerySet = !1;
    return this;
};

MatchAndJoinGameRequest.prototype.getGamesQuery = function() {
    return this._gamesQuery;
};

MatchAndJoinGameRequest.prototype.setGamesQuery = function(c) {
    this._gamesQuery = c;
    this._gamesQuerySet = !0;
};

MatchAndJoinGameRequest.prototype.isgamesQuerySet = function() {
    return this._gamesQuerySet;
};

MatchAndJoinGameRequest.prototype.unSetgamesQuery = function() {
    this._gamesQuerySet = !1;
};

MatchAndJoinGameRequest.prototype.getMatchMakingConditions = function() {
    return this._matchMakingConditions;
};

MatchAndJoinGameRequest.prototype.setMatchMakingConditions = function(c) {
    this._matchMakingConditions = c;
    this._matchMakingConditionsSet = !0;
};

MatchAndJoinGameRequest.prototype.ismatchMakingConditionsSet = function() {
    return this._matchMakingConditionsSet;
};

MatchAndJoinGameRequest.prototype.unSetmatchMakingConditions = function() {
    this._matchMakingConditionsSet = !1;
};

MatchAndJoinGameRequest.prototype.getTimeoutDelayMinPlayers = function() {
    return this._timeoutDelayMinPlayers;
};

MatchAndJoinGameRequest.prototype.setTimeoutDelayMinPlayers = function(c) {
    this._timeoutDelayMinPlayers = c;
    this._timeoutDelayMinPlayersSet = !0;
};

MatchAndJoinGameRequest.prototype.istimeoutDelayMinPlayersSet = function() {
    return this._timeoutDelayMinPlayersSet;
};

MatchAndJoinGameRequest.prototype.unSettimeoutDelayMinPlayers = function() {
    this._timeoutDelayMinPlayersSet = !1;
};

MatchAndJoinGameRequest.prototype.getDomainID = function() {
    return MatchAndJoinGameRequest.domainID;
};

MatchAndJoinGameRequest.prototype.getSerializerID = function() {
    return MatchAndJoinGameRequest.serializerID;
};

MatchAndJoinGameRequest.prototype.toString = function() {
    var c;
    c = "[MatchAndJoinGameRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._gamesQuerySet && 0 == Utils.isNull(this._gamesQuery) && (c += "_gamesQuery=" + this._gamesQuery + "| ");
    1 == this._matchMakingConditionsSet && 0 == Utils.isNull(this._matchMakingConditions) && (c += "_matchMakingConditions=" + this._matchMakingConditions + "| ");
    1 == this._timeoutDelayMinPlayersSet && 0 == Utils.isNullInteger(this._timeoutDelayMinPlayers) && (c += "_timeoutDelayMinPlayers=" + this._timeoutDelayMinPlayers + "| ");
    return c + "]";
};

MatchAndJoinGameRequest.prototype.clone = function() {
    var c = new MatchAndJoinGameRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._gamesQuerySet && 0 == Utils.isNull(this._gamesQuery) && c.setGamesQuery(this._gamesQuery.clone());
    1 == this._matchMakingConditionsSet && 0 == Utils.isNull(this._matchMakingConditions) && c.setMatchMakingConditions(this._matchMakingConditions.clone());
    1 == this._timeoutDelayMinPlayersSet && 0 == Utils.isNullInteger(this._timeoutDelayMinPlayers) && c.setTimeoutDelayMinPlayers(this._timeoutDelayMinPlayers);
    return c;
};

MatchAndJoinGameRequest.domainID = 100;

MatchAndJoinGameRequest.serializerID = 10165;

NStore.prototype.init = function() {
    this._Items = [];
    this._ItemsSet = !1;
    return this;
};

NStore.prototype.getItems = function() {
    this._ItemsSet = !0;
    return this._Items;
};

NStore.prototype.setItems = function(c) {
    this._Items = c;
    this._ItemsSet = !0;
};

NStore.prototype.isItemsSet = function() {
    return this._ItemsSet;
};

NStore.prototype.unSetItems = function() {
    this._ItemsSet = !1;
};

NStore.prototype.getDomainID = function() {
    return NStore.domainID;
};

NStore.prototype.getSerializerID = function() {
    return NStore.serializerID;
};

NStore.prototype.toString = function() {
    var c;
    c = "[NStore --> ";
    1 == this._ItemsSet && 0 == Utils.isNull(this._Items) && (c += "_Items=" + this._Items + "| ");
    return c + "]";
};

NStore.prototype.clone = function() {
    var c = new NStore().init();
    if (1 == this._ItemsSet && 0 == Utils.isNull(this._Items)) {
        for (var a = [], b = 0; b < this._Items.length; ++b) {
            var e = this._Items[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setItems(a);
    }
    return c;
};

NStore.domainID = 100;

NStore.serializerID = 3036;

UnjoinGameResponse.prototype = new Message();

UnjoinGameResponse.prototype.constructor = UnjoinGameResponse;

UnjoinGameResponse.prototype.init = function() {
    this._gameIdSet = this._UnjoinGameStatusSet = !1;
    return this;
};

UnjoinGameResponse.prototype.getUnjoinGameStatus = function() {
    return this._UnjoinGameStatus;
};

UnjoinGameResponse.prototype.setUnjoinGameStatus = function(c) {
    this._UnjoinGameStatus = c;
    this._UnjoinGameStatusSet = !0;
};

UnjoinGameResponse.prototype.isUnjoinGameStatusSet = function() {
    return this._UnjoinGameStatusSet;
};

UnjoinGameResponse.prototype.unSetUnjoinGameStatus = function() {
    this._UnjoinGameStatusSet = !1;
};

UnjoinGameResponse.prototype.getGameId = function() {
    return this._gameId;
};

UnjoinGameResponse.prototype.setGameId = function(c) {
    this._gameId = c;
    this._gameIdSet = !0;
};

UnjoinGameResponse.prototype.isgameIdSet = function() {
    return this._gameIdSet;
};

UnjoinGameResponse.prototype.unSetgameId = function() {
    this._gameIdSet = !1;
};

UnjoinGameResponse.prototype.getDomainID = function() {
    return UnjoinGameResponse.domainID;
};

UnjoinGameResponse.prototype.getSerializerID = function() {
    return UnjoinGameResponse.serializerID;
};

UnjoinGameResponse.prototype.toString = function() {
    var c;
    c = "[UnjoinGameResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._UnjoinGameStatusSet && 0 == Utils.isNull(this._UnjoinGameStatus) && (c += "_UnjoinGameStatus=" + this._UnjoinGameStatus + "| ");
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && (c += "_gameId=" + this._gameId + "| ");
    return c + "]";
};

UnjoinGameResponse.prototype.clone = function() {
    var c = new UnjoinGameResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._UnjoinGameStatusSet && 0 == Utils.isNull(this._UnjoinGameStatus) && c.setUnjoinGameStatus(this._UnjoinGameStatus);
    1 == this._gameIdSet && 0 == Utils.isNull(this._gameId) && c.setGameId(this._gameId);
    return c;
};

UnjoinGameResponse.domainID = 100;

UnjoinGameResponse.serializerID = 10076;

T5532.prototype.init = function(c, a, b, e) {
    this._x14437 = NLoggerFactory.getLogger("Network");
    this._b14439 = [];
    this._l14440 = -1;
    this._g14442 = 10;
    this._y6465 = c;
    this._g6468 = a;
    this._c6470 = b;
    this._g6471 = e;
    return this;
};

T5532.prototype._m25058 = function(c) {
    var a = ByteBuffer.allocate(), b = new BinaryStream().init(a);
    b.skip(4);
    BinaryOutputStream.writeObject(this._y6465, c, b);
    c = b.position() - 4;
    b.putIntAt(0, c);
    a.flip();
    return b;
};

T5532.prototype._m25055 = function(c) {
    var a = new StringStream().init(new StrBuilder().init(""));
    StringOutputStream.writeObject(this._y6465, c, a);
    c = a.toString();
    return T5532._m25059(c.length + "", this._g14442) + c;
};

T5532.prototype._m25060 = function(c) {
    for (var a = 0; a < c.length; a++) this._m25061(c[a]);
};

T5532.prototype._m25061 = function(c) {
    this._b14439.push(c);
    if (-1 == this._l14440) {
        if (4 == this._b14439.length) {
            var a = ByteBuffer.allocate();
            for (c = 0; 4 > c; c++) a.put(this._b14439[c]);
            a.flip();
            this._b14439.splice(0, this._b14439.length);
            this._l14440 = a.getInt();
            MemoryManagement.free(a);
        }
    } else if (this._b14439.length == this._l14440) {
        c = ByteBuffer.allocate();
        for (var b = 0; b < this._l14440; b++) c.put(this._b14439[b]);
        c.flip();
        b = null;
        try {
            a = new BinaryStream().init(c);
            b = BinaryInputStream.readObject(this._y6465, a);
            MemoryManagement.free(a);
            this._b14439.splice(0, this._b14439.length);
            this._l14440 = -1;
            try {
                this._g6468(b);
            } catch (e) {
                this._x14437.errorCause("Error occured while processing message : " + b, e);
            }
        } catch (f) {
            this._x14437.errorCause("Can't read command ", f), this._c6470._m25040();
        }
    }
};

T5532._m25059 = function(c, a) {
    for (var b = c.length; b < a; b++) c = "0" + c;
    return c;
};

T5532.prototype._m25049 = function(c) {
    for (var a = null; 0 < c.length; ) {
        var a = c.substring(0, this._g14442), b = parseFloat(a);
        c = c.substring(this._g14442);
        var a = new StringStream().init(new StrBuilder().init(c.substring(0, b))), e = null;
        try {
            e = StringInputStream.readObject(this._y6465, a);
            c = c.substring(b);
            try {
                this._g6468(e);
            } catch (f) {
                this._x14437.errorCause("Error occured while processing message : ", f);
            }
        } catch (d) {
            this._x14437.errorCause("Can't read command ", d);
            this._c6470._m25040();
            break;
        }
    }
};

GetAchievementsRequest.prototype = new Message();

GetAchievementsRequest.prototype.constructor = GetAchievementsRequest;

GetAchievementsRequest.prototype.init = function() {
    return this;
};

GetAchievementsRequest.prototype.getDomainID = function() {
    return GetAchievementsRequest.domainID;
};

GetAchievementsRequest.prototype.getSerializerID = function() {
    return GetAchievementsRequest.serializerID;
};

GetAchievementsRequest.prototype.toString = function() {
    var c;
    c = "[GetAchievementsRequest --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    return c + "]";
};

GetAchievementsRequest.prototype.clone = function() {
    var c = new GetAchievementsRequest().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    return c;
};

GetAchievementsRequest.domainID = 100;

GetAchievementsRequest.serializerID = 10063;

CreatePlayerResponse.prototype = new Message();

CreatePlayerResponse.prototype.constructor = CreatePlayerResponse;

CreatePlayerResponse.prototype.init = function() {
    this._playerSet = this._CreatePlayerStatusSet = !1;
    return this;
};

CreatePlayerResponse.prototype.getCreatePlayerStatus = function() {
    return this._CreatePlayerStatus;
};

CreatePlayerResponse.prototype.setCreatePlayerStatus = function(c) {
    this._CreatePlayerStatus = c;
    this._CreatePlayerStatusSet = !0;
};

CreatePlayerResponse.prototype.isCreatePlayerStatusSet = function() {
    return this._CreatePlayerStatusSet;
};

CreatePlayerResponse.prototype.unSetCreatePlayerStatus = function() {
    this._CreatePlayerStatusSet = !1;
};

CreatePlayerResponse.prototype.getPlayer = function() {
    return this._player;
};

CreatePlayerResponse.prototype.setPlayer = function(c) {
    this._player = c;
    this._playerSet = !0;
};

CreatePlayerResponse.prototype.isplayerSet = function() {
    return this._playerSet;
};

CreatePlayerResponse.prototype.unSetplayer = function() {
    this._playerSet = !1;
};

CreatePlayerResponse.prototype.getDomainID = function() {
    return CreatePlayerResponse.domainID;
};

CreatePlayerResponse.prototype.getSerializerID = function() {
    return CreatePlayerResponse.serializerID;
};

CreatePlayerResponse.prototype.toString = function() {
    var c;
    c = "[CreatePlayerResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._CreatePlayerStatusSet && 0 == Utils.isNull(this._CreatePlayerStatus) && (c += "_CreatePlayerStatus=" + this._CreatePlayerStatus + "| ");
    1 == this._playerSet && 0 == Utils.isNull(this._player) && (c += "_player=" + this._player + "| ");
    return c + "]";
};

CreatePlayerResponse.prototype.clone = function() {
    var c = new CreatePlayerResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._CreatePlayerStatusSet && 0 == Utils.isNull(this._CreatePlayerStatus) && c.setCreatePlayerStatus(this._CreatePlayerStatus);
    1 == this._playerSet && 0 == Utils.isNull(this._player) && c.setPlayer(this._player.clone());
    return c;
};

CreatePlayerResponse.domainID = 100;

CreatePlayerResponse.serializerID = 10001;

LeaderboardOrder.values = function() {
    return LeaderboardOrder._values;
};

LeaderboardOrder.prototype.getValue = function() {
    return this._value;
};

LeaderboardOrder.prototype.name = function() {
    return this._name;
};

LeaderboardOrder.prototype.ordinal = function() {
    return this._value;
};

LeaderboardOrder.prototype.init = function(c, a) {
    void 0 == LeaderboardOrder._values && (LeaderboardOrder._values = []);
    this._value = a;
    this._name = c;
    LeaderboardOrder._values.push(this);
    return this;
};

LeaderboardOrder.fromValue = function(c) {
    for (var a = 0; a < LeaderboardOrder._values.length; a++) {
        var b = LeaderboardOrder._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

LeaderboardOrder.valueOf = function(c) {
    for (var a = 0; a < LeaderboardOrder._values.length; a++) {
        var b = LeaderboardOrder._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

LeaderboardOrder.prototype.getDomainID = function() {
    return 100;
};

LeaderboardOrder.prototype.getSerializerID = function() {
    return 2;
};

LeaderboardOrder.prototype.toString = function() {
    return "LeaderboardOrder." + this._name;
};

LeaderboardOrder.prototype.clone = function() {
    return this;
};

LeaderboardOrder.ASCENDING = new LeaderboardOrder().init("ASCENDING", 0);

LeaderboardOrder.DESCENDING = new LeaderboardOrder().init("DESCENDING", 1);

LogoutStatus.values = function() {
    return LogoutStatus._values;
};

LogoutStatus.prototype.getValue = function() {
    return this._value;
};

LogoutStatus.prototype.name = function() {
    return this._name;
};

LogoutStatus.prototype.ordinal = function() {
    return this._value;
};

LogoutStatus.prototype.init = function(c, a) {
    void 0 == LogoutStatus._values && (LogoutStatus._values = []);
    this._value = a;
    this._name = c;
    LogoutStatus._values.push(this);
    return this;
};

LogoutStatus.fromValue = function(c) {
    for (var a = 0; a < LogoutStatus._values.length; a++) {
        var b = LogoutStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

LogoutStatus.valueOf = function(c) {
    for (var a = 0; a < LogoutStatus._values.length; a++) {
        var b = LogoutStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

LogoutStatus.prototype.getDomainID = function() {
    return 100;
};

LogoutStatus.prototype.getSerializerID = function() {
    return 10020;
};

LogoutStatus.prototype.toString = function() {
    return "LogoutStatus." + this._name;
};

LogoutStatus.prototype.clone = function() {
    return this;
};

LogoutStatus.INVALID_PARAMETERS = new LogoutStatus().init("INVALID_PARAMETERS", -2);

LogoutStatus.INTERNAL_ERROR = new LogoutStatus().init("INTERNAL_ERROR", -1);

LogoutStatus.SUCCESS = new LogoutStatus().init("SUCCESS", 0);

NuggetaGameCoreDomain.prototype = new NDomain();

NuggetaGameCoreDomain.prototype.constructor = NuggetaGameCoreDomain;

NuggetaGameCoreDomain.prototype.init = function() {
    NDomain.prototype.init.call(this);
    this.setDomainId(100);
    this.setBinarySerializerFactory(new T5516().init());
    this.setStringSerializerFactory(new T5518().init());
    this.setJsonSerializerFactory(new T5517().init());
    return this;
};

ResumeSessionMonitoringStatus.values = function() {
    return ResumeSessionMonitoringStatus._values;
};

ResumeSessionMonitoringStatus.prototype.getValue = function() {
    return this._value;
};

ResumeSessionMonitoringStatus.prototype.name = function() {
    return this._name;
};

ResumeSessionMonitoringStatus.prototype.ordinal = function() {
    return this._value;
};

ResumeSessionMonitoringStatus.prototype.init = function(c, a) {
    void 0 == ResumeSessionMonitoringStatus._values && (ResumeSessionMonitoringStatus._values = []);
    this._value = a;
    this._name = c;
    ResumeSessionMonitoringStatus._values.push(this);
    return this;
};

ResumeSessionMonitoringStatus.fromValue = function(c) {
    for (var a = 0; a < ResumeSessionMonitoringStatus._values.length; a++) {
        var b = ResumeSessionMonitoringStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

ResumeSessionMonitoringStatus.valueOf = function(c) {
    for (var a = 0; a < ResumeSessionMonitoringStatus._values.length; a++) {
        var b = ResumeSessionMonitoringStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

ResumeSessionMonitoringStatus.prototype.getDomainID = function() {
    return 100;
};

ResumeSessionMonitoringStatus.prototype.getSerializerID = function() {
    return 10164;
};

ResumeSessionMonitoringStatus.prototype.toString = function() {
    return "ResumeSessionMonitoringStatus." + this._name;
};

ResumeSessionMonitoringStatus.prototype.clone = function() {
    return this;
};

ResumeSessionMonitoringStatus.INVALID_PARAMETERS = new ResumeSessionMonitoringStatus().init("INVALID_PARAMETERS", -2);

ResumeSessionMonitoringStatus.INTERNAL_ERROR = new ResumeSessionMonitoringStatus().init("INTERNAL_ERROR", -1);

ResumeSessionMonitoringStatus.RESUMED = new ResumeSessionMonitoringStatus().init("RESUMED", 0);

GetItemsResponse.prototype = new Message();

GetItemsResponse.prototype.constructor = GetItemsResponse;

GetItemsResponse.prototype.init = function() {
    this._GetItemsStatusSet = !1;
    this._items = [];
    this._itemsSet = !1;
    return this;
};

GetItemsResponse.prototype.getGetItemsStatus = function() {
    return this._GetItemsStatus;
};

GetItemsResponse.prototype.setGetItemsStatus = function(c) {
    this._GetItemsStatus = c;
    this._GetItemsStatusSet = !0;
};

GetItemsResponse.prototype.isGetItemsStatusSet = function() {
    return this._GetItemsStatusSet;
};

GetItemsResponse.prototype.unSetGetItemsStatus = function() {
    this._GetItemsStatusSet = !1;
};

GetItemsResponse.prototype.getItems = function() {
    this._itemsSet = !0;
    return this._items;
};

GetItemsResponse.prototype.setItems = function(c) {
    this._items = c;
    this._itemsSet = !0;
};

GetItemsResponse.prototype.isitemsSet = function() {
    return this._itemsSet;
};

GetItemsResponse.prototype.unSetitems = function() {
    this._itemsSet = !1;
};

GetItemsResponse.prototype.getDomainID = function() {
    return GetItemsResponse.domainID;
};

GetItemsResponse.prototype.getSerializerID = function() {
    return GetItemsResponse.serializerID;
};

GetItemsResponse.prototype.toString = function() {
    var c;
    c = "[GetItemsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetItemsStatusSet && 0 == Utils.isNull(this._GetItemsStatus) && (c += "_GetItemsStatus=" + this._GetItemsStatus + "| ");
    1 == this._itemsSet && 0 == Utils.isNull(this._items) && (c += "_items=" + this._items + "| ");
    return c + "]";
};

GetItemsResponse.prototype.clone = function() {
    var c = new GetItemsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetItemsStatusSet && 0 == Utils.isNull(this._GetItemsStatus) && c.setGetItemsStatus(this._GetItemsStatus);
    if (1 == this._itemsSet && 0 == Utils.isNull(this._items)) {
        for (var a = [], b = 0; b < this._items.length; ++b) {
            var e = this._items[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setItems(a);
    }
    return c;
};

GetItemsResponse.domainID = 100;

GetItemsResponse.serializerID = 10052;

GetFriendsStatus.values = function() {
    return GetFriendsStatus._values;
};

GetFriendsStatus.prototype.getValue = function() {
    return this._value;
};

GetFriendsStatus.prototype.name = function() {
    return this._name;
};

GetFriendsStatus.prototype.ordinal = function() {
    return this._value;
};

GetFriendsStatus.prototype.init = function(c, a) {
    void 0 == GetFriendsStatus._values && (GetFriendsStatus._values = []);
    this._value = a;
    this._name = c;
    GetFriendsStatus._values.push(this);
    return this;
};

GetFriendsStatus.fromValue = function(c) {
    for (var a = 0; a < GetFriendsStatus._values.length; a++) {
        var b = GetFriendsStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

GetFriendsStatus.valueOf = function(c) {
    for (var a = 0; a < GetFriendsStatus._values.length; a++) {
        var b = GetFriendsStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

GetFriendsStatus.prototype.getDomainID = function() {
    return 100;
};

GetFriendsStatus.prototype.getSerializerID = function() {
    return 10029;
};

GetFriendsStatus.prototype.toString = function() {
    return "GetFriendsStatus." + this._name;
};

GetFriendsStatus.prototype.clone = function() {
    return this;
};

GetFriendsStatus.INVALID_PARAMETERS = new GetFriendsStatus().init("INVALID_PARAMETERS", -2);

GetFriendsStatus.INTERNAL_ERROR = new GetFriendsStatus().init("INTERNAL_ERROR", -1);

GetFriendsStatus.AUTHENTICATION_REQUIRED = new GetFriendsStatus().init("AUTHENTICATION_REQUIRED", 0);

GetFriendsStatus.SUCCESS = new GetFriendsStatus().init("SUCCESS", 1);

JsonInputStream.prototype.init = function() {
    return this;
};

JsonInputStream.readObject = function(c, a, b) {
    var e = null;
    try {
        var f = null;
        if (null != b) {
            if (a.isNull(b)) return null;
            f = a.getJSONObject(b);
        } else f = a;
        if (f.isNull("domainId")) throw Error("No domainId found in object in given stream", null);
        var d = f.getInt("domainId"), h = c.getDomain(d);
        if (null == h) throw Error("No domain available for domain id " + d, null);
        var g = h.getJsonSerializerFactory();
        if (null == g) throw Error("No json factory found in domain " + d, null);
        if (f.isNull("serializerId")) return null;
        var k = JsonInputStream.readSerializerID(f), e = g.readSerializable(c, f, k);
        if (null == e) throw Error("Serializer not found " + k, null);
    } catch (l) {
        throw Error("Can't read Object", l);
    }
    return e;
};

JsonInputStream.readString = function(c, a) {
    return c.isNull(a) ? null : c.getString(a);
};

JsonInputStream.readDouble = function(c, a) {
    return c.isNull(a) ? Utils.NULL_DOUBLE : c.getDouble(a);
};

JsonInputStream.readInteger = function(c, a) {
    return c.isNull(a) ? Utils.NULL_INTEGER : c.getInt(a);
};

JsonInputStream.readDate = function(c, a) {
    var b = JsonInputStream.readLong(c, a);
    return b != Utils.NULL_LONG ? new Date(b) : Utils.NULL_DATE;
};

JsonInputStream.readLong = function(c, a) {
    return c.isNull(a) ? Utils.NULL_LONG : c.getLong(a);
};

JsonInputStream.readShort = function(c, a) {
    var b = JsonInputStream.readInteger(c, a);
    return b != Utils.NULL_INTEGER ? b : Utils.NULL_SHORT;
};

JsonInputStream.readFloat = function(c, a) {
    var b = JsonInputStream.readDouble(c, a);
    return b != Utils.NULL_DOUBLE ? b : Utils.NULL_FLOAT;
};

JsonInputStream.readBoolean = function(c, a) {
    return c.isNull(a) ? Utils.NULL_BOOLEAN : c.getBoolean(a);
};

JsonInputStream.readSerializerID = function(c) {
    return c.getInt("serializerId");
};

JsonInputStream.readType = function(c, a) {
    return JsonInputStream.readShort(c, a);
};

JsonInputStream.readIntegerList = function(c, a) {
    var b = [];
    if (c.isNull(a)) return b;
    for (var e = null, e = c.getJSONArray(a), f = 0; f < e.length(); f++) e.isNull(f) ? b.push(Utils.NULL_INTEGER) : b.push(e.getInt(f));
    return b;
};

JsonInputStream.readShortList = function(c, a) {
    if (c.isNull(a)) return null;
    for (var b = null, e = [], b = c.getJSONArray(a), f = 0; f < b.length(); f++) b.isNull(f) ? e.push(Utils.NULL_SHORT) : e.push(b.getInt(f));
    return e;
};

JsonInputStream.readLongList = function(c, a) {
    var b = [];
    if (c.isNull(a)) return b;
    for (var e = null, e = c.getJSONArray(a), f = 0; f < e.length(); f++) e.isNull(f) ? b.push(Utils.NULL_LONG) : b.push(e.getLong(f));
    return b;
};

JsonInputStream.readFloatList = function(c, a) {
    var b = [];
    if (c.isNull(a)) return b;
    for (var e = null, e = c.getJSONArray(a), f = 0; f < e.length(); f++) e.isNull(f) ? b.push(Utils.NULL_FLOAT) : b.push(e.getDouble(f));
    return b;
};

JsonInputStream.readDoubleList = function(c, a) {
    var b = [];
    if (c.isNull(a)) return b;
    for (var e = null, e = c.getJSONArray(a), f = 0; f < e.length(); f++) e.isNull(f) ? b.push(Utils.NULL_DOUBLE) : b.push(e.getDouble(f));
    return b;
};

JsonInputStream.readStringList = function(c, a) {
    var b = [];
    if (c.isNull(a)) return b;
    for (var e = null, e = c.getJSONArray(a), f = 0; f < e.length(); f++) e.isNull(f) ? b.push(null) : b.push(e.getString(f));
    return b;
};

JsonInputStream.readBooleanList = function(c, a) {
    var b = [];
    if (c.isNull(a)) return b;
    for (var e = null, e = c.getJSONArray(a), f = 0; f < e.length(); f++) e.isNull(f) ? b.push(Utils.NULL_BOOLEAN) : b.push(e.getBoolean(f));
    return b;
};

JsonInputStream.readNMatrix2 = function(c, a, b) {
    if (a.isNull(b)) return null;
    b = a.getJSONObject(b);
    a = b.getInt("rowCount");
    var e = b.getInt("columnCount");
    a = new NMatrix2().init(a, e);
    b = b.getJSONArray("values");
    for (e = 0; e < b.length(); e++) {
        var f = b.getJSONObject(e);
        0 < f.length() ? (f = JsonInputStream.readObject(c, f, null), a.addItem(f)) : a.addItem(null);
    }
    return a;
};

SubmitScoreStatus.values = function() {
    return SubmitScoreStatus._values;
};

SubmitScoreStatus.prototype.getValue = function() {
    return this._value;
};

SubmitScoreStatus.prototype.name = function() {
    return this._name;
};

SubmitScoreStatus.prototype.ordinal = function() {
    return this._value;
};

SubmitScoreStatus.prototype.init = function(c, a) {
    void 0 == SubmitScoreStatus._values && (SubmitScoreStatus._values = []);
    this._value = a;
    this._name = c;
    SubmitScoreStatus._values.push(this);
    return this;
};

SubmitScoreStatus.fromValue = function(c) {
    for (var a = 0; a < SubmitScoreStatus._values.length; a++) {
        var b = SubmitScoreStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

SubmitScoreStatus.valueOf = function(c) {
    for (var a = 0; a < SubmitScoreStatus._values.length; a++) {
        var b = SubmitScoreStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

SubmitScoreStatus.prototype.getDomainID = function() {
    return 100;
};

SubmitScoreStatus.prototype.getSerializerID = function() {
    return 10044;
};

SubmitScoreStatus.prototype.toString = function() {
    return "SubmitScoreStatus." + this._name;
};

SubmitScoreStatus.prototype.clone = function() {
    return this;
};

SubmitScoreStatus.INVALID_PARAMETERS = new SubmitScoreStatus().init("INVALID_PARAMETERS", -2);

SubmitScoreStatus.INTERNAL_ERROR = new SubmitScoreStatus().init("INTERNAL_ERROR", -1);

SubmitScoreStatus.SUCCESS = new SubmitScoreStatus().init("SUCCESS", 0);

SubmitScoreStatus.UNKNOWN_LEADERBOARD = new SubmitScoreStatus().init("UNKNOWN_LEADERBOARD", 1);

AcceptInvitationResponse.prototype = new Message();

AcceptInvitationResponse.prototype.constructor = AcceptInvitationResponse;

AcceptInvitationResponse.prototype.init = function() {
    this._invitationIdSet = this._AcceptInvitationStatusSet = !1;
    return this;
};

AcceptInvitationResponse.prototype.getAcceptInvitationStatus = function() {
    return this._AcceptInvitationStatus;
};

AcceptInvitationResponse.prototype.setAcceptInvitationStatus = function(c) {
    this._AcceptInvitationStatus = c;
    this._AcceptInvitationStatusSet = !0;
};

AcceptInvitationResponse.prototype.isAcceptInvitationStatusSet = function() {
    return this._AcceptInvitationStatusSet;
};

AcceptInvitationResponse.prototype.unSetAcceptInvitationStatus = function() {
    this._AcceptInvitationStatusSet = !1;
};

AcceptInvitationResponse.prototype.getInvitationId = function() {
    return this._invitationId;
};

AcceptInvitationResponse.prototype.setInvitationId = function(c) {
    this._invitationId = c;
    this._invitationIdSet = !0;
};

AcceptInvitationResponse.prototype.isinvitationIdSet = function() {
    return this._invitationIdSet;
};

AcceptInvitationResponse.prototype.unSetinvitationId = function() {
    this._invitationIdSet = !1;
};

AcceptInvitationResponse.prototype.getDomainID = function() {
    return AcceptInvitationResponse.domainID;
};

AcceptInvitationResponse.prototype.getSerializerID = function() {
    return AcceptInvitationResponse.serializerID;
};

AcceptInvitationResponse.prototype.toString = function() {
    var c;
    c = "[AcceptInvitationResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._AcceptInvitationStatusSet && 0 == Utils.isNull(this._AcceptInvitationStatus) && (c += "_AcceptInvitationStatus=" + this._AcceptInvitationStatus + "| ");
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && (c += "_invitationId=" + this._invitationId + "| ");
    return c + "]";
};

AcceptInvitationResponse.prototype.clone = function() {
    var c = new AcceptInvitationResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._AcceptInvitationStatusSet && 0 == Utils.isNull(this._AcceptInvitationStatus) && c.setAcceptInvitationStatus(this._AcceptInvitationStatus);
    1 == this._invitationIdSet && 0 == Utils.isNull(this._invitationId) && c.setInvitationId(this._invitationId);
    return c;
};

AcceptInvitationResponse.domainID = 100;

AcceptInvitationResponse.serializerID = 10175;

HandshakeResponse.prototype = new Message();

HandshakeResponse.prototype.constructor = HandshakeResponse;

HandshakeResponse.prototype.init = function() {
    this._PlayerSet = this._PlayerSessionTypeSet = this._sessionIdSet = this._playerIdsStoredSet = this._ReasonSet = this._ExecutionStatusSet = !1;
    return this;
};

HandshakeResponse.prototype.getExecutionStatus = function() {
    return this._ExecutionStatus;
};

HandshakeResponse.prototype.setExecutionStatus = function(c) {
    this._ExecutionStatus = c;
    this._ExecutionStatusSet = !0;
};

HandshakeResponse.prototype.isExecutionStatusSet = function() {
    return this._ExecutionStatusSet;
};

HandshakeResponse.prototype.unSetExecutionStatus = function() {
    this._ExecutionStatusSet = !1;
};

HandshakeResponse.prototype.getReason = function() {
    return this._Reason;
};

HandshakeResponse.prototype.setReason = function(c) {
    this._Reason = c;
    this._ReasonSet = !0;
};

HandshakeResponse.prototype.isReasonSet = function() {
    return this._ReasonSet;
};

HandshakeResponse.prototype.unSetReason = function() {
    this._ReasonSet = !1;
};

HandshakeResponse.prototype.getPlayerIdsStored = function() {
    return this._playerIdsStored;
};

HandshakeResponse.prototype.setPlayerIdsStored = function(c) {
    this._playerIdsStored = c;
    this._playerIdsStoredSet = !0;
};

HandshakeResponse.prototype.isplayerIdsStoredSet = function() {
    return this._playerIdsStoredSet;
};

HandshakeResponse.prototype.unSetplayerIdsStored = function() {
    this._playerIdsStoredSet = !1;
};

HandshakeResponse.prototype.getSessionId = function() {
    return this._sessionId;
};

HandshakeResponse.prototype.setSessionId = function(c) {
    this._sessionId = c;
    this._sessionIdSet = !0;
};

HandshakeResponse.prototype.issessionIdSet = function() {
    return this._sessionIdSet;
};

HandshakeResponse.prototype.unSetsessionId = function() {
    this._sessionIdSet = !1;
};

HandshakeResponse.prototype.getPlayerSessionType = function() {
    return this._PlayerSessionType;
};

HandshakeResponse.prototype.setPlayerSessionType = function(c) {
    this._PlayerSessionType = c;
    this._PlayerSessionTypeSet = !0;
};

HandshakeResponse.prototype.isPlayerSessionTypeSet = function() {
    return this._PlayerSessionTypeSet;
};

HandshakeResponse.prototype.unSetPlayerSessionType = function() {
    this._PlayerSessionTypeSet = !1;
};

HandshakeResponse.prototype.getPlayer = function() {
    return this._Player;
};

HandshakeResponse.prototype.setPlayer = function(c) {
    this._Player = c;
    this._PlayerSet = !0;
};

HandshakeResponse.prototype.isPlayerSet = function() {
    return this._PlayerSet;
};

HandshakeResponse.prototype.unSetPlayer = function() {
    this._PlayerSet = !1;
};

HandshakeResponse.prototype.getDomainID = function() {
    return HandshakeResponse.domainID;
};

HandshakeResponse.prototype.getSerializerID = function() {
    return HandshakeResponse.serializerID;
};

HandshakeResponse.prototype.toString = function() {
    var c;
    c = "[HandshakeResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ExecutionStatusSet && 0 == Utils.isNull(this._ExecutionStatus) && (c += "_ExecutionStatus=" + this._ExecutionStatus + "| ");
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && (c += "_Reason=" + this._Reason + "| ");
    1 == this._playerIdsStoredSet && 0 == Utils.isNull(this._playerIdsStored) && (c += "_playerIdsStored=" + this._playerIdsStored + "| ");
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && (c += "_sessionId=" + this._sessionId + "| ");
    1 == this._PlayerSessionTypeSet && 0 == Utils.isNull(this._PlayerSessionType) && (c += "_PlayerSessionType=" + this._PlayerSessionType + "| ");
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && (c += "_Player=" + this._Player + "| ");
    return c + "]";
};

HandshakeResponse.prototype.clone = function() {
    var c = new HandshakeResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ExecutionStatusSet && 0 == Utils.isNull(this._ExecutionStatus) && c.setExecutionStatus(this._ExecutionStatus);
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && c.setReason(this._Reason);
    1 == this._playerIdsStoredSet && 0 == Utils.isNull(this._playerIdsStored) && c.setPlayerIdsStored(this._playerIdsStored);
    1 == this._sessionIdSet && 0 == Utils.isNull(this._sessionId) && c.setSessionId(this._sessionId);
    1 == this._PlayerSessionTypeSet && 0 == Utils.isNull(this._PlayerSessionType) && c.setPlayerSessionType(this._PlayerSessionType);
    1 == this._PlayerSet && 0 == Utils.isNull(this._Player) && c.setPlayer(this._Player.clone());
    return c;
};

HandshakeResponse.domainID = 100;

HandshakeResponse.serializerID = 3004;

BuyItemStatus.values = function() {
    return BuyItemStatus._values;
};

BuyItemStatus.prototype.getValue = function() {
    return this._value;
};

BuyItemStatus.prototype.name = function() {
    return this._name;
};

BuyItemStatus.prototype.ordinal = function() {
    return this._value;
};

BuyItemStatus.prototype.init = function(c, a) {
    void 0 == BuyItemStatus._values && (BuyItemStatus._values = []);
    this._value = a;
    this._name = c;
    BuyItemStatus._values.push(this);
    return this;
};

BuyItemStatus.fromValue = function(c) {
    for (var a = 0; a < BuyItemStatus._values.length; a++) {
        var b = BuyItemStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

BuyItemStatus.valueOf = function(c) {
    for (var a = 0; a < BuyItemStatus._values.length; a++) {
        var b = BuyItemStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

BuyItemStatus.prototype.getDomainID = function() {
    return 100;
};

BuyItemStatus.prototype.getSerializerID = function() {
    return 10050;
};

BuyItemStatus.prototype.toString = function() {
    return "BuyItemStatus." + this._name;
};

BuyItemStatus.prototype.clone = function() {
    return this;
};

BuyItemStatus.INVALID_PARAMETERS = new BuyItemStatus().init("INVALID_PARAMETERS", -2);

BuyItemStatus.INTERNAL_ERROR = new BuyItemStatus().init("INTERNAL_ERROR", -1);

BuyItemStatus.SUCCESS = new BuyItemStatus().init("SUCCESS", 0);

BuyItemStatus.NOT_ENOUGH_COINS = new BuyItemStatus().init("NOT_ENOUGH_COINS", 1);

BuyItemStatus.UNKNOWN_ITEM = new BuyItemStatus().init("UNKNOWN_ITEM", 2);

T5527.prototype = new T5519();

T5527.prototype.constructor = T5527;

T5527.prototype.init = function(c) {
    this._g24470 = !1;
    T5519.prototype.init.call(this, c);
    this._u24573 = NLoggerFactory.getLogger("ConnectionManager");
    return this;
};

T5527.prototype._m25006 = function(c) {
    T5519.prototype._m25006.call(this, c);
    this._m26429(this._o24581);
    this._o24581._m25044();
};

T5527.prototype._m26429 = function(c) {
    var a = this;
    c._m25512(function() {
        a._g24470 = !0;
        a._y24575._m25032();
    });
    c._m25514(function() {
        a._g24470 = !1;
        a._j24576._m25036();
    });
    c._m25516(function() {
        a._g24470 = !1;
        a._h24577._m25048();
    });
    c._m25520(function() {
        a._j24578._m25040();
    });
};

T5527.prototype._m25011 = function() {
    T5519.prototype._m25011.call(this);
    this._g24470 = !1;
};

T5527.prototype._m26428 = function() {
    return this._g24470;
};

GameMessageError.prototype = new Message();

GameMessageError.prototype.constructor = GameMessageError;

GameMessageError.prototype.init = function() {
    this._ReasonSet = !1;
    return this;
};

GameMessageError.prototype.getReason = function() {
    return this._Reason;
};

GameMessageError.prototype.setReason = function(c) {
    this._Reason = c;
    this._ReasonSet = !0;
};

GameMessageError.prototype.isReasonSet = function() {
    return this._ReasonSet;
};

GameMessageError.prototype.unSetReason = function() {
    this._ReasonSet = !1;
};

GameMessageError.prototype.getDomainID = function() {
    return GameMessageError.domainID;
};

GameMessageError.prototype.getSerializerID = function() {
    return GameMessageError.serializerID;
};

GameMessageError.prototype.toString = function() {
    var c;
    c = "[GameMessageError --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && (c += "_Reason=" + this._Reason + "| ");
    return c + "]";
};

GameMessageError.prototype.clone = function() {
    var c = new GameMessageError().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._ReasonSet && 0 == Utils.isNull(this._Reason) && c.setReason(this._Reason);
    return c;
};

GameMessageError.domainID = 100;

GameMessageError.serializerID = 3027;

NuggetaException.prototype = Error();

NuggetaException.prototype.constructor = NuggetaException;

NuggetaException.prototype.init = function(c, a) {
    RuntimeException.prototype.init.call(this, c.getReason(), a);
    this.nuggetaExceptionMessage = c;
    return this;
};

NuggetaException.prototype.getNuggetaException = function() {
    return this.nuggetaExceptionMessage;
};

RefuseInvitationStatus.values = function() {
    return RefuseInvitationStatus._values;
};

RefuseInvitationStatus.prototype.getValue = function() {
    return this._value;
};

RefuseInvitationStatus.prototype.name = function() {
    return this._name;
};

RefuseInvitationStatus.prototype.ordinal = function() {
    return this._value;
};

RefuseInvitationStatus.prototype.init = function(c, a) {
    void 0 == RefuseInvitationStatus._values && (RefuseInvitationStatus._values = []);
    this._value = a;
    this._name = c;
    RefuseInvitationStatus._values.push(this);
    return this;
};

RefuseInvitationStatus.fromValue = function(c) {
    for (var a = 0; a < RefuseInvitationStatus._values.length; a++) {
        var b = RefuseInvitationStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

RefuseInvitationStatus.valueOf = function(c) {
    for (var a = 0; a < RefuseInvitationStatus._values.length; a++) {
        var b = RefuseInvitationStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

RefuseInvitationStatus.prototype.getDomainID = function() {
    return 100;
};

RefuseInvitationStatus.prototype.getSerializerID = function() {
    return 10179;
};

RefuseInvitationStatus.prototype.toString = function() {
    return "RefuseInvitationStatus." + this._name;
};

RefuseInvitationStatus.prototype.clone = function() {
    return this;
};

RefuseInvitationStatus.INVALID_PARAMETERS = new RefuseInvitationStatus().init("INVALID_PARAMETERS", -2);

RefuseInvitationStatus.INTERNAL_ERROR = new RefuseInvitationStatus().init("INTERNAL_ERROR", -1);

RefuseInvitationStatus.SUCCESS = new RefuseInvitationStatus().init("SUCCESS", 0);

RefuseInvitationStatus.UNKNOWN_INVITATION_ID = new RefuseInvitationStatus().init("UNKNOWN_INVITATION_ID", 2);

RefuseInvitationStatus.ALREADY_ACCEPTED = new RefuseInvitationStatus().init("ALREADY_ACCEPTED", 3);

RefuseInvitationStatus.ALREADY_REFUSED = new RefuseInvitationStatus().init("ALREADY_REFUSED", 4);

RefuseInvitationStatus.NOT_THE_INVITEE = new RefuseInvitationStatus().init("NOT_THE_INVITEE", 5);

SubmitScoreResponse.prototype = new Message();

SubmitScoreResponse.prototype.constructor = SubmitScoreResponse;

SubmitScoreResponse.prototype.init = function() {
    this._SubmitScoreStatusSet = !1;
    return this;
};

SubmitScoreResponse.prototype.getSubmitScoreStatus = function() {
    return this._SubmitScoreStatus;
};

SubmitScoreResponse.prototype.setSubmitScoreStatus = function(c) {
    this._SubmitScoreStatus = c;
    this._SubmitScoreStatusSet = !0;
};

SubmitScoreResponse.prototype.isSubmitScoreStatusSet = function() {
    return this._SubmitScoreStatusSet;
};

SubmitScoreResponse.prototype.unSetSubmitScoreStatus = function() {
    this._SubmitScoreStatusSet = !1;
};

SubmitScoreResponse.prototype.getDomainID = function() {
    return SubmitScoreResponse.domainID;
};

SubmitScoreResponse.prototype.getSerializerID = function() {
    return SubmitScoreResponse.serializerID;
};

SubmitScoreResponse.prototype.toString = function() {
    var c;
    c = "[SubmitScoreResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SubmitScoreStatusSet && 0 == Utils.isNull(this._SubmitScoreStatus) && (c += "_SubmitScoreStatus=" + this._SubmitScoreStatus + "| ");
    return c + "]";
};

SubmitScoreResponse.prototype.clone = function() {
    var c = new SubmitScoreResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SubmitScoreStatusSet && 0 == Utils.isNull(this._SubmitScoreStatus) && c.setSubmitScoreStatus(this._SubmitScoreStatus);
    return c;
};

SubmitScoreResponse.domainID = 100;

SubmitScoreResponse.serializerID = 10043;

T5512.prototype = new T5527();

T5512.prototype.constructor = T5512;

T5512.prototype.init = function(c, a) {
    this._j18176 = [];
    T5527.prototype.init.call(this, c);
    this._j18176.push(a);
    return this;
};

T5512.prototype._m25005 = function(c) {
    this._j18176.push(c);
};

T5512.prototype._m25522 = function(c) {
    this._j18176.splice(this._j18176.indexOf(c), 1);
};

T5512.prototype._m25014 = function(c) {
    for (var a = 0; a < this._j18176.length; a++) if (this._j18176[a] == c) return !0;
    return !1;
};

MatchMakingType.values = function() {
    return MatchMakingType._values;
};

MatchMakingType.prototype.getValue = function() {
    return this._value;
};

MatchMakingType.prototype.name = function() {
    return this._name;
};

MatchMakingType.prototype.ordinal = function() {
    return this._value;
};

MatchMakingType.prototype.init = function(c, a) {
    void 0 == MatchMakingType._values && (MatchMakingType._values = []);
    this._value = a;
    this._name = c;
    MatchMakingType._values.push(this);
    return this;
};

MatchMakingType.fromValue = function(c) {
    for (var a = 0; a < MatchMakingType._values.length; a++) {
        var b = MatchMakingType._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

MatchMakingType.valueOf = function(c) {
    for (var a = 0; a < MatchMakingType._values.length; a++) {
        var b = MatchMakingType._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

MatchMakingType.prototype.getDomainID = function() {
    return 100;
};

MatchMakingType.prototype.getSerializerID = function() {
    return 1;
};

MatchMakingType.prototype.toString = function() {
    return "MatchMakingType." + this._name;
};

MatchMakingType.prototype.clone = function() {
    return this;
};

MatchMakingType.CHALLENGE = new MatchMakingType().init("CHALLENGE", 0);

MatchMakingType.SEARCH_GAME = new MatchMakingType().init("SEARCH_GAME", 1);

JoinGameStatus.values = function() {
    return JoinGameStatus._values;
};

JoinGameStatus.prototype.getValue = function() {
    return this._value;
};

JoinGameStatus.prototype.name = function() {
    return this._name;
};

JoinGameStatus.prototype.ordinal = function() {
    return this._value;
};

JoinGameStatus.prototype.init = function(c, a) {
    void 0 == JoinGameStatus._values && (JoinGameStatus._values = []);
    this._value = a;
    this._name = c;
    JoinGameStatus._values.push(this);
    return this;
};

JoinGameStatus.fromValue = function(c) {
    for (var a = 0; a < JoinGameStatus._values.length; a++) {
        var b = JoinGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

JoinGameStatus.valueOf = function(c) {
    for (var a = 0; a < JoinGameStatus._values.length; a++) {
        var b = JoinGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

JoinGameStatus.prototype.getDomainID = function() {
    return 100;
};

JoinGameStatus.prototype.getSerializerID = function() {
    return 10074;
};

JoinGameStatus.prototype.toString = function() {
    return "JoinGameStatus." + this._name;
};

JoinGameStatus.prototype.clone = function() {
    return this;
};

JoinGameStatus.INVALID_PARAMETERS = new JoinGameStatus().init("INVALID_PARAMETERS", -2);

JoinGameStatus.INTERNAL_ERROR = new JoinGameStatus().init("INTERNAL_ERROR", -1);

JoinGameStatus.ACCEPTED = new JoinGameStatus().init("ACCEPTED", 0);

JoinGameStatus.REJECTED_NO_MORE_SEAT = new JoinGameStatus().init("REJECTED_NO_MORE_SEAT", 1);

JoinGameStatus.GAME_NOT_FOUND = new JoinGameStatus().init("GAME_NOT_FOUND", 2);

JoinGameStatus.ALREADY_IN_GAME = new JoinGameStatus().init("ALREADY_IN_GAME", 3);

JoinGameStatus.REJECTED = new JoinGameStatus().init("REJECTED", 4);

T5535.prototype.init = function() {
    return this;
};

T5535.prototype.write = function(c, a, b) {
    0 == a.getSerializerID() ? this._m26436(c, a, b) : 1 == a.getSerializerID() ? this._m26437(c, a, b) : 3002 == a.getSerializerID() ? this._m26438(c, a, b) : 3003 == a.getSerializerID() ? this._m26439(c, a, b) : 3004 == a.getSerializerID() ? this._m26440(c, a, b) : 3005 == a.getSerializerID() ? this._m26441(c, a, b) : 3006 == a.getSerializerID() ? this._m26442(c, a, b) : 3007 == a.getSerializerID() ? this._m26443(c, a, b) : 3008 == a.getSerializerID() ? this._m26444(c, a, b) : 3009 == a.getSerializerID() ? this._m26445(c, a, b) : 3010 == a.getSerializerID() ? this._m26446(c, a, b) : 3011 == a.getSerializerID() && this._m26447(c, a, b);
};

T5535.prototype._m26436 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5535.prototype._m26437 = function(c, a, b) {
    BinaryOutputStream.writeInteger(a.getValue(), b);
};

T5535.prototype._m26438 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isCounterSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getCounter(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26439 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isCounterSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getCounter(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26440 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.isGameIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getGameId(), 2e3, b)) && e++;
    1 == a.isGameVersionSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getGameVersion(), 2001, b)) && e++;
    1 == a.isGameDeployedVersionSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getGameDeployedVersion(), 2002, b)) && e++;
    1 == a.isPlatformSet() && (f = BinaryOutputStream.writeStringProperty(a.getPlatform(), 2003, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26441 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isIpAddressSet() && (d = BinaryOutputStream.writeStringProperty(a.getIpAddress(), 2e3, b)) && f++;
    1 == a.isTcpPortSet() && (d = BinaryOutputStream.writeIntegerProperty(a.getTcpPort(), 2001, b)) && f++;
    1 == a.isDnsStatusSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getDnsStatus(), 2002, b)) && f++;
    1 == a.isStartDetailsSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getStartDetails(), 2003, b)) && f++;
    b.putShortAt(e, f);
};

T5535.prototype._m26442 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isUseDefaultImplSet() && (f = BinaryOutputStream.writeBooleanProperty(a.isUseDefaultImpl(), 0, b)) && e++;
    1 == a.isCurrentVersionSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getCurrentVersion(), 1, b)) && e++;
    1 == a.isNextVersionSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getNextVersion(), 2, b)) && e++;
    1 == a.isTitleSet() && (f = BinaryOutputStream.writeStringProperty(a.getTitle(), 3, b)) && e++;
    1 == a.isTextSet() && (f = BinaryOutputStream.writeStringProperty(a.getText(), 4, b)) && e++;
    1 == a.isUrlSet() && (f = BinaryOutputStream.writeStringProperty(a.getUrl(), 5, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26443 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26444 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26445 = function(c, a, b) {
    var e = b.position();
    b.skip(2);
    var f = 0, d = !1;
    1 == a.isStoreIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && f++;
    1 == a.isSenderIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && f++;
    1 == a.isMessageIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && f++;
    1 == a.isRequestIdSet() && (d = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && f++;
    1 == a.isErrorCodeSet() && (d = BinaryOutputStream.writeObjectProperty(c, a.getErrorCode(), 2e3, b)) && f++;
    1 == a.isReasonSet() && (d = BinaryOutputStream.writeStringProperty(a.getReason(), 2001, b)) && f++;
    b.putShortAt(e, f);
};

T5535.prototype._m26446 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isdomainSet() && (f = BinaryOutputStream.writeStringProperty(a.getDomain(), 0, b)) && e++;
    1 == a.isstartSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getStart(), 1, b)) && e++;
    1 == a.islimitSet() && (f = BinaryOutputStream.writeIntegerProperty(a.getLimit(), 2, b)) && e++;
    1 == a.isquerySet() && (f = BinaryOutputStream.writeStringProperty(a.getQuery(), 3, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype._m26447 = function(c, a, b) {
    c = b.position();
    b.skip(2);
    var e = 0, f = !1;
    1 == a.isStoreIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getStoreId(), 0, b)) && e++;
    1 == a.isSenderIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getSenderId(), 1e3, b)) && e++;
    1 == a.isMessageIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getMessageId(), 1001, b)) && e++;
    1 == a.isRequestIdSet() && (f = BinaryOutputStream.writeStringProperty(a.getRequestId(), 1002, b)) && e++;
    1 == a.iscontentSet() && (f = BinaryOutputStream.writeStringProperty(a.getContent(), 2e3, b)) && e++;
    b.putShortAt(c, e);
};

T5535.prototype.readSerializable = function(c, a, b) {
    if (0 == b) return this._m26448(c, a);
    if (1 == b) return this._m26449(c, a);
    if (3002 == b) return this._m26450(c, a);
    if (3003 == b) return this._m26451(c, a);
    if (3004 == b) return this._m26452(c, a);
    if (3005 == b) return this._m26453(c, a);
    if (3006 == b) return this._m26454(c, a);
    if (3007 == b) return this._m26455(c, a);
    if (3008 == b) return this._m26456(c, a);
    if (3009 == b) return this._m26457(c, a);
    if (3010 == b) return this._m26458(c, a);
    if (3011 == b) return this._m26459(c, a);
    throw new NError().init("No serializer found for type " + b, null);
};

T5535.prototype._m26448 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return DnsStatus.fromValue(b);
};

T5535.prototype._m26449 = function(c, a) {
    var b = BinaryInputStream.readInteger(a);
    return ErrorCode.fromValue(b);
};

T5535.prototype._m26450 = function(c, a) {
    for (var b = new HeartBeatRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCounter(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26451 = function(c, a) {
    for (var b = new HeartBeatResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setCounter(BinaryInputStream.readInteger(a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26452 = function(c, a) {
    for (var b = new DnsRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setGameId(d), MemoryManagement.free(d)) : 2001 == d ? b.setGameVersion(BinaryInputStream.readInteger(a)) : 2002 == d ? b.setGameDeployedVersion(BinaryInputStream.readInteger(a)) : 2003 == d ? (d = BinaryInputStream.readString(a), 
        b.setPlatform(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26453 = function(c, a) {
    for (var b = new DnsResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setIpAddress(d), MemoryManagement.free(d)) : 2001 == d ? b.setTcpPort(BinaryInputStream.readInteger(a)) : 2002 == d ? b.setDnsStatus(BinaryInputStream.readObject(c, a)) : 2003 == d ? b.setStartDetails(BinaryInputStream.readObject(c, a)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26454 = function(c, a) {
    for (var b = new StartDetails().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? b.setUseDefaultImpl(BinaryInputStream.readBoolean(a)) : 1 == d ? b.setCurrentVersion(BinaryInputStream.readInteger(a)) : 2 == d ? b.setNextVersion(BinaryInputStream.readInteger(a)) : 3 == d ? (d = BinaryInputStream.readString(a), 
        b.setTitle(d), MemoryManagement.free(d)) : 4 == d ? (d = BinaryInputStream.readString(a), 
        b.setText(d), MemoryManagement.free(d)) : 5 == d ? (d = BinaryInputStream.readString(a), 
        b.setUrl(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26455 = function(c, a) {
    for (var b = new StopPlugConnectionRequest().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26456 = function(c, a) {
    for (var b = new StopPlugConnectionResponse().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26457 = function(c, a) {
    for (var b = new NuggetaExceptionMessage().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? b.setErrorCode(BinaryInputStream.readObject(c, a)) : 2001 == d ? (d = BinaryInputStream.readString(a), 
        b.setReason(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26458 = function(c, a) {
    for (var b = new NuggetaQuery().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setDomain(d), MemoryManagement.free(d)) : 1 == d ? b.setStart(BinaryInputStream.readInteger(a)) : 2 == d ? b.setLimit(BinaryInputStream.readInteger(a)) : 3 == d ? (d = BinaryInputStream.readString(a), 
        b.setQuery(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype._m26459 = function(c, a) {
    for (var b = new NRawMessage().init(), e = BinaryInputStream.getShort(a), f = 0; f < e; f++) {
        var d = BinaryInputStream.getShort(a);
        0 == d ? (d = BinaryInputStream.readString(a), b.setStoreId(d), MemoryManagement.free(d)) : 1e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setSenderId(d), MemoryManagement.free(d)) : 1001 == d ? (d = BinaryInputStream.readString(a), 
        b.setMessageId(d), MemoryManagement.free(d)) : 1002 == d ? (d = BinaryInputStream.readString(a), 
        b.setRequestId(d), MemoryManagement.free(d)) : 2e3 == d ? (d = BinaryInputStream.readString(a), 
        b.setContent(d), MemoryManagement.free(d)) : BinaryInputStream.skipProperty(a);
    }
    return b;
};

T5535.prototype.getSerializerFactoryType = function() {
    return SerializerFactoryType.BINARY;
};

GameChatNotification.prototype = new Message();

GameChatNotification.prototype.constructor = GameChatNotification;

GameChatNotification.prototype.init = function() {
    this._messageSet = this._playerSet = !1;
    return this;
};

GameChatNotification.prototype.getPlayer = function() {
    return this._player;
};

GameChatNotification.prototype.setPlayer = function(c) {
    this._player = c;
    this._playerSet = !0;
};

GameChatNotification.prototype.isplayerSet = function() {
    return this._playerSet;
};

GameChatNotification.prototype.unSetplayer = function() {
    this._playerSet = !1;
};

GameChatNotification.prototype.getMessage = function() {
    return this._message;
};

GameChatNotification.prototype.setMessage = function(c) {
    this._message = c;
    this._messageSet = !0;
};

GameChatNotification.prototype.ismessageSet = function() {
    return this._messageSet;
};

GameChatNotification.prototype.unSetmessage = function() {
    this._messageSet = !1;
};

GameChatNotification.prototype.getDomainID = function() {
    return GameChatNotification.domainID;
};

GameChatNotification.prototype.getSerializerID = function() {
    return GameChatNotification.serializerID;
};

GameChatNotification.prototype.toString = function() {
    var c;
    c = "[GameChatNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._playerSet && 0 == Utils.isNull(this._player) && (c += "_player=" + this._player + "| ");
    1 == this._messageSet && 0 == Utils.isNull(this._message) && (c += "_message=" + this._message + "| ");
    return c + "]";
};

GameChatNotification.prototype.clone = function() {
    var c = new GameChatNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._playerSet && 0 == Utils.isNull(this._player) && c.setPlayer(this._player.clone());
    1 == this._messageSet && 0 == Utils.isNull(this._message) && c.setMessage(this._message);
    return c;
};

GameChatNotification.domainID = 100;

GameChatNotification.serializerID = 3030;

NuggetaCoreDispatcher.prototype.init = function() {
    this.globalListeners = [];
    this.NRawMessageHandlers = [];
    return this;
};

NuggetaCoreDispatcher.prototype.fireMessage = function(c) {
    if (c.getSerializerID() == NRawMessage.serializerID) {
        for (var a = 0; a < this.globalListeners.length; a++) (0, this.globalListeners[a])(MemoryManagement._clone(c));
        for (a = 0; a < this.NRawMessageHandlers.length; a++) (0, this.NRawMessageHandlers[a])(MemoryManagement._clone(c));
    }
};

NuggetaCoreDispatcher.prototype.addNuggetaCoreMessageListener = function(c) {
    this.globalListeners.push(c);
};

NuggetaCoreDispatcher.prototype.removeNuggetaCoreMessageListener = function(c) {
    this.globalListeners.splice(this.globalListeners.indexOf(c), 1);
};

NuggetaCoreDispatcher.prototype.addNRawMessageHandler = function(c) {
    this.NRawMessageHandlers.push(c);
};

NuggetaCoreDispatcher.prototype.removeNRawMessageHandler = function(c) {
    this.NRawMessageHandlers.splice(this.NRawMessageHandlers.indexOf(c), 1);
};

NuggetaCoreDispatcher.prototype.clear = function() {
    this.globalListeners.splice(0, this.globalListeners.length);
    this.NRawMessageHandlers.splice(0, this.NRawMessageHandlers.length);
};

NAchievementType.values = function() {
    return NAchievementType._values;
};

NAchievementType.prototype.getValue = function() {
    return this._value;
};

NAchievementType.prototype.name = function() {
    return this._name;
};

NAchievementType.prototype.ordinal = function() {
    return this._value;
};

NAchievementType.prototype.init = function(c, a) {
    void 0 == NAchievementType._values && (NAchievementType._values = []);
    this._value = a;
    this._name = c;
    NAchievementType._values.push(this);
    return this;
};

NAchievementType.fromValue = function(c) {
    for (var a = 0; a < NAchievementType._values.length; a++) {
        var b = NAchievementType._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

NAchievementType.valueOf = function(c) {
    for (var a = 0; a < NAchievementType._values.length; a++) {
        var b = NAchievementType._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

NAchievementType.prototype.getDomainID = function() {
    return 100;
};

NAchievementType.prototype.getSerializerID = function() {
    return 12;
};

NAchievementType.prototype.toString = function() {
    return "NAchievementType." + this._name;
};

NAchievementType.prototype.clone = function() {
    return this;
};

NAchievementType.SIMPLE = new NAchievementType().init("SIMPLE", 0);

NAchievementType.PROGRESS = new NAchievementType().init("PROGRESS", 1);

SerializerFactoryType.prototype.init = function() {
    return this;
};

SerializerFactoryType.BINARY = 0;

SerializerFactoryType.STRING = 1;

SerializerFactoryType.JSON = 2;

StringStream.prototype.init = function(c) {
    this._position = 0;
    this.str = c;
    return this;
};

StringStream.prototype.getStringWithSize = function(c) {
    var a = this.str.substring(this._position, this._position + c);
    this._position += c;
    return a;
};

StringStream.prototype.append = function(c) {
    this.str.appendString(c);
    this._position = this.str.length1();
};

StringStream.prototype.toString = function() {
    return this.str.toString();
};

StringStream.prototype.position = function() {
    return this._position;
};

StringStream.prototype.limit = function() {
    return this.str.length1();
};

StringStream.prototype.skip = function(c) {};

StringStream.prototype.ignore = function() {
    var c = parseFloat(this.getStringWithSize(1)), c = parseFloat(this.getStringWithSize(c));
    this._position += c;
};

StringStream.prototype.ignoreLength = function(c) {
    this._position += c;
};

StringStream.prototype.putShortAt = function(c, a) {
    this.writeStringAt(c, "" + a);
};

StringStream.prototype.writeStringAt = function(c, a) {
    var b = new StrBuilder().init("");
    b.appendString(this.str.substring(0, c));
    var e = "" + a.length;
    b.appendString("" + e.length);
    b.appendString(e);
    b.appendString(a);
    b.appendString(this.str.substring(c, this.str.length1()));
    this.str = b;
    this._position = b.length1();
};

StringStream.prototype.writeString = function(c) {
    this.writeLength(c.length);
    this.append(c);
};

StringStream.prototype.getShort = function() {
    return parseFloat(this.readString());
};

StringStream.prototype.getDouble = function() {
    return parseFloat(this.readString());
};

StringStream.prototype.getInt = function() {
    return parseFloat(this.readString());
};

StringStream.prototype.getLong = function() {
    return parseFloat(this.readString());
};

StringStream.prototype.getString = function() {
    return this.readString();
};

StringStream.prototype.get = function() {
    return parseFloat(this.readString());
};

StringStream.prototype.getFloat = function() {
    return parseFloat(this.readString());
};

StringStream.prototype.putShort = function(c) {
    this.writeString("" + c);
};

StringStream.prototype.putString = function(c) {
    this.writeString(c);
};

StringStream.prototype.put = function(c) {
    this.writeString("" + c);
};

StringStream.prototype.putIntAt = function(c, a) {
    this.writeStringAt(c, "" + a);
};

StringStream.prototype.putDouble = function(c) {
    this.writeString("" + c);
};

StringStream.prototype.putInt = function(c) {
    this.writeString("" + c);
};

StringStream.prototype.putLong = function(c) {
    this.writeString("" + c);
};

StringStream.prototype.putFloat = function(c) {
    this.writeString("" + c);
};

StringStream.prototype.writeLength = function(c) {
    c = "" + c;
    this.str.appendString("" + c.length);
    this.str.appendString(c);
};

StringStream.prototype.pad = function(c, a) {
    for (var b = c.length; b < a; b++) c = "0" + c;
    return c;
};

StringStream.prototype.readString = function() {
    var c = parseFloat(this.getStringWithSize(1)), c = parseFloat(this.getStringWithSize(c));
    return this.getStringWithSize(c);
};

StringStream.prototype.getKeyShort = function(c) {
    return 0;
};

StringStream.prototype.getKeyDouble = function(c) {
    return 0;
};

StringStream.prototype.getKeyInt = function(c) {
    return 0;
};

StringStream.prototype.getKeyLong = function(c) {
    return 0;
};

StringStream.prototype.getKeyFloat = function(c) {
    return 0;
};

StringStream.prototype.getKeyString = function(c) {
    return null;
};

StringStream.prototype.putKeyShort = function(c, a) {};

StringStream.prototype.putKeyString = function(c, a) {};

StringStream.prototype.putKeyDouble = function(c, a) {};

StringStream.prototype.putKeyInt = function(c, a) {};

StringStream.prototype.putKeyLong = function(c, a) {};

StringStream.prototype.putKeyFloat = function(c, a) {};

SaveAsGhostResponse.prototype = new Message();

SaveAsGhostResponse.prototype.constructor = SaveAsGhostResponse;

SaveAsGhostResponse.prototype.init = function() {
    this._SaveAsGhostStatusSet = !1;
    return this;
};

SaveAsGhostResponse.prototype.getSaveAsGhostStatus = function() {
    return this._SaveAsGhostStatus;
};

SaveAsGhostResponse.prototype.setSaveAsGhostStatus = function(c) {
    this._SaveAsGhostStatus = c;
    this._SaveAsGhostStatusSet = !0;
};

SaveAsGhostResponse.prototype.isSaveAsGhostStatusSet = function() {
    return this._SaveAsGhostStatusSet;
};

SaveAsGhostResponse.prototype.unSetSaveAsGhostStatus = function() {
    this._SaveAsGhostStatusSet = !1;
};

SaveAsGhostResponse.prototype.getDomainID = function() {
    return SaveAsGhostResponse.domainID;
};

SaveAsGhostResponse.prototype.getSerializerID = function() {
    return SaveAsGhostResponse.serializerID;
};

SaveAsGhostResponse.prototype.toString = function() {
    var c;
    c = "[SaveAsGhostResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._SaveAsGhostStatusSet && 0 == Utils.isNull(this._SaveAsGhostStatus) && (c += "_SaveAsGhostStatus=" + this._SaveAsGhostStatus + "| ");
    return c + "]";
};

SaveAsGhostResponse.prototype.clone = function() {
    var c = new SaveAsGhostResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._SaveAsGhostStatusSet && 0 == Utils.isNull(this._SaveAsGhostStatus) && c.setSaveAsGhostStatus(this._SaveAsGhostStatus);
    return c;
};

SaveAsGhostResponse.domainID = 100;

SaveAsGhostResponse.serializerID = 10103;

MatchAndJoinGameStatus.values = function() {
    return MatchAndJoinGameStatus._values;
};

MatchAndJoinGameStatus.prototype.getValue = function() {
    return this._value;
};

MatchAndJoinGameStatus.prototype.name = function() {
    return this._name;
};

MatchAndJoinGameStatus.prototype.ordinal = function() {
    return this._value;
};

MatchAndJoinGameStatus.prototype.init = function(c, a) {
    void 0 == MatchAndJoinGameStatus._values && (MatchAndJoinGameStatus._values = []);
    this._value = a;
    this._name = c;
    MatchAndJoinGameStatus._values.push(this);
    return this;
};

MatchAndJoinGameStatus.fromValue = function(c) {
    for (var a = 0; a < MatchAndJoinGameStatus._values.length; a++) {
        var b = MatchAndJoinGameStatus._values[a];
        if (b.getValue() == c) return b;
    }
    return null;
};

MatchAndJoinGameStatus.valueOf = function(c) {
    for (var a = 0; a < MatchAndJoinGameStatus._values.length; a++) {
        var b = MatchAndJoinGameStatus._values[a];
        if (c == b.name()) return b;
    }
    return null;
};

MatchAndJoinGameStatus.prototype.getDomainID = function() {
    return 100;
};

MatchAndJoinGameStatus.prototype.getSerializerID = function() {
    return 10167;
};

MatchAndJoinGameStatus.prototype.toString = function() {
    return "MatchAndJoinGameStatus." + this._name;
};

MatchAndJoinGameStatus.prototype.clone = function() {
    return this;
};

MatchAndJoinGameStatus.INVALID_PARAMETERS = new MatchAndJoinGameStatus().init("INVALID_PARAMETERS", -2);

MatchAndJoinGameStatus.INTERNAL_ERROR = new MatchAndJoinGameStatus().init("INTERNAL_ERROR", -1);

MatchAndJoinGameStatus.ACCEPTED = new MatchAndJoinGameStatus().init("ACCEPTED", 0);

MatchAndJoinGameStatus.ALREADY_IN_GAME = new MatchAndJoinGameStatus().init("ALREADY_IN_GAME", 1);

MatchAndJoinGameStatus.INVALID_QUERY = new MatchAndJoinGameStatus().init("INVALID_QUERY", 2);

MatchAndJoinGameStatus.REJECTED = new MatchAndJoinGameStatus().init("REJECTED", 3);

MatchAndJoinGameStatus.NO_GAME_FOUND = new MatchAndJoinGameStatus().init("NO_GAME_FOUND", 4);

GetFriendDemandsResponse.prototype = new Message();

GetFriendDemandsResponse.prototype.constructor = GetFriendDemandsResponse;

GetFriendDemandsResponse.prototype.init = function() {
    this._GetFriendDemandsStatusSet = !1;
    this._friendDemands = [];
    this._friendDemandsSet = !1;
    return this;
};

GetFriendDemandsResponse.prototype.getGetFriendDemandsStatus = function() {
    return this._GetFriendDemandsStatus;
};

GetFriendDemandsResponse.prototype.setGetFriendDemandsStatus = function(c) {
    this._GetFriendDemandsStatus = c;
    this._GetFriendDemandsStatusSet = !0;
};

GetFriendDemandsResponse.prototype.isGetFriendDemandsStatusSet = function() {
    return this._GetFriendDemandsStatusSet;
};

GetFriendDemandsResponse.prototype.unSetGetFriendDemandsStatus = function() {
    this._GetFriendDemandsStatusSet = !1;
};

GetFriendDemandsResponse.prototype.getFriendDemands = function() {
    this._friendDemandsSet = !0;
    return this._friendDemands;
};

GetFriendDemandsResponse.prototype.setFriendDemands = function(c) {
    this._friendDemands = c;
    this._friendDemandsSet = !0;
};

GetFriendDemandsResponse.prototype.isfriendDemandsSet = function() {
    return this._friendDemandsSet;
};

GetFriendDemandsResponse.prototype.unSetfriendDemands = function() {
    this._friendDemandsSet = !1;
};

GetFriendDemandsResponse.prototype.getDomainID = function() {
    return GetFriendDemandsResponse.domainID;
};

GetFriendDemandsResponse.prototype.getSerializerID = function() {
    return GetFriendDemandsResponse.serializerID;
};

GetFriendDemandsResponse.prototype.toString = function() {
    var c;
    c = "[GetFriendDemandsResponse --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._GetFriendDemandsStatusSet && 0 == Utils.isNull(this._GetFriendDemandsStatus) && (c += "_GetFriendDemandsStatus=" + this._GetFriendDemandsStatus + "| ");
    1 == this._friendDemandsSet && 0 == Utils.isNull(this._friendDemands) && (c += "_friendDemands=" + this._friendDemands + "| ");
    return c + "]";
};

GetFriendDemandsResponse.prototype.clone = function() {
    var c = new GetFriendDemandsResponse().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._GetFriendDemandsStatusSet && 0 == Utils.isNull(this._GetFriendDemandsStatus) && c.setGetFriendDemandsStatus(this._GetFriendDemandsStatus);
    if (1 == this._friendDemandsSet && 0 == Utils.isNull(this._friendDemands)) {
        for (var a = [], b = 0; b < this._friendDemands.length; ++b) {
            var e = this._friendDemands[b];
            null != e ? a.push(e.clone()) : a.push(null);
        }
        c.setFriendDemands(a);
    }
    return c;
};

GetFriendDemandsResponse.domainID = 100;

GetFriendDemandsResponse.serializerID = 10034;

FriendDemandNotification.prototype = new Message();

FriendDemandNotification.prototype.constructor = FriendDemandNotification;

FriendDemandNotification.prototype.init = function() {
    this._FriendDemandSet = !1;
    return this;
};

FriendDemandNotification.prototype.getFriendDemand = function() {
    return this._FriendDemand;
};

FriendDemandNotification.prototype.setFriendDemand = function(c) {
    this._FriendDemand = c;
    this._FriendDemandSet = !0;
};

FriendDemandNotification.prototype.isFriendDemandSet = function() {
    return this._FriendDemandSet;
};

FriendDemandNotification.prototype.unSetFriendDemand = function() {
    this._FriendDemandSet = !1;
};

FriendDemandNotification.prototype.getDomainID = function() {
    return FriendDemandNotification.domainID;
};

FriendDemandNotification.prototype.getSerializerID = function() {
    return FriendDemandNotification.serializerID;
};

FriendDemandNotification.prototype.toString = function() {
    var c;
    c = "[FriendDemandNotification --> ";
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && (c += "_StoreId=" + this._StoreId + "| ");
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && (c += "_SenderId=" + this._SenderId + "| ");
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && (c += "_MessageId=" + this._MessageId + "| ");
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && (c += "_RequestId=" + this._RequestId + "| ");
    1 == this._FriendDemandSet && 0 == Utils.isNull(this._FriendDemand) && (c += "_FriendDemand=" + this._FriendDemand + "| ");
    return c + "]";
};

FriendDemandNotification.prototype.clone = function() {
    var c = new FriendDemandNotification().init();
    1 == this._StoreIdSet && 0 == Utils.isNull(this._StoreId) && c.setStoreId(this._StoreId);
    1 == this._SenderIdSet && 0 == Utils.isNull(this._SenderId) && c.setSenderId(this._SenderId);
    1 == this._MessageIdSet && 0 == Utils.isNull(this._MessageId) && c.setMessageId(this._MessageId);
    1 == this._RequestIdSet && 0 == Utils.isNull(this._RequestId) && c.setRequestId(this._RequestId);
    1 == this._FriendDemandSet && 0 == Utils.isNull(this._FriendDemand) && c.setFriendDemand(this._FriendDemand.clone());
    return c;
};

FriendDemandNotification.domainID = 100;

FriendDemandNotification.serializerID = 3029;

NSystem.prototype.init = function() {
    return this;
};

NSystem.currentTimeMillis = function() {
    return new Date().getTime();
};

var innerActive_aid = "Nuggeta_test_JS_other";

AdApiImpl.prototype.init = function() {
    return this;
};

AdApiImpl.prototype.displayBannerAd = function(c) {
    getInnerActiveAd(c, "");
    return !0;
};

AdApiImpl.prototype.displayInterstitialAd = function(c) {
    createInnerActiveSplashAd();
    showSplash();
    return !0;
};

NStorage.prototype.init = function() {
    return this;
};

NStorage.getItem = function(c) {
    return localStorage[c];
};

NStorage.setItem = function(c, a) {
    localStorage[c] = a;
};

NAlert.prototype.init = function() {
    return this;
};

NAlert.prototype.show = function(c) {
    console.log(c);
    var a = document.createElement("div");
    a.style.backgroundColor = "rgb(218, 48, 48)";
    a.style.textAlign = "center";
    a.style.position = "fixed";
    a.style.top = "0px";
    a.style.fontSize = "12px";
    a.style.color = "#FFF";
    a.style.padding = "10px";
    a.style.maxWidth = "350px";
    a.style.borderBottomLeftRadius = "5px";
    a.style.borderBottomRightRadius = "5px";
    a.innerHTML = c + "<br/><br/>";
    c = document.createElement("button");
    c.style.padding = "5px";
    c.innerHTML = "Tap to close";
    c.style.borderRadius = "5px";
    var b = function() {
        document.body.removeChild(a);
    };
    c.onclick = b;
    c.addEventListener("touchend", b);
    a.appendChild(c);
    document.body.appendChild(a);
    a.style.left = window.innerWidth / 2 - a.offsetWidth / 2 + "px";
};

NLoggerImpl.prototype.init = function() {
    return this;
};

NLoggerImpl.prototype.errorCause = function(c, a) {
    console.log("[ERROR] " + c + " cause : " + a);
};

NLoggerImpl.prototype.error = function(c) {
    console.log("[ERROR] " + c);
};

NLoggerImpl.prototype.info = function(c) {
    console.log("[INFO] " + c);
};

NLoggerImpl.prototype.infoCause = function(c, a) {
    console.log("[INFO] " + c + " cause : " + a);
};

NLoggerImpl.prototype.debug = function(c) {
    console.log("[DEBUG] " + c);
};

NLoggerImpl.prototype.debugCause = function(c, a) {
    console.log("[DEBUG] " + c + " cause : " + a);
};

NLoggerImpl.prototype.warn = function(c) {
    console.log("[WARM] " + c);
};

NLoggerImpl.prototype.warnCause = function(c, a) {
    console.log("[WARM] " + c + " cause : " + a);
};

NLoggerImpl.prototype.isDebug = function() {
    return NLoggerImpl.DEBUG;
};

NLoggerImpl.DEBUG = !1;

MemoryManagement.prototype.init = function() {
    return this;
};

MemoryManagement.free = function() {};

MemoryManagement.dupString = function(c) {
    return c;
};

MemoryManagement._clone = function(c) {
    return c;
};

NConnectionConf.prototype.init = function() {
    return this;
};

NConnectionConf.getLayers = function() {
    return "wsock/http";
};

NHttpRequestImpl.prototype.init = function() {
    return this;
};

NHttpRequestImpl.prototype.get = function(c, a, b, e) {
    var f = this;
    this.id = c;
    this.initHTTPRequest(e);
    c = ("https:" == document.location.protocol ? "https://" : "http://") + a.substring(6);
    this.xhr_object && (f.xhr_object.open("GET", c, !0), f.xhr_object.onreadystatechange = function() {
        4 == f.xhr_object.readyState && (200 == f.xhr_object.status ? b(f.xhr_object.responseText) : e());
        0 >= f.xhr_object.readyState && e();
    }, this.xhr_object.send(null));
};

NHttpRequestImpl.prototype.post = function(c, a, b, e, f) {
    var d = this;
    this.id = c;
    c = ("https:" == document.location.protocol ? "https://" : "http://") + a.substring(6);
    this.initHTTPRequest(f);
    this.xhr_object && (d.xhr_object.open("POST", c, !0), d.xhr_object.onreadystatechange = function() {
        4 == d.xhr_object.readyState && (200 == d.xhr_object.status ? e(d.xhr_object.responseText) : f());
        0 >= d.xhr_object.readyState && f();
    }, this.xhr_object.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), 
    this.xhr_object.send(b));
};

NHttpRequestImpl.prototype.initHTTPRequest = function(c) {
    window.XMLHttpRequest ? this.xhr_object = new XMLHttpRequest() : window.ActiveXObject ? this.xhr_object = new ActiveXObject("Microsoft.XMLHTTP") : c();
};

NSocketImpl.prototype.init = function() {
    return this;
};

NSocketImpl.prototype.openConnection = function(c, a, b, e, f, d, h, g) {
    var k = this;
    this.connectionOpenedHandler = f;
    this.connectionLostHandler = d;
    this.connectionFailHandler = h;
    this.connectionReceivedHandler = g;
    this.log = NLoggerFactory.getLogger("WebSocket[" + c + "]");
    if ("https:" == document.location.protocol) h(); else return this.connection = new WebSocket(e, "plug"), 
    this.connection.onopen = function() {
        k.started = !0;
        k.receiveResponse = !0;
        k.wasClean = !1;
        f();
    }, this.connection.onerror = function(a) {
        k.receiveResponse = !0;
        h();
    }, this.connection.onmessage = function(a) {
        a.data && g(a.data);
    }, this.connection.onclose = function(a) {
        k.receiveResponse = !0;
        1 == k.wasClean ? k.wasClean = !1 : 1 != a.wasClean && (k.started ? d() : h());
    }, setTimeout(function() {
        k.receiveResponse || h();
    }, 3e3), this;
};

NSocketImpl.prototype.close = function() {
    this.wasClean = !0;
    this.connection.close();
};

NSocketImpl.prototype.sendString = function(c) {
    try {
        this.connection.send(c);
    } catch (a) {
        this.log.error("sendMessage error " + a.message), this.connectionLostHandler();
    }
};

NSocketImpl.prototype.drain = function(c) {
    c();
};

NUrlEncoder.prototype.init = function() {
    return this;
};

NUrlEncoder.encode = function(c, a) {
    return encodeURIComponent(c);
};

NUrlEncoder.decode = function(c, a) {
    return decodeURIComponent(c);
};

var nCurrentPopup = null;

Net.prototype.init = function() {
    return this;
};

Net.openURL = function(c) {
    var a = 200, b = 200;
    screen && (a = screen.width / 2 - 600, b = screen.height / 2 - 400);
    a = window.open(c, "_blank", "height=400,width=600,left=" + a + ",top=" + b);
    null == a || "undefined" == typeof a ? alert("Turn off your pop-up blocker!\n\nWe try to open the following url:\n" + c) : a.focus();
};

Net.openWebView = function(c) {
    var a = parseInt(document.width) / 2 - 250, b = parseInt(screen.height) / 2 - 300;
    nCurrentPopup = window.open(c, "_blank", "left=" + a + ",top=" + b + "scrollbars=no,toolbar=no,menubar=no,location=no,height=300,width=500");
    null == nCurrentPopup || "undefined" == typeof nCurrentPopup ? alert("Turn off your pop-up blocker!\n\nWe try to open the following url:\n" + c) : nCurrentPopup.focus();
};

Net.closeWebView = function() {
    null != nCurrentPopup && nCurrentPopup.close();
};

Notifications.prototype.init = function() {
    return this;
};

Notifications.toast = function(c) {};

Platform.prototype.init = function() {
    return this;
};

Platform.get = function() {
    return "HTML5:" + navigator.userAgent;
};

Platform.isHTMLPlatform = function() {
    return !1;
};

SecurityUtils.prototype.init = function() {
    return this;
};

SecurityUtils.SHA1 = function(c) {
    return "";
};

ByteBuffer.prototype.init = function() {
    return this;
};

ByteUtil.prototype.init = function() {
    return this;
};

ByteUtil.getBytes = function(c) {
    c = c.replace(/\r\n/g, "\n");
    for (var a = [], b = 0, e = 0; e < c.length; e++) {
        var f = c.charCodeAt(e);
        128 > f ? a[b++] = f : (2048 > f ? a[b++] = f >> 6 | 192 : (a[b++] = f >> 12 | 224, 
        a[b++] = f >> 6 & 63 | 128), a[b++] = f & 63 | 128);
    }
    return a;
};

ByteUtil.getString = function(c) {
    for (var a = [], b = 0, e = 0; b < c.length; ) {
        var f = c[b++];
        if (128 > f) a[e++] = String.fromCharCode(f); else if (191 < f && 224 > f) {
            var d = c[b++];
            a[e++] = String.fromCharCode((f & 31) << 6 | d & 63);
        } else {
            var d = c[b++], h = c[b++];
            a[e++] = String.fromCharCode((f & 15) << 12 | (d & 63) << 6 | h & 63);
        }
    }
    return a.join("");
};

StrBuilder.prototype.init = function(c) {
    this.builder = new String(c);
    this._position = 0;
    return this;
};

StrBuilder.prototype.substring = function(c, a) {
    return this.builder.substring(c, a);
};

StrBuilder.prototype.appendString = function(c) {
    this.builder += c;
};

StrBuilder.prototype.length1 = function() {
    return this.builder.length;
};

StrBuilder.prototype.replace = function(c, a, b) {
    this.builder = this.builder.substring(0, c) + b + this.builder.substring(a);
};

StrBuilder.prototype.insert = function(c, a) {
    this.builder = this.builder.substring(0, c) + a + this.builder.substring(c);
};

StrBuilder.prototype.toString = function() {
    return this.builder;
};

Utils.prototype.init = function() {
    return this;
};

Utils.NULL_INTEGER = null;

Utils.NULL_SHORT = null;

Utils.NULL_LONG = null;

Utils.NULL_FLOAT = null;

Utils.NULL_DOUBLE = null;

Utils.NULL_BOOLEAN = null;

Utils.NULL_BYTE = null;

Utils.NULL_DATE = null;

Utils.isNull = function(c) {
    return null == c;
};

Utils.isNullInteger = function(c) {
    return null == c;
};

Utils.isNullShort = function(c) {
    return null == c;
};

Utils.isNullLong = function(c) {
    return null == c;
};

Utils.isNullLong = function(c) {
    return null == c;
};

Utils.isNullDouble = function(c) {
    return null == c;
};

Utils.isNullBoolean = function(c) {
    return null == c;
};

Utils.isNullByte = function(c) {
    return null == c;
};

Utils.isNullDate = function(c) {
    return null == c;
};

DUST.PLUGINS = DUST.PLUGINS || {};

DUST.PLUGINS.NUGGETA = {};

DUST.PLUGINS.NUGGETA.events = {
    NETWORK_CONNECTED: "network.connected",
    NETWORK_DISCONNECTED: "network.disconnected",
    NETWORK_GAME_JOINED: "network.game.joined",
    NETWORK_GAME_STARTED: "network.game.started",
    NETWORK_GAME_ENDED: "network.game.ended",
    NETWORK_GAME_PLAYER_JOINED: "network.game.player.joined",
    NETWORK_GAME_PLAYER_LEFT: "network.game.player.left",
    NETWORK_GAME_MESSAGE_SEND: "network.game.message.send",
    NETWORK_GAME_MESSAGE_RECEIVED: "network.game.message.received"
};

DUST.PLUGINS.NUGGETA.Io = function(events, event) {
    "use strict";
    var Io = function(api, gameName) {
        this.api = api;
        this.gameName = gameName;
    };
    Io.prototype = {
        game: null,
        player: null,
        setPlayer: function(player) {
            this.player = player;
        },
        event: function(e) {
            event.broadcast(e.event, e.data);
            console.log(e.event, e.data);
        },
        findGame: function() {
            var self = this, query = new NuggetaQuery();
            query.init();
            query.setQuery("$WHERE GameRunningState.Value = " + GameRunningState.PENDING._value);
            this.api.getGamesRequest(query, function(response) {
                var games = response.getGames();
                games.forEach(function(game) {
                    if (!self.game) {
                        self.game = game._Id;
                    }
                });
                if (!self.game) {
                    self.createGame();
                } else {
                    self.joinGame();
                }
            });
        },
        createGame: function() {
            var self = this, game = new NGame().init(), gameCharacteristics = new NGameCharacteristics().init();
            game.setName(this.gameName);
            gameCharacteristics.setMinPlayer(2);
            gameCharacteristics.setAutoStop(true);
            gameCharacteristics.setAutoStart(true);
            game.setGameCharacteristics(gameCharacteristics);
            this.api.createGameRequest(game, function(response) {
                if (response.getCreateGameStatus() === CreateGameStatus.SUCCESS) {
                    self.game = response.getGameId();
                    self.joinGame();
                } else {
                    self.event({
                        event: events.NETWORK_GAME_ENDED,
                        data: self.game
                    });
                }
            });
        },
        joinGame: function() {
            var self = this;
            this.api.joinGameRequest(this.game, function(response) {
                var status = response.getJoinGameStatus(), game = response.getGame(), players = game.getPlayers();
                if (status === JoinGameStatus.ACCEPTED) {
                    self.event({
                        event: events.NETWORK_GAME_JOINED,
                        data: self.game
                    });
                    players.forEach(function(player) {
                        if (player.getId() !== self.player.getId()) {
                            self.event({
                                event: events.NETWORK_GAME_PLAYER_JOINED,
                                data: player
                            });
                        }
                    });
                }
            });
        }
    };
    return Io;
}(DUST.PLUGINS.NUGGETA.events, DUST.event);

DUST.PLUGINS.NUGGETA.Plug = function(Io, events, event) {
    "use strict";
    var Plug = function(url, gameName) {
        this.gameName = gameName;
        this.url = url;
        this.configure();
        this.run();
    };
    Plug.prototype = {
        plug: null,
        api: null,
        reconnectHandler: null,
        reconnectTime: 10 * 1e3,
        configure: function() {
            var self = this;
            this.plug = new NuggetaGamePlug().init(this.url);
            this.api = this.plug.gameApi();
            this.connected = false;
            this.api.addGameRunningStateChangeHandler(function(response) {
                if (response.getGameRunningState() === GameRunningState.RUNNING) {
                    self.io.event({
                        event: events.NETWORK_GAME_STARTED,
                        data: response.getGameRunningState()
                    });
                }
                if (response.getGameRunningState() === GameRunningState.FINISHED) {
                    self.io.event({
                        event: events.NETWORK_GAME_ENDED,
                        data: response.getGameRunningState()
                    });
                }
            });
            this.api.addPlayerEnterGameHandler(function(response) {
                self.io.event({
                    event: events.NETWORK_GAME_PLAYER_JOINED,
                    data: response.getPlayer()
                });
            });
            this.api.addPlayerUnjoinGameHandler(function(response) {
                self.io.event({
                    event: events.NETWORK_GAME_PLAYER_LEFT,
                    data: response.getPlayer()
                });
            });
            this.plug.addNRawGameMessageHandler(function(response) {
                event.broadcast(events.NETWORK_GAME_MESSAGE_RECEIVED, JSON.parse(response.getContent()));
            });
            event.on(events.NETWORK_GAME_MESSAGE_SEND, function(message) {
                var rawGameMessage = new NRawGameMessage().init();
                rawGameMessage.setContent("" + JSON.stringify(message));
                if (self.connected) {
                    self.plug.sendGameMessage(rawGameMessage, self.io.game);
                }
            });
            this.io = new Io(this.api, this.gameName);
        },
        onUpdate: function() {
            return this.api && this.api.pump();
        },
        onPaused: function() {},
        onResume: function() {},
        onExit: function() {
            this.io.event({
                event: events.NETWORK_DISCONNECTED,
                data: null
            });
            return this.plug && this.plug.stop();
        },
        run: function() {
            var self = this;
            this.plug.setStartResponseHandler(function(response) {
                var player = response.getPlayer();
                if (response.getStartStatus() === StartStatus.READY) {
                    self.io.event({
                        event: events.NETWORK_CONNECTED,
                        data: response
                    });
                    self.io.setPlayer(player);
                    self.io.findGame();
                    self.connected = true;
                } else {
                    self.io.event({
                        event: events.NETWORK_DISCONNECTED,
                        data: response
                    });
                    self.connected = false;
                    self.reconnect();
                }
            });
            this.plug.start();
        },
        reconnect: function() {
            var self = this;
            if (this.reconnectHandler) {
                window.clearTimeout(this.reconnectHandler);
            }
            this.reconnectHandler = window.setTimeout(function() {
                if (self.reconnectTime < 100 * 1e3) {
                    self.reconnectTime += 10 * 1e3;
                }
                self.plug.start();
            }, this.reconnectTime);
        }
    };
    return Plug;
}(DUST.PLUGINS.NUGGETA.Io, DUST.PLUGINS.NUGGETA.events, DUST.event);

var SQUARESCAPE = function(SQUARESCAPE) {
    "use strict";
    return SQUARESCAPE;
}(SQUARESCAPE || {});

SQUARESCAPE.assetList = function() {
    "use strict";
    return {
        audio: [ "squarescape/assets/audio/intro.mp3", "squarescape/assets/audio/music.mp3" ],
        audioSprite: [],
        graphic: [ "squarescape/assets/images/bg.png", "squarescape/assets/images/rotate.png", "squarescape/assets/images/sprites.png", "squarescape/assets/images/sprites.json" ]
    };
}();

SQUARESCAPE.GAME = {};

SQUARESCAPE.GAME.config = {
    grid: {
        rows: 24,
        cols: 16,
        groundHeight: 6
    },
    speed: -2,
    step: .028
};

SQUARESCAPE.GAME.SCENE = {};

SQUARESCAPE.GAME.state = function() {
    "use strict";
    var state = {};
    function setState(key, value) {
        state[key] = value;
    }
    function getState(key) {
        if (key) {
            return state[key];
        }
        return state;
    }
    return {
        setState: setState,
        getState: getState
    };
}();

SQUARESCAPE.COMPONENT = {};

SQUARESCAPE.COMPONENT.viewPort = function() {
    "use strict";
    return {
        width: 1024,
        height: 768,
        scaleLarge: 1,
        scaleSmall: 1,
        tipPoint: 1.2
    };
}();

SQUARESCAPE.COMPONENT.rotate = function(viewPort, scene, Entity) {
    "use strict";
    var optionsBackground = {
        asset: "squarescape/assets/images/bg.png",
        x: 0,
        y: 0,
        anchor: {
            y: 0,
            x: .5
        },
        scale: {
            x: 6,
            y: 7
        },
        container: scene,
        type: "spriteFromFrame",
        name: "rotate.background"
    };
    var optionsForeground = {
        asset: "squarescape/assets/images/rotate.png",
        x: 0,
        y: viewPort.height / 2,
        anchor: {
            y: .5,
            x: .5
        },
        scale: {
            x: .5,
            y: .5
        },
        container: scene,
        type: "spriteFromFrame",
        name: "rotate.foreground"
    };
    var rotate = {
        background: null,
        foreground: null,
        show: function() {
            if (!rotate.background) {
                optionsBackground.at = scene.children.length;
                rotate.background = new Entity(optionsBackground).sprite;
                optionsForeground.at = scene.children.length;
                rotate.foreground = new Entity(optionsForeground).sprite;
            }
        },
        hide: function() {
            if (rotate.background) {
                rotate.background.parent.removeChild(rotate.background);
                rotate.foreground.parent.removeChild(rotate.foreground);
                rotate.background = null;
                rotate.foreground = null;
            }
        }
    };
    return rotate;
}(SQUARESCAPE.COMPONENT.viewPort, DUST.GRAPHIC.scene, DUST.GRAPHIC.Entity);

SQUARESCAPE.COMPONENT.keyboard = function(event) {
    "use strict";
    var listener = function(ev) {
        switch (ev.keyCode) {
          case 32:
          case 38:
            event.broadcast("game.tap");
            break;
        }
    };
    function bindKeyboard() {
        window.addEventListener("keydown", listener, false);
    }
    function unbindKeyboard() {
        window.removeEventListener("keydown", listener);
    }
    event.on("game.start", function() {
        bindKeyboard();
    });
    event.on("game.stop", function() {
        unbindKeyboard();
    });
}(DUST.event);

SQUARESCAPE.COMPONENT.LAYERS = {};

SQUARESCAPE.COMPONENT.LAYERS.bottom = function(scene, Entity) {
    "use strict";
    return new Entity({
        x: 0,
        y: 0,
        container: scene,
        type: "container",
        name: "layer.bottom"
    });
}(DUST.GRAPHIC.scene, DUST.GRAPHIC.Entity);

SQUARESCAPE.COMPONENT.LAYERS.middle = function(scene, Entity) {
    "use strict";
    return new Entity({
        x: 0,
        y: 0,
        container: scene,
        type: "container",
        name: "layer.middle"
    });
}(DUST.GRAPHIC.scene, DUST.GRAPHIC.Entity);

SQUARESCAPE.COMPONENT.LAYERS.top = function(scene, Entity) {
    "use strict";
    return new Entity({
        x: 0,
        y: 0,
        container: scene,
        type: "container",
        name: "layer.top"
    });
}(DUST.GRAPHIC.scene, DUST.GRAPHIC.Entity);

SQUARESCAPE.COMPONENT.grid = function(viewPort, rows, cols, groundHeight) {
    "use strict";
    var Cell = function(pos, w, h) {
        this.width = w;
        this.height = h;
        this.anchor = [ pos[0], pos[1] + h / 2 ];
    };
    var Grid = function(viewPort, rowsNum, colsNum, groundHeight) {
        var self = this;
        this.viewPort = viewPort;
        this.rowsNum = rowsNum;
        this.groundHeight = groundHeight;
        this.cellWidth = viewPort.width / colsNum;
        this.cellHeight = viewPort.height / rowsNum;
        this.cols = [];
        Object.defineProperties(this, {
            colsNum: {
                get: function() {
                    return self.cols.length;
                }
            }
        });
        this.ensureColCount(colsNum);
    };
    Grid.prototype.ensureColCount = function(num) {
        while (this.colsNum < num) {
            this.pushEmptyCol();
        }
    };
    Grid.prototype.pushEmptyCol = function() {
        var currentCol = [];
        while (currentCol.length < this.rowsNum) {
            currentCol.push(this.createCellInRowCol(currentCol.length, this.colsNum));
        }
        this.cols.push(currentCol);
    };
    Grid.prototype.getCell = function(row, col) {
        this.ensureColCount(col + 1);
        row = this.rowsNum - 1 - row - this.groundHeight;
        return this.cols[col][row];
    };
    Grid.prototype.getCol = function(n) {
        return this.cols[n];
    };
    Grid.prototype.getLastCol = function() {
        return this.getCol((this.cols || []).length - 1);
    };
    Grid.prototype.getFirstCol = function() {
        return this.getCol(0);
    };
    Grid.prototype.createCellInPos = function(x, y) {
        return new Cell([ x, y ], this.cellWidth, this.cellHeight);
    };
    Grid.prototype.createCellInRowCol = function(row, col) {
        var x = col * this.cellWidth - viewPort.width / 2;
        var y = row * this.cellHeight;
        return this.createCellInPos(x, y);
    };
    Grid.prototype.shiftCol = function() {
        return this.cols.shift();
    };
    Grid.prototype.pushCol = function() {};
    return new Grid(viewPort, rows, cols, groundHeight);
}(SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.GAME.config.grid.rows, SQUARESCAPE.GAME.config.grid.cols, SQUARESCAPE.GAME.config.grid.groundHeight);

SQUARESCAPE.COMPONENT.background = function(event, Entity, viewPort, bottom) {
    "use strict";
    var Background = function() {
        var self = this;
        this.entity = [ new Entity({
            asset: "bg.png",
            x: viewPort.width * 2 - 2,
            y: 0,
            anchor: {
                x: .5,
                y: 0
            },
            container: bottom,
            type: "spriteFromFrame",
            name: "background"
        }), new Entity({
            asset: "bg.png",
            x: viewPort.width - 1,
            y: 0,
            anchor: {
                x: .5,
                y: 0
            },
            container: bottom,
            type: "spriteFromFrame",
            name: "background"
        }), new Entity({
            asset: "bg.png",
            x: 0,
            y: 0,
            anchor: {
                x: .5,
                y: 0
            },
            container: bottom,
            type: "spriteFromFrame",
            name: "background"
        }), new Entity({
            asset: "bg.png",
            x: -viewPort.width + 1,
            y: 0,
            anchor: {
                x: .5,
                y: 0
            },
            container: bottom,
            type: "spriteFromFrame",
            name: "background"
        }), new Entity({
            asset: "bg.png",
            x: -viewPort.width * 2 + 2,
            y: 0,
            anchor: {
                x: .5,
                y: 0
            },
            container: bottom,
            type: "spriteFromFrame",
            name: "background"
        }) ];
        event.on("game.color", function(color) {
            self.entity.forEach(function(bg) {
                bg.sprite.tint = parseInt("0x" + color, 16);
            });
        });
        event.on("game.move", function(amount) {
            self.entity.forEach(function(bg) {
                bg.sprite.x -= amount * 128 / 6;
                if (bg.sprite.x < bg.properties.x - 1024) {
                    bg.sprite.x = bg.properties.x;
                }
            });
        });
        event.on("game.start", function() {
            self.entity.forEach(function(bg) {
                bg.sprite.interactive = bg.sprite.buttonMode = true;
            });
        });
        event.on("game.stop", function() {
            self.entity.forEach(function(bg) {
                bg.sprite.interactive = bg.sprite.buttonMode = false;
            });
        });
        self.entity.forEach(function(bg) {
            bg.sprite.touchstart = bg.sprite.mousedown = function() {
                event.broadcast("game.tap");
            };
        });
        return this;
    }, instance = null;
    return function() {
        if (!instance) {
            instance = new Background();
        }
        return instance;
    };
}(DUST.event, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.bottom);

SQUARESCAPE.COMPONENT.shadow = function(event, scene, Entity, viewPort, bottom) {
    "use strict";
    var Shadow = function() {
        var self = this;
        this.entity = new Entity({
            asset: "shadow.png",
            x: 0,
            y: 0,
            anchor: {
                x: .5,
                y: 0
            },
            scale: {
                x: 1,
                y: 1
            },
            container: bottom,
            type: "spriteFromFrame",
            name: "shadow"
        });
        this.resize = function() {
            self.entity.sprite.width = window.innerWidth / scene.scale.x;
        };
        this.resize();
        window.addEventListener("resize", this.resize);
        window.addEventListener("deviceOrientation", this.resize);
        return this;
    }, instance = null;
    return function() {
        if (!instance) {
            instance = new Shadow();
        }
        return instance;
    };
}(DUST.event, DUST.GRAPHIC.scene, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.bottom);

SQUARESCAPE.COMPONENT.floor = function(event, stage, Entity, config, viewPort, middle) {
    "use strict";
    var Floor = function() {
        var self = this;
        this.mover = new Entity({
            x: 0,
            y: 0,
            invisible: true,
            name: "mover",
            physics: {
                mass: 0,
                enable: true,
                kinematic: true,
                width: 1,
                height: 1,
                collisionGroup: Math.pow(2, 2),
                collisionMask: Math.pow(2, 2)
            }
        });
        this.mover.physics.velocity[0] = config.speed;
        this.plane = new Entity({
            x: 0,
            y: 576,
            invisible: true,
            name: "plane",
            physics: {
                mass: 0,
                enable: true,
                isPlane: true,
                collisionGroup: Math.pow(2, 0),
                collisionMask: Math.pow(2, 1)
            }
        });
        this.entity = [ new Entity({
            asset: "floor.png",
            x: viewPort.width * 2 - 2,
            y: 576,
            anchor: {
                x: .5,
                y: 0
            },
            container: middle,
            type: "spriteFromFrame",
            name: "floor"
        }), new Entity({
            asset: "floor.png",
            x: viewPort.width - 1,
            y: 576,
            anchor: {
                x: .5,
                y: 0
            },
            container: middle,
            type: "spriteFromFrame",
            name: "floor"
        }), new Entity({
            asset: "floor.png",
            x: 0,
            y: 576,
            anchor: {
                x: .5,
                y: 0
            },
            container: middle,
            type: "spriteFromFrame",
            name: "floor"
        }), new Entity({
            asset: "floor.png",
            x: -viewPort.width + 1,
            y: 576,
            anchor: {
                x: .5,
                y: 0
            },
            container: middle,
            type: "spriteFromFrame",
            name: "floor"
        }), new Entity({
            asset: "floor.png",
            x: -viewPort.width * 2 + 2,
            y: 576,
            anchor: {
                x: .5,
                y: 0
            },
            container: middle,
            type: "spriteFromFrame",
            name: "floor"
        }) ];
        this.plane.physics.name = "floor";
        this.plane.physics.angle = Math.PI;
        event.on("game.move", function(amount) {
            self.entity.forEach(function(floor) {
                floor.sprite.x -= amount * 128;
                if (floor.sprite.x < floor.properties.x - 1024) {
                    floor.sprite.x = floor.properties.x;
                }
            });
        });
        event.on("player.killed", function() {
            self.mover.physics.previousPosition[0] = 0;
            self.mover.physics.position[0] = 0;
        });
        event.on("game.start", function() {
            self.entity.forEach(function(bg) {
                bg.sprite.interactive = bg.sprite.buttonMode = true;
            });
        });
        event.on("game.stop", function() {
            self.entity.forEach(function(bg) {
                bg.sprite.interactive = bg.sprite.buttonMode = false;
            });
        });
        self.entity.forEach(function(bg) {
            bg.sprite.touchstart = bg.sprite.mousedown = function() {
                event.broadcast("game.tap");
            };
        });
        stage.addToLoop(function() {
            event.broadcast("game.move", self.mover.physics.previousPosition[0] - self.mover.physics.position[0]);
            event.broadcast("game.position", self.mover.physics.position[0]);
        }, "testmeloop");
        return this;
    }, instance = null;
    return function() {
        if (!instance) {
            instance = new Floor();
        }
        return instance;
    };
}(DUST.event, DUST.GRAPHIC.stage, DUST.GRAPHIC.Entity, SQUARESCAPE.GAME.config, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.middle);

SQUARESCAPE.COMPONENT.Tail = function(bottom, textureFromFile, particle) {
    "use strict";
    var texture = textureFromFile("squarescape/assets/animations/particle.png");
    return function() {
        var self = this;
        this.emitter = new Proton.BehaviourEmitter();
        this.emitter.rate = new Proton.Rate(1, .02);
        this.emitter.addInitialize(new Proton.Mass(1));
        this.emitter.addInitialize(new Proton.Life(.5, 1));
        this.emitter.addInitialize(new Proton.ImageTarget(texture));
        this.emitter.addInitialize(new Proton.V(new Proton.Span(7, 12), new Proton.Span(265, 290), "polar"));
        this.emitter.addBehaviour(new Proton.Color("ffffff"));
        this.emitter.addBehaviour(new Proton.Alpha(1, .1));
        this.emitter.addBehaviour(new Proton.Scale(2, .01));
        this.emitter.alpha = 0;
        particle(bottom.sprite).engine.addEmitter(this.emitter);
        this.start = function() {
            self.running = true;
            self.emitter.emit();
        };
        this.stop = function() {
            self.running = false;
            self.emitter.stopEmit();
        };
        this.move = function(position) {
            self.emitter.p.x = position.x - 5;
            self.emitter.p.y = position.y + 15;
        };
    };
}(SQUARESCAPE.COMPONENT.LAYERS.bottom, DUST.GRAPHIC.HELPERS.textureFromFile, DUST.particle);

SQUARESCAPE.COMPONENT.Explosion = function(bottom, textureFromFile, particle) {
    "use strict";
    var texture = textureFromFile("squarescape/assets/animations/particle_pink.png"), secondTexture = textureFromFile("squarescape/assets/animations/particle.png");
    return function(yellow, life, velocity) {
        var self = this, targetTexture = texture;
        if (yellow) {
            targetTexture = secondTexture;
        }
        this.emitter = new Proton.BehaviourEmitter();
        this.emitter.rate = new Proton.Rate(1 * (life || 1), .01);
        this.emitter.addInitialize(new Proton.Mass(1));
        this.emitter.addInitialize(new Proton.Life(.25, life || .5));
        this.emitter.addInitialize(new Proton.ImageTarget(targetTexture));
        this.emitter.addInitialize(new Proton.V(new Proton.Span(5, velocity || 6), new Proton.Span(0, 360), "polar"));
        this.emitter.addBehaviour(new Proton.Color("ffffff"));
        this.emitter.addBehaviour(new Proton.Alpha(1, .1));
        this.emitter.addBehaviour(new Proton.Scale(3.5, .01));
        particle(bottom.sprite).engine.addEmitter(this.emitter);
        this.start = function(time) {
            self.running = true;
            self.emitter.emit();
            window.setTimeout(function() {
                self.stop();
            }, time || 50);
        };
        this.stop = function() {
            self.running = false;
            self.emitter.stopEmit();
        };
        this.move = function(position) {
            self.emitter.p.x = position.x + 20;
            self.emitter.p.y = position.y;
        };
    };
}(SQUARESCAPE.COMPONENT.LAYERS.bottom, DUST.GRAPHIC.HELPERS.textureFromFile, DUST.particle);

SQUARESCAPE.COMPONENT.Square = function(event, scene, stage, Entity, floor, viewPort, top, grid, Tail, Explosion, p2) {
    "use strict";
    var Square = function(settings) {
        this.settings = settings;
        this.configure();
        this.build();
        this.events();
        return this;
    };
    Square.prototype.configure = function() {
        this.cell = grid.getCell(this.settings.grid[0], this.settings.grid[1]);
        this.targetRotation = 0;
        this.explosion = new Explosion(true, 3, 7);
        this.settings.asset = "player_32.png";
        this.settings.container = top;
        this.settings.type = "spriteFromFrame";
        this.settings.physics = {
            enable: true,
            width: 32,
            height: 32,
            mass: 1e-5,
            fixedRotation: true,
            collisionGroup: Math.pow(2, 1),
            collisionMask: Math.pow(2, 0)
        };
        this.settings.anchor = {
            x: .5,
            y: .5
        };
        this.settings.x = this.cell.anchor[0];
        this.settings.y = this.cell.anchor[1];
    };
    Square.prototype.build = function() {
        var self = this;
        this.entity = new Entity(this.settings);
        this.entity.sprite.rotation = 0;
        this.entity.physics.name = this.settings.name;
        this.entity.onBeforeRemove = function() {
            self.tail.stop();
            stage.removeFromLoop(self.settings.name + ".tail.move");
        };
        this.tail = new Tail();
        this.tail.start();
        this.alive = true;
        stage.addToLoop(function() {
            self.loop();
        }, this.settings.name + ".tail.move");
    };
    Square.prototype.action = function(action, data, success) {
        var self = this, offset;
        if (action === "jump") {
            if (this.alive) {
                if (this.isColliding()) {
                    this.entity.physics.velocity[1] = -4.5;
                    this.targetRotation += Math.PI * 2;
                    success();
                }
            }
        }
        if (data) {
            offset = (data.x + data.offset + floor().mover.physics.position[0] * 128) / 128;
        }
        if (offset && this.alive && (action === "jump" || action === "sync")) {
            this.entity.physics.position[0] = offset;
            this.entity.physics.position[1] = data.y / 128;
        }
        if (action === "respawn") {
            this.entity.physics.velocity[0] = 0;
            this.entity.physics.velocity[1] = 0;
            this.entity.physics.position[0] = this.cell.anchor[0] / 128;
            this.entity.physics.position[1] = this.cell.anchor[1] / 128;
            this.alive = true;
            this.entity.animationEnable();
            this.entity.sprite.animate.fade(.5, function() {
                self.entity.animationDisable();
            });
        }
        if (action === "killed") {
            this.tail.stop();
            this.entity.sprite.alpha = 0;
            this.alive = false;
        }
    };
    Square.prototype.events = function() {
        var self = this;
        event.on(this.settings.name + ".kill", function() {
            self.destroy();
        });
        event.on(this.settings.name + ".respawn", function() {
            if (!self.alive) {
                self.alive = true;
                self.entity.physics.velocity[0] = 0;
                self.entity.physics.position[0] = self.cell.anchor[0] / 128;
                self.targetRotation = 0;
                self.entity.sprite.rotation = 0;
                self.entity.selfAttach();
                self.entity.animationEnable();
                self.entity.sprite.animate.fade(1, function() {
                    self.entity.animationDisable();
                });
                self.entity.physics.velocity[0] = 0;
                self.entity.physics.velocity[1] = 0;
                self.entity.physics.position[0] = self.cell.anchor[0] / 128;
                self.entity.physics.position[1] = self.cell.anchor[1] / 128;
                stage.addToLoop(function() {
                    self.loop();
                }, self.settings.name + ".tail.move");
            }
        });
        event.on("game.position", function(position) {
            self.offset = -position * 128;
        });
    };
    Square.prototype.loop = function() {
        if (this.entity) {
            if (this.entity.physics.position[0] < this.cell.anchor[0] / 128 && this.entity.physics.velocity[1] < -.5) {
                this.entity.physics.velocity[0] = -this.entity.physics.position[0] + this.cell.anchor[0] / 128;
                if (this.entity.physics.velocity[0] > 3) {
                    this.entity.physics.velocity[0] = 3;
                }
            } else {
                this.entity.physics.velocity[0] = 0;
            }
            if (this.targetRotation && this.targetRotation > this.entity.sprite.rotation) {
                this.entity.sprite.rotation += .2;
            } else if (this.targetRotation && this.targetRotation <= this.entity.sprite.rotation) {
                this.entity.sprite.rotation = this.targetRotation;
            }
            if (this.isColliding()) {
                if (!this.tail.running && this.alive) {
                    this.tail.start();
                }
                this.tail.move({
                    x: this.entity.sprite.x,
                    y: this.entity.sprite.y
                });
            } else {
                this.tail.stop();
            }
            if (this.settings.fragile) {
                if (this.entity.physics.position[0] < -3 && this.alive) {
                    this.destroy();
                }
            }
        }
    };
    Square.prototype.isColliding = function() {
        var world = this.entity.physics.world;
        for (var i = 0; i < world.narrowphase.contactEquations.length; i++) {
            var c = world.narrowphase.contactEquations[i];
            if (c.bodyA === this.entity.physics || c.bodyB === this.entity.physics) {
                var d = p2.vec2.dot(c.normalA, p2.vec2.fromValues(0, 1));
                if (c.bodyA === this.entity.physics) {
                    d *= -1;
                }
                if (d < -.5) {
                    return true;
                }
            }
        }
        return false;
    };
    Square.prototype.destroy = function() {
        if (this.alive) {
            this.alive = false;
            this.explosion.start(200);
            this.explosion.move({
                x: this.entity.sprite.x - 60,
                y: this.entity.sprite.y
            });
            this.entity.sprite.alpha = 0;
            this.entity.selfRemove();
            event.broadcast(this.settings.name + ".killed");
        }
    };
    return Square;
}(DUST.event, DUST.GRAPHIC.scene, DUST.GRAPHIC.stage, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.floor, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.top, SQUARESCAPE.COMPONENT.grid, SQUARESCAPE.COMPONENT.Tail, SQUARESCAPE.COMPONENT.Explosion, p2);

SQUARESCAPE.COMPONENT.playerGhost = function(event, events, Square) {
    "use strict";
    var playerGhost;
    return function() {
        if (!playerGhost) {
            playerGhost = new Square({
                name: "playerGhost",
                grid: [ 0, 6 ]
            });
            playerGhost.entity.sprite.alpha = .5;
            playerGhost.entity.sprite.tint = 65280;
            playerGhost.jumpSuccess = function() {
                console.log("ghost jumped");
            };
            event.on(events.NETWORK_GAME_STARTED, function() {
                playerGhost.online = true;
            });
            event.on(events.NETWORK_GAME_ENDED, function() {
                playerGhost.online = false;
            });
            event.on(events.NETWORK_GAME_MESSAGE_RECEIVED, function(data) {
                playerGhost.action(data.event, data, playerGhost.jumpSuccess);
            });
        }
        return playerGhost;
    };
}(DUST.event, DUST.PLUGINS.NUGGETA.events, SQUARESCAPE.COMPONENT.Square);

SQUARESCAPE.COMPONENT.player = function(event, events, Square, playerGhost) {
    "use strict";
    var player;
    return function() {
        if (!player) {
            player = new Square({
                name: "player",
                grid: [ 0, 6 ],
                fragile: true
            });
            player.jumpSuccess = function() {
                event.broadcast(events.NETWORK_GAME_MESSAGE_SEND, {
                    event: "jump",
                    x: player.entity.sprite.x,
                    y: player.entity.sprite.y,
                    offset: player.offset
                });
            };
            window.setInterval(function() {
                event.broadcast(events.NETWORK_GAME_MESSAGE_SEND, {
                    event: "sync",
                    x: player.entity.sprite.x,
                    y: player.entity.sprite.y,
                    offset: player.offset
                });
            }, 1e3);
            event.on("player.respawn", function() {
                event.broadcast(events.NETWORK_GAME_MESSAGE_SEND, {
                    event: "respawn",
                    x: player.entity.sprite.x,
                    y: player.entity.sprite.y,
                    offset: player.offset
                });
            });
            event.on("player.killed", function() {
                event.broadcast(events.NETWORK_GAME_MESSAGE_SEND, {
                    event: "killed",
                    x: player.entity.sprite.x,
                    y: player.entity.sprite.y,
                    offset: player.offset
                });
            });
            event.on(events.NETWORK_GAME_STARTED, function() {
                playerGhost();
                player.online = true;
            });
            event.on(events.NETWORK_GAME_ENDED, function() {
                player.online = false;
            });
            event.on("game.tap", function() {
                player.action("jump", null, player.jumpSuccess);
            });
        }
        return player;
    };
}(DUST.event, DUST.PLUGINS.NUGGETA.events, SQUARESCAPE.COMPONENT.Square, SQUARESCAPE.COMPONENT.playerGhost);

SQUARESCAPE.COMPONENT.ghost = function(event, Entity, top, grid, events, floor) {
    "use strict";
    var ghostCell = grid.getCell(0, 6);
    var Ghost = function() {
        var self = this, floorRef = floor();
        this.entity = new Entity({
            asset: "player_32.png",
            x: ghostCell.anchor[0],
            y: ghostCell.anchor[1],
            anchor: {
                x: .5,
                y: .5
            },
            scale: {
                x: 1,
                y: 1
            },
            container: top,
            type: "spriteFromFrame",
            name: "ghost"
        });
        this.entity.sprite.alpha = 0;
        event.on(events.NETWORK_GAME_MESSAGE_RECEIVED, function(data) {
            var offset = data.offset + floorRef.mover.physics.position[0] * 128;
            if (!data.alive) {
                self.entity.sprite.alpha = 0;
            } else {
                self.entity.sprite.alpha = .5;
            }
            self.entity.sprite.rotation = data.rotation;
            self.entity.sprite.x = data.x + offset;
            self.entity.sprite.y = data.y;
        });
        return this;
    }, instance = null;
    return function() {
        if (!instance) {
            instance = new Ghost();
        }
        return instance;
    };
}(DUST.event, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.LAYERS.top, SQUARESCAPE.COMPONENT.grid, DUST.PLUGINS.NUGGETA.events, SQUARESCAPE.COMPONENT.floor);

SQUARESCAPE.COMPONENT.buttonPlay = function(event, scenes, Entity, top, Explosion) {
    "use strict";
    var ButtonPlay = function() {
        var self = this;
        this.entity = new Entity({
            asset: "buttonPlay.png",
            x: 0,
            y: 300,
            anchor: {
                x: .5,
                y: .5
            },
            scale: {
                x: .8,
                y: .8
            },
            container: top,
            type: "spriteFromFrame",
            name: "buttonPlay"
        });
        this.explosion = new Explosion(true, 10, 12);
        this.entity.sprite.interactive = this.entity.sprite.buttonMode = true;
        this.entity.sprite.touchstart = this.entity.sprite.mousedown = function() {
            self.explosion.start();
            self.explosion.move({
                x: 0,
                y: 400
            });
            scenes.switch("main");
        };
        event.on("welcome.start", function() {
            self.entity.selfAttach();
        });
        event.on("game.start", function() {
            self.entity.selfRemove();
        });
        return this;
    }, instance = null;
    return function() {
        if (!instance) {
            instance = new ButtonPlay();
        }
        return instance;
    };
}(DUST.event, DUST.scenes, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.LAYERS.top, SQUARESCAPE.COMPONENT.Explosion);

SQUARESCAPE.COMPONENT.BLOCKS = {};

SQUARESCAPE.COMPONENT.BLOCKS.Block = function(event, stage, Entity, viewPort, middle, config, grid) {
    "use strict";
    var Block = function(row, col, version, offset, initial, inverted) {
        var self = this;
        this.initial = initial;
        this.cell = grid.getCell(row, col);
        this.entity = new Entity({
            asset: "block_32_" + (version || "middle") + ".png",
            x: offset,
            y: this.cell.anchor[1],
            anchor: {
                x: .5,
                y: .5
            },
            container: middle,
            type: "spriteFromFrame",
            name: "block" + row + col,
            physics: {
                enable: true,
                width: this.cell.width,
                height: this.cell.height,
                mass: 1e-4,
                fixedRotation: true,
                kinematic: true,
                collisionGroup: Math.pow(2, 0),
                collisionMask: Math.pow(2, 1)
            }
        });
        this.entity.selfRemove();
        this.entity.physics.velocity[0] = config.speed;
        this.entity.sprite.alpha = 0;
        if (inverted) {
            this.entity.sprite.rotation = Math.PI;
        }
        this.entity.onAfterAttach = function() {
            self.entity.animationEnable();
            self.entity.sprite.speed = .4 + Math.random() * .3;
            self.entity.sprite.acceleration = .2 + Math.random() * .1;
            self.entity.sprite.animate.fade(1, function() {
                self.entity.sprite.speed = 1;
                self.entity.sprite.acceleration = 0;
                self.entity.animationDisable();
            });
            stage.addToLoop(function() {
                if (self.entity.physics.position[0] < -3) {
                    self.fade();
                }
                if (self.entity.physics.position[0] < -6) {
                    self.destroy();
                }
            }, "platform.loop" + row + "_" + col);
        };
        this.entity.onBeforeRemove = function() {
            stage.removeFromLoop("platform.loop" + row + "_" + col);
        };
        this.entity.selfAttach();
        this.fade = function(action) {
            self.entity.animationEnable();
            self.entity.sprite.speed = .2 * Math.random() + .05;
            self.entity.sprite.acceleration = .5 * Math.random();
            self.entity.sprite.animate.fade(.01, function() {
                self.entity.sprite.speed = 1;
                self.entity.sprite.acceleration = 1;
                self.entity.animationDisable();
                if (action) {
                    action();
                }
            });
        };
        this.destroy = function() {
            self.entity.selfRemove();
            if (self.lastOne) {
                self.lastOne = false;
                event.broadcast("column.was.removed");
            }
        };
        return this;
    };
    return Block;
}(DUST.event, DUST.GRAPHIC.stage, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.middle, SQUARESCAPE.GAME.config, SQUARESCAPE.COMPONENT.grid);

SQUARESCAPE.COMPONENT.BLOCKS.Platform = function(event, stage, Entity, viewPort, middle, config, grid) {
    "use strict";
    var Platform = function(row, col, version, offset, initial) {
        var self = this;
        this.initial = initial;
        this.cell = grid.getCell(row, col);
        this.entity = new Entity({
            asset: "platform_32.png",
            x: offset,
            y: this.cell.anchor[1],
            anchor: {
                x: .5,
                y: .5
            },
            scale: {
                x: 1,
                y: 1
            },
            container: middle,
            type: "spriteFromFrame",
            name: "platform" + row + col,
            physics: {
                enable: true,
                width: this.cell.width,
                height: this.cell.height,
                mass: 1e-4,
                kinematic: true,
                collisionGroup: Math.pow(2, 0),
                collisionMask: Math.pow(2, 1)
            }
        });
        this.entity.selfRemove();
        this.entity.physics.velocity[0] = config.speed;
        this.entity.sprite.alpha = 0;
        this.entity.onAfterAttach = function() {
            self.entity.animationEnable();
            self.entity.sprite.speed = .4 + Math.random() * .3;
            self.entity.sprite.animate.fade(1, function() {
                self.entity.sprite.speed = 1;
                self.entity.sprite.acceleration = 0;
                self.entity.animationDisable();
            });
            stage.addToLoop(function() {
                if (self.entity.physics.position[0] < -3) {
                    self.fade();
                }
                if (self.entity.physics.position[0] < -6) {
                    self.destroy();
                }
            }, "platform.loop" + row + "_" + col);
        };
        this.entity.onBeforeRemove = function() {
            stage.removeFromLoop("platform.loop" + row + "_" + col);
        };
        this.entity.selfAttach();
        this.fade = function(action) {
            self.entity.animationEnable();
            self.entity.sprite.speed = Math.random() * .3 + .5;
            self.entity.sprite.acceleration = Math.random() * .1;
            self.entity.sprite.acceleration = 0;
            self.entity.sprite.animate.fade(.01, function() {
                self.entity.sprite.speed = 1;
                self.entity.sprite.acceleration = 1;
                self.entity.animationDisable();
                if (action) {
                    action();
                }
            });
        };
        this.destroy = function() {
            self.entity.selfRemove();
            if (self.lastOne) {
                self.lastOne = false;
                event.broadcast("column.was.removed");
            }
        };
        return this;
    };
    return Platform;
}(DUST.event, DUST.GRAPHIC.stage, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.middle, SQUARESCAPE.GAME.config, SQUARESCAPE.COMPONENT.grid);

SQUARESCAPE.COMPONENT.BLOCKS.Spikes = function(event, stage, Entity, viewPort, middle, config, grid) {
    "use strict";
    var Spikes = function(row, col, version, offset, initial, inverted) {
        var self = this;
        this.initial = initial;
        this.cell = grid.getCell(row, col);
        this.entity = new Entity({
            asset: "spikes_64_" + (version || 1) + ".png",
            x: offset,
            y: this.cell.anchor[1],
            anchor: {
                x: .5,
                y: .5
            },
            container: middle,
            type: "spriteFromFrame",
            name: "spike" + row + col,
            physics: {
                enable: true,
                width: this.cell.width - 6,
                height: this.cell.height - 6,
                mass: 1e-4,
                fixedRotation: true,
                kinematic: true,
                collisionGroup: Math.pow(2, 0),
                collisionMask: Math.pow(2, 1)
            }
        });
        this.entity.selfRemove();
        this.entity.physics.velocity[0] = config.speed;
        this.entity.physics.impactHandler = function(impact) {
            if (impact.bodyA.name === "player" || impact.bodyB.name === "player") {
                event.broadcast("player.kill");
            }
        };
        this.entity.sprite.alpha = 0;
        if (inverted) {
            this.entity.sprite.rotation = Math.PI;
        }
        this.entity.onAfterAttach = function() {
            self.entity.animationEnable();
            self.entity.sprite.speed = .4 + Math.random() * .3;
            self.entity.sprite.acceleration = .2;
            self.entity.sprite.animate.fade(1, function() {
                self.entity.sprite.speed = 1;
                self.entity.sprite.acceleration = 0;
                self.entity.animationDisable();
            });
            stage.addToLoop(function() {
                if (self.entity.physics.position[0] < -3) {
                    self.fade();
                }
                if (self.entity.physics.position[0] < -6) {
                    self.destroy();
                }
            }, "platform.loop" + row + "_" + col);
        };
        this.entity.onBeforeRemove = function() {
            stage.removeFromLoop("platform.loop" + row + "_" + col);
        };
        this.entity.selfAttach();
        this.fade = function(action) {
            self.entity.animationEnable();
            self.entity.sprite.speed = Math.random() * .3 + .5;
            self.entity.sprite.acceleration = Math.random() * .1;
            self.entity.sprite.acceleration = 0;
            self.entity.sprite.animate.fade(.01, function() {
                self.entity.sprite.speed = 1;
                self.entity.sprite.acceleration = 1;
                self.entity.animationDisable();
                if (action) {
                    action();
                }
            });
        };
        this.destroy = function() {
            self.entity.selfRemove();
            if (self.lastOne) {
                self.lastOne = false;
                event.broadcast("column.was.removed");
            }
        };
        return this;
    };
    return Spikes;
}(DUST.event, DUST.GRAPHIC.stage, DUST.GRAPHIC.Entity, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.LAYERS.middle, SQUARESCAPE.GAME.config, SQUARESCAPE.COMPONENT.grid);

SQUARESCAPE.COMPONENT.LEVEL = {};

SQUARESCAPE.COMPONENT.LEVEL.ColumnManager = function(Block, Platform, Spikes) {
    "use strict";
    var ColumnManager = function(column, colNum, initial) {
        this.column = column;
        this.colNum = colNum;
        this.initial = initial;
        this.items = [];
    };
    ColumnManager.prototype.types = {
        block: Block,
        platform: Platform,
        spikes: Spikes
    };
    ColumnManager.prototype.destroy = function() {
        this.items.forEach(function(obstacle) {
            obstacle.fade(function() {
                obstacle.destroy();
            });
        });
    };
    ColumnManager.prototype.load = function(prevX) {
        var self = this;
        if (isNaN(prevX)) {
            prevX = 0;
        }
        (this.column || []).forEach(function(item) {
            if (self.types[item.type]) {
                var Obstacle = self.types[item.type];
                var obstacle = new Obstacle(item.row, self.colNum, item.version, (prevX + 64 / 128) * 128, self.initial, item.inverted);
                self.items.push(obstacle);
            }
        });
        if (self.items.length === 0) {
            var watcher = new self.types.platform(-2, self.colNum, null, (prevX + 64 / 128) * 128, true);
            self.items.push(watcher);
            watcher.entity.sprite.visible = false;
        }
        self.items[0].lastOne = true;
    };
    return ColumnManager;
}(SQUARESCAPE.COMPONENT.BLOCKS.Block, SQUARESCAPE.COMPONENT.BLOCKS.Platform, SQUARESCAPE.COMPONENT.BLOCKS.Spikes);

SQUARESCAPE.COMPONENT.LEVEL.LevelManager = function(event, stage, ColumnManager) {
    "use strict";
    var LevelManager = function(level) {
        var self = this;
        this.level = level;
        this.columns = [];
        this.alive = true;
        this.init();
        event.on("player.killed", function() {
            if (self.alive) {
                self.reset();
            }
        });
    };
    LevelManager.prototype.destroy = function() {
        if (this.loader) {
            window.clearTimeout(this.loader);
        }
        this.alive = false;
        this.columns.forEach(function(column) {
            column.destroy();
        });
        while (this.columns.length) {
            this.columns.pop();
        }
    };
    LevelManager.prototype.reset = function() {
        var self = this;
        this.destroy();
        this.loader = window.setTimeout(function() {
            self.alive = true;
            event.broadcast("player.respawn");
            self.init(true);
        }, 4e3);
        return true;
    };
    LevelManager.prototype.init = function(restart) {
        var self = this;
        this.lastShowed = 25;
        this.level.forEach(function(column, colNum) {
            if (colNum < self.lastShowed) {
                self.processColumn(column, colNum, true);
            }
        });
        if (!restart) {
            event.on("column.was.removed", function() {
                if (self.alive) {
                    self.processColumn(self.level[self.lastShowed], self.lastShowed++);
                }
            });
        }
    };
    LevelManager.prototype.processColumn = function(column, colNum, initial) {
        var columnManager = new ColumnManager(column, colNum, initial);
        this.columns.push(columnManager);
        var prevX = 0;
        if (this.columns[this.columns.length - 2]) {
            var item = this.columns[this.columns.length - 2].items[0];
            prevX = item.entity.physics.position[0];
        }
        columnManager.load(prevX);
    };
    return LevelManager;
}(DUST.event, DUST.GRAPHIC.stage, SQUARESCAPE.COMPONENT.LEVEL.ColumnManager);

/*global SQUARESCAPE*/

SQUARESCAPE.COMPONENT.LEVEL.example = (function() {
    'use strict';

    var MAX_ROW = 17;
    var MIN_ROW = 0;
    var LAST_ROW = 0;

    function getPlanePlatforms(row, length) {
        var ret = [];
        for (var i = 0; i < length; i++) {
            ret.push([genPlatform(row)]);
        }
        LAST_ROW = row;
        return ret;
    }

    function genPlatform(row) {
        LAST_ROW = row;
        return {type: 'platform', row: row};
    }

    function getStairs(from, to, stepLenght) {
        stepLenght = stepLenght || 1;
        var dir = to > from;
        dir = dir > 0 ? 1 : -1;
        var curr = from;
        var ret = [];

        while (curr !== to) {
            ret = ret.concat(getPlanePlatforms(curr, stepLenght));
            curr += dir;
        }

        return ret;
    }

    function buildBlock(height, upsideDown, from, spikesProbability) {
        var ret = [],
            inverted = upsideDown;

        upsideDown = !!upsideDown;
        from = from || (upsideDown ? MAX_ROW : MIN_ROW);
        upsideDown = upsideDown ? -1 : 1;
        for (var i = 0; i < height; i++) {
            ret.push({type: 'block', row: from + upsideDown * i, version: 'middle', inverted: inverted});
        }

        var last = (ret[ret.length - 1] || {});

        if (Math.random() < spikesProbability) {
            last.type = 'spikes';
            last.version = getRandomInt(1, 4);
            last.inverted = inverted;
        } else {
            last.version = 'top';
        }

        if (!upsideDown) {
            LAST_ROW = height;
        }
        return ret;
    }

    function getPlaneBlocks(row, length, upsideDown, from) {
        var ret = [];
        for (var i = 0; i < length; i++) {
            ret.push(buildBlock(row, upsideDown, from));
        }
        LAST_ROW = row;
        return ret;
    }

    function getBlocksTunnel(row, length, height) {
        var ret = [];
        for (var i = 0; i < length; i++) {
            ret.push(getBlocksTunnelSection(row, height));
        }
        LAST_ROW = row;
        return ret;
    }

    function genRandomBlocksTunnel(current, length, height, goDownChances, goUpChances, spikesProbabilityTop, spikesProbabilityBottom) {
        var ret = [];
        goDownChances = goDownChances || 0.2;
        goUpChances = goUpChances || 0.2;

        spikesProbabilityTop = spikesProbabilityTop || 0.5;
        spikesProbabilityBottom = spikesProbabilityBottom || 0.05;

        function incCurrent() {
            var rand = Math.random();
            var val = rand < goDownChances ? -1 : (rand > (1 - goUpChances) ? 1 : 0);
            current += val;
            if (current > MAX_ROW - height) {
                current = MAX_ROW - height;
            }
            if (current < MIN_ROW) {
                current = MIN_ROW;
            }
            LAST_ROW = current;
            return current;
        }

        for (var i = 0; i < length; i++) {
            incCurrent();
            ret.push(getBlocksTunnelSection(current, height, spikesProbabilityTop, spikesProbabilityBottom));
        }

        return ret;
    }

    function getBlocksTunnelSection(row, height, spikesProbabilityTop, spikesProbabilityBottom) {
        var lowerBlock = buildBlock(Math.max(1, row), false, null, spikesProbabilityBottom);
        LAST_ROW = row;
        var higherBlockHeight = MAX_ROW - row - height;
        if (higherBlockHeight <= 1) {
            higherBlockHeight = 1;
        }

        var higherBlock = buildBlock(higherBlockHeight, true, null, spikesProbabilityTop);

        return lowerBlock.concat(higherBlock);
    }

    function genRandomPlatforms(current, length, goDownChances, goUpChances) {
        var oneBefore = current;
        var ret = [];
        goDownChances = goDownChances || 0.2;
        goUpChances = goUpChances || 0.2;

        function incCurrent() {
            var rand = Math.random();
            var val = rand < goDownChances ? -1 : (rand > (1 - goUpChances) ? 1 : 0);
            oneBefore = current;
            current += val;
            if (current > MAX_ROW) {
                current = MAX_ROW;
            }
            if (current < MIN_ROW) {
                current = MIN_ROW;
            }

            LAST_ROW = current;
            return current;
        }

        for (var i = 0; i < length; i++) {
            incCurrent();
            var col = [];
            col.push({type: 'platform', row: current});
            if (current !== oneBefore) {
                col.push({type: 'platform', row: oneBefore});
            }
            ret.push(col);
        }

        return ret;
    }

    function getEmptySpace(length) {
        if (length > 2) {
            LAST_ROW = 0;
        }

        return Array.apply(null, new Array(length)).map(function() {
            return [];
        });
    }

    function HERE_YOU_DIE() {
        return genRandomBlocksTunnel(LAST_ROW, 25, 8, 0, 0, 1, 1);
    }

    var sections = [
        getEmptySpace(7),
        genRandomBlocksTunnel(LAST_ROW, 20, 12, 0.1, 0.9),
        genRandomBlocksTunnel(LAST_ROW, 20, 8, 0, 0.9),
        getStairs(LAST_ROW, 2, 2),
        getPlanePlatforms(LAST_ROW, 10),
        getStairs(LAST_ROW, 5, 1),
        genRandomBlocksTunnel(LAST_ROW, 10, 10, 0.2, 0.3),
        getPlanePlatforms(LAST_ROW, 10),
        genRandomBlocksTunnel(LAST_ROW, 10, 10, 0.2, 0.3),
        getPlanePlatforms(LAST_ROW, 10),
        genRandomBlocksTunnel(LAST_ROW, 10, 10, 0.2, 0.3),
        genRandomPlatforms(LAST_ROW, 10),
        genRandomBlocksTunnel(LAST_ROW, 20, 10, 0.2, 0.3),
        getEmptySpace(2),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(2),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(2),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(1),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(1),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(3),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(2),
        genRandomPlatforms(LAST_ROW, 10),
        getEmptySpace(1),
        genRandomPlatforms(LAST_ROW, 10),
        genRandomBlocksTunnel(LAST_ROW, 20, 10, 0.2, 0.3),
        getEmptySpace(2),
        genRandomBlocksTunnel(LAST_ROW, 20, 10, 0.2, 0.3),
        getEmptySpace(2),
        genRandomBlocksTunnel(LAST_ROW, 20, 10, 0.2, 0.3),
        getEmptySpace(2),
        genRandomBlocksTunnel(LAST_ROW, 20, 10, 0.2, 0.3),
        getEmptySpace(1),
        genRandomBlocksTunnel(LAST_ROW, 20, 12, 0.9, 0),
        genRandomBlocksTunnel(LAST_ROW, 20, 8)
    ];

    sections.push(HERE_YOU_DIE());

    var ret = sections.reduce(function(ret, section) {
        ret = ret.concat(section);
        return ret;
    }, []);

    function getRandomInt(min, max) {
        return Math.floor(Math.random() * (max - min)) + min;
    }

    function genSpike(row, upsideDown) {
        return {type: 'spikes', row: 0, version: getRandomInt(1, 4), inverted: upsideDown};
    }

    function addSpikesOnGround(columns) {
        function isGroundEmpty(column) {
            return column.every(function(obstacle) {
                return obstacle.row !== 0;
            });
        }

        columns.forEach(function(column) {
            if (column.length > 0 && isGroundEmpty(column)) {
                column.push(genSpike(0, false));
            }
        });
    }

    addSpikesOnGround(ret);

    return ret;
})();

SQUARESCAPE.COMPONENT.SOUNDS = {};

SQUARESCAPE.COMPONENT.SOUNDS.music = function(audio) {
    "use strict";
    var Music = function() {
        this.name = "music";
    }, instance;
    Music.prototype.stop = function() {
        audio.stop(this.name);
    };
    Music.prototype.play = function() {
        audio.play(this.name, true);
    };
    return function() {
        if (!instance) {
            instance = new Music();
        }
        return instance;
    };
}(DUST.ASSETS.AUDIO.init);

SQUARESCAPE.COMPONENT.SOUNDS.intro = function(audio) {
    "use strict";
    var Intro = function() {
        this.name = "intro";
    }, instance;
    Intro.prototype.stop = function() {
        audio.stop(this.name);
    };
    Intro.prototype.play = function() {
        audio.play(this.name, true);
    };
    return function() {
        if (!instance) {
            instance = new Intro();
        }
        return instance;
    };
}(DUST.ASSETS.AUDIO.init);

SQUARESCAPE.GAME.SCENE.welcome = function(Scene, event, intro, objects) {
    "use strict";
    var welcome = null;
    var onShow = function() {
        intro().play();
        event.broadcast("welcome.start");
    };
    var onHide = function(clean) {
        event.broadcast("welcome.stop");
        clean();
    };
    return function(options) {
        if (!welcome) {
            if (!options) {
                options = {};
            }
            options.objects = objects;
            options.onShow = onShow;
            options.onHide = onHide;
            options.name = "welcome";
            options.authoritative = true;
            welcome = new Scene(options);
        }
        return welcome;
    };
}(DUST.Scene, DUST.event, SQUARESCAPE.COMPONENT.SOUNDS.intro, [ SQUARESCAPE.COMPONENT.background, SQUARESCAPE.COMPONENT.floor, SQUARESCAPE.COMPONENT.shadow, SQUARESCAPE.COMPONENT.player, SQUARESCAPE.COMPONENT.buttonPlay ]);

SQUARESCAPE.GAME.SCENE.main = function(Scene, event, music, intro, LevelManager, level, objects) {
    "use strict";
    var main = null;
    var currentLevel = null;
    var onShow = function() {
        if (!currentLevel) {
            currentLevel = new LevelManager(level);
        } else {
            currentLevel.reset();
        }
        event.broadcast("game.start");
        intro().stop();
        music().play();
    };
    var onHide = function(clean) {
        currentLevel.destroy();
        event.broadcast("game.stop");
        window.setTimeout(function() {
            event.broadcast("player.respawn");
        }, 2e3);
        music().stop();
        clean();
    };
    return function(options) {
        if (!main) {
            if (!options) {
                options = {};
            }
            options.objects = objects;
            options.onShow = onShow;
            options.onHide = onHide;
            options.name = "main";
            main = new Scene(options);
        }
        return main;
    };
}(DUST.Scene, DUST.event, SQUARESCAPE.COMPONENT.SOUNDS.music, SQUARESCAPE.COMPONENT.SOUNDS.intro, SQUARESCAPE.COMPONENT.LEVEL.LevelManager, SQUARESCAPE.COMPONENT.LEVEL.example, []);

SQUARESCAPE.GAME.SCENE.gameOver = function(Scene, event, music, objects) {
    "use strict";
    var gameOver = null;
    var onShow = function() {
        event.broadcast("gameOver.start");
    };
    var onHide = function(clean) {
        event.broadcast("gameOver.stop");
        clean();
    };
    return function(options) {
        if (!gameOver) {
            if (!options) {
                options = {};
            }
            options.objects = objects;
            options.onShow = onShow;
            options.onHide = onHide;
            options.name = "gameOver";
            gameOver = new Scene(options);
        }
        return gameOver;
    };
}(DUST.Scene, DUST.event, SQUARESCAPE.COMPONENT.SOUNDS.music, [ SQUARESCAPE.COMPONENT.background, SQUARESCAPE.COMPONENT.floor, SQUARESCAPE.COMPONENT.shadow, SQUARESCAPE.COMPONENT.player ]);

SQUARESCAPE.nuggeta = function(event, Plug) {
    "use strict";
    var Nuggeta = function(url, name) {
        this.game = new Plug(url, name);
    }, instance;
    Nuggeta.prototype = {
        game: {}
    };
    function getInstance() {
        if (!instance) {
            instance = new Nuggeta("127.0.0.1:5010", "squarescape");
        }
        return instance;
    }
    event.on("game.start", function() {
        getInstance();
    });
    return getInstance;
}(DUST.event, DUST.PLUGINS.NUGGETA.Plug);

SQUARESCAPE.world = function(world) {
    "use strict";
    world.gravity = [ 0, 10 ];
    world.applyDamping = false;
    world.defaultContactMaterial.restitution = 0;
    world.defaultContactMaterial.friction = 0;
    world.on("impact", function(e) {
        if (e.bodyA.impactHandler) {
            e.bodyA.impactHandler(e);
        }
        if (e.bodyB.impactHandler) {
            e.bodyB.impactHandler(e);
        }
    });
    return world;
}(DUST.PHYSICS.world);

SQUARESCAPE.GAME.loop = function(event, stage, particle, config, world, bodies) {
    "use strict";
    var animate = function() {
        world.step(config.step);
        bodies.update();
        particle().engine.update();
    };
    return function() {
        stage.addToLoop(animate);
    };
}(DUST.event, DUST.GRAPHIC.stage, DUST.particle, SQUARESCAPE.GAME.config, SQUARESCAPE.world, DUST.PHYSICS.bodies);

SQUARESCAPE.GAME.init = function(loop, welcome, main, gameOver) {
    "use strict";
    return function() {
        welcome({
            onFinishedLoading: function() {
                loop();
            }
        }).show();
        main();
        gameOver();
    };
}(SQUARESCAPE.GAME.loop, SQUARESCAPE.GAME.SCENE.welcome, SQUARESCAPE.GAME.SCENE.main, SQUARESCAPE.GAME.SCENE.gameOver);

SQUARESCAPE.COMPONENT.loading = function(Entity, stage, game, top) {
    "use strict";
    var loader = null;
    return function(completed, total) {
        if (!loader) {
            loader = {};
            loader.bg = new Entity({
                asset: "squarescape/assets/preLoader/bg.png",
                x: 0,
                y: 0,
                anchor: {
                    x: .5,
                    y: .5
                },
                scale: {
                    x: 3.5,
                    y: 3.5
                },
                container: top,
                type: "spriteFromFile",
                name: "loader.bg"
            });
            loader.logo = new Entity({
                asset: "squarescape/assets/preLoader/logo.png",
                x: 0,
                y: 300,
                anchor: {
                    x: .5,
                    y: .5
                },
                container: top,
                type: "spriteFromFile",
                name: "loader.logo"
            });
            loader.bar = new Entity({
                asset: "squarescape/assets/preLoader/loading.png",
                x: 0,
                y: 550,
                anchor: {
                    x: .5,
                    y: .5
                },
                container: top,
                type: "spriteFromFile",
                name: "loader.bar"
            });
            loader.fill = new Entity({
                asset: "squarescape/assets/preLoader/fill.png",
                x: 0,
                y: 550,
                anchor: {
                    x: .5,
                    y: .5
                },
                scale: {
                    x: .01,
                    y: 1
                },
                container: top,
                type: "spriteFromFile",
                name: "loader.fill"
            });
        }
        loader.fill.sprite.scale.x = completed / total;
        if (completed === total) {
            window.setTimeout(function() {
                game();
                loader.logo.selfRemove();
                loader.bar.selfRemove();
                loader.fill.selfRemove();
                loader.bg.selfRemove();
            }, 500);
        }
    };
}(DUST.GRAPHIC.Entity, DUST.GRAPHIC.stage, SQUARESCAPE.GAME.init, SQUARESCAPE.COMPONENT.LAYERS.top);

SQUARESCAPE.init = function(dust, counter, assetList, rotate, viewPort, loading, nuggeta) {
    "use strict";
    counter.setCounterChange(function(completed, total) {
        loading(completed, total);
    });
    dust({
        game: function() {},
        assetList: assetList,
        viewPort: viewPort,
        rotate: rotate
    });
}(DUST.init, DUST.ASSETS.PROGRESS.counter, SQUARESCAPE.assetList, SQUARESCAPE.COMPONENT.rotate, SQUARESCAPE.COMPONENT.viewPort, SQUARESCAPE.COMPONENT.loading, SQUARESCAPE.nuggeta);